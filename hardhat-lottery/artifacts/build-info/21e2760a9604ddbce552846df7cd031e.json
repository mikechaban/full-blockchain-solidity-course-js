{"id":"21e2760a9604ddbce552846df7cd031e","_format":"hh-sol-build-info-1","solcVersion":"0.8.6","solcLongVersion":"0.8.6+commit.11564f7e","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/ChainSpecificUtil.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport {ArbSys} from \"./vendor/@arbitrum/nitro-contracts/src/precompiles/ArbSys.sol\";\nimport {ArbGasInfo} from \"./vendor/@arbitrum/nitro-contracts/src/precompiles/ArbGasInfo.sol\";\nimport {OVM_GasPriceOracle} from \"./vendor/@eth-optimism/contracts/v0.8.6/contracts/L2/predeploys/OVM_GasPriceOracle.sol\";\n\n/// @dev A library that abstracts out opcodes that behave differently across chains.\n/// @dev The methods below return values that are pertinent to the given chain.\n/// @dev For instance, ChainSpecificUtil.getBlockNumber() returns L2 block number in L2 chains\nlibrary ChainSpecificUtil {\n  // ------------ Start Arbitrum Constants ------------\n\n  /// @dev ARBSYS_ADDR is the address of the ArbSys precompile on Arbitrum.\n  /// @dev reference: https://github.com/OffchainLabs/nitro/blob/v2.0.14/contracts/src/precompiles/ArbSys.sol#L10\n  address private constant ARBSYS_ADDR = address(0x0000000000000000000000000000000000000064);\n  ArbSys private constant ARBSYS = ArbSys(ARBSYS_ADDR);\n\n  /// @dev ARBGAS_ADDR is the address of the ArbGasInfo precompile on Arbitrum.\n  /// @dev reference: https://github.com/OffchainLabs/nitro/blob/v2.0.14/contracts/src/precompiles/ArbGasInfo.sol#L10\n  address private constant ARBGAS_ADDR = address(0x000000000000000000000000000000000000006C);\n  ArbGasInfo private constant ARBGAS = ArbGasInfo(ARBGAS_ADDR);\n\n  uint256 private constant ARB_MAINNET_CHAIN_ID = 42161;\n  uint256 private constant ARB_GOERLI_TESTNET_CHAIN_ID = 421613;\n  uint256 private constant ARB_SEPOLIA_TESTNET_CHAIN_ID = 421614;\n\n  // ------------ End Arbitrum Constants ------------\n\n  // ------------ Start Optimism Constants ------------\n  /// @dev L1_FEE_DATA_PADDING includes 35 bytes for L1 data padding for Optimism\n  bytes internal constant L1_FEE_DATA_PADDING =\n    \"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\";\n  /// @dev OVM_GASPRICEORACLE_ADDR is the address of the OVM_GasPriceOracle precompile on Optimism.\n  /// @dev reference: https://community.optimism.io/docs/developers/build/transaction-fees/#estimating-the-l1-data-fee\n  address private constant OVM_GASPRICEORACLE_ADDR = address(0x420000000000000000000000000000000000000F);\n  OVM_GasPriceOracle private constant OVM_GASPRICEORACLE = OVM_GasPriceOracle(OVM_GASPRICEORACLE_ADDR);\n\n  uint256 private constant OP_MAINNET_CHAIN_ID = 10;\n  uint256 private constant OP_GOERLI_CHAIN_ID = 420;\n  uint256 private constant OP_SEPOLIA_CHAIN_ID = 11155420;\n\n  /// @dev Base is a OP stack based rollup and follows the same L1 pricing logic as Optimism.\n  uint256 private constant BASE_MAINNET_CHAIN_ID = 8453;\n  uint256 private constant BASE_GOERLI_CHAIN_ID = 84531;\n\n  // ------------ End Optimism Constants ------------\n\n  /**\n   * @notice Returns the blockhash for the given blockNumber.\n   * @notice If the blockNumber is more than 256 blocks in the past, returns the empty string.\n   * @notice When on a known Arbitrum chain, it uses ArbSys.arbBlockHash to get the blockhash.\n   * @notice Otherwise, it uses the blockhash opcode.\n   * @notice Note that the blockhash opcode will return the L2 blockhash on Optimism.\n   */\n  function _getBlockhash(uint64 blockNumber) internal view returns (bytes32) {\n    uint256 chainid = block.chainid;\n    if (_isArbitrumChainId(chainid)) {\n      if ((_getBlockNumber() - blockNumber) > 256 || blockNumber >= _getBlockNumber()) {\n        return \"\";\n      }\n      return ARBSYS.arbBlockHash(blockNumber);\n    }\n    return blockhash(blockNumber);\n  }\n\n  /**\n   * @notice Returns the block number of the current block.\n   * @notice When on a known Arbitrum chain, it uses ArbSys.arbBlockNumber to get the block number.\n   * @notice Otherwise, it uses the block.number opcode.\n   * @notice Note that the block.number opcode will return the L2 block number on Optimism.\n   */\n  function _getBlockNumber() internal view returns (uint256) {\n    uint256 chainid = block.chainid;\n    if (_isArbitrumChainId(chainid)) {\n      return ARBSYS.arbBlockNumber();\n    }\n    return block.number;\n  }\n\n  /**\n   * @notice Returns the L1 fees that will be paid for the current transaction, given any calldata\n   * @notice for the current transaction.\n   * @notice When on a known Arbitrum chain, it uses ArbGas.getCurrentTxL1GasFees to get the fees.\n   * @notice On Arbitrum, the provided calldata is not used to calculate the fees.\n   * @notice On Optimism, the provided calldata is passed to the OVM_GasPriceOracle predeploy\n   * @notice and getL1Fee is called to get the fees.\n   */\n  function _getCurrentTxL1GasFees(bytes memory txCallData) internal view returns (uint256) {\n    uint256 chainid = block.chainid;\n    if (_isArbitrumChainId(chainid)) {\n      return ARBGAS.getCurrentTxL1GasFees();\n    } else if (_isOptimismChainId(chainid)) {\n      return OVM_GASPRICEORACLE.getL1Fee(bytes.concat(txCallData, L1_FEE_DATA_PADDING));\n    }\n    return 0;\n  }\n\n  /**\n   * @notice Returns the gas cost in wei of calldataSizeBytes of calldata being posted\n   * @notice to L1.\n   */\n  function _getL1CalldataGasCost(uint256 calldataSizeBytes) internal view returns (uint256) {\n    uint256 chainid = block.chainid;\n    if (_isArbitrumChainId(chainid)) {\n      (, uint256 l1PricePerByte, , , , ) = ARBGAS.getPricesInWei();\n      // see https://developer.arbitrum.io/devs-how-tos/how-to-estimate-gas#where-do-we-get-all-this-information-from\n      // for the justification behind the 140 number.\n      return l1PricePerByte * (calldataSizeBytes + 140);\n    } else if (_isOptimismChainId(chainid)) {\n      return _calculateOptimismL1DataFee(calldataSizeBytes);\n    }\n    return 0;\n  }\n\n  /**\n   * @notice Return true if and only if the provided chain ID is an Arbitrum chain ID.\n   */\n  function _isArbitrumChainId(uint256 chainId) internal pure returns (bool) {\n    return\n      chainId == ARB_MAINNET_CHAIN_ID ||\n      chainId == ARB_GOERLI_TESTNET_CHAIN_ID ||\n      chainId == ARB_SEPOLIA_TESTNET_CHAIN_ID;\n  }\n\n  /**\n   * @notice Return true if and only if the provided chain ID is an Optimism chain ID.\n   * @notice Note that optimism chain id's are also OP stack chain id's.\n   */\n  function _isOptimismChainId(uint256 chainId) internal pure returns (bool) {\n    return\n      chainId == OP_MAINNET_CHAIN_ID ||\n      chainId == OP_GOERLI_CHAIN_ID ||\n      chainId == OP_SEPOLIA_CHAIN_ID ||\n      chainId == BASE_MAINNET_CHAIN_ID ||\n      chainId == BASE_GOERLI_CHAIN_ID;\n  }\n\n  function _calculateOptimismL1DataFee(uint256 calldataSizeBytes) internal view returns (uint256) {\n    // from: https://community.optimism.io/docs/developers/build/transaction-fees/#the-l1-data-fee\n    // l1_data_fee = l1_gas_price * (tx_data_gas + fixed_overhead) * dynamic_overhead\n    // tx_data_gas = count_zero_bytes(tx_data) * 4 + count_non_zero_bytes(tx_data) * 16\n    // note we conservatively assume all non-zero bytes.\n    uint256 l1BaseFeeWei = OVM_GASPRICEORACLE.l1BaseFee();\n    uint256 numZeroBytes = 0;\n    uint256 numNonzeroBytes = calldataSizeBytes - numZeroBytes;\n    uint256 txDataGas = numZeroBytes * 4 + numNonzeroBytes * 16;\n    uint256 fixedOverhead = OVM_GASPRICEORACLE.overhead();\n\n    // The scalar is some value like 0.684, but is represented as\n    // that times 10 ^ number of scalar decimals.\n    // e.g scalar = 0.684 * 10^6\n    // The divisor is used to divide that and have a net result of the true scalar.\n    uint256 scalar = OVM_GASPRICEORACLE.scalar();\n    uint256 scalarDecimals = OVM_GASPRICEORACLE.decimals();\n    uint256 divisor = 10 ** scalarDecimals;\n\n    uint256 l1DataFee = (l1BaseFeeWei * (txDataGas + fixedOverhead) * scalar) / divisor;\n    return l1DataFee;\n  }\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nabstract contract TypeAndVersionInterface {\n  function typeAndVersion() external pure virtual returns (string memory);\n}\n"},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {ConfirmedOwnerWithProposal} from \"./ConfirmedOwnerWithProposal.sol\";\n\n/// @title The ConfirmedOwner contract\n/// @notice A contract with helpers for basic contract ownership.\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\n}\n"},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IOwnable} from \"../interfaces/IOwnable.sol\";\n\n/// @title The ConfirmedOwner contract\n/// @notice A contract with helpers for basic contract ownership.\ncontract ConfirmedOwnerWithProposal is IOwnable {\n  address private s_owner;\n  address private s_pendingOwner;\n\n  event OwnershipTransferRequested(address indexed from, address indexed to);\n  event OwnershipTransferred(address indexed from, address indexed to);\n\n  constructor(address newOwner, address pendingOwner) {\n    // solhint-disable-next-line custom-errors\n    require(newOwner != address(0), \"Cannot set owner to zero\");\n\n    s_owner = newOwner;\n    if (pendingOwner != address(0)) {\n      _transferOwnership(pendingOwner);\n    }\n  }\n\n  /// @notice Allows an owner to begin transferring ownership to a new address.\n  function transferOwnership(address to) public override onlyOwner {\n    _transferOwnership(to);\n  }\n\n  /// @notice Allows an ownership transfer to be completed by the recipient.\n  function acceptOwnership() external override {\n    // solhint-disable-next-line custom-errors\n    require(msg.sender == s_pendingOwner, \"Must be proposed owner\");\n\n    address oldOwner = s_owner;\n    s_owner = msg.sender;\n    s_pendingOwner = address(0);\n\n    emit OwnershipTransferred(oldOwner, msg.sender);\n  }\n\n  /// @notice Get the current owner\n  function owner() public view override returns (address) {\n    return s_owner;\n  }\n\n  /// @notice validate, transfer ownership, and emit relevant events\n  function _transferOwnership(address to) private {\n    // solhint-disable-next-line custom-errors\n    require(to != msg.sender, \"Cannot transfer to self\");\n\n    s_pendingOwner = to;\n\n    emit OwnershipTransferRequested(s_owner, to);\n  }\n\n  /// @notice validate access\n  function _validateOwnership() internal view {\n    // solhint-disable-next-line custom-errors\n    require(msg.sender == s_owner, \"Only callable by owner\");\n  }\n\n  /// @notice Reverts if called by anyone other than the contract owner.\n  modifier onlyOwner() {\n    _validateOwnership();\n    _;\n  }\n}\n"},"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"},"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.6;\n\ninterface IERC677Receiver {\n  function onTokenTransfer(address sender, uint256 amount, bytes calldata data) external;\n}\n"},"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IOwnable {\n  function owner() external returns (address);\n\n  function transferOwnership(address recipient) external;\n\n  function acceptOwnership() external;\n}\n"},"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface LinkTokenInterface {\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\n\n  function approve(address spender, uint256 value) external returns (bool success);\n\n  function balanceOf(address owner) external view returns (uint256 balance);\n\n  function decimals() external view returns (uint8 decimalPlaces);\n\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\n\n  function increaseApproval(address spender, uint256 subtractedValue) external;\n\n  function name() external view returns (string memory tokenName);\n\n  function symbol() external view returns (string memory tokenSymbol);\n\n  function totalSupply() external view returns (uint256 totalTokensIssued);\n\n  function transfer(address to, uint256 value) external returns (bool success);\n\n  function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool success);\n\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\n}\n"},"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbGasInfo.sol":{"content":"// Copyright 2021-2022, Offchain Labs, Inc.\n// For license information, see https://github.com/OffchainLabs/nitro-contracts/blob/main/LICENSE\n// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity >=0.4.21 <0.9.0;\n\n/// @title Provides insight into the cost of using the chain.\n/// @notice These methods have been adjusted to account for Nitro's heavy use of calldata compression.\n/// Of note to end-users, we no longer make a distinction between non-zero and zero-valued calldata bytes.\n/// Precompiled contract that exists in every Arbitrum chain at 0x000000000000000000000000000000000000006c.\ninterface ArbGasInfo {\n    /// @notice Get gas prices for a provided aggregator\n    /// @return return gas prices in wei\n    ///        (\n    ///            per L2 tx,\n    ///            per L1 calldata byte\n    ///            per storage allocation,\n    ///            per ArbGas base,\n    ///            per ArbGas congestion,\n    ///            per ArbGas total\n    ///        )\n    function getPricesInWeiWithAggregator(address aggregator)\n    external\n    view\n    returns (\n        uint256,\n        uint256,\n        uint256,\n        uint256,\n        uint256,\n        uint256\n    );\n\n    /// @notice Get gas prices. Uses the caller's preferred aggregator, or the default if the caller doesn't have a preferred one.\n    /// @return return gas prices in wei\n    ///        (\n    ///            per L2 tx,\n    ///            per L1 calldata byte\n    ///            per storage allocation,\n    ///            per ArbGas base,\n    ///            per ArbGas congestion,\n    ///            per ArbGas total\n    ///        )\n    function getPricesInWei()\n    external\n    view\n    returns (\n        uint256,\n        uint256,\n        uint256,\n        uint256,\n        uint256,\n        uint256\n    );\n\n    /// @notice Get prices in ArbGas for the supplied aggregator\n    /// @return (per L2 tx, per L1 calldata byte, per storage allocation)\n    function getPricesInArbGasWithAggregator(address aggregator)\n    external\n    view\n    returns (\n        uint256,\n        uint256,\n        uint256\n    );\n\n    /// @notice Get prices in ArbGas. Assumes the callers preferred validator, or the default if caller doesn't have a preferred one.\n    /// @return (per L2 tx, per L1 calldata byte, per storage allocation)\n    function getPricesInArbGas()\n    external\n    view\n    returns (\n        uint256,\n        uint256,\n        uint256\n    );\n\n    /// @notice Get the gas accounting parameters. `gasPoolMax` is always zero, as the exponential pricing model has no such notion.\n    /// @return (speedLimitPerSecond, gasPoolMax, maxTxGasLimit)\n    function getGasAccountingParams()\n    external\n    view\n    returns (\n        uint256,\n        uint256,\n        uint256\n    );\n\n    /// @notice Get the minimum gas price needed for a tx to succeed\n    function getMinimumGasPrice() external view returns (uint256);\n\n    /// @notice Get ArbOS's estimate of the L1 basefee in wei\n    function getL1BaseFeeEstimate() external view returns (uint256);\n\n    /// @notice Get how slowly ArbOS updates its estimate of the L1 basefee\n    function getL1BaseFeeEstimateInertia() external view returns (uint64);\n\n    /// @notice Get the L1 pricer reward rate, in wei per unit\n    /// Available in ArbOS version 11\n    function getL1RewardRate() external view returns (uint64);\n\n    /// @notice Get the L1 pricer reward recipient\n    /// Available in ArbOS version 11\n    function getL1RewardRecipient() external view returns (address);\n\n    /// @notice Deprecated -- Same as getL1BaseFeeEstimate()\n    function getL1GasPriceEstimate() external view returns (uint256);\n\n    /// @notice Get L1 gas fees paid by the current transaction\n    function getCurrentTxL1GasFees() external view returns (uint256);\n\n    /// @notice Get the backlogged amount of gas burnt in excess of the speed limit\n    function getGasBacklog() external view returns (uint64);\n\n    /// @notice Get how slowly ArbOS updates the L2 basefee in response to backlogged gas\n    function getPricingInertia() external view returns (uint64);\n\n    /// @notice Get the forgivable amount of backlogged gas ArbOS will ignore when raising the basefee\n    function getGasBacklogTolerance() external view returns (uint64);\n\n    /// @notice Returns the surplus of funds for L1 batch posting payments (may be negative).\n    function getL1PricingSurplus() external view returns (int256);\n\n    /// @notice Returns the base charge (in L1 gas) attributed to each data batch in the calldata pricer\n    function getPerBatchGasCharge() external view returns (int64);\n\n    /// @notice Returns the cost amortization cap in basis points\n    function getAmortizedCostCapBips() external view returns (uint64);\n\n    /// @notice Returns the available funds from L1 fees\n    function getL1FeesAvailable() external view returns (uint256);\n\n    /// @notice Returns the equilibration units parameter for L1 price adjustment algorithm\n    /// Available in ArbOS version 20\n    function getL1PricingEquilibrationUnits() external view returns (uint256);\n\n    /// @notice Returns the last time the L1 calldata pricer was updated.\n    /// Available in ArbOS version 20\n    function getLastL1PricingUpdateTime() external view returns (uint64);\n\n    /// @notice Returns the amount of L1 calldata payments due for rewards (per the L1 reward rate)\n    /// Available in ArbOS version 20\n    function getL1PricingFundsDueForRewards() external view returns (uint256);\n\n    /// @notice Returns the amount of L1 calldata posted since the last update.\n    /// Available in ArbOS version 20\n    function getL1PricingUnitsSinceUpdate() external view returns (uint64);\n\n    /// @notice Returns the L1 pricing surplus as of the last update (may be negative).\n    /// Available in ArbOS version 20\n    function getLastL1PricingSurplus() external view returns (int256);\n}"},"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbSys.sol":{"content":"// Copyright 2021-2022, Offchain Labs, Inc.\n// For license information, see https://github.com/nitro/blob/master/LICENSE\n// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity >=0.4.21 <0.9.0;\n\n/**\n * @title System level functionality\n * @notice For use by contracts to interact with core L2-specific functionality.\n * Precompiled contract that exists in every Arbitrum chain at address(100), 0x0000000000000000000000000000000000000064.\n */\ninterface ArbSys {\n    /**\n     * @notice Get Arbitrum block number (distinct from L1 block number; Arbitrum genesis block has block number 0)\n     * @return block number as int\n     */\n    function arbBlockNumber() external view returns (uint256);\n\n    /**\n     * @notice Get Arbitrum block hash (reverts unless currentBlockNum-256 <= arbBlockNum < currentBlockNum)\n     * @return block hash\n     */\n    function arbBlockHash(uint256 arbBlockNum) external view returns (bytes32);\n\n    /**\n     * @notice Gets the rollup's unique chain identifier\n     * @return Chain identifier as int\n     */\n    function arbChainID() external view returns (uint256);\n\n    /**\n     * @notice Get internal version number identifying an ArbOS build\n     * @return version number as int\n     */\n    function arbOSVersion() external view returns (uint256);\n\n    /**\n     * @notice Returns 0 since Nitro has no concept of storage gas\n     * @return uint 0\n     */\n    function getStorageGasAvailable() external view returns (uint256);\n\n    /**\n     * @notice (deprecated) check if current call is top level (meaning it was triggered by an EoA or a L1 contract)\n     * @dev this call has been deprecated and may be removed in a future release\n     * @return true if current execution frame is not a call by another L2 contract\n     */\n    function isTopLevelCall() external view returns (bool);\n\n    /**\n     * @notice map L1 sender contract address to its L2 alias\n     * @param sender sender address\n     * @param unused argument no longer used\n     * @return aliased sender address\n     */\n    function mapL1SenderContractAddressToL2Alias(address sender, address unused)\n        external\n        pure\n        returns (address);\n\n    /**\n     * @notice check if the caller (of this caller of this) is an aliased L1 contract address\n     * @return true iff the caller's address is an alias for an L1 contract address\n     */\n    function wasMyCallersAddressAliased() external view returns (bool);\n\n    /**\n     * @notice return the address of the caller (of this caller of this), without applying L1 contract address aliasing\n     * @return address of the caller's caller, without applying L1 contract address aliasing\n     */\n    function myCallersAddressWithoutAliasing() external view returns (address);\n\n    /**\n     * @notice Send given amount of Eth to dest from sender.\n     * This is a convenience function, which is equivalent to calling sendTxToL1 with empty data.\n     * @param destination recipient address on L1\n     * @return unique identifier for this L2-to-L1 transaction.\n     */\n    function withdrawEth(address destination)\n        external\n        payable\n        returns (uint256);\n\n    /**\n     * @notice Send a transaction to L1\n     * @dev it is not possible to execute on the L1 any L2-to-L1 transaction which contains data\n     * to a contract address without any code (as enforced by the Bridge contract).\n     * @param destination recipient address on L1\n     * @param data (optional) calldata for L1 contract call\n     * @return a unique identifier for this L2-to-L1 transaction.\n     */\n    function sendTxToL1(address destination, bytes calldata data)\n        external\n        payable\n        returns (uint256);\n\n    /**\n     * @notice Get send Merkle tree state\n     * @return size number of sends in the history\n     * @return root root hash of the send history\n     * @return partials hashes of partial subtrees in the send history tree\n     */\n    function sendMerkleTreeState()\n        external\n        view\n        returns (\n            uint256 size,\n            bytes32 root,\n            bytes32[] memory partials\n        );\n\n    /**\n     * @notice creates a send txn from L2 to L1\n     * @param position = (level << 192) + leaf = (0 << 192) + leaf = leaf\n     */\n    event L2ToL1Tx(\n        address caller,\n        address indexed destination,\n        uint256 indexed hash,\n        uint256 indexed position,\n        uint256 arbBlockNum,\n        uint256 ethBlockNum,\n        uint256 timestamp,\n        uint256 callvalue,\n        bytes data\n    );\n\n    /// @dev DEPRECATED in favour of the new L2ToL1Tx event above after the nitro upgrade\n    event L2ToL1Transaction(\n        address caller,\n        address indexed destination,\n        uint256 indexed uniqueId,\n        uint256 indexed batchNumber,\n        uint256 indexInBatch,\n        uint256 arbBlockNum,\n        uint256 ethBlockNum,\n        uint256 timestamp,\n        uint256 callvalue,\n        bytes data\n    );\n\n    /**\n     * @notice logs a merkle branch for proof synthesis\n     * @param reserved an index meant only to align the 4th index with L2ToL1Transaction's 4th event\n     * @param hash the merkle hash\n     * @param position = (level << 192) + leaf\n     */\n    event SendMerkleUpdate(\n        uint256 indexed reserved,\n        bytes32 indexed hash,\n        uint256 indexed position\n    );\n}\n"},"@chainlink/contracts/src/v0.8/vendor/@eth-optimism/contracts/v0.8.6/contracts/L2/predeploys/OVM_GasPriceOracle.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.6;\n\n/* External Imports */\nimport { Ownable } from \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title OVM_GasPriceOracle\n * @dev This contract exposes the current l2 gas price, a measure of how congested the network\n * currently is. This measure is used by the Sequencer to determine what fee to charge for\n * transactions. When the system is more congested, the l2 gas price will increase and fees\n * will also increase as a result.\n *\n * All public variables are set while generating the initial L2 state. The\n * constructor doesn't run in practice as the L2 state generation script uses\n * the deployed bytecode instead of running the initcode.\n */\ncontract OVM_GasPriceOracle is Ownable {\n    /*************\n     * Variables *\n     *************/\n\n    // Current L2 gas price\n    uint256 public gasPrice;\n    // Current L1 base fee\n    uint256 public l1BaseFee;\n    // Amortized cost of batch submission per transaction\n    uint256 public overhead;\n    // Value to scale the fee up by\n    uint256 public scalar;\n    // Number of decimals of the scalar\n    uint256 public decimals;\n\n    /***************\n     * Constructor *\n     ***************/\n\n    /**\n     * @param _owner Address that will initially own this contract.\n     */\n    constructor(address _owner) Ownable() {\n        transferOwnership(_owner);\n    }\n\n    /**********\n     * Events *\n     **********/\n\n    event GasPriceUpdated(uint256);\n    event L1BaseFeeUpdated(uint256);\n    event OverheadUpdated(uint256);\n    event ScalarUpdated(uint256);\n    event DecimalsUpdated(uint256);\n\n    /********************\n     * Public Functions *\n     ********************/\n\n    /**\n     * Allows the owner to modify the l2 gas price.\n     * @param _gasPrice New l2 gas price.\n     */\n    // slither-disable-next-line external-function\n    function setGasPrice(uint256 _gasPrice) public onlyOwner {\n        gasPrice = _gasPrice;\n        emit GasPriceUpdated(_gasPrice);\n    }\n\n    /**\n     * Allows the owner to modify the l1 base fee.\n     * @param _baseFee New l1 base fee\n     */\n    // slither-disable-next-line external-function\n    function setL1BaseFee(uint256 _baseFee) public onlyOwner {\n        l1BaseFee = _baseFee;\n        emit L1BaseFeeUpdated(_baseFee);\n    }\n\n    /**\n     * Allows the owner to modify the overhead.\n     * @param _overhead New overhead\n     */\n    // slither-disable-next-line external-function\n    function setOverhead(uint256 _overhead) public onlyOwner {\n        overhead = _overhead;\n        emit OverheadUpdated(_overhead);\n    }\n\n    /**\n     * Allows the owner to modify the scalar.\n     * @param _scalar New scalar\n     */\n    // slither-disable-next-line external-function\n    function setScalar(uint256 _scalar) public onlyOwner {\n        scalar = _scalar;\n        emit ScalarUpdated(_scalar);\n    }\n\n    /**\n     * Allows the owner to modify the decimals.\n     * @param _decimals New decimals\n     */\n    // slither-disable-next-line external-function\n    function setDecimals(uint256 _decimals) public onlyOwner {\n        decimals = _decimals;\n        emit DecimalsUpdated(_decimals);\n    }\n\n    /**\n     * Computes the L1 portion of the fee\n     * based on the size of the RLP encoded tx\n     * and the current l1BaseFee\n     * @param _data Unsigned RLP encoded tx, 6 elements\n     * @return L1 fee that should be paid for the tx\n     */\n    // slither-disable-next-line external-function\n    function getL1Fee(bytes memory _data) public view returns (uint256) {\n        uint256 l1GasUsed = getL1GasUsed(_data);\n        uint256 l1Fee = l1GasUsed * l1BaseFee;\n        uint256 divisor = 10**decimals;\n        uint256 unscaled = l1Fee * scalar;\n        uint256 scaled = unscaled / divisor;\n        return scaled;\n    }\n\n    // solhint-disable max-line-length\n    /**\n     * Computes the amount of L1 gas used for a transaction\n     * The overhead represents the per batch gas overhead of\n     * posting both transaction and state roots to L1 given larger\n     * batch sizes.\n     * 4 gas for 0 byte\n     * https://github.com/ethereum/go-ethereum/blob/9ada4a2e2c415e6b0b51c50e901336872e028872/params/protocol_params.go#L33\n     * 16 gas for non zero byte\n     * https://github.com/ethereum/go-ethereum/blob/9ada4a2e2c415e6b0b51c50e901336872e028872/params/protocol_params.go#L87\n     * This will need to be updated if calldata gas prices change\n     * Account for the transaction being unsigned\n     * Padding is added to account for lack of signature on transaction\n     * 1 byte for RLP V prefix\n     * 1 byte for V\n     * 1 byte for RLP R prefix\n     * 32 bytes for R\n     * 1 byte for RLP S prefix\n     * 32 bytes for S\n     * Total: 68 bytes of padding\n     * @param _data Unsigned RLP encoded tx, 6 elements\n     * @return Amount of L1 gas used for a transaction\n     */\n    // solhint-enable max-line-length\n    function getL1GasUsed(bytes memory _data) public view returns (uint256) {\n        uint256 total = 0;\n        for (uint256 i = 0; i < _data.length; i++) {\n            if (_data[i] == 0) {\n                total += 4;\n            } else {\n                total += 16;\n            }\n        }\n        uint256 unsigned = total + overhead;\n        return unsigned + (68 * 16);\n    }\n}\n"},"@chainlink/contracts/src/v0.8/vrf/interfaces/BlockhashStoreInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface BlockhashStoreInterface {\n  function getBlockhash(uint256 number) external view returns (bytes32);\n}\n"},"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface VRFCoordinatorV2Interface {\n  /**\n   * @notice Get configuration relevant for making requests\n   * @return minimumRequestConfirmations global min for request confirmations\n   * @return maxGasLimit global max for request gas limit\n   * @return s_provingKeyHashes list of registered key hashes\n   */\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\n\n  /**\n   * @notice Request a set of random words.\n   * @param keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * @param subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * @param minimumRequestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * @param callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * @param numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(\n    bytes32 keyHash,\n    uint64 subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords\n  ) external returns (uint256 requestId);\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   */\n  function createSubscription() external returns (uint64 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return reqCount - number of requests for this subscription, determines fee tier.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(\n    uint64 subId\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\n\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint64 subId, address to) external;\n\n  /*\n   * @notice Check to see if there exists a request commitment consumers\n   * for all consumers and keyhashes for a given sub.\n   * @param subId - ID of the subscription\n   * @return true if there exists at least one unfulfilled request for the subscription, false\n   * otherwise.\n   */\n  function pendingRequestExists(uint64 subId) external view returns (bool);\n}\n"},"@chainlink/contracts/src/v0.8/vrf/VRF.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/** ****************************************************************************\n  * @notice Verification of verifiable-random-function (VRF) proofs, following\n  * @notice https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3\n  * @notice See https://eprint.iacr.org/2017/099.pdf for security proofs.\n\n  * @dev Bibliographic references:\n\n  * @dev Goldberg, et al., \"Verifiable Random Functions (VRFs)\", Internet Draft\n  * @dev draft-irtf-cfrg-vrf-05, IETF, Aug 11 2019,\n  * @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05\n\n  * @dev Papadopoulos, et al., \"Making NSEC5 Practical for DNSSEC\", Cryptology\n  * @dev ePrint Archive, Report 2017/099, https://eprint.iacr.org/2017/099.pdf\n  * ****************************************************************************\n  * @dev USAGE\n\n  * @dev The main entry point is _randomValueFromVRFProof. See its docstring.\n  * ****************************************************************************\n  * @dev PURPOSE\n\n  * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n  * @dev to Vera the verifier in such a way that Vera can be sure he's not\n  * @dev making his output up to suit himself. Reggie provides Vera a public key\n  * @dev to which he knows the secret key. Each time Vera provides a seed to\n  * @dev Reggie, he gives back a value which is computed completely\n  * @dev deterministically from the seed and the secret key.\n\n  * @dev Reggie provides a proof by which Vera can verify that the output was\n  * @dev correctly computed once Reggie tells it to her, but without that proof,\n  * @dev the output is computationally indistinguishable to her from a uniform\n  * @dev random sample from the output space.\n\n  * @dev The purpose of this contract is to perform that verification.\n  * ****************************************************************************\n  * @dev DESIGN NOTES\n\n  * @dev The VRF algorithm verified here satisfies the full uniqueness, full\n  * @dev collision resistance, and full pseudo-randomness security properties.\n  * @dev See \"SECURITY PROPERTIES\" below, and\n  * @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-3\n\n  * @dev An elliptic curve point is generally represented in the solidity code\n  * @dev as a uint256[2], corresponding to its affine coordinates in\n  * @dev GF(FIELD_SIZE).\n\n  * @dev For the sake of efficiency, this implementation deviates from the spec\n  * @dev in some minor ways:\n\n  * @dev - Keccak hash rather than the SHA256 hash recommended in\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5\n  * @dev   Keccak costs much less gas on the EVM, and provides similar security.\n\n  * @dev - Secp256k1 curve instead of the P-256 or ED25519 curves recommended in\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5\n  * @dev   For curve-point multiplication, it's much cheaper to abuse ECRECOVER\n\n  * @dev - _hashToCurve recursively hashes until it finds a curve x-ordinate. On\n  * @dev   the EVM, this is slightly more efficient than the recommendation in\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.1.1\n  * @dev   step 5, to concatenate with a nonce then hash, and rehash with the\n  * @dev   nonce updated until a valid x-ordinate is found.\n\n  * @dev - _hashToCurve does not include a cipher version string or the byte 0x1\n  * @dev   in the hash message, as recommended in step 5.B of the draft\n  * @dev   standard. They are unnecessary here because no variation in the\n  * @dev   cipher suite is allowed.\n\n  * @dev - Similarly, the hash input in _scalarFromCurvePoints does not include a\n  * @dev   commitment to the cipher suite, either, which differs from step 2 of\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.3\n  * @dev   . Also, the hash input is the concatenation of the uncompressed\n  * @dev   points, not the compressed points as recommended in step 3.\n\n  * @dev - In the calculation of the challenge value \"c\", the \"u\" value (i.e.\n  * @dev   the value computed by Reggie as the nonce times the secp256k1\n  * @dev   generator point, see steps 5 and 7 of\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3\n  * @dev   ) is replaced by its ethereum address, i.e. the lower 160 bits of the\n  * @dev   keccak hash of the original u. This is because we only verify the\n  * @dev   calculation of u up to its address, by abusing ECRECOVER.\n  * ****************************************************************************\n  * @dev   SECURITY PROPERTIES\n\n  * @dev Here are the security properties for this VRF:\n\n  * @dev Full uniqueness: For any seed and valid VRF public key, there is\n  * @dev   exactly one VRF output which can be proved to come from that seed, in\n  * @dev   the sense that the proof will pass _verifyVRFProof.\n\n  * @dev Full collision resistance: It's cryptographically infeasible to find\n  * @dev   two seeds with same VRF output from a fixed, valid VRF key\n\n  * @dev Full pseudorandomness: Absent the proofs that the VRF outputs are\n  * @dev   derived from a given seed, the outputs are computationally\n  * @dev   indistinguishable from randomness.\n\n  * @dev https://eprint.iacr.org/2017/099.pdf, Appendix B contains the proofs\n  * @dev for these properties.\n\n  * @dev For secp256k1, the key validation described in section\n  * @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.6\n  * @dev is unnecessary, because secp256k1 has cofactor 1, and the\n  * @dev representation of the public key used here (affine x- and y-ordinates\n  * @dev of the secp256k1 point on the standard y^2=x^3+7 curve) cannot refer to\n  * @dev the point at infinity.\n  * ****************************************************************************\n  * @dev OTHER SECURITY CONSIDERATIONS\n  *\n  * @dev The seed input to the VRF could in principle force an arbitrary amount\n  * @dev of work in _hashToCurve, by requiring extra rounds of hashing and\n  * @dev checking whether that's yielded the x ordinate of a secp256k1 point.\n  * @dev However, under the Random Oracle Model the probability of choosing a\n  * @dev point which forces n extra rounds in _hashToCurve is 2⁻ⁿ. The base cost\n  * @dev for calling _hashToCurve is about 25,000 gas, and each round of checking\n  * @dev for a valid x ordinate costs about 15,555 gas, so to find a seed for\n  * @dev which _hashToCurve would cost more than 2,017,000 gas, one would have to\n  * @dev try, in expectation, about 2¹²⁸ seeds, which is infeasible for any\n  * @dev foreseeable computational resources. (25,000 + 128 * 15,555 < 2,017,000.)\n\n  * @dev Since the gas block limit for the Ethereum main net is 10,000,000 gas,\n  * @dev this means it is infeasible for an adversary to prevent correct\n  * @dev operation of this contract by choosing an adverse seed.\n\n  * @dev (See TestMeasureHashToCurveGasCost for verification of the gas cost for\n  * @dev _hashToCurve.)\n\n  * @dev It may be possible to make a secure constant-time _hashToCurve function.\n  * @dev See notes in _hashToCurve docstring.\n*/\ncontract VRF {\n  // See https://www.secg.org/sec2-v2.pdf, section 2.4.1, for these constants.\n  // Number of points in Secp256k1\n  uint256 private constant GROUP_ORDER = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141;\n  // Prime characteristic of the galois field over which Secp256k1 is defined\n  uint256 private constant FIELD_SIZE =\n    // solium-disable-next-line indentation\n    0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F;\n  uint256 private constant WORD_LENGTH_BYTES = 0x20;\n\n  // (base^exponent) % FIELD_SIZE\n  // Cribbed from https://medium.com/@rbkhmrcr/precompiles-solidity-e5d29bd428c4\n  function _bigModExp(uint256 base, uint256 exponent) internal view returns (uint256 exponentiation) {\n    uint256 callResult;\n    uint256[6] memory bigModExpContractInputs;\n    bigModExpContractInputs[0] = WORD_LENGTH_BYTES; // Length of base\n    bigModExpContractInputs[1] = WORD_LENGTH_BYTES; // Length of exponent\n    bigModExpContractInputs[2] = WORD_LENGTH_BYTES; // Length of modulus\n    bigModExpContractInputs[3] = base;\n    bigModExpContractInputs[4] = exponent;\n    bigModExpContractInputs[5] = FIELD_SIZE;\n    uint256[1] memory output;\n    assembly {\n      callResult := staticcall(\n        not(0), // Gas cost: no limit\n        0x05, // Bigmodexp contract address\n        bigModExpContractInputs,\n        0xc0, // Length of input segment: 6*0x20-bytes\n        output,\n        0x20 // Length of output segment\n      )\n    }\n    if (callResult == 0) {\n      // solhint-disable-next-line custom-errors\n      revert(\"bigModExp failure!\");\n    }\n    return output[0];\n  }\n\n  // Let q=FIELD_SIZE. q % 4 = 3, ∴ x≡r^2 mod q ⇒ x^SQRT_POWER≡±r mod q.  See\n  // https://en.wikipedia.org/wiki/Modular_square_root#Prime_or_prime_power_modulus\n  uint256 private constant SQRT_POWER = (FIELD_SIZE + 1) >> 2;\n\n  // Computes a s.t. a^2 = x in the field. Assumes a exists\n  function _squareRoot(uint256 x) internal view returns (uint256) {\n    return _bigModExp(x, SQRT_POWER);\n  }\n\n  // The value of y^2 given that (x,y) is on secp256k1.\n  function _ySquared(uint256 x) internal pure returns (uint256) {\n    // Curve is y^2=x^3+7. See section 2.4.1 of https://www.secg.org/sec2-v2.pdf\n    uint256 xCubed = mulmod(x, mulmod(x, x, FIELD_SIZE), FIELD_SIZE);\n    return addmod(xCubed, 7, FIELD_SIZE);\n  }\n\n  // True iff p is on secp256k1\n  function _isOnCurve(uint256[2] memory p) internal pure returns (bool) {\n    // Section 2.3.6. in https://www.secg.org/sec1-v2.pdf\n    // requires each ordinate to be in [0, ..., FIELD_SIZE-1]\n    // solhint-disable-next-line custom-errors\n    require(p[0] < FIELD_SIZE, \"invalid x-ordinate\");\n    // solhint-disable-next-line custom-errors\n    require(p[1] < FIELD_SIZE, \"invalid y-ordinate\");\n    return _ySquared(p[0]) == mulmod(p[1], p[1], FIELD_SIZE);\n  }\n\n  // Hash x uniformly into {0, ..., FIELD_SIZE-1}.\n  function _fieldHash(bytes memory b) internal pure returns (uint256 x_) {\n    x_ = uint256(keccak256(b));\n    // Rejecting if x >= FIELD_SIZE corresponds to step 2.1 in section 2.3.4 of\n    // http://www.secg.org/sec1-v2.pdf , which is part of the definition of\n    // string_to_point in the IETF draft\n    while (x_ >= FIELD_SIZE) {\n      x_ = uint256(keccak256(abi.encodePacked(x_)));\n    }\n    return x_;\n  }\n\n  // Hash b to a random point which hopefully lies on secp256k1. The y ordinate\n  // is always even, due to\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.1.1\n  // step 5.C, which references arbitrary_string_to_point, defined in\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5 as\n  // returning the point with given x ordinate, and even y ordinate.\n  function _newCandidateSecp256k1Point(bytes memory b) internal view returns (uint256[2] memory p) {\n    unchecked {\n      p[0] = _fieldHash(b);\n      p[1] = _squareRoot(_ySquared(p[0]));\n      if (p[1] % 2 == 1) {\n        // Note that 0 <= p[1] < FIELD_SIZE\n        // so this cannot wrap, we use unchecked to save gas.\n        p[1] = FIELD_SIZE - p[1];\n      }\n    }\n    return p;\n  }\n\n  // Domain-separation tag for initial hash in _hashToCurve. Corresponds to\n  // vrf.go/hashToCurveHashPrefix\n  uint256 internal constant HASH_TO_CURVE_HASH_PREFIX = 1;\n\n  // Cryptographic hash function onto the curve.\n  //\n  // Corresponds to algorithm in section 5.4.1.1 of the draft standard. (But see\n  // DESIGN NOTES above for slight differences.)\n  //\n  // TODO(alx): Implement a bounded-computation hash-to-curve, as described in\n  // \"Construction of Rational Points on Elliptic Curves over Finite Fields\"\n  // http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.831.5299&rep=rep1&type=pdf\n  // and suggested by\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-01#section-5.2.2\n  // (Though we can't used exactly that because secp256k1's j-invariant is 0.)\n  //\n  // This would greatly simplify the analysis in \"OTHER SECURITY CONSIDERATIONS\"\n  // https://www.pivotaltracker.com/story/show/171120900\n  function _hashToCurve(uint256[2] memory pk, uint256 input) internal view returns (uint256[2] memory rv) {\n    rv = _newCandidateSecp256k1Point(abi.encodePacked(HASH_TO_CURVE_HASH_PREFIX, pk, input));\n    while (!_isOnCurve(rv)) {\n      rv = _newCandidateSecp256k1Point(abi.encodePacked(rv[0]));\n    }\n    return rv;\n  }\n\n  /** *********************************************************************\n   * @notice Check that product==scalar*multiplicand\n   *\n   * @dev Based on Vitalik Buterin's idea in ethresear.ch post cited below.\n   *\n   * @param multiplicand: secp256k1 point\n   * @param scalar: non-zero GF(GROUP_ORDER) scalar\n   * @param product: secp256k1 expected to be multiplier * multiplicand\n   * @return verifies true iff product==scalar*multiplicand, with cryptographically high probability\n   */\n  function _ecmulVerify(\n    uint256[2] memory multiplicand,\n    uint256 scalar,\n    uint256[2] memory product\n  ) internal pure returns (bool verifies) {\n    // solhint-disable-next-line custom-errors\n    require(scalar != 0, \"zero scalar\"); // Rules out an ecrecover failure case\n    uint256 x = multiplicand[0]; // x ordinate of multiplicand\n    uint8 v = multiplicand[1] % 2 == 0 ? 27 : 28; // parity of y ordinate\n    // https://ethresear.ch/t/you-can-kinda-abuse-ecrecover-to-do-ecmul-in-secp256k1-today/2384/9\n    // Point corresponding to address ecrecover(0, v, x, s=scalar*x) is\n    // (x⁻¹ mod GROUP_ORDER) * (scalar * x * multiplicand - 0 * g), i.e.\n    // scalar*multiplicand. See https://crypto.stackexchange.com/a/18106\n    bytes32 scalarTimesX = bytes32(mulmod(scalar, x, GROUP_ORDER));\n    address actual = ecrecover(bytes32(0), v, bytes32(x), scalarTimesX);\n    // Explicit conversion to address takes bottom 160 bits\n    address expected = address(uint160(uint256(keccak256(abi.encodePacked(product)))));\n    return (actual == expected);\n  }\n\n  // Returns x1/z1-x2/z2=(x1z2-x2z1)/(z1z2) in projective coordinates on P¹(𝔽ₙ)\n  function _projectiveSub(\n    uint256 x1,\n    uint256 z1,\n    uint256 x2,\n    uint256 z2\n  ) internal pure returns (uint256 x3, uint256 z3) {\n    unchecked {\n      uint256 num1 = mulmod(z2, x1, FIELD_SIZE);\n      // Note this cannot wrap since x2 is a point in [0, FIELD_SIZE-1]\n      // we use unchecked to save gas.\n      uint256 num2 = mulmod(FIELD_SIZE - x2, z1, FIELD_SIZE);\n      (x3, z3) = (addmod(num1, num2, FIELD_SIZE), mulmod(z1, z2, FIELD_SIZE));\n    }\n    return (x3, z3);\n  }\n\n  // Returns x1/z1*x2/z2=(x1x2)/(z1z2), in projective coordinates on P¹(𝔽ₙ)\n  function _projectiveMul(\n    uint256 x1,\n    uint256 z1,\n    uint256 x2,\n    uint256 z2\n  ) internal pure returns (uint256 x3, uint256 z3) {\n    (x3, z3) = (mulmod(x1, x2, FIELD_SIZE), mulmod(z1, z2, FIELD_SIZE));\n    return (x3, z3);\n  }\n\n  /** **************************************************************************\n        @notice Computes elliptic-curve sum, in projective co-ordinates\n\n        @dev Using projective coordinates avoids costly divisions\n\n        @dev To use this with p and q in affine coordinates, call\n        @dev _projectiveECAdd(px, py, qx, qy). This will return\n        @dev the addition of (px, py, 1) and (qx, qy, 1), in the\n        @dev secp256k1 group.\n\n        @dev This can be used to calculate the z which is the inverse to zInv\n        @dev in isValidVRFOutput. But consider using a faster\n        @dev re-implementation such as ProjectiveECAdd in the golang vrf package.\n\n        @dev This function assumes [px,py,1],[qx,qy,1] are valid projective\n             coordinates of secp256k1 points. That is safe in this contract,\n             because this method is only used by _linearCombination, which checks\n             points are on the curve via ecrecover.\n        **************************************************************************\n        @param px The first affine coordinate of the first summand\n        @param py The second affine coordinate of the first summand\n        @param qx The first affine coordinate of the second summand\n        @param qy The second affine coordinate of the second summand\n\n        (px,py) and (qx,qy) must be distinct, valid secp256k1 points.\n        **************************************************************************\n        Return values are projective coordinates of [px,py,1]+[qx,qy,1] as points\n        on secp256k1, in P²(𝔽ₙ)\n        @return sx\n        @return sy\n        @return sz\n    */\n  function _projectiveECAdd(\n    uint256 px,\n    uint256 py,\n    uint256 qx,\n    uint256 qy\n  ) internal pure returns (uint256 sx, uint256 sy, uint256 sz) {\n    unchecked {\n      // See \"Group law for E/K : y^2 = x^3 + ax + b\", in section 3.1.2, p. 80,\n      // \"Guide to Elliptic Curve Cryptography\" by Hankerson, Menezes and Vanstone\n      // We take the equations there for (sx,sy), and homogenize them to\n      // projective coordinates. That way, no inverses are required, here, and we\n      // only need the one inverse in _affineECAdd.\n\n      // We only need the \"point addition\" equations from Hankerson et al. Can\n      // skip the \"point doubling\" equations because p1 == p2 is cryptographically\n      // impossible, and required not to be the case in _linearCombination.\n\n      // Add extra \"projective coordinate\" to the two points\n      (uint256 z1, uint256 z2) = (1, 1);\n\n      // (lx, lz) = (qy-py)/(qx-px), i.e., gradient of secant line.\n      // Cannot wrap since px and py are in [0, FIELD_SIZE-1]\n      uint256 lx = addmod(qy, FIELD_SIZE - py, FIELD_SIZE);\n      uint256 lz = addmod(qx, FIELD_SIZE - px, FIELD_SIZE);\n\n      uint256 dx; // Accumulates denominator from sx calculation\n      // sx=((qy-py)/(qx-px))^2-px-qx\n      (sx, dx) = _projectiveMul(lx, lz, lx, lz); // ((qy-py)/(qx-px))^2\n      (sx, dx) = _projectiveSub(sx, dx, px, z1); // ((qy-py)/(qx-px))^2-px\n      (sx, dx) = _projectiveSub(sx, dx, qx, z2); // ((qy-py)/(qx-px))^2-px-qx\n\n      uint256 dy; // Accumulates denominator from sy calculation\n      // sy=((qy-py)/(qx-px))(px-sx)-py\n      (sy, dy) = _projectiveSub(px, z1, sx, dx); // px-sx\n      (sy, dy) = _projectiveMul(sy, dy, lx, lz); // ((qy-py)/(qx-px))(px-sx)\n      (sy, dy) = _projectiveSub(sy, dy, py, z1); // ((qy-py)/(qx-px))(px-sx)-py\n\n      if (dx != dy) {\n        // Cross-multiply to put everything over a common denominator\n        sx = mulmod(sx, dy, FIELD_SIZE);\n        sy = mulmod(sy, dx, FIELD_SIZE);\n        sz = mulmod(dx, dy, FIELD_SIZE);\n      } else {\n        // Already over a common denominator, use that for z ordinate\n        sz = dx;\n      }\n    }\n    return (sx, sy, sz);\n  }\n\n  // p1+p2, as affine points on secp256k1.\n  //\n  // invZ must be the inverse of the z returned by _projectiveECAdd(p1, p2).\n  // It is computed off-chain to save gas.\n  //\n  // p1 and p2 must be distinct, because _projectiveECAdd doesn't handle\n  // point doubling.\n  function _affineECAdd(\n    uint256[2] memory p1,\n    uint256[2] memory p2,\n    uint256 invZ\n  ) internal pure returns (uint256[2] memory) {\n    uint256 x;\n    uint256 y;\n    uint256 z;\n    (x, y, z) = _projectiveECAdd(p1[0], p1[1], p2[0], p2[1]);\n    // solhint-disable-next-line custom-errors\n    require(mulmod(z, invZ, FIELD_SIZE) == 1, \"invZ must be inverse of z\");\n    // Clear the z ordinate of the projective representation by dividing through\n    // by it, to obtain the affine representation\n    return [mulmod(x, invZ, FIELD_SIZE), mulmod(y, invZ, FIELD_SIZE)];\n  }\n\n  // True iff address(c*p+s*g) == lcWitness, where g is generator. (With\n  // cryptographically high probability.)\n  function _verifyLinearCombinationWithGenerator(\n    uint256 c,\n    uint256[2] memory p,\n    uint256 s,\n    address lcWitness\n  ) internal pure returns (bool) {\n    // Rule out ecrecover failure modes which return address 0.\n    unchecked {\n      // solhint-disable-next-line custom-errors\n      require(lcWitness != address(0), \"bad witness\");\n      uint8 v = (p[1] % 2 == 0) ? 27 : 28; // parity of y-ordinate of p\n      // Note this cannot wrap (X - Y % X), but we use unchecked to save\n      // gas.\n      bytes32 pseudoHash = bytes32(GROUP_ORDER - mulmod(p[0], s, GROUP_ORDER)); // -s*p[0]\n      bytes32 pseudoSignature = bytes32(mulmod(c, p[0], GROUP_ORDER)); // c*p[0]\n      // https://ethresear.ch/t/you-can-kinda-abuse-ecrecover-to-do-ecmul-in-secp256k1-today/2384/9\n      // The point corresponding to the address returned by\n      // ecrecover(-s*p[0],v,p[0],c*p[0]) is\n      // (p[0]⁻¹ mod GROUP_ORDER)*(c*p[0]-(-s)*p[0]*g)=c*p+s*g.\n      // See https://crypto.stackexchange.com/a/18106\n      // https://bitcoin.stackexchange.com/questions/38351/ecdsa-v-r-s-what-is-v\n      address computed = ecrecover(pseudoHash, v, bytes32(p[0]), pseudoSignature);\n      return computed == lcWitness;\n    }\n  }\n\n  // c*p1 + s*p2. Requires cp1Witness=c*p1 and sp2Witness=s*p2. Also\n  // requires cp1Witness != sp2Witness (which is fine for this application,\n  // since it is cryptographically impossible for them to be equal. In the\n  // (cryptographically impossible) case that a prover accidentally derives\n  // a proof with equal c*p1 and s*p2, they should retry with a different\n  // proof nonce.) Assumes that all points are on secp256k1\n  // (which is checked in _verifyVRFProof below.)\n  function _linearCombination(\n    uint256 c,\n    uint256[2] memory p1,\n    uint256[2] memory cp1Witness,\n    uint256 s,\n    uint256[2] memory p2,\n    uint256[2] memory sp2Witness,\n    uint256 zInv\n  ) internal pure returns (uint256[2] memory) {\n    unchecked {\n      // Note we are relying on the wrap around here\n      // solhint-disable-next-line custom-errors\n      require((cp1Witness[0] % FIELD_SIZE) != (sp2Witness[0] % FIELD_SIZE), \"points in sum must be distinct\");\n      // solhint-disable-next-line custom-errors\n      require(_ecmulVerify(p1, c, cp1Witness), \"First mul check failed\");\n      // solhint-disable-next-line custom-errors\n      require(_ecmulVerify(p2, s, sp2Witness), \"Second mul check failed\");\n      return _affineECAdd(cp1Witness, sp2Witness, zInv);\n    }\n  }\n\n  // Domain-separation tag for the hash taken in _scalarFromCurvePoints.\n  // Corresponds to scalarFromCurveHashPrefix in vrf.go\n  uint256 internal constant SCALAR_FROM_CURVE_POINTS_HASH_PREFIX = 2;\n\n  // Pseudo-random number from inputs. Matches vrf.go/_scalarFromCurvePoints, and\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.3\n  // The draft calls (in step 7, via the definition of string_to_int, in\n  // https://datatracker.ietf.org/doc/html/rfc8017#section-4.2 ) for taking the\n  // first hash without checking that it corresponds to a number less than the\n  // group order, which will lead to a slight bias in the sample.\n  //\n  // TODO(alx): We could save a bit of gas by following the standard here and\n  // using the compressed representation of the points, if we collated the y\n  // parities into a single bytes32.\n  // https://www.pivotaltracker.com/story/show/171120588\n  function _scalarFromCurvePoints(\n    uint256[2] memory hash,\n    uint256[2] memory pk,\n    uint256[2] memory gamma,\n    address uWitness,\n    uint256[2] memory v\n  ) internal pure returns (uint256 s) {\n    return uint256(keccak256(abi.encodePacked(SCALAR_FROM_CURVE_POINTS_HASH_PREFIX, hash, pk, gamma, v, uWitness)));\n  }\n\n  // True if (gamma, c, s) is a correctly constructed randomness proof from pk\n  // and seed. zInv must be the inverse of the third ordinate from\n  // _projectiveECAdd applied to cGammaWitness and sHashWitness. Corresponds to\n  // section 5.3 of the IETF draft.\n  //\n  // TODO(alx): Since I'm only using pk in the ecrecover call, I could only pass\n  // the x ordinate, and the parity of the y ordinate in the top bit of uWitness\n  // (which I could make a uint256 without using any extra space.) Would save\n  // about 2000 gas. https://www.pivotaltracker.com/story/show/170828567\n  function _verifyVRFProof(\n    uint256[2] memory pk,\n    uint256[2] memory gamma,\n    uint256 c,\n    uint256 s,\n    uint256 seed,\n    address uWitness,\n    uint256[2] memory cGammaWitness,\n    uint256[2] memory sHashWitness,\n    uint256 zInv\n  ) internal view {\n    unchecked {\n      // solhint-disable-next-line custom-errors\n      require(_isOnCurve(pk), \"public key is not on curve\");\n      // solhint-disable-next-line custom-errors\n      require(_isOnCurve(gamma), \"gamma is not on curve\");\n      // solhint-disable-next-line custom-errors\n      require(_isOnCurve(cGammaWitness), \"cGammaWitness is not on curve\");\n      // solhint-disable-next-line custom-errors\n      require(_isOnCurve(sHashWitness), \"sHashWitness is not on curve\");\n      // Step 5. of IETF draft section 5.3 (pk corresponds to 5.3's Y, and here\n      // we use the address of u instead of u itself. Also, here we add the\n      // terms instead of taking the difference, and in the proof construction in\n      // vrf.GenerateProof, we correspondingly take the difference instead of\n      // taking the sum as they do in step 7 of section 5.1.)\n      // solhint-disable-next-line custom-errors\n      require(_verifyLinearCombinationWithGenerator(c, pk, s, uWitness), \"addr(c*pk+s*g)!=_uWitness\");\n      // Step 4. of IETF draft section 5.3 (pk corresponds to Y, seed to alpha_string)\n      uint256[2] memory hash = _hashToCurve(pk, seed);\n      // Step 6. of IETF draft section 5.3, but see note for step 5 about +/- terms\n      uint256[2] memory v = _linearCombination(c, gamma, cGammaWitness, s, hash, sHashWitness, zInv);\n      // Steps 7. and 8. of IETF draft section 5.3\n      uint256 derivedC = _scalarFromCurvePoints(hash, pk, gamma, uWitness, v);\n      // solhint-disable-next-line custom-errors\n      require(c == derivedC, \"invalid proof\");\n    }\n  }\n\n  // Domain-separation tag for the hash used as the final VRF output.\n  // Corresponds to vrfRandomOutputHashPrefix in vrf.go\n  uint256 internal constant VRF_RANDOM_OUTPUT_HASH_PREFIX = 3;\n\n  struct Proof {\n    uint256[2] pk;\n    uint256[2] gamma;\n    uint256 c;\n    uint256 s;\n    uint256 seed;\n    address uWitness;\n    uint256[2] cGammaWitness;\n    uint256[2] sHashWitness;\n    uint256 zInv;\n  }\n\n  /* ***************************************************************************\n     * @notice Returns proof's output, if proof is valid. Otherwise reverts\n\n     * @param proof vrf proof components\n     * @param seed  seed used to generate the vrf output\n     *\n     * Throws if proof is invalid, otherwise:\n     * @return output i.e., the random output implied by the proof\n     * ***************************************************************************\n     */\n  function _randomValueFromVRFProof(Proof memory proof, uint256 seed) internal view returns (uint256 output) {\n    _verifyVRFProof(\n      proof.pk,\n      proof.gamma,\n      proof.c,\n      proof.s,\n      seed,\n      proof.uWitness,\n      proof.cGammaWitness,\n      proof.sHashWitness,\n      proof.zInv\n    );\n    output = uint256(keccak256(abi.encode(VRF_RANDOM_OUTPUT_HASH_PREFIX, proof.gamma)));\n    return output;\n  }\n}\n"},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinator\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\n * @dev initialize VRFConsumerBase's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords),\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2 {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  // solhint-disable-next-line chainlink-solidity/prefix-immutable-variables-with-i\n  address private immutable vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) {\n    vrfCoordinator = _vrfCoordinator;\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\n    if (msg.sender != vrfCoordinator) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n}\n"},"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport {LinkTokenInterface} from \"../shared/interfaces/LinkTokenInterface.sol\";\nimport {BlockhashStoreInterface} from \"./interfaces/BlockhashStoreInterface.sol\";\nimport {AggregatorV3Interface} from \"../shared/interfaces/AggregatorV3Interface.sol\";\nimport {VRFCoordinatorV2Interface} from \"./interfaces/VRFCoordinatorV2Interface.sol\";\nimport {TypeAndVersionInterface} from \"../interfaces/TypeAndVersionInterface.sol\";\nimport {IERC677Receiver} from \"../shared/interfaces/IERC677Receiver.sol\";\nimport {VRF} from \"./VRF.sol\";\nimport {ConfirmedOwner} from \"../shared/access/ConfirmedOwner.sol\";\nimport {VRFConsumerBaseV2} from \"./VRFConsumerBaseV2.sol\";\nimport {ChainSpecificUtil} from \"../ChainSpecificUtil.sol\";\n\ncontract VRFCoordinatorV2 is VRF, ConfirmedOwner, TypeAndVersionInterface, VRFCoordinatorV2Interface, IERC677Receiver {\n  // solhint-disable-next-line chainlink-solidity/prefix-immutable-variables-with-i\n  LinkTokenInterface public immutable LINK;\n  // solhint-disable-next-line chainlink-solidity/prefix-immutable-variables-with-i\n  AggregatorV3Interface public immutable LINK_ETH_FEED;\n  // solhint-disable-next-line chainlink-solidity/prefix-immutable-variables-with-i\n  BlockhashStoreInterface public immutable BLOCKHASH_STORE;\n\n  // We need to maintain a list of consuming addresses.\n  // This bound ensures we are able to loop over them as needed.\n  // Should a user require more consumers, they can use multiple subscriptions.\n  uint16 public constant MAX_CONSUMERS = 100;\n  error TooManyConsumers();\n  error InsufficientBalance();\n  error InvalidConsumer(uint64 subId, address consumer);\n  error InvalidSubscription();\n  error OnlyCallableFromLink();\n  error InvalidCalldata();\n  error MustBeSubOwner(address owner);\n  error PendingRequestExists();\n  error MustBeRequestedOwner(address proposedOwner);\n  error BalanceInvariantViolated(uint256 internalBalance, uint256 externalBalance); // Should never happen\n  event FundsRecovered(address to, uint256 amount);\n  // We use the subscription struct (1 word)\n  // at fulfillment time.\n  struct Subscription {\n    // There are only 1e9*1e18 = 1e27 juels in existence, so the balance can fit in uint96 (2^96 ~ 7e28)\n    uint96 balance; // Common link balance used for all consumer requests.\n    uint64 reqCount; // For fee tiers\n  }\n  // We use the config for the mgmt APIs\n  struct SubscriptionConfig {\n    address owner; // Owner can fund/withdraw/cancel the sub.\n    address requestedOwner; // For safely transferring sub ownership.\n    // Maintains the list of keys in s_consumers.\n    // We do this for 2 reasons:\n    // 1. To be able to clean up all keys from s_consumers when canceling a subscription.\n    // 2. To be able to return the list of all consumers in getSubscription.\n    // Note that we need the s_consumers map to be able to directly check if a\n    // consumer is valid without reading all the consumers from storage.\n    address[] consumers;\n  }\n  // Note a nonce of 0 indicates an the consumer is not assigned to that subscription.\n  mapping(address => mapping(uint64 => uint64)) /* consumer */ /* subId */ /* nonce */ private s_consumers;\n  mapping(uint64 => SubscriptionConfig) /* subId */ /* subscriptionConfig */ private s_subscriptionConfigs;\n  mapping(uint64 => Subscription) /* subId */ /* subscription */ private s_subscriptions;\n  // We make the sub count public so that its possible to\n  // get all the current subscriptions via getSubscription.\n  uint64 private s_currentSubId;\n  // s_totalBalance tracks the total link sent to/from\n  // this contract through onTokenTransfer, cancelSubscription and oracleWithdraw.\n  // A discrepancy with this contract's link balance indicates someone\n  // sent tokens using transfer and so we may need to use recoverFunds.\n  uint96 private s_totalBalance;\n  event SubscriptionCreated(uint64 indexed subId, address owner);\n  event SubscriptionFunded(uint64 indexed subId, uint256 oldBalance, uint256 newBalance);\n  event SubscriptionConsumerAdded(uint64 indexed subId, address consumer);\n  event SubscriptionConsumerRemoved(uint64 indexed subId, address consumer);\n  event SubscriptionCanceled(uint64 indexed subId, address to, uint256 amount);\n  event SubscriptionOwnerTransferRequested(uint64 indexed subId, address from, address to);\n  event SubscriptionOwnerTransferred(uint64 indexed subId, address from, address to);\n\n  // Set this maximum to 200 to give us a 56 block window to fulfill\n  // the request before requiring the block hash feeder.\n  uint16 public constant MAX_REQUEST_CONFIRMATIONS = 200;\n  uint32 public constant MAX_NUM_WORDS = 500;\n  // 5k is plenty for an EXTCODESIZE call (2600) + warm CALL (100)\n  // and some arithmetic operations.\n  uint256 private constant GAS_FOR_CALL_EXACT_CHECK = 5_000;\n  error InvalidRequestConfirmations(uint16 have, uint16 min, uint16 max);\n  error GasLimitTooBig(uint32 have, uint32 want);\n  error NumWordsTooBig(uint32 have, uint32 want);\n  error ProvingKeyAlreadyRegistered(bytes32 keyHash);\n  error NoSuchProvingKey(bytes32 keyHash);\n  error InvalidLinkWeiPrice(int256 linkWei);\n  error InsufficientGasForConsumer(uint256 have, uint256 want);\n  error NoCorrespondingRequest();\n  error IncorrectCommitment();\n  error BlockhashNotInStore(uint256 blockNum);\n  error PaymentTooLarge();\n  error Reentrant();\n  struct RequestCommitment {\n    uint64 blockNum;\n    uint64 subId;\n    uint32 callbackGasLimit;\n    uint32 numWords;\n    address sender;\n  }\n  mapping(bytes32 => address) /* keyHash */ /* oracle */ private s_provingKeys;\n  bytes32[] private s_provingKeyHashes;\n  mapping(address => uint96) /* oracle */ /* LINK balance */ private s_withdrawableTokens;\n  mapping(uint256 => bytes32) /* requestID */ /* commitment */ private s_requestCommitments;\n  event ProvingKeyRegistered(bytes32 keyHash, address indexed oracle);\n  event ProvingKeyDeregistered(bytes32 keyHash, address indexed oracle);\n  event RandomWordsRequested(\n    bytes32 indexed keyHash,\n    uint256 requestId,\n    uint256 preSeed,\n    uint64 indexed subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords,\n    address indexed sender\n  );\n  event RandomWordsFulfilled(uint256 indexed requestId, uint256 outputSeed, uint96 payment, bool success);\n\n  struct Config {\n    uint16 minimumRequestConfirmations;\n    uint32 maxGasLimit;\n    // Reentrancy protection.\n    bool reentrancyLock;\n    // stalenessSeconds is how long before we consider the feed price to be stale\n    // and fallback to fallbackWeiPerUnitLink.\n    uint32 stalenessSeconds;\n    // Gas to cover oracle payment after we calculate the payment.\n    // We make it configurable in case those operations are repriced.\n    uint32 gasAfterPaymentCalculation;\n  }\n  int256 private s_fallbackWeiPerUnitLink;\n  Config private s_config;\n  FeeConfig private s_feeConfig;\n  struct FeeConfig {\n    // Flat fee charged per fulfillment in millionths of link\n    // So fee range is [0, 2^32/10^6].\n    uint32 fulfillmentFlatFeeLinkPPMTier1;\n    uint32 fulfillmentFlatFeeLinkPPMTier2;\n    uint32 fulfillmentFlatFeeLinkPPMTier3;\n    uint32 fulfillmentFlatFeeLinkPPMTier4;\n    uint32 fulfillmentFlatFeeLinkPPMTier5;\n    uint24 reqsForTier2;\n    uint24 reqsForTier3;\n    uint24 reqsForTier4;\n    uint24 reqsForTier5;\n  }\n  event ConfigSet(\n    uint16 minimumRequestConfirmations,\n    uint32 maxGasLimit,\n    uint32 stalenessSeconds,\n    uint32 gasAfterPaymentCalculation,\n    int256 fallbackWeiPerUnitLink,\n    FeeConfig feeConfig\n  );\n\n  constructor(address link, address blockhashStore, address linkEthFeed) ConfirmedOwner(msg.sender) {\n    LINK = LinkTokenInterface(link);\n    LINK_ETH_FEED = AggregatorV3Interface(linkEthFeed);\n    BLOCKHASH_STORE = BlockhashStoreInterface(blockhashStore);\n  }\n\n  /**\n   * @notice Registers a proving key to an oracle.\n   * @param oracle address of the oracle\n   * @param publicProvingKey key that oracle can use to submit vrf fulfillments\n   */\n  function registerProvingKey(address oracle, uint256[2] calldata publicProvingKey) external onlyOwner {\n    bytes32 kh = hashOfKey(publicProvingKey);\n    if (s_provingKeys[kh] != address(0)) {\n      revert ProvingKeyAlreadyRegistered(kh);\n    }\n    s_provingKeys[kh] = oracle;\n    s_provingKeyHashes.push(kh);\n    emit ProvingKeyRegistered(kh, oracle);\n  }\n\n  /**\n   * @notice Deregisters a proving key to an oracle.\n   * @param publicProvingKey key that oracle can use to submit vrf fulfillments\n   */\n  function deregisterProvingKey(uint256[2] calldata publicProvingKey) external onlyOwner {\n    bytes32 kh = hashOfKey(publicProvingKey);\n    address oracle = s_provingKeys[kh];\n    if (oracle == address(0)) {\n      revert NoSuchProvingKey(kh);\n    }\n    delete s_provingKeys[kh];\n    for (uint256 i = 0; i < s_provingKeyHashes.length; i++) {\n      if (s_provingKeyHashes[i] == kh) {\n        bytes32 last = s_provingKeyHashes[s_provingKeyHashes.length - 1];\n        // Copy last element and overwrite kh to be deleted with it\n        s_provingKeyHashes[i] = last;\n        s_provingKeyHashes.pop();\n      }\n    }\n    emit ProvingKeyDeregistered(kh, oracle);\n  }\n\n  /**\n   * @notice Returns the proving key hash key associated with this public key\n   * @param publicKey the key to return the hash of\n   */\n  function hashOfKey(uint256[2] memory publicKey) public pure returns (bytes32) {\n    return keccak256(abi.encode(publicKey));\n  }\n\n  /**\n   * @notice Sets the configuration of the vrfv2 coordinator\n   * @param minimumRequestConfirmations global min for request confirmations\n   * @param maxGasLimit global max for request gas limit\n   * @param stalenessSeconds if the eth/link feed is more stale then this, use the fallback price\n   * @param gasAfterPaymentCalculation gas used in doing accounting after completing the gas measurement\n   * @param fallbackWeiPerUnitLink fallback eth/link price in the case of a stale feed\n   * @param feeConfig fee tier configuration\n   */\n  function setConfig(\n    uint16 minimumRequestConfirmations,\n    uint32 maxGasLimit,\n    uint32 stalenessSeconds,\n    uint32 gasAfterPaymentCalculation,\n    int256 fallbackWeiPerUnitLink,\n    FeeConfig memory feeConfig\n  ) external onlyOwner {\n    if (minimumRequestConfirmations > MAX_REQUEST_CONFIRMATIONS) {\n      revert InvalidRequestConfirmations(\n        minimumRequestConfirmations,\n        minimumRequestConfirmations,\n        MAX_REQUEST_CONFIRMATIONS\n      );\n    }\n    if (fallbackWeiPerUnitLink <= 0) {\n      revert InvalidLinkWeiPrice(fallbackWeiPerUnitLink);\n    }\n    s_config = Config({\n      minimumRequestConfirmations: minimumRequestConfirmations,\n      maxGasLimit: maxGasLimit,\n      stalenessSeconds: stalenessSeconds,\n      gasAfterPaymentCalculation: gasAfterPaymentCalculation,\n      reentrancyLock: false\n    });\n    s_feeConfig = feeConfig;\n    s_fallbackWeiPerUnitLink = fallbackWeiPerUnitLink;\n    emit ConfigSet(\n      minimumRequestConfirmations,\n      maxGasLimit,\n      stalenessSeconds,\n      gasAfterPaymentCalculation,\n      fallbackWeiPerUnitLink,\n      s_feeConfig\n    );\n  }\n\n  function getConfig()\n    external\n    view\n    returns (\n      uint16 minimumRequestConfirmations,\n      uint32 maxGasLimit,\n      uint32 stalenessSeconds,\n      uint32 gasAfterPaymentCalculation\n    )\n  {\n    return (\n      s_config.minimumRequestConfirmations,\n      s_config.maxGasLimit,\n      s_config.stalenessSeconds,\n      s_config.gasAfterPaymentCalculation\n    );\n  }\n\n  function getFeeConfig()\n    external\n    view\n    returns (\n      uint32 fulfillmentFlatFeeLinkPPMTier1,\n      uint32 fulfillmentFlatFeeLinkPPMTier2,\n      uint32 fulfillmentFlatFeeLinkPPMTier3,\n      uint32 fulfillmentFlatFeeLinkPPMTier4,\n      uint32 fulfillmentFlatFeeLinkPPMTier5,\n      uint24 reqsForTier2,\n      uint24 reqsForTier3,\n      uint24 reqsForTier4,\n      uint24 reqsForTier5\n    )\n  {\n    return (\n      s_feeConfig.fulfillmentFlatFeeLinkPPMTier1,\n      s_feeConfig.fulfillmentFlatFeeLinkPPMTier2,\n      s_feeConfig.fulfillmentFlatFeeLinkPPMTier3,\n      s_feeConfig.fulfillmentFlatFeeLinkPPMTier4,\n      s_feeConfig.fulfillmentFlatFeeLinkPPMTier5,\n      s_feeConfig.reqsForTier2,\n      s_feeConfig.reqsForTier3,\n      s_feeConfig.reqsForTier4,\n      s_feeConfig.reqsForTier5\n    );\n  }\n\n  function getTotalBalance() external view returns (uint256) {\n    return s_totalBalance;\n  }\n\n  function getFallbackWeiPerUnitLink() external view returns (int256) {\n    return s_fallbackWeiPerUnitLink;\n  }\n\n  /**\n   * @notice Owner cancel subscription, sends remaining link directly to the subscription owner.\n   * @param subId subscription id\n   * @dev notably can be called even if there are pending requests, outstanding ones may fail onchain\n   */\n  function ownerCancelSubscription(uint64 subId) external onlyOwner {\n    if (s_subscriptionConfigs[subId].owner == address(0)) {\n      revert InvalidSubscription();\n    }\n    _cancelSubscriptionHelper(subId, s_subscriptionConfigs[subId].owner);\n  }\n\n  /**\n   * @notice Recover link sent with transfer instead of transferAndCall.\n   * @param to address to send link to\n   */\n  function recoverFunds(address to) external onlyOwner {\n    uint256 externalBalance = LINK.balanceOf(address(this));\n    uint256 internalBalance = uint256(s_totalBalance);\n    if (internalBalance > externalBalance) {\n      revert BalanceInvariantViolated(internalBalance, externalBalance);\n    }\n    if (internalBalance < externalBalance) {\n      uint256 amount = externalBalance - internalBalance;\n      LINK.transfer(to, amount);\n      emit FundsRecovered(to, amount);\n    }\n    // If the balances are equal, nothing to be done.\n  }\n\n  /**\n   * @inheritdoc VRFCoordinatorV2Interface\n   */\n  function getRequestConfig() external view override returns (uint16, uint32, bytes32[] memory) {\n    return (s_config.minimumRequestConfirmations, s_config.maxGasLimit, s_provingKeyHashes);\n  }\n\n  /**\n   * @inheritdoc VRFCoordinatorV2Interface\n   */\n  function requestRandomWords(\n    bytes32 keyHash,\n    uint64 subId,\n    uint16 requestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords\n  ) external override nonReentrant returns (uint256) {\n    // Input validation using the subscription storage.\n    if (s_subscriptionConfigs[subId].owner == address(0)) {\n      revert InvalidSubscription();\n    }\n    // Its important to ensure that the consumer is in fact who they say they\n    // are, otherwise they could use someone else's subscription balance.\n    // A nonce of 0 indicates consumer is not allocated to the sub.\n    uint64 currentNonce = s_consumers[msg.sender][subId];\n    if (currentNonce == 0) {\n      revert InvalidConsumer(subId, msg.sender);\n    }\n    // Input validation using the config storage word.\n    if (\n      requestConfirmations < s_config.minimumRequestConfirmations || requestConfirmations > MAX_REQUEST_CONFIRMATIONS\n    ) {\n      revert InvalidRequestConfirmations(\n        requestConfirmations,\n        s_config.minimumRequestConfirmations,\n        MAX_REQUEST_CONFIRMATIONS\n      );\n    }\n    // No lower bound on the requested gas limit. A user could request 0\n    // and they would simply be billed for the proof verification and wouldn't be\n    // able to do anything with the random value.\n    if (callbackGasLimit > s_config.maxGasLimit) {\n      revert GasLimitTooBig(callbackGasLimit, s_config.maxGasLimit);\n    }\n    if (numWords > MAX_NUM_WORDS) {\n      revert NumWordsTooBig(numWords, MAX_NUM_WORDS);\n    }\n    // Note we do not check whether the keyHash is valid to save gas.\n    // The consequence for users is that they can send requests\n    // for invalid keyHashes which will simply not be fulfilled.\n    uint64 nonce = currentNonce + 1;\n    (uint256 requestId, uint256 preSeed) = _computeRequestId(keyHash, msg.sender, subId, nonce);\n\n    s_requestCommitments[requestId] = keccak256(\n      abi.encode(requestId, ChainSpecificUtil._getBlockNumber(), subId, callbackGasLimit, numWords, msg.sender)\n    );\n    emit RandomWordsRequested(\n      keyHash,\n      requestId,\n      preSeed,\n      subId,\n      requestConfirmations,\n      callbackGasLimit,\n      numWords,\n      msg.sender\n    );\n    s_consumers[msg.sender][subId] = nonce;\n\n    return requestId;\n  }\n\n  /**\n   * @notice Get request commitment\n   * @param requestId id of request\n   * @dev used to determine if a request is fulfilled or not\n   */\n  function getCommitment(uint256 requestId) external view returns (bytes32) {\n    return s_requestCommitments[requestId];\n  }\n\n  function _computeRequestId(\n    bytes32 keyHash,\n    address sender,\n    uint64 subId,\n    uint64 nonce\n  ) private pure returns (uint256, uint256) {\n    uint256 preSeed = uint256(keccak256(abi.encode(keyHash, sender, subId, nonce)));\n    return (uint256(keccak256(abi.encode(keyHash, preSeed))), preSeed);\n  }\n\n  /**\n   * @dev calls target address with exactly gasAmount gas and data as calldata\n   * or reverts if at least gasAmount gas is not available.\n   */\n  function _callWithExactGas(uint256 gasAmount, address target, bytes memory data) private returns (bool success) {\n    assembly {\n      let g := gas()\n      // Compute g -= GAS_FOR_CALL_EXACT_CHECK and check for underflow\n      // The gas actually passed to the callee is min(gasAmount, 63//64*gas available).\n      // We want to ensure that we revert if gasAmount >  63//64*gas available\n      // as we do not want to provide them with less, however that check itself costs\n      // gas.  GAS_FOR_CALL_EXACT_CHECK ensures we have at least enough gas to be able\n      // to revert if gasAmount >  63//64*gas available.\n      if lt(g, GAS_FOR_CALL_EXACT_CHECK) {\n        revert(0, 0)\n      }\n      g := sub(g, GAS_FOR_CALL_EXACT_CHECK)\n      // if g - g//64 <= gasAmount, revert\n      // (we subtract g//64 because of EIP-150)\n      if iszero(gt(sub(g, div(g, 64)), gasAmount)) {\n        revert(0, 0)\n      }\n      // solidity calls check that a contract actually exists at the destination, so we do the same\n      if iszero(extcodesize(target)) {\n        revert(0, 0)\n      }\n      // call and return whether we succeeded. ignore return data\n      // call(gas,addr,value,argsOffset,argsLength,retOffset,retLength)\n      success := call(gasAmount, target, 0, add(data, 0x20), mload(data), 0, 0)\n    }\n    return success;\n  }\n\n  function _getRandomnessFromProof(\n    Proof memory proof,\n    RequestCommitment memory rc\n  ) private view returns (bytes32 keyHash, uint256 requestId, uint256 randomness) {\n    keyHash = hashOfKey(proof.pk);\n    // Only registered proving keys are permitted.\n    address oracle = s_provingKeys[keyHash];\n    if (oracle == address(0)) {\n      revert NoSuchProvingKey(keyHash);\n    }\n    requestId = uint256(keccak256(abi.encode(keyHash, proof.seed)));\n    bytes32 commitment = s_requestCommitments[requestId];\n    if (commitment == 0) {\n      revert NoCorrespondingRequest();\n    }\n    if (\n      commitment != keccak256(abi.encode(requestId, rc.blockNum, rc.subId, rc.callbackGasLimit, rc.numWords, rc.sender))\n    ) {\n      revert IncorrectCommitment();\n    }\n\n    bytes32 blockHash = ChainSpecificUtil._getBlockhash(rc.blockNum);\n    if (blockHash == bytes32(0)) {\n      blockHash = BLOCKHASH_STORE.getBlockhash(rc.blockNum);\n      if (blockHash == bytes32(0)) {\n        revert BlockhashNotInStore(rc.blockNum);\n      }\n    }\n\n    // The seed actually used by the VRF machinery, mixing in the blockhash\n    uint256 actualSeed = uint256(keccak256(abi.encodePacked(proof.seed, blockHash)));\n    randomness = VRF._randomValueFromVRFProof(proof, actualSeed); // Reverts on failure\n    return (keyHash, requestId, randomness);\n  }\n\n  /*\n   * @notice Compute fee based on the request count\n   * @param reqCount number of requests\n   * @return feePPM fee in LINK PPM\n   */\n  function getFeeTier(uint64 reqCount) public view returns (uint32) {\n    FeeConfig memory fc = s_feeConfig;\n    if (0 <= reqCount && reqCount <= fc.reqsForTier2) {\n      return fc.fulfillmentFlatFeeLinkPPMTier1;\n    }\n    if (fc.reqsForTier2 < reqCount && reqCount <= fc.reqsForTier3) {\n      return fc.fulfillmentFlatFeeLinkPPMTier2;\n    }\n    if (fc.reqsForTier3 < reqCount && reqCount <= fc.reqsForTier4) {\n      return fc.fulfillmentFlatFeeLinkPPMTier3;\n    }\n    if (fc.reqsForTier4 < reqCount && reqCount <= fc.reqsForTier5) {\n      return fc.fulfillmentFlatFeeLinkPPMTier4;\n    }\n    return fc.fulfillmentFlatFeeLinkPPMTier5;\n  }\n\n  /*\n   * @notice Fulfill a randomness request\n   * @param proof contains the proof and randomness\n   * @param rc request commitment pre-image, committed to at request time\n   * @return payment amount billed to the subscription\n   * @dev simulated offchain to determine if sufficient balance is present to fulfill the request\n   */\n  function fulfillRandomWords(Proof memory proof, RequestCommitment memory rc) external nonReentrant returns (uint96) {\n    uint256 startGas = gasleft();\n    (bytes32 keyHash, uint256 requestId, uint256 randomness) = _getRandomnessFromProof(proof, rc);\n\n    uint256[] memory randomWords = new uint256[](rc.numWords);\n    for (uint256 i = 0; i < rc.numWords; i++) {\n      randomWords[i] = uint256(keccak256(abi.encode(randomness, i)));\n    }\n\n    delete s_requestCommitments[requestId];\n    VRFConsumerBaseV2 v;\n    bytes memory resp = abi.encodeWithSelector(v.rawFulfillRandomWords.selector, requestId, randomWords);\n    // Call with explicitly the amount of callback gas requested\n    // Important to not let them exhaust the gas budget and avoid oracle payment.\n    // Do not allow any non-view/non-pure coordinator functions to be called\n    // during the consumers callback code via reentrancyLock.\n    // Note that _callWithExactGas will revert if we do not have sufficient gas\n    // to give the callee their requested amount.\n    s_config.reentrancyLock = true;\n    bool success = _callWithExactGas(rc.callbackGasLimit, rc.sender, resp);\n    s_config.reentrancyLock = false;\n\n    // Increment the req count for fee tier selection.\n    uint64 reqCount = s_subscriptions[rc.subId].reqCount;\n    s_subscriptions[rc.subId].reqCount += 1;\n\n    // We want to charge users exactly for how much gas they use in their callback.\n    // The gasAfterPaymentCalculation is meant to cover these additional operations where we\n    // decrement the subscription balance and increment the oracles withdrawable balance.\n    // We also add the flat link fee to the payment amount.\n    // Its specified in millionths of link, if s_config.fulfillmentFlatFeeLinkPPM = 1\n    // 1 link / 1e6 = 1e18 juels / 1e6 = 1e12 juels.\n    uint96 payment = _calculatePaymentAmount(\n      startGas,\n      s_config.gasAfterPaymentCalculation,\n      getFeeTier(reqCount),\n      tx.gasprice\n    );\n    if (s_subscriptions[rc.subId].balance < payment) {\n      revert InsufficientBalance();\n    }\n    s_subscriptions[rc.subId].balance -= payment;\n    s_withdrawableTokens[s_provingKeys[keyHash]] += payment;\n    // Include payment in the event for tracking costs.\n    emit RandomWordsFulfilled(requestId, randomness, payment, success);\n    return payment;\n  }\n\n  // Get the amount of gas used for fulfillment\n  function _calculatePaymentAmount(\n    uint256 startGas,\n    uint256 gasAfterPaymentCalculation,\n    uint32 fulfillmentFlatFeeLinkPPM,\n    uint256 weiPerUnitGas\n  ) internal view returns (uint96) {\n    int256 weiPerUnitLink;\n    weiPerUnitLink = _getFeedData();\n    if (weiPerUnitLink <= 0) {\n      revert InvalidLinkWeiPrice(weiPerUnitLink);\n    }\n    // Will return non-zero on chains that have this enabled\n    uint256 l1CostWei = ChainSpecificUtil._getCurrentTxL1GasFees(msg.data);\n    // (1e18 juels/link) ((wei/gas * gas) + l1wei) / (wei/link) = juels\n    uint256 paymentNoFee = (1e18 * (weiPerUnitGas * (gasAfterPaymentCalculation + startGas - gasleft()) + l1CostWei)) /\n      uint256(weiPerUnitLink);\n    uint256 fee = 1e12 * uint256(fulfillmentFlatFeeLinkPPM);\n    if (paymentNoFee > (1e27 - fee)) {\n      revert PaymentTooLarge(); // Payment + fee cannot be more than all of the link in existence.\n    }\n    return uint96(paymentNoFee + fee);\n  }\n\n  function _getFeedData() private view returns (int256) {\n    uint32 stalenessSeconds = s_config.stalenessSeconds;\n    bool staleFallback = stalenessSeconds > 0;\n    uint256 timestamp;\n    int256 weiPerUnitLink;\n    (, weiPerUnitLink, , timestamp, ) = LINK_ETH_FEED.latestRoundData();\n    // solhint-disable-next-line not-rely-on-time\n    if (staleFallback && stalenessSeconds < block.timestamp - timestamp) {\n      weiPerUnitLink = s_fallbackWeiPerUnitLink;\n    }\n    return weiPerUnitLink;\n  }\n\n  /*\n   * @notice Oracle withdraw LINK earned through fulfilling requests\n   * @param recipient where to send the funds\n   * @param amount amount to withdraw\n   */\n  function oracleWithdraw(address recipient, uint96 amount) external nonReentrant {\n    if (s_withdrawableTokens[msg.sender] < amount) {\n      revert InsufficientBalance();\n    }\n    s_withdrawableTokens[msg.sender] -= amount;\n    s_totalBalance -= amount;\n    if (!LINK.transfer(recipient, amount)) {\n      revert InsufficientBalance();\n    }\n  }\n\n  function onTokenTransfer(address /* sender */, uint256 amount, bytes calldata data) external override nonReentrant {\n    if (msg.sender != address(LINK)) {\n      revert OnlyCallableFromLink();\n    }\n    if (data.length != 32) {\n      revert InvalidCalldata();\n    }\n    uint64 subId = abi.decode(data, (uint64));\n    if (s_subscriptionConfigs[subId].owner == address(0)) {\n      revert InvalidSubscription();\n    }\n    // We do not check that the msg.sender is the subscription owner,\n    // anyone can fund a subscription.\n    uint256 oldBalance = s_subscriptions[subId].balance;\n    s_subscriptions[subId].balance += uint96(amount);\n    s_totalBalance += uint96(amount);\n    emit SubscriptionFunded(subId, oldBalance, oldBalance + amount);\n  }\n\n  function getCurrentSubId() external view returns (uint64) {\n    return s_currentSubId;\n  }\n\n  /**\n   * @inheritdoc VRFCoordinatorV2Interface\n   */\n  function getSubscription(\n    uint64 subId\n  ) external view override returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers) {\n    if (s_subscriptionConfigs[subId].owner == address(0)) {\n      revert InvalidSubscription();\n    }\n    return (\n      s_subscriptions[subId].balance,\n      s_subscriptions[subId].reqCount,\n      s_subscriptionConfigs[subId].owner,\n      s_subscriptionConfigs[subId].consumers\n    );\n  }\n\n  /**\n   * @inheritdoc VRFCoordinatorV2Interface\n   */\n  function createSubscription() external override nonReentrant returns (uint64) {\n    s_currentSubId++;\n    uint64 currentSubId = s_currentSubId;\n    address[] memory consumers = new address[](0);\n    s_subscriptions[currentSubId] = Subscription({balance: 0, reqCount: 0});\n    s_subscriptionConfigs[currentSubId] = SubscriptionConfig({\n      owner: msg.sender,\n      requestedOwner: address(0),\n      consumers: consumers\n    });\n\n    emit SubscriptionCreated(currentSubId, msg.sender);\n    return currentSubId;\n  }\n\n  /**\n   * @inheritdoc VRFCoordinatorV2Interface\n   */\n  function requestSubscriptionOwnerTransfer(\n    uint64 subId,\n    address newOwner\n  ) external override onlySubOwner(subId) nonReentrant {\n    // Proposing to address(0) would never be claimable so don't need to check.\n    if (s_subscriptionConfigs[subId].requestedOwner != newOwner) {\n      s_subscriptionConfigs[subId].requestedOwner = newOwner;\n      emit SubscriptionOwnerTransferRequested(subId, msg.sender, newOwner);\n    }\n  }\n\n  /**\n   * @inheritdoc VRFCoordinatorV2Interface\n   */\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external override nonReentrant {\n    if (s_subscriptionConfigs[subId].owner == address(0)) {\n      revert InvalidSubscription();\n    }\n    if (s_subscriptionConfigs[subId].requestedOwner != msg.sender) {\n      revert MustBeRequestedOwner(s_subscriptionConfigs[subId].requestedOwner);\n    }\n    address oldOwner = s_subscriptionConfigs[subId].owner;\n    s_subscriptionConfigs[subId].owner = msg.sender;\n    s_subscriptionConfigs[subId].requestedOwner = address(0);\n    emit SubscriptionOwnerTransferred(subId, oldOwner, msg.sender);\n  }\n\n  /**\n   * @inheritdoc VRFCoordinatorV2Interface\n   */\n  function removeConsumer(uint64 subId, address consumer) external override onlySubOwner(subId) nonReentrant {\n    if (pendingRequestExists(subId)) {\n      revert PendingRequestExists();\n    }\n    if (s_consumers[consumer][subId] == 0) {\n      revert InvalidConsumer(subId, consumer);\n    }\n    // Note bounded by MAX_CONSUMERS\n    address[] memory consumers = s_subscriptionConfigs[subId].consumers;\n    uint256 lastConsumerIndex = consumers.length - 1;\n    for (uint256 i = 0; i < consumers.length; i++) {\n      if (consumers[i] == consumer) {\n        address last = consumers[lastConsumerIndex];\n        // Storage write to preserve last element\n        s_subscriptionConfigs[subId].consumers[i] = last;\n        // Storage remove last element\n        s_subscriptionConfigs[subId].consumers.pop();\n        break;\n      }\n    }\n    delete s_consumers[consumer][subId];\n    emit SubscriptionConsumerRemoved(subId, consumer);\n  }\n\n  /**\n   * @inheritdoc VRFCoordinatorV2Interface\n   */\n  function addConsumer(uint64 subId, address consumer) external override onlySubOwner(subId) nonReentrant {\n    // Already maxed, cannot add any more consumers.\n    if (s_subscriptionConfigs[subId].consumers.length == MAX_CONSUMERS) {\n      revert TooManyConsumers();\n    }\n    if (s_consumers[consumer][subId] != 0) {\n      // Idempotence - do nothing if already added.\n      // Ensures uniqueness in s_subscriptions[subId].consumers.\n      return;\n    }\n    // Initialize the nonce to 1, indicating the consumer is allocated.\n    s_consumers[consumer][subId] = 1;\n    s_subscriptionConfigs[subId].consumers.push(consumer);\n\n    emit SubscriptionConsumerAdded(subId, consumer);\n  }\n\n  /**\n   * @inheritdoc VRFCoordinatorV2Interface\n   */\n  function cancelSubscription(uint64 subId, address to) external override onlySubOwner(subId) nonReentrant {\n    if (pendingRequestExists(subId)) {\n      revert PendingRequestExists();\n    }\n    _cancelSubscriptionHelper(subId, to);\n  }\n\n  function _cancelSubscriptionHelper(uint64 subId, address to) private nonReentrant {\n    SubscriptionConfig memory subConfig = s_subscriptionConfigs[subId];\n    Subscription memory sub = s_subscriptions[subId];\n    uint96 balance = sub.balance;\n    // Note bounded by MAX_CONSUMERS;\n    // If no consumers, does nothing.\n    for (uint256 i = 0; i < subConfig.consumers.length; i++) {\n      delete s_consumers[subConfig.consumers[i]][subId];\n    }\n    delete s_subscriptionConfigs[subId];\n    delete s_subscriptions[subId];\n    s_totalBalance -= balance;\n    if (!LINK.transfer(to, uint256(balance))) {\n      revert InsufficientBalance();\n    }\n    emit SubscriptionCanceled(subId, to, balance);\n  }\n\n  /**\n   * @inheritdoc VRFCoordinatorV2Interface\n   * @dev Looping is bounded to MAX_CONSUMERS*(number of keyhashes).\n   * @dev Used to disable subscription canceling while outstanding request are present.\n   */\n  function pendingRequestExists(uint64 subId) public view override returns (bool) {\n    SubscriptionConfig memory subConfig = s_subscriptionConfigs[subId];\n    for (uint256 i = 0; i < subConfig.consumers.length; i++) {\n      for (uint256 j = 0; j < s_provingKeyHashes.length; j++) {\n        (uint256 reqId, ) = _computeRequestId(\n          s_provingKeyHashes[j],\n          subConfig.consumers[i],\n          subId,\n          s_consumers[subConfig.consumers[i]][subId]\n        );\n        if (s_requestCommitments[reqId] != 0) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  modifier onlySubOwner(uint64 subId) {\n    address owner = s_subscriptionConfigs[subId].owner;\n    if (owner == address(0)) {\n      revert InvalidSubscription();\n    }\n    if (msg.sender != owner) {\n      revert MustBeSubOwner(owner);\n    }\n    _;\n  }\n\n  modifier nonReentrant() {\n    if (s_config.reentrancyLock) {\n      revert Reentrant();\n    }\n    _;\n  }\n\n  /**\n   * @notice The type and version of this contract\n   * @return Type and version string\n   */\n  function typeAndVersion() external pure virtual override returns (string memory) {\n    return \"VRFCoordinatorV2 1.0.0\";\n  }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"contracts/Raffle.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.6;\n\nimport \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\";\nimport \"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol\";\n\nerror Raffle__NotEnoughETHEntered();\nerror Raffle__TransferFailed();\n\ncontract Raffle is VRFConsumerBaseV2 {\n    /* State Variables */\n    uint256 private immutable i_entranceFee;\n    address payable[] private s_players;\n    VRFCoordinatorV2Interface private immutable i_VRFCoordinator;\n    bytes32 private immutable i_gasLane;\n    uint64 private immutable i_subscriptionId;\n    uint32 private immutable i_callBackGasLimit;\n    uint16 private constant REQUEST_CONFIRMATIONS = 3;\n    uint32 private constant NUM_WORDS = 1;\n\n    /* Lottery Variables */\n    address private s_recentWinner;\n\n    /* Events */\n    event RaffleEntered(address indexed player);\n    event RequestedRaffleWinner(uint256 indexed requestId);\n    event WinnerPicked(address indexed winner);\n\n    constructor(\n        address VRFCoordinatorV2,\n        uint256 entranceFee,\n        bytes32 gasLane,\n        uint64 subscriptionId,\n        uint32 callbackGasLimit\n    ) VRFConsumerBaseV2(VRFCoordinatorV2) {\n        i_entranceFee = entranceFee;\n        i_VRFCoordinator = VRFCoordinatorV2Interface(VRFCoordinatorV2);\n        i_gasLane = gasLane;\n        i_subscriptionId = subscriptionId;\n        i_callBackGasLimit = callbackGasLimit;\n    }\n\n    function enterRaffle() public payable {\n        // we could do:\n        // require(msg.value > i_entranceFee, \"Not enough ETH!\")\n\n        // but instead we'll do a custom error cause it's more gas efficient\n\n        if (msg.value < i_entranceFee) {\n            revert Raffle__NotEnoughETHEntered();\n        }\n\n        s_players.push(payable(msg.sender));\n\n        // Events\n        emit RaffleEntered(msg.sender);\n    }\n\n    function requestRandomWinner() external {\n        uint256 requestId = i_VRFCoordinator.requestRandomWords(\n            i_gasLane, // gasLane\n            i_subscriptionId,\n            REQUEST_CONFIRMATIONS,\n            i_callBackGasLimit,\n            NUM_WORDS\n        );\n        emit RequestedRaffleWinner(requestId);\n    }\n\n    function fulfillRandomWords(\n        uint256 /* requestId */,\n        uint256[] memory randomWords\n    ) internal override {\n        uint256 indexOfWinner = randomWords[0] % s_players.length;\n        address payable recentWinner = s_players[indexOfWinner];\n        s_recentWinner = recentWinner;\n        (bool success, ) = recentWinner.call{value: address(this).balance}(\"\");\n        // require(success)\n        if (!success) {\n            revert Raffle__TransferFailed();\n        }\n        emit WinnerPicked(recentWinner);\n    }\n\n    /* View / Pure Functions */\n\n    function getEntranceFee() public view returns (uint256) {\n        return i_entranceFee;\n    }\n\n    function getPlayer(uint256 index) public view returns (address) {\n        return s_players[index];\n    }\n\n    function getRecentWinner() public view returns (address) {\n        return s_recentWinner;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n  --> contracts/Raffle.sol:30:9:\n   |\n30 |         address VRFCoordinatorV2,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> @chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:15:1:\n   |\n15 | contract VRFCoordinatorV2 is VRF, ConfirmedOwner, TypeAndVersionInterface, VRFCoordinatorV2Interface, IERC677Receiver {\n   | ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":32226,"file":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol","message":"The shadowed declaration is here:","start":767}],"severity":"warning","sourceLocation":{"end":1001,"file":"contracts/Raffle.sol","start":977},"type":"Warning"},{"component":"general","errorCode":"5574","formattedMessage":"Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low \"runs\" value!), turning off revert strings, or using libraries.\n  --> @chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:15:1:\n   |\n15 | contract VRFCoordinatorV2 is VRF, ConfirmedOwner, TypeAndVersionInterface, VRFCoordinatorV2Interface, IERC677Receiver {\n   | ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low \"runs\" value!), turning off revert strings, or using libraries.","severity":"warning","sourceLocation":{"end":32226,"file":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol","start":767},"type":"Warning"}],"sources":{"@chainlink/contracts/src/v0.8/ChainSpecificUtil.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/ChainSpecificUtil.sol","exportedSymbols":{"ArbGasInfo":[897],"ArbSys":[1043],"ChainSpecificUtil":[352],"OVM_GasPriceOracle":[1275]},"id":353,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:0"},{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbSys.sol","file":"./vendor/@arbitrum/nitro-contracts/src/precompiles/ArbSys.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":353,"sourceUnit":1044,"src":"57:85:0","symbolAliases":[{"foreign":{"id":2,"name":"ArbSys","nodeType":"Identifier","overloadedDeclarations":[],"src":"65:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbGasInfo.sol","file":"./vendor/@arbitrum/nitro-contracts/src/precompiles/ArbGasInfo.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":353,"sourceUnit":898,"src":"143:93:0","symbolAliases":[{"foreign":{"id":4,"name":"ArbGasInfo","nodeType":"Identifier","overloadedDeclarations":[],"src":"151:10:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/@eth-optimism/contracts/v0.8.6/contracts/L2/predeploys/OVM_GasPriceOracle.sol","file":"./vendor/@eth-optimism/contracts/v0.8.6/contracts/L2/predeploys/OVM_GasPriceOracle.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":353,"sourceUnit":1276,"src":"237:122:0","symbolAliases":[{"foreign":{"id":6,"name":"OVM_GasPriceOracle","nodeType":"Identifier","overloadedDeclarations":[],"src":"245:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"361:260:0","text":"@dev A library that abstracts out opcodes that behave differently across chains.\n @dev The methods below return values that are pertinent to the given chain.\n @dev For instance, ChainSpecificUtil.getBlockNumber() returns L2 block number in L2 chains"},"fullyImplemented":true,"id":352,"linearizedBaseContracts":[352],"name":"ChainSpecificUtil","nameLocation":"629:17:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"708:187:0","text":"@dev ARBSYS_ADDR is the address of the ArbSys precompile on Arbitrum.\n @dev reference: https://github.com/OffchainLabs/nitro/blob/v2.0.14/contracts/src/precompiles/ArbSys.sol#L10"},"id":15,"mutability":"constant","name":"ARBSYS_ADDR","nameLocation":"923:11:0","nodeType":"VariableDeclaration","scope":352,"src":"898:90:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"898:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303634","id":13,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"945:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0000000000000000000000000000000000000064"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":12,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"937:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11,"name":"address","nodeType":"ElementaryTypeName","src":"937:7:0","typeDescriptions":{}}},"id":14,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"937:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"id":21,"mutability":"constant","name":"ARBSYS","nameLocation":"1016:6:0","nodeType":"VariableDeclaration","scope":352,"src":"992:52:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ArbSys_$1043","typeString":"contract ArbSys"},"typeName":{"id":17,"nodeType":"UserDefinedTypeName","pathNode":{"id":16,"name":"ArbSys","nodeType":"IdentifierPath","referencedDeclaration":1043,"src":"992:6:0"},"referencedDeclaration":1043,"src":"992:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_ArbSys_$1043","typeString":"contract ArbSys"}},"value":{"arguments":[{"id":19,"name":"ARBSYS_ADDR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"1032:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":18,"name":"ArbSys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"1025:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ArbSys_$1043_$","typeString":"type(contract ArbSys)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1025:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ArbSys_$1043","typeString":"contract ArbSys"}},"visibility":"private"},{"constant":true,"documentation":{"id":22,"nodeType":"StructuredDocumentation","src":"1049:195:0","text":"@dev ARBGAS_ADDR is the address of the ArbGasInfo precompile on Arbitrum.\n @dev reference: https://github.com/OffchainLabs/nitro/blob/v2.0.14/contracts/src/precompiles/ArbGasInfo.sol#L10"},"id":28,"mutability":"constant","name":"ARBGAS_ADDR","nameLocation":"1272:11:0","nodeType":"VariableDeclaration","scope":352,"src":"1247:90:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303643","id":26,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1294:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x000000000000000000000000000000000000006C"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":25,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1286:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":24,"name":"address","nodeType":"ElementaryTypeName","src":"1286:7:0","typeDescriptions":{}}},"id":27,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1286:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"id":34,"mutability":"constant","name":"ARBGAS","nameLocation":"1369:6:0","nodeType":"VariableDeclaration","scope":352,"src":"1341:60:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ArbGasInfo_$897","typeString":"contract ArbGasInfo"},"typeName":{"id":30,"nodeType":"UserDefinedTypeName","pathNode":{"id":29,"name":"ArbGasInfo","nodeType":"IdentifierPath","referencedDeclaration":897,"src":"1341:10:0"},"referencedDeclaration":897,"src":"1341:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_ArbGasInfo_$897","typeString":"contract ArbGasInfo"}},"value":{"arguments":[{"id":32,"name":"ARBGAS_ADDR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"1389:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":31,"name":"ArbGasInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"1378:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ArbGasInfo_$897_$","typeString":"type(contract ArbGasInfo)"}},"id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1378:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ArbGasInfo_$897","typeString":"contract ArbGasInfo"}},"visibility":"private"},{"constant":true,"id":37,"mutability":"constant","name":"ARB_MAINNET_CHAIN_ID","nameLocation":"1431:20:0","nodeType":"VariableDeclaration","scope":352,"src":"1406:53:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3432313631","id":36,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1454:5:0","typeDescriptions":{"typeIdentifier":"t_rational_42161_by_1","typeString":"int_const 42161"},"value":"42161"},"visibility":"private"},{"constant":true,"id":40,"mutability":"constant","name":"ARB_GOERLI_TESTNET_CHAIN_ID","nameLocation":"1488:27:0","nodeType":"VariableDeclaration","scope":352,"src":"1463:61:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"1463:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343231363133","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1518:6:0","typeDescriptions":{"typeIdentifier":"t_rational_421613_by_1","typeString":"int_const 421613"},"value":"421613"},"visibility":"private"},{"constant":true,"id":43,"mutability":"constant","name":"ARB_SEPOLIA_TESTNET_CHAIN_ID","nameLocation":"1553:28:0","nodeType":"VariableDeclaration","scope":352,"src":"1528:62:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343231363134","id":42,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1584:6:0","typeDescriptions":{"typeIdentifier":"t_rational_421614_by_1","typeString":"int_const 421614"},"value":"421614"},"visibility":"private"},{"constant":true,"documentation":{"id":44,"nodeType":"StructuredDocumentation","src":"1706:79:0","text":"@dev L1_FEE_DATA_PADDING includes 35 bytes for L1 data padding for Optimism"},"id":47,"mutability":"constant","name":"L1_FEE_DATA_PADDING","nameLocation":"1812:19:0","nodeType":"VariableDeclaration","scope":352,"src":"1788:124:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":45,"name":"bytes","nodeType":"ElementaryTypeName","src":"1788:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":{"hexValue":"307866666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":46,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1838:74:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_19f77b6c415d9fd2677460d12a9b7c6fd144313154fab1115e5aafecb3ff2ff3","typeString":"literal_string \"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\""},"value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},"visibility":"internal"},{"constant":true,"documentation":{"id":48,"nodeType":"StructuredDocumentation","src":"1916:216:0","text":"@dev OVM_GASPRICEORACLE_ADDR is the address of the OVM_GasPriceOracle precompile on Optimism.\n @dev reference: https://community.optimism.io/docs/developers/build/transaction-fees/#estimating-the-l1-data-fee"},"id":54,"mutability":"constant","name":"OVM_GASPRICEORACLE_ADDR","nameLocation":"2160:23:0","nodeType":"VariableDeclaration","scope":352,"src":"2135:102:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":49,"name":"address","nodeType":"ElementaryTypeName","src":"2135:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"307834323030303030303030303030303030303030303030303030303030303030303030303030303046","id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2194:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x420000000000000000000000000000000000000F"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":51,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2186:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"2186:7:0","typeDescriptions":{}}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2186:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"id":60,"mutability":"constant","name":"OVM_GASPRICEORACLE","nameLocation":"2277:18:0","nodeType":"VariableDeclaration","scope":352,"src":"2241:100:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_OVM_GasPriceOracle_$1275","typeString":"contract OVM_GasPriceOracle"},"typeName":{"id":56,"nodeType":"UserDefinedTypeName","pathNode":{"id":55,"name":"OVM_GasPriceOracle","nodeType":"IdentifierPath","referencedDeclaration":1275,"src":"2241:18:0"},"referencedDeclaration":1275,"src":"2241:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_OVM_GasPriceOracle_$1275","typeString":"contract OVM_GasPriceOracle"}},"value":{"arguments":[{"id":58,"name":"OVM_GASPRICEORACLE_ADDR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"2317:23:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":57,"name":"OVM_GasPriceOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"2298:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_OVM_GasPriceOracle_$1275_$","typeString":"type(contract OVM_GasPriceOracle)"}},"id":59,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2298:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_OVM_GasPriceOracle_$1275","typeString":"contract OVM_GasPriceOracle"}},"visibility":"private"},{"constant":true,"id":63,"mutability":"constant","name":"OP_MAINNET_CHAIN_ID","nameLocation":"2371:19:0","nodeType":"VariableDeclaration","scope":352,"src":"2346:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61,"name":"uint256","nodeType":"ElementaryTypeName","src":"2346:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130","id":62,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2393:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"visibility":"private"},{"constant":true,"id":66,"mutability":"constant","name":"OP_GOERLI_CHAIN_ID","nameLocation":"2424:18:0","nodeType":"VariableDeclaration","scope":352,"src":"2399:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":64,"name":"uint256","nodeType":"ElementaryTypeName","src":"2399:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343230","id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2445:3:0","typeDescriptions":{"typeIdentifier":"t_rational_420_by_1","typeString":"int_const 420"},"value":"420"},"visibility":"private"},{"constant":true,"id":69,"mutability":"constant","name":"OP_SEPOLIA_CHAIN_ID","nameLocation":"2477:19:0","nodeType":"VariableDeclaration","scope":352,"src":"2452:55:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":67,"name":"uint256","nodeType":"ElementaryTypeName","src":"2452:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3131313535343230","id":68,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2499:8:0","typeDescriptions":{"typeIdentifier":"t_rational_11155420_by_1","typeString":"int_const 11155420"},"value":"11155420"},"visibility":"private"},{"constant":true,"documentation":{"id":70,"nodeType":"StructuredDocumentation","src":"2512:91:0","text":"@dev Base is a OP stack based rollup and follows the same L1 pricing logic as Optimism."},"id":73,"mutability":"constant","name":"BASE_MAINNET_CHAIN_ID","nameLocation":"2631:21:0","nodeType":"VariableDeclaration","scope":352,"src":"2606:53:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":71,"name":"uint256","nodeType":"ElementaryTypeName","src":"2606:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"38343533","id":72,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2655:4:0","typeDescriptions":{"typeIdentifier":"t_rational_8453_by_1","typeString":"int_const 8453"},"value":"8453"},"visibility":"private"},{"constant":true,"id":76,"mutability":"constant","name":"BASE_GOERLI_CHAIN_ID","nameLocation":"2688:20:0","nodeType":"VariableDeclaration","scope":352,"src":"2663:53:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":74,"name":"uint256","nodeType":"ElementaryTypeName","src":"2663:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3834353331","id":75,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2711:5:0","typeDescriptions":{"typeIdentifier":"t_rational_84531_by_1","typeString":"int_const 84531"},"value":"84531"},"visibility":"private"},{"body":{"id":119,"nodeType":"Block","src":"3255:285:0","statements":[{"assignments":[85],"declarations":[{"constant":false,"id":85,"mutability":"mutable","name":"chainid","nameLocation":"3269:7:0","nodeType":"VariableDeclaration","scope":119,"src":"3261:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":84,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":88,"initialValue":{"expression":{"id":86,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3279:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":87,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"3279:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3261:31:0"},{"condition":{"arguments":[{"id":90,"name":"chainid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"3321:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":89,"name":"_isArbitrumChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"3302:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) pure returns (bool)"}},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3302:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":114,"nodeType":"IfStatement","src":"3298:203:0","trueBody":{"id":113,"nodeType":"Block","src":"3331:170:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":98,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":92,"name":"_getBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"3344:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":93,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3344:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":94,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3364:11:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"3344:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":96,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3343:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"323536","id":97,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3379:3:0","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"3343:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":99,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3386:11:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":100,"name":"_getBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"3401:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3401:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3386:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3343:75:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":107,"nodeType":"IfStatement","src":"3339:109:0","trueBody":{"id":106,"nodeType":"Block","src":"3420:28:0","statements":[{"expression":{"hexValue":"","id":104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3437:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":83,"id":105,"nodeType":"Return","src":"3430:9:0"}]}},{"expression":{"arguments":[{"id":110,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3482:11:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"id":108,"name":"ARBSYS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"3462:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_ArbSys_$1043","typeString":"contract ArbSys"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"arbBlockHash","nodeType":"MemberAccess","referencedDeclaration":914,"src":"3462:19:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) view external returns (bytes32)"}},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3462:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":83,"id":112,"nodeType":"Return","src":"3455:39:0"}]}},{"expression":{"arguments":[{"id":116,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3523:11:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":115,"name":"blockhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-5,"src":"3513:9:0","typeDescriptions":{"typeIdentifier":"t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) view returns (bytes32)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3513:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":83,"id":118,"nodeType":"Return","src":"3506:29:0"}]},"documentation":{"id":77,"nodeType":"StructuredDocumentation","src":"2776:401:0","text":" @notice Returns the blockhash for the given blockNumber.\n @notice If the blockNumber is more than 256 blocks in the past, returns the empty string.\n @notice When on a known Arbitrum chain, it uses ArbSys.arbBlockHash to get the blockhash.\n @notice Otherwise, it uses the blockhash opcode.\n @notice Note that the blockhash opcode will return the L2 blockhash on Optimism."},"id":120,"implemented":true,"kind":"function","modifiers":[],"name":"_getBlockhash","nameLocation":"3189:13:0","nodeType":"FunctionDefinition","parameters":{"id":80,"nodeType":"ParameterList","parameters":[{"constant":false,"id":79,"mutability":"mutable","name":"blockNumber","nameLocation":"3210:11:0","nodeType":"VariableDeclaration","scope":120,"src":"3203:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":78,"name":"uint64","nodeType":"ElementaryTypeName","src":"3203:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3202:20:0"},"returnParameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":120,"src":"3246:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":81,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3246:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3245:9:0"},"scope":352,"src":"3180:360:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":143,"nodeType":"Block","src":"3924:150:0","statements":[{"assignments":[127],"declarations":[{"constant":false,"id":127,"mutability":"mutable","name":"chainid","nameLocation":"3938:7:0","nodeType":"VariableDeclaration","scope":143,"src":"3930:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":126,"name":"uint256","nodeType":"ElementaryTypeName","src":"3930:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":130,"initialValue":{"expression":{"id":128,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3948:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"3948:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3930:31:0"},{"condition":{"arguments":[{"id":132,"name":"chainid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"3990:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":131,"name":"_isArbitrumChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"3971:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) pure returns (bool)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3971:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":139,"nodeType":"IfStatement","src":"3967:78:0","trueBody":{"id":138,"nodeType":"Block","src":"4000:45:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":134,"name":"ARBSYS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"4015:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_ArbSys_$1043","typeString":"contract ArbSys"}},"id":135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"arbBlockNumber","nodeType":"MemberAccess","referencedDeclaration":906,"src":"4015:21:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4015:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":125,"id":137,"nodeType":"Return","src":"4008:30:0"}]}},{"expression":{"expression":{"id":140,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4057:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"4057:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":125,"id":142,"nodeType":"Return","src":"4050:19:0"}]},"documentation":{"id":121,"nodeType":"StructuredDocumentation","src":"3544:318:0","text":" @notice Returns the block number of the current block.\n @notice When on a known Arbitrum chain, it uses ArbSys.arbBlockNumber to get the block number.\n @notice Otherwise, it uses the block.number opcode.\n @notice Note that the block.number opcode will return the L2 block number on Optimism."},"id":144,"implemented":true,"kind":"function","modifiers":[],"name":"_getBlockNumber","nameLocation":"3874:15:0","nodeType":"FunctionDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[],"src":"3889:2:0"},"returnParameters":{"id":125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":144,"src":"3915:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":123,"name":"uint256","nodeType":"ElementaryTypeName","src":"3915:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3914:9:0"},"scope":352,"src":"3865:209:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":183,"nodeType":"Block","src":"4649:281:0","statements":[{"assignments":[153],"declarations":[{"constant":false,"id":153,"mutability":"mutable","name":"chainid","nameLocation":"4663:7:0","nodeType":"VariableDeclaration","scope":183,"src":"4655:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":152,"name":"uint256","nodeType":"ElementaryTypeName","src":"4655:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":156,"initialValue":{"expression":{"id":154,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4673:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"4673:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4655:31:0"},{"condition":{"arguments":[{"id":158,"name":"chainid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4715:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":157,"name":"_isArbitrumChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4696:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) pure returns (bool)"}},"id":159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4696:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"arguments":[{"id":166,"name":"chainid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4806:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":165,"name":"_isOptimismChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"4787:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) pure returns (bool)"}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4787:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":179,"nodeType":"IfStatement","src":"4783:129:0","trueBody":{"id":178,"nodeType":"Block","src":"4816:96:0","statements":[{"expression":{"arguments":[{"arguments":[{"id":173,"name":"txCallData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"4872:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":174,"name":"L1_FEE_DATA_PADDING","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"4884:19:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4859:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":170,"name":"bytes","nodeType":"ElementaryTypeName","src":"4859:5:0","typeDescriptions":{}}},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"concat","nodeType":"MemberAccess","src":"4859:12:0","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4859:45:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":168,"name":"OVM_GASPRICEORACLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"4831:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_OVM_GasPriceOracle_$1275","typeString":"contract OVM_GasPriceOracle"}},"id":169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getL1Fee","nodeType":"MemberAccess","referencedDeclaration":1219,"src":"4831:27:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory) view external returns (uint256)"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4831:74:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":151,"id":177,"nodeType":"Return","src":"4824:81:0"}]}},"id":180,"nodeType":"IfStatement","src":"4692:220:0","trueBody":{"id":164,"nodeType":"Block","src":"4725:52:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":160,"name":"ARBGAS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34,"src":"4740:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_ArbGasInfo_$897","typeString":"contract ArbGasInfo"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getCurrentTxL1GasFees","nodeType":"MemberAccess","referencedDeclaration":824,"src":"4740:28:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4740:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":151,"id":163,"nodeType":"Return","src":"4733:37:0"}]}},{"expression":{"hexValue":"30","id":181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4924:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":151,"id":182,"nodeType":"Return","src":"4917:8:0"}]},"documentation":{"id":145,"nodeType":"StructuredDocumentation","src":"4078:479:0","text":" @notice Returns the L1 fees that will be paid for the current transaction, given any calldata\n @notice for the current transaction.\n @notice When on a known Arbitrum chain, it uses ArbGas.getCurrentTxL1GasFees to get the fees.\n @notice On Arbitrum, the provided calldata is not used to calculate the fees.\n @notice On Optimism, the provided calldata is passed to the OVM_GasPriceOracle predeploy\n @notice and getL1Fee is called to get the fees."},"id":184,"implemented":true,"kind":"function","modifiers":[],"name":"_getCurrentTxL1GasFees","nameLocation":"4569:22:0","nodeType":"FunctionDefinition","parameters":{"id":148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":147,"mutability":"mutable","name":"txCallData","nameLocation":"4605:10:0","nodeType":"VariableDeclaration","scope":184,"src":"4592:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":146,"name":"bytes","nodeType":"ElementaryTypeName","src":"4592:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4591:25:0"},"returnParameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":184,"src":"4640:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":149,"name":"uint256","nodeType":"ElementaryTypeName","src":"4640:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4639:9:0"},"scope":352,"src":"4560:370:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":226,"nodeType":"Block","src":"5143:505:0","statements":[{"assignments":[193],"declarations":[{"constant":false,"id":193,"mutability":"mutable","name":"chainid","nameLocation":"5157:7:0","nodeType":"VariableDeclaration","scope":226,"src":"5149:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":192,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":196,"initialValue":{"expression":{"id":194,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5167:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"5167:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5149:31:0"},{"condition":{"arguments":[{"id":198,"name":"chainid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5209:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":197,"name":"_isArbitrumChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"5190:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) pure returns (bool)"}},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5190:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"arguments":[{"id":215,"name":"chainid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5552:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":214,"name":"_isOptimismChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"5533:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) pure returns (bool)"}},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5533:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":222,"nodeType":"IfStatement","src":"5529:101:0","trueBody":{"id":221,"nodeType":"Block","src":"5562:68:0","statements":[{"expression":{"arguments":[{"id":218,"name":"calldataSizeBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"5605:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":217,"name":"_calculateOptimismL1DataFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"5577:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5577:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":191,"id":220,"nodeType":"Return","src":"5570:53:0"}]}},"id":223,"nodeType":"IfStatement","src":"5186:444:0","trueBody":{"id":213,"nodeType":"Block","src":"5219:304:0","statements":[{"assignments":[null,201,null,null,null,null],"declarations":[null,{"constant":false,"id":201,"mutability":"mutable","name":"l1PricePerByte","nameLocation":"5238:14:0","nodeType":"VariableDeclaration","scope":213,"src":"5230:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":200,"name":"uint256","nodeType":"ElementaryTypeName","src":"5230:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null,null,null,null],"id":205,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":202,"name":"ARBGAS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34,"src":"5264:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_ArbGasInfo_$897","typeString":"contract ArbGasInfo"}},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPricesInWei","nodeType":"MemberAccess","referencedDeclaration":750,"src":"5264:21:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function () view external returns (uint256,uint256,uint256,uint256,uint256,uint256)"}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5264:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256,uint256,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5227:60:0"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":206,"name":"l1PricePerByte","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"5474:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":207,"name":"calldataSizeBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"5492:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"313430","id":208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5512:3:0","typeDescriptions":{"typeIdentifier":"t_rational_140_by_1","typeString":"int_const 140"},"value":"140"},"src":"5492:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":210,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5491:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5474:42:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":191,"id":212,"nodeType":"Return","src":"5467:49:0"}]}},{"expression":{"hexValue":"30","id":224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5642:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":191,"id":225,"nodeType":"Return","src":"5635:8:0"}]},"documentation":{"id":185,"nodeType":"StructuredDocumentation","src":"4934:116:0","text":" @notice Returns the gas cost in wei of calldataSizeBytes of calldata being posted\n @notice to L1."},"id":227,"implemented":true,"kind":"function","modifiers":[],"name":"_getL1CalldataGasCost","nameLocation":"5062:21:0","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"calldataSizeBytes","nameLocation":"5092:17:0","nodeType":"VariableDeclaration","scope":227,"src":"5084:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"5084:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5083:27:0"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":227,"src":"5134:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":189,"name":"uint256","nodeType":"ElementaryTypeName","src":"5134:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5133:9:0"},"scope":352,"src":"5053:595:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":247,"nodeType":"Block","src":"5825:152:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":235,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"5844:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":236,"name":"ARB_MAINNET_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"5855:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5844:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":238,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"5885:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":239,"name":"ARB_GOERLI_TESTNET_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"5896:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5885:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5844:79:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":242,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"5933:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":243,"name":"ARB_SEPOLIA_TESTNET_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"5944:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5933:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5844:128:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":234,"id":246,"nodeType":"Return","src":"5831:141:0"}]},"documentation":{"id":228,"nodeType":"StructuredDocumentation","src":"5652:96:0","text":" @notice Return true if and only if the provided chain ID is an Arbitrum chain ID."},"id":248,"implemented":true,"kind":"function","modifiers":[],"name":"_isArbitrumChainId","nameLocation":"5760:18:0","nodeType":"FunctionDefinition","parameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"chainId","nameLocation":"5787:7:0","nodeType":"VariableDeclaration","scope":248,"src":"5779:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"5779:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5778:17:0"},"returnParameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":248,"src":"5819:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":232,"name":"bool","nodeType":"ElementaryTypeName","src":"5819:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5818:6:0"},"scope":352,"src":"5751:226:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":276,"nodeType":"Block","src":"6227:216:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":256,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"6246:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":257,"name":"OP_MAINNET_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"6257:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6246:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":259,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"6286:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":260,"name":"OP_GOERLI_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"6297:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6286:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6246:69:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"6325:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":264,"name":"OP_SEPOLIA_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"6336:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6325:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6246:109:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":267,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"6365:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":268,"name":"BASE_MAINNET_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"6376:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6365:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6246:151:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":271,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"6407:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":272,"name":"BASE_GOERLI_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":76,"src":"6418:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6407:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6246:192:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":255,"id":275,"nodeType":"Return","src":"6233:205:0"}]},"documentation":{"id":249,"nodeType":"StructuredDocumentation","src":"5981:169:0","text":" @notice Return true if and only if the provided chain ID is an Optimism chain ID.\n @notice Note that optimism chain id's are also OP stack chain id's."},"id":277,"implemented":true,"kind":"function","modifiers":[],"name":"_isOptimismChainId","nameLocation":"6162:18:0","nodeType":"FunctionDefinition","parameters":{"id":252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":251,"mutability":"mutable","name":"chainId","nameLocation":"6189:7:0","nodeType":"VariableDeclaration","scope":277,"src":"6181:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":250,"name":"uint256","nodeType":"ElementaryTypeName","src":"6181:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6180:17:0"},"returnParameters":{"id":255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":277,"src":"6221:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":253,"name":"bool","nodeType":"ElementaryTypeName","src":"6221:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6220:6:0"},"scope":352,"src":"6153:290:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":350,"nodeType":"Block","src":"6543:1112:0","statements":[{"assignments":[285],"declarations":[{"constant":false,"id":285,"mutability":"mutable","name":"l1BaseFeeWei","nameLocation":"6887:12:0","nodeType":"VariableDeclaration","scope":350,"src":"6879:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":284,"name":"uint256","nodeType":"ElementaryTypeName","src":"6879:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":289,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":286,"name":"OVM_GASPRICEORACLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"6902:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_OVM_GasPriceOracle_$1275","typeString":"contract OVM_GasPriceOracle"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"l1BaseFee","nodeType":"MemberAccess","referencedDeclaration":1054,"src":"6902:28:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6902:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6879:53:0"},{"assignments":[291],"declarations":[{"constant":false,"id":291,"mutability":"mutable","name":"numZeroBytes","nameLocation":"6946:12:0","nodeType":"VariableDeclaration","scope":350,"src":"6938:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":290,"name":"uint256","nodeType":"ElementaryTypeName","src":"6938:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":293,"initialValue":{"hexValue":"30","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6961:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6938:24:0"},{"assignments":[295],"declarations":[{"constant":false,"id":295,"mutability":"mutable","name":"numNonzeroBytes","nameLocation":"6976:15:0","nodeType":"VariableDeclaration","scope":350,"src":"6968:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":294,"name":"uint256","nodeType":"ElementaryTypeName","src":"6968:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":299,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":296,"name":"calldataSizeBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"6994:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":297,"name":"numZeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"7014:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6994:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6968:58:0"},{"assignments":[301],"declarations":[{"constant":false,"id":301,"mutability":"mutable","name":"txDataGas","nameLocation":"7040:9:0","nodeType":"VariableDeclaration","scope":350,"src":"7032:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":300,"name":"uint256","nodeType":"ElementaryTypeName","src":"7032:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":309,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":302,"name":"numZeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"7052:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7067:1:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"7052:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":305,"name":"numNonzeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"7071:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7089:2:0","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"7071:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7052:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7032:59:0"},{"assignments":[311],"declarations":[{"constant":false,"id":311,"mutability":"mutable","name":"fixedOverhead","nameLocation":"7105:13:0","nodeType":"VariableDeclaration","scope":350,"src":"7097:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":310,"name":"uint256","nodeType":"ElementaryTypeName","src":"7097:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":315,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":312,"name":"OVM_GASPRICEORACLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"7121:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_OVM_GasPriceOracle_$1275","typeString":"contract OVM_GasPriceOracle"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"overhead","nodeType":"MemberAccess","referencedDeclaration":1056,"src":"7121:27:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7121:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7097:53:0"},{"assignments":[317],"declarations":[{"constant":false,"id":317,"mutability":"mutable","name":"scalar","nameLocation":"7398:6:0","nodeType":"VariableDeclaration","scope":350,"src":"7390:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":316,"name":"uint256","nodeType":"ElementaryTypeName","src":"7390:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":321,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":318,"name":"OVM_GASPRICEORACLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"7407:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_OVM_GasPriceOracle_$1275","typeString":"contract OVM_GasPriceOracle"}},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"scalar","nodeType":"MemberAccess","referencedDeclaration":1058,"src":"7407:25:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7407:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7390:44:0"},{"assignments":[323],"declarations":[{"constant":false,"id":323,"mutability":"mutable","name":"scalarDecimals","nameLocation":"7448:14:0","nodeType":"VariableDeclaration","scope":350,"src":"7440:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":322,"name":"uint256","nodeType":"ElementaryTypeName","src":"7440:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":327,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":324,"name":"OVM_GASPRICEORACLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"7465:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_OVM_GasPriceOracle_$1275","typeString":"contract OVM_GasPriceOracle"}},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1060,"src":"7465:27:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7465:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7440:54:0"},{"assignments":[329],"declarations":[{"constant":false,"id":329,"mutability":"mutable","name":"divisor","nameLocation":"7508:7:0","nodeType":"VariableDeclaration","scope":350,"src":"7500:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":328,"name":"uint256","nodeType":"ElementaryTypeName","src":"7500:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":333,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7518:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":331,"name":"scalarDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"7524:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7518:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7500:38:0"},{"assignments":[335],"declarations":[{"constant":false,"id":335,"mutability":"mutable","name":"l1DataFee","nameLocation":"7553:9:0","nodeType":"VariableDeclaration","scope":350,"src":"7545:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":334,"name":"uint256","nodeType":"ElementaryTypeName","src":"7545:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":347,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":336,"name":"l1BaseFeeWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"7566:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":337,"name":"txDataGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"7582:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":338,"name":"fixedOverhead","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":311,"src":"7594:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7582:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":340,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7581:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7566:42:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":342,"name":"scalar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"7611:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7566:51:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":344,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7565:53:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":345,"name":"divisor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"7621:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7565:63:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7545:83:0"},{"expression":{"id":348,"name":"l1DataFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"7641:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":283,"id":349,"nodeType":"Return","src":"7634:16:0"}]},"id":351,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateOptimismL1DataFee","nameLocation":"6456:27:0","nodeType":"FunctionDefinition","parameters":{"id":280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"calldataSizeBytes","nameLocation":"6492:17:0","nodeType":"VariableDeclaration","scope":351,"src":"6484:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"6484:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6483:27:0"},"returnParameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":351,"src":"6534:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":281,"name":"uint256","nodeType":"ElementaryTypeName","src":"6534:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6533:9:0"},"scope":352,"src":"6447:1208:0","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":353,"src":"621:7036:0","usedErrors":[]}],"src":"32:7626:0"},"id":0},"@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol","exportedSymbols":{"TypeAndVersionInterface":[360]},"id":361,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":354,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":360,"linearizedBaseContracts":[360],"name":"TypeAndVersionInterface","nameLocation":"75:23:1","nodeType":"ContractDefinition","nodes":[{"functionSelector":"181f5a77","id":359,"implemented":false,"kind":"function","modifiers":[],"name":"typeAndVersion","nameLocation":"112:14:1","nodeType":"FunctionDefinition","parameters":{"id":355,"nodeType":"ParameterList","parameters":[],"src":"126:2:1"},"returnParameters":{"id":358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":359,"src":"160:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":356,"name":"string","nodeType":"ElementaryTypeName","src":"160:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"159:15:1"},"scope":360,"src":"103:72:1","stateMutability":"pure","virtual":true,"visibility":"external"}],"scope":361,"src":"57:120:1","usedErrors":[]}],"src":"32:146:1"},"id":1},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol","exportedSymbols":{"ConfirmedOwner":[381],"ConfirmedOwnerWithProposal":[544]},"id":382,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":362,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:2"},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol","file":"./ConfirmedOwnerWithProposal.sol","id":364,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":382,"sourceUnit":545,"src":"57:76:2","symbolAliases":[{"foreign":{"id":363,"name":"ConfirmedOwnerWithProposal","nodeType":"Identifier","overloadedDeclarations":[],"src":"65:26:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":366,"name":"ConfirmedOwnerWithProposal","nodeType":"IdentifierPath","referencedDeclaration":544,"src":"267:26:2"},"id":367,"nodeType":"InheritanceSpecifier","src":"267:26:2"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":365,"nodeType":"StructuredDocumentation","src":"135:105:2","text":"@title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."},"fullyImplemented":true,"id":381,"linearizedBaseContracts":[381,544,618],"name":"ConfirmedOwner","nameLocation":"249:14:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":379,"nodeType":"Block","src":"377:2:2","statements":[]},"id":380,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":372,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"355:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"373:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"365:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"365:7:2","typeDescriptions":{}}},"id":376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"365:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":377,"kind":"baseConstructorSpecifier","modifierName":{"id":371,"name":"ConfirmedOwnerWithProposal","nodeType":"IdentifierPath","referencedDeclaration":544,"src":"328:26:2"},"nodeType":"ModifierInvocation","src":"328:48:2"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":369,"mutability":"mutable","name":"newOwner","nameLocation":"318:8:2","nodeType":"VariableDeclaration","scope":380,"src":"310:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":368,"name":"address","nodeType":"ElementaryTypeName","src":"310:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"309:18:2"},"returnParameters":{"id":378,"nodeType":"ParameterList","parameters":[],"src":"377:0:2"},"scope":381,"src":"298:81:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":382,"src":"240:141:2","usedErrors":[]}],"src":"32:350:2"},"id":2},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol","exportedSymbols":{"ConfirmedOwnerWithProposal":[544],"IOwnable":[618]},"id":545,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":383,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:3"},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol","file":"../interfaces/IOwnable.sol","id":385,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":545,"sourceUnit":619,"src":"57:52:3","symbolAliases":[{"foreign":{"id":384,"name":"IOwnable","nodeType":"Identifier","overloadedDeclarations":[],"src":"65:8:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":387,"name":"IOwnable","nodeType":"IdentifierPath","referencedDeclaration":618,"src":"255:8:3"},"id":388,"nodeType":"InheritanceSpecifier","src":"255:8:3"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":386,"nodeType":"StructuredDocumentation","src":"111:105:3","text":"@title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."},"fullyImplemented":true,"id":544,"linearizedBaseContracts":[544,618],"name":"ConfirmedOwnerWithProposal","nameLocation":"225:26:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":390,"mutability":"mutable","name":"s_owner","nameLocation":"284:7:3","nodeType":"VariableDeclaration","scope":544,"src":"268:23:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"268:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":392,"mutability":"mutable","name":"s_pendingOwner","nameLocation":"311:14:3","nodeType":"VariableDeclaration","scope":544,"src":"295:30:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":391,"name":"address","nodeType":"ElementaryTypeName","src":"295:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":398,"name":"OwnershipTransferRequested","nameLocation":"336:26:3","nodeType":"EventDefinition","parameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"379:4:3","nodeType":"VariableDeclaration","scope":398,"src":"363:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":393,"name":"address","nodeType":"ElementaryTypeName","src":"363:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":396,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"401:2:3","nodeType":"VariableDeclaration","scope":398,"src":"385:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"385:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"362:42:3"},"src":"330:75:3"},{"anonymous":false,"id":404,"name":"OwnershipTransferred","nameLocation":"414:20:3","nodeType":"EventDefinition","parameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"451:4:3","nodeType":"VariableDeclaration","scope":404,"src":"435:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"435:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":402,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"473:2:3","nodeType":"VariableDeclaration","scope":404,"src":"457:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":401,"name":"address","nodeType":"ElementaryTypeName","src":"457:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"434:42:3"},"src":"408:69:3"},{"body":{"id":437,"nodeType":"Block","src":"533:226:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":412,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"594:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"614:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"606:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"606:7:3","typeDescriptions":{}}},"id":416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"606:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"594:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"618:26:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","typeString":"literal_string \"Cannot set owner to zero\""},"value":"Cannot set owner to zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","typeString":"literal_string \"Cannot set owner to zero\""}],"id":411,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"586:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"586:59:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":420,"nodeType":"ExpressionStatement","src":"586:59:3"},{"expression":{"id":423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":421,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"652:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":422,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"662:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"652:18:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":424,"nodeType":"ExpressionStatement","src":"652:18:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":425,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"680:12:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"704:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"696:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":426,"name":"address","nodeType":"ElementaryTypeName","src":"696:7:3","typeDescriptions":{}}},"id":429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"696:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"680:26:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":436,"nodeType":"IfStatement","src":"676:79:3","trueBody":{"id":435,"nodeType":"Block","src":"708:47:3","statements":[{"expression":{"arguments":[{"id":432,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"735:12:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":431,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"716:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"716:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":434,"nodeType":"ExpressionStatement","src":"716:32:3"}]}}]},"id":438,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"newOwner","nameLocation":"501:8:3","nodeType":"VariableDeclaration","scope":438,"src":"493:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"493:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":408,"mutability":"mutable","name":"pendingOwner","nameLocation":"519:12:3","nodeType":"VariableDeclaration","scope":438,"src":"511:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":407,"name":"address","nodeType":"ElementaryTypeName","src":"511:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"492:40:3"},"returnParameters":{"id":410,"nodeType":"ParameterList","parameters":[],"src":"533:0:3"},"scope":544,"src":"481:278:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[614],"body":{"id":451,"nodeType":"Block","src":"908:33:3","statements":[{"expression":{"arguments":[{"id":448,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"933:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":447,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"914:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"914:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":450,"nodeType":"ExpressionStatement","src":"914:22:3"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"763:77:3","text":"@notice Allows an owner to begin transferring ownership to a new address."},"functionSelector":"f2fde38b","id":452,"implemented":true,"kind":"function","modifiers":[{"id":445,"kind":"modifierInvocation","modifierName":{"id":444,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":543,"src":"898:9:3"},"nodeType":"ModifierInvocation","src":"898:9:3"}],"name":"transferOwnership","nameLocation":"852:17:3","nodeType":"FunctionDefinition","overrides":{"id":443,"nodeType":"OverrideSpecifier","overrides":[],"src":"889:8:3"},"parameters":{"id":442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"to","nameLocation":"878:2:3","nodeType":"VariableDeclaration","scope":452,"src":"870:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":440,"name":"address","nodeType":"ElementaryTypeName","src":"870:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"869:12:3"},"returnParameters":{"id":446,"nodeType":"ParameterList","parameters":[],"src":"908:0:3"},"scope":544,"src":"843:98:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[617],"body":{"id":487,"nodeType":"Block","src":"1067:267:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":458,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1128:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1128:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":460,"name":"s_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"1142:14:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1128:28:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","id":462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1158:24:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","typeString":"literal_string \"Must be proposed owner\""},"value":"Must be proposed owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","typeString":"literal_string \"Must be proposed owner\""}],"id":457,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1120:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1120:63:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":464,"nodeType":"ExpressionStatement","src":"1120:63:3"},{"assignments":[466],"declarations":[{"constant":false,"id":466,"mutability":"mutable","name":"oldOwner","nameLocation":"1198:8:3","nodeType":"VariableDeclaration","scope":487,"src":"1190:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":465,"name":"address","nodeType":"ElementaryTypeName","src":"1190:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":468,"initialValue":{"id":467,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"1209:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1190:26:3"},{"expression":{"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":469,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"1222:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":470,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1232:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1232:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1222:20:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":473,"nodeType":"ExpressionStatement","src":"1222:20:3"},{"expression":{"id":479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":474,"name":"s_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"1248:14:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1273:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1265:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":475,"name":"address","nodeType":"ElementaryTypeName","src":"1265:7:3","typeDescriptions":{}}},"id":478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1265:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1248:27:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":480,"nodeType":"ExpressionStatement","src":"1248:27:3"},{"eventCall":{"arguments":[{"id":482,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"1308:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":483,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1318:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1318:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":481,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"1287:20:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1287:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":486,"nodeType":"EmitStatement","src":"1282:47:3"}]},"documentation":{"id":453,"nodeType":"StructuredDocumentation","src":"945:74:3","text":"@notice Allows an ownership transfer to be completed by the recipient."},"functionSelector":"79ba5097","id":488,"implemented":true,"kind":"function","modifiers":[],"name":"acceptOwnership","nameLocation":"1031:15:3","nodeType":"FunctionDefinition","overrides":{"id":455,"nodeType":"OverrideSpecifier","overrides":[],"src":"1058:8:3"},"parameters":{"id":454,"nodeType":"ParameterList","parameters":[],"src":"1046:2:3"},"returnParameters":{"id":456,"nodeType":"ParameterList","parameters":[],"src":"1067:0:3"},"scope":544,"src":"1022:312:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[609],"body":{"id":497,"nodeType":"Block","src":"1430:25:3","statements":[{"expression":{"id":495,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"1443:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":494,"id":496,"nodeType":"Return","src":"1436:14:3"}]},"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"1338:33:3","text":"@notice Get the current owner"},"functionSelector":"8da5cb5b","id":498,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1383:5:3","nodeType":"FunctionDefinition","overrides":{"id":491,"nodeType":"OverrideSpecifier","overrides":[],"src":"1403:8:3"},"parameters":{"id":490,"nodeType":"ParameterList","parameters":[],"src":"1388:2:3"},"returnParameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":498,"src":"1421:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"1421:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1420:9:3"},"scope":544,"src":"1374:81:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":521,"nodeType":"Block","src":"1576:187:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":505,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"1637:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":506,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1643:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1643:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1637:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1655:25:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","typeString":"literal_string \"Cannot transfer to self\""},"value":"Cannot transfer to self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","typeString":"literal_string \"Cannot transfer to self\""}],"id":504,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1629:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1629:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":511,"nodeType":"ExpressionStatement","src":"1629:52:3"},{"expression":{"id":514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":512,"name":"s_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"1688:14:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":513,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"1705:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1688:19:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":515,"nodeType":"ExpressionStatement","src":"1688:19:3"},{"eventCall":{"arguments":[{"id":517,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"1746:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":518,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"1755:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":516,"name":"OwnershipTransferRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"1719:26:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1719:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":520,"nodeType":"EmitStatement","src":"1714:44:3"}]},"documentation":{"id":499,"nodeType":"StructuredDocumentation","src":"1459:66:3","text":"@notice validate, transfer ownership, and emit relevant events"},"id":522,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"1537:18:3","nodeType":"FunctionDefinition","parameters":{"id":502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":501,"mutability":"mutable","name":"to","nameLocation":"1564:2:3","nodeType":"VariableDeclaration","scope":522,"src":"1556:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"1556:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1555:12:3"},"returnParameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"1576:0:3"},"scope":544,"src":"1528:235:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":534,"nodeType":"Block","src":"1841:114:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":527,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1902:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1902:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":529,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"1916:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1902:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","id":531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1925:24:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","typeString":"literal_string \"Only callable by owner\""},"value":"Only callable by owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","typeString":"literal_string \"Only callable by owner\""}],"id":526,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1894:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1894:56:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"1894:56:3"}]},"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"1767:27:3","text":"@notice validate access"},"id":535,"implemented":true,"kind":"function","modifiers":[],"name":"_validateOwnership","nameLocation":"1806:18:3","nodeType":"FunctionDefinition","parameters":{"id":524,"nodeType":"ParameterList","parameters":[],"src":"1824:2:3"},"returnParameters":{"id":525,"nodeType":"ParameterList","parameters":[],"src":"1841:0:3"},"scope":544,"src":"1797:158:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":542,"nodeType":"Block","src":"2053:38:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":538,"name":"_validateOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"2059:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2059:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":540,"nodeType":"ExpressionStatement","src":"2059:20:3"},{"id":541,"nodeType":"PlaceholderStatement","src":"2085:1:3"}]},"documentation":{"id":536,"nodeType":"StructuredDocumentation","src":"1959:70:3","text":"@notice Reverts if called by anyone other than the contract owner."},"id":543,"name":"onlyOwner","nameLocation":"2041:9:3","nodeType":"ModifierDefinition","parameters":{"id":537,"nodeType":"ParameterList","parameters":[],"src":"2050:2:3"},"src":"2032:59:3","virtual":false,"visibility":"internal"}],"scope":545,"src":"216:1877:3","usedErrors":[]}],"src":"32:2062:3"},"id":3},"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol","exportedSymbols":{"AggregatorV3Interface":[590]},"id":591,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":546,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:4"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":590,"linearizedBaseContracts":[590],"name":"AggregatorV3Interface","nameLocation":"67:21:4","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":551,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"102:8:4","nodeType":"FunctionDefinition","parameters":{"id":547,"nodeType":"ParameterList","parameters":[],"src":"110:2:4"},"returnParameters":{"id":550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":551,"src":"136:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":548,"name":"uint8","nodeType":"ElementaryTypeName","src":"136:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"135:7:4"},"scope":590,"src":"93:50:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7284e416","id":556,"implemented":false,"kind":"function","modifiers":[],"name":"description","nameLocation":"156:11:4","nodeType":"FunctionDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[],"src":"167:2:4"},"returnParameters":{"id":555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":554,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":556,"src":"193:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":553,"name":"string","nodeType":"ElementaryTypeName","src":"193:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"192:15:4"},"scope":590,"src":"147:61:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"54fd4d50","id":561,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"221:7:4","nodeType":"FunctionDefinition","parameters":{"id":557,"nodeType":"ParameterList","parameters":[],"src":"228:2:4"},"returnParameters":{"id":560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":561,"src":"254:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":558,"name":"uint256","nodeType":"ElementaryTypeName","src":"254:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"253:9:4"},"scope":590,"src":"212:51:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9a6fc8f5","id":576,"implemented":false,"kind":"function","modifiers":[],"name":"getRoundData","nameLocation":"276:12:4","nodeType":"FunctionDefinition","parameters":{"id":564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":563,"mutability":"mutable","name":"_roundId","nameLocation":"301:8:4","nodeType":"VariableDeclaration","scope":576,"src":"294:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":562,"name":"uint80","nodeType":"ElementaryTypeName","src":"294:6:4","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"288:25:4"},"returnParameters":{"id":575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"mutability":"mutable","name":"roundId","nameLocation":"344:7:4","nodeType":"VariableDeclaration","scope":576,"src":"337:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":565,"name":"uint80","nodeType":"ElementaryTypeName","src":"337:6:4","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":568,"mutability":"mutable","name":"answer","nameLocation":"360:6:4","nodeType":"VariableDeclaration","scope":576,"src":"353:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":567,"name":"int256","nodeType":"ElementaryTypeName","src":"353:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"startedAt","nameLocation":"376:9:4","nodeType":"VariableDeclaration","scope":576,"src":"368:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":569,"name":"uint256","nodeType":"ElementaryTypeName","src":"368:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":572,"mutability":"mutable","name":"updatedAt","nameLocation":"395:9:4","nodeType":"VariableDeclaration","scope":576,"src":"387:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":571,"name":"uint256","nodeType":"ElementaryTypeName","src":"387:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":574,"mutability":"mutable","name":"answeredInRound","nameLocation":"413:15:4","nodeType":"VariableDeclaration","scope":576,"src":"406:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":573,"name":"uint80","nodeType":"ElementaryTypeName","src":"406:6:4","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"336:93:4"},"scope":590,"src":"267:163:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"feaf968c","id":589,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"443:15:4","nodeType":"FunctionDefinition","parameters":{"id":577,"nodeType":"ParameterList","parameters":[],"src":"458:2:4"},"returnParameters":{"id":588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":579,"mutability":"mutable","name":"roundId","nameLocation":"503:7:4","nodeType":"VariableDeclaration","scope":589,"src":"496:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":578,"name":"uint80","nodeType":"ElementaryTypeName","src":"496:6:4","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":581,"mutability":"mutable","name":"answer","nameLocation":"519:6:4","nodeType":"VariableDeclaration","scope":589,"src":"512:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":580,"name":"int256","nodeType":"ElementaryTypeName","src":"512:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":583,"mutability":"mutable","name":"startedAt","nameLocation":"535:9:4","nodeType":"VariableDeclaration","scope":589,"src":"527:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":582,"name":"uint256","nodeType":"ElementaryTypeName","src":"527:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":585,"mutability":"mutable","name":"updatedAt","nameLocation":"554:9:4","nodeType":"VariableDeclaration","scope":589,"src":"546:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":584,"name":"uint256","nodeType":"ElementaryTypeName","src":"546:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":587,"mutability":"mutable","name":"answeredInRound","nameLocation":"572:15:4","nodeType":"VariableDeclaration","scope":589,"src":"565:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":586,"name":"uint80","nodeType":"ElementaryTypeName","src":"565:6:4","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"495:93:4"},"scope":590,"src":"434:155:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":591,"src":"57:534:4","usedErrors":[]}],"src":"32:560:4"},"id":4},"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol","exportedSymbols":{"IERC677Receiver":[602]},"id":603,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":592,"literals":["solidity","^","0.8",".6"],"nodeType":"PragmaDirective","src":"32:23:5"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":602,"linearizedBaseContracts":[602],"name":"IERC677Receiver","nameLocation":"67:15:5","nodeType":"ContractDefinition","nodes":[{"functionSelector":"a4c0ed36","id":601,"implemented":false,"kind":"function","modifiers":[],"name":"onTokenTransfer","nameLocation":"96:15:5","nodeType":"FunctionDefinition","parameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":594,"mutability":"mutable","name":"sender","nameLocation":"120:6:5","nodeType":"VariableDeclaration","scope":601,"src":"112:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":593,"name":"address","nodeType":"ElementaryTypeName","src":"112:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":596,"mutability":"mutable","name":"amount","nameLocation":"136:6:5","nodeType":"VariableDeclaration","scope":601,"src":"128:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":595,"name":"uint256","nodeType":"ElementaryTypeName","src":"128:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":598,"mutability":"mutable","name":"data","nameLocation":"159:4:5","nodeType":"VariableDeclaration","scope":601,"src":"144:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":597,"name":"bytes","nodeType":"ElementaryTypeName","src":"144:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"111:53:5"},"returnParameters":{"id":600,"nodeType":"ParameterList","parameters":[],"src":"173:0:5"},"scope":602,"src":"87:87:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":603,"src":"57:119:5","usedErrors":[]}],"src":"32:145:5"},"id":5},"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol","exportedSymbols":{"IOwnable":[618]},"id":619,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":604,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:6"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":618,"linearizedBaseContracts":[618],"name":"IOwnable","nameLocation":"67:8:6","nodeType":"ContractDefinition","nodes":[{"functionSelector":"8da5cb5b","id":609,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"89:5:6","nodeType":"FunctionDefinition","parameters":{"id":605,"nodeType":"ParameterList","parameters":[],"src":"94:2:6"},"returnParameters":{"id":608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":609,"src":"115:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"115:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"114:9:6"},"scope":618,"src":"80:44:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f2fde38b","id":614,"implemented":false,"kind":"function","modifiers":[],"name":"transferOwnership","nameLocation":"137:17:6","nodeType":"FunctionDefinition","parameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"recipient","nameLocation":"163:9:6","nodeType":"VariableDeclaration","scope":614,"src":"155:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":610,"name":"address","nodeType":"ElementaryTypeName","src":"155:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"154:19:6"},"returnParameters":{"id":613,"nodeType":"ParameterList","parameters":[],"src":"182:0:6"},"scope":618,"src":"128:55:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"79ba5097","id":617,"implemented":false,"kind":"function","modifiers":[],"name":"acceptOwnership","nameLocation":"196:15:6","nodeType":"FunctionDefinition","parameters":{"id":615,"nodeType":"ParameterList","parameters":[],"src":"211:2:6"},"returnParameters":{"id":616,"nodeType":"ParameterList","parameters":[],"src":"222:0:6"},"scope":618,"src":"187:36:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":619,"src":"57:168:6","usedErrors":[]}],"src":"32:194:6"},"id":6},"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol","exportedSymbols":{"LinkTokenInterface":[713]},"id":714,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":620,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:7"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":713,"linearizedBaseContracts":[713],"name":"LinkTokenInterface","nameLocation":"67:18:7","nodeType":"ContractDefinition","nodes":[{"functionSelector":"dd62ed3e","id":629,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"99:9:7","nodeType":"FunctionDefinition","parameters":{"id":625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"mutability":"mutable","name":"owner","nameLocation":"117:5:7","nodeType":"VariableDeclaration","scope":629,"src":"109:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"109:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":624,"mutability":"mutable","name":"spender","nameLocation":"132:7:7","nodeType":"VariableDeclaration","scope":629,"src":"124:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"124:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"108:32:7"},"returnParameters":{"id":628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":627,"mutability":"mutable","name":"remaining","nameLocation":"172:9:7","nodeType":"VariableDeclaration","scope":629,"src":"164:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":626,"name":"uint256","nodeType":"ElementaryTypeName","src":"164:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"163:19:7"},"scope":713,"src":"90:93:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":638,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"196:7:7","nodeType":"FunctionDefinition","parameters":{"id":634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":631,"mutability":"mutable","name":"spender","nameLocation":"212:7:7","nodeType":"VariableDeclaration","scope":638,"src":"204:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"204:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":633,"mutability":"mutable","name":"value","nameLocation":"229:5:7","nodeType":"VariableDeclaration","scope":638,"src":"221:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":632,"name":"uint256","nodeType":"ElementaryTypeName","src":"221:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"203:32:7"},"returnParameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"mutability":"mutable","name":"success","nameLocation":"259:7:7","nodeType":"VariableDeclaration","scope":638,"src":"254:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":635,"name":"bool","nodeType":"ElementaryTypeName","src":"254:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"253:14:7"},"scope":713,"src":"187:81:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":645,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"281:9:7","nodeType":"FunctionDefinition","parameters":{"id":641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":640,"mutability":"mutable","name":"owner","nameLocation":"299:5:7","nodeType":"VariableDeclaration","scope":645,"src":"291:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":639,"name":"address","nodeType":"ElementaryTypeName","src":"291:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"290:15:7"},"returnParameters":{"id":644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":643,"mutability":"mutable","name":"balance","nameLocation":"337:7:7","nodeType":"VariableDeclaration","scope":645,"src":"329:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":642,"name":"uint256","nodeType":"ElementaryTypeName","src":"329:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"328:17:7"},"scope":713,"src":"272:74:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":650,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"359:8:7","nodeType":"FunctionDefinition","parameters":{"id":646,"nodeType":"ParameterList","parameters":[],"src":"367:2:7"},"returnParameters":{"id":649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":648,"mutability":"mutable","name":"decimalPlaces","nameLocation":"399:13:7","nodeType":"VariableDeclaration","scope":650,"src":"393:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":647,"name":"uint8","nodeType":"ElementaryTypeName","src":"393:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"392:21:7"},"scope":713,"src":"350:64:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"66188463","id":659,"implemented":false,"kind":"function","modifiers":[],"name":"decreaseApproval","nameLocation":"427:16:7","nodeType":"FunctionDefinition","parameters":{"id":655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"spender","nameLocation":"452:7:7","nodeType":"VariableDeclaration","scope":659,"src":"444:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":651,"name":"address","nodeType":"ElementaryTypeName","src":"444:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":654,"mutability":"mutable","name":"addedValue","nameLocation":"469:10:7","nodeType":"VariableDeclaration","scope":659,"src":"461:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":653,"name":"uint256","nodeType":"ElementaryTypeName","src":"461:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"443:37:7"},"returnParameters":{"id":658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"mutability":"mutable","name":"success","nameLocation":"504:7:7","nodeType":"VariableDeclaration","scope":659,"src":"499:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":656,"name":"bool","nodeType":"ElementaryTypeName","src":"499:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"498:14:7"},"scope":713,"src":"418:95:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d73dd623","id":666,"implemented":false,"kind":"function","modifiers":[],"name":"increaseApproval","nameLocation":"526:16:7","nodeType":"FunctionDefinition","parameters":{"id":664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"spender","nameLocation":"551:7:7","nodeType":"VariableDeclaration","scope":666,"src":"543:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":660,"name":"address","nodeType":"ElementaryTypeName","src":"543:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":663,"mutability":"mutable","name":"subtractedValue","nameLocation":"568:15:7","nodeType":"VariableDeclaration","scope":666,"src":"560:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":662,"name":"uint256","nodeType":"ElementaryTypeName","src":"560:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"542:42:7"},"returnParameters":{"id":665,"nodeType":"ParameterList","parameters":[],"src":"593:0:7"},"scope":713,"src":"517:77:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"06fdde03","id":671,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"607:4:7","nodeType":"FunctionDefinition","parameters":{"id":667,"nodeType":"ParameterList","parameters":[],"src":"611:2:7"},"returnParameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":669,"mutability":"mutable","name":"tokenName","nameLocation":"651:9:7","nodeType":"VariableDeclaration","scope":671,"src":"637:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":668,"name":"string","nodeType":"ElementaryTypeName","src":"637:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"636:25:7"},"scope":713,"src":"598:64:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":676,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"675:6:7","nodeType":"FunctionDefinition","parameters":{"id":672,"nodeType":"ParameterList","parameters":[],"src":"681:2:7"},"returnParameters":{"id":675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"tokenSymbol","nameLocation":"721:11:7","nodeType":"VariableDeclaration","scope":676,"src":"707:25:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":673,"name":"string","nodeType":"ElementaryTypeName","src":"707:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"706:27:7"},"scope":713,"src":"666:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"18160ddd","id":681,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"747:11:7","nodeType":"FunctionDefinition","parameters":{"id":677,"nodeType":"ParameterList","parameters":[],"src":"758:2:7"},"returnParameters":{"id":680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":679,"mutability":"mutable","name":"totalTokensIssued","nameLocation":"792:17:7","nodeType":"VariableDeclaration","scope":681,"src":"784:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":678,"name":"uint256","nodeType":"ElementaryTypeName","src":"784:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"783:27:7"},"scope":713,"src":"738:73:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":690,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"824:8:7","nodeType":"FunctionDefinition","parameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"mutability":"mutable","name":"to","nameLocation":"841:2:7","nodeType":"VariableDeclaration","scope":690,"src":"833:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":682,"name":"address","nodeType":"ElementaryTypeName","src":"833:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":685,"mutability":"mutable","name":"value","nameLocation":"853:5:7","nodeType":"VariableDeclaration","scope":690,"src":"845:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":684,"name":"uint256","nodeType":"ElementaryTypeName","src":"845:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"832:27:7"},"returnParameters":{"id":689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":688,"mutability":"mutable","name":"success","nameLocation":"883:7:7","nodeType":"VariableDeclaration","scope":690,"src":"878:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":687,"name":"bool","nodeType":"ElementaryTypeName","src":"878:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"877:14:7"},"scope":713,"src":"815:77:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"4000aea0","id":701,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"905:15:7","nodeType":"FunctionDefinition","parameters":{"id":697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":692,"mutability":"mutable","name":"to","nameLocation":"929:2:7","nodeType":"VariableDeclaration","scope":701,"src":"921:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":691,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":694,"mutability":"mutable","name":"value","nameLocation":"941:5:7","nodeType":"VariableDeclaration","scope":701,"src":"933:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":693,"name":"uint256","nodeType":"ElementaryTypeName","src":"933:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":696,"mutability":"mutable","name":"data","nameLocation":"963:4:7","nodeType":"VariableDeclaration","scope":701,"src":"948:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":695,"name":"bytes","nodeType":"ElementaryTypeName","src":"948:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"920:48:7"},"returnParameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"success","nameLocation":"992:7:7","nodeType":"VariableDeclaration","scope":701,"src":"987:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":698,"name":"bool","nodeType":"ElementaryTypeName","src":"987:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"986:14:7"},"scope":713,"src":"896:105:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":712,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"1014:12:7","nodeType":"FunctionDefinition","parameters":{"id":708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":703,"mutability":"mutable","name":"from","nameLocation":"1035:4:7","nodeType":"VariableDeclaration","scope":712,"src":"1027:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":702,"name":"address","nodeType":"ElementaryTypeName","src":"1027:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":705,"mutability":"mutable","name":"to","nameLocation":"1049:2:7","nodeType":"VariableDeclaration","scope":712,"src":"1041:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":704,"name":"address","nodeType":"ElementaryTypeName","src":"1041:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":707,"mutability":"mutable","name":"value","nameLocation":"1061:5:7","nodeType":"VariableDeclaration","scope":712,"src":"1053:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":706,"name":"uint256","nodeType":"ElementaryTypeName","src":"1053:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1026:41:7"},"returnParameters":{"id":711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":710,"mutability":"mutable","name":"success","nameLocation":"1091:7:7","nodeType":"VariableDeclaration","scope":712,"src":"1086:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":709,"name":"bool","nodeType":"ElementaryTypeName","src":"1086:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1085:14:7"},"scope":713,"src":"1005:95:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":714,"src":"57:1045:7","usedErrors":[]}],"src":"32:1071:7"},"id":7},"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbGasInfo.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbGasInfo.sol","exportedSymbols":{"ArbGasInfo":[897]},"id":898,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":715,"literals":["solidity",">=","0.4",".21","<","0.9",".0"],"nodeType":"PragmaDirective","src":"180:32:8"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":716,"nodeType":"StructuredDocumentation","src":"214:380:8","text":"@title Provides insight into the cost of using the chain.\n @notice These methods have been adjusted to account for Nitro's heavy use of calldata compression.\n Of note to end-users, we no longer make a distinction between non-zero and zero-valued calldata bytes.\n Precompiled contract that exists in every Arbitrum chain at 0x000000000000000000000000000000000000006c."},"fullyImplemented":false,"id":897,"linearizedBaseContracts":[897],"name":"ArbGasInfo","nameLocation":"604:10:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":717,"nodeType":"StructuredDocumentation","src":"621:354:8","text":"@notice Get gas prices for a provided aggregator\n @return return gas prices in wei\n        (\n            per L2 tx,\n            per L1 calldata byte\n            per storage allocation,\n            per ArbGas base,\n            per ArbGas congestion,\n            per ArbGas total\n        )"},"functionSelector":"ba9c916e","id":734,"implemented":false,"kind":"function","modifiers":[],"name":"getPricesInWeiWithAggregator","nameLocation":"989:28:8","nodeType":"FunctionDefinition","parameters":{"id":720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"aggregator","nameLocation":"1026:10:8","nodeType":"VariableDeclaration","scope":734,"src":"1018:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"1018:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1017:20:8"},"returnParameters":{"id":733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":734,"src":"1082:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":721,"name":"uint256","nodeType":"ElementaryTypeName","src":"1082:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":734,"src":"1099:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":723,"name":"uint256","nodeType":"ElementaryTypeName","src":"1099:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":734,"src":"1116:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":725,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":734,"src":"1133:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":727,"name":"uint256","nodeType":"ElementaryTypeName","src":"1133:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":734,"src":"1150:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":729,"name":"uint256","nodeType":"ElementaryTypeName","src":"1150:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":734,"src":"1167:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":731,"name":"uint256","nodeType":"ElementaryTypeName","src":"1167:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1072:108:8"},"scope":897,"src":"980:201:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":735,"nodeType":"StructuredDocumentation","src":"1187:428:8","text":"@notice Get gas prices. Uses the caller's preferred aggregator, or the default if the caller doesn't have a preferred one.\n @return return gas prices in wei\n        (\n            per L2 tx,\n            per L1 calldata byte\n            per storage allocation,\n            per ArbGas base,\n            per ArbGas congestion,\n            per ArbGas total\n        )"},"functionSelector":"41b247a8","id":750,"implemented":false,"kind":"function","modifiers":[],"name":"getPricesInWei","nameLocation":"1629:14:8","nodeType":"FunctionDefinition","parameters":{"id":736,"nodeType":"ParameterList","parameters":[],"src":"1643:2:8"},"returnParameters":{"id":749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":750,"src":"1690:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":737,"name":"uint256","nodeType":"ElementaryTypeName","src":"1690:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":750,"src":"1707:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":739,"name":"uint256","nodeType":"ElementaryTypeName","src":"1707:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":750,"src":"1724:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":741,"name":"uint256","nodeType":"ElementaryTypeName","src":"1724:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":750,"src":"1741:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":743,"name":"uint256","nodeType":"ElementaryTypeName","src":"1741:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":750,"src":"1758:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":745,"name":"uint256","nodeType":"ElementaryTypeName","src":"1758:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":748,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":750,"src":"1775:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":747,"name":"uint256","nodeType":"ElementaryTypeName","src":"1775:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1680:108:8"},"scope":897,"src":"1620:169:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":751,"nodeType":"StructuredDocumentation","src":"1795:134:8","text":"@notice Get prices in ArbGas for the supplied aggregator\n @return (per L2 tx, per L1 calldata byte, per storage allocation)"},"functionSelector":"7a1ea732","id":762,"implemented":false,"kind":"function","modifiers":[],"name":"getPricesInArbGasWithAggregator","nameLocation":"1943:31:8","nodeType":"FunctionDefinition","parameters":{"id":754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"aggregator","nameLocation":"1983:10:8","nodeType":"VariableDeclaration","scope":762,"src":"1975:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"1975:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1974:20:8"},"returnParameters":{"id":761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":762,"src":"2039:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":755,"name":"uint256","nodeType":"ElementaryTypeName","src":"2039:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":762,"src":"2056:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":757,"name":"uint256","nodeType":"ElementaryTypeName","src":"2056:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":760,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":762,"src":"2073:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":759,"name":"uint256","nodeType":"ElementaryTypeName","src":"2073:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2029:57:8"},"scope":897,"src":"1934:153:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":763,"nodeType":"StructuredDocumentation","src":"2093:203:8","text":"@notice Get prices in ArbGas. Assumes the callers preferred validator, or the default if caller doesn't have a preferred one.\n @return (per L2 tx, per L1 calldata byte, per storage allocation)"},"functionSelector":"02199f34","id":772,"implemented":false,"kind":"function","modifiers":[],"name":"getPricesInArbGas","nameLocation":"2310:17:8","nodeType":"FunctionDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[],"src":"2327:2:8"},"returnParameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":772,"src":"2374:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":765,"name":"uint256","nodeType":"ElementaryTypeName","src":"2374:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":772,"src":"2391:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":767,"name":"uint256","nodeType":"ElementaryTypeName","src":"2391:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":772,"src":"2408:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":769,"name":"uint256","nodeType":"ElementaryTypeName","src":"2408:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2364:57:8"},"scope":897,"src":"2301:121:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":773,"nodeType":"StructuredDocumentation","src":"2428:193:8","text":"@notice Get the gas accounting parameters. `gasPoolMax` is always zero, as the exponential pricing model has no such notion.\n @return (speedLimitPerSecond, gasPoolMax, maxTxGasLimit)"},"functionSelector":"612af178","id":782,"implemented":false,"kind":"function","modifiers":[],"name":"getGasAccountingParams","nameLocation":"2635:22:8","nodeType":"FunctionDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[],"src":"2657:2:8"},"returnParameters":{"id":781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":782,"src":"2704:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":775,"name":"uint256","nodeType":"ElementaryTypeName","src":"2704:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":782,"src":"2721:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":777,"name":"uint256","nodeType":"ElementaryTypeName","src":"2721:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":780,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":782,"src":"2738:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":779,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2694:57:8"},"scope":897,"src":"2626:126:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":783,"nodeType":"StructuredDocumentation","src":"2758:64:8","text":"@notice Get the minimum gas price needed for a tx to succeed"},"functionSelector":"f918379a","id":788,"implemented":false,"kind":"function","modifiers":[],"name":"getMinimumGasPrice","nameLocation":"2836:18:8","nodeType":"FunctionDefinition","parameters":{"id":784,"nodeType":"ParameterList","parameters":[],"src":"2854:2:8"},"returnParameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":788,"src":"2880:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"2880:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2879:9:8"},"scope":897,"src":"2827:62:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":789,"nodeType":"StructuredDocumentation","src":"2895:57:8","text":"@notice Get ArbOS's estimate of the L1 basefee in wei"},"functionSelector":"f5d6ded7","id":794,"implemented":false,"kind":"function","modifiers":[],"name":"getL1BaseFeeEstimate","nameLocation":"2966:20:8","nodeType":"FunctionDefinition","parameters":{"id":790,"nodeType":"ParameterList","parameters":[],"src":"2986:2:8"},"returnParameters":{"id":793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":794,"src":"3012:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":791,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3011:9:8"},"scope":897,"src":"2957:64:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":795,"nodeType":"StructuredDocumentation","src":"3027:71:8","text":"@notice Get how slowly ArbOS updates its estimate of the L1 basefee"},"functionSelector":"29eb31ee","id":800,"implemented":false,"kind":"function","modifiers":[],"name":"getL1BaseFeeEstimateInertia","nameLocation":"3112:27:8","nodeType":"FunctionDefinition","parameters":{"id":796,"nodeType":"ParameterList","parameters":[],"src":"3139:2:8"},"returnParameters":{"id":799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":800,"src":"3165:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":797,"name":"uint64","nodeType":"ElementaryTypeName","src":"3165:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3164:8:8"},"scope":897,"src":"3103:70:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":801,"nodeType":"StructuredDocumentation","src":"3179:96:8","text":"@notice Get the L1 pricer reward rate, in wei per unit\n Available in ArbOS version 11"},"functionSelector":"8a5b1d28","id":806,"implemented":false,"kind":"function","modifiers":[],"name":"getL1RewardRate","nameLocation":"3289:15:8","nodeType":"FunctionDefinition","parameters":{"id":802,"nodeType":"ParameterList","parameters":[],"src":"3304:2:8"},"returnParameters":{"id":805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":804,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":806,"src":"3330:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":803,"name":"uint64","nodeType":"ElementaryTypeName","src":"3330:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3329:8:8"},"scope":897,"src":"3280:58:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":807,"nodeType":"StructuredDocumentation","src":"3344:84:8","text":"@notice Get the L1 pricer reward recipient\n Available in ArbOS version 11"},"functionSelector":"9e6d7e31","id":812,"implemented":false,"kind":"function","modifiers":[],"name":"getL1RewardRecipient","nameLocation":"3442:20:8","nodeType":"FunctionDefinition","parameters":{"id":808,"nodeType":"ParameterList","parameters":[],"src":"3462:2:8"},"returnParameters":{"id":811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":812,"src":"3488:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":809,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3487:9:8"},"scope":897,"src":"3433:64:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":813,"nodeType":"StructuredDocumentation","src":"3503:56:8","text":"@notice Deprecated -- Same as getL1BaseFeeEstimate()"},"functionSelector":"055f362f","id":818,"implemented":false,"kind":"function","modifiers":[],"name":"getL1GasPriceEstimate","nameLocation":"3573:21:8","nodeType":"FunctionDefinition","parameters":{"id":814,"nodeType":"ParameterList","parameters":[],"src":"3594:2:8"},"returnParameters":{"id":817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":818,"src":"3620:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":815,"name":"uint256","nodeType":"ElementaryTypeName","src":"3620:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3619:9:8"},"scope":897,"src":"3564:65:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":819,"nodeType":"StructuredDocumentation","src":"3635:59:8","text":"@notice Get L1 gas fees paid by the current transaction"},"functionSelector":"c6f7de0e","id":824,"implemented":false,"kind":"function","modifiers":[],"name":"getCurrentTxL1GasFees","nameLocation":"3708:21:8","nodeType":"FunctionDefinition","parameters":{"id":820,"nodeType":"ParameterList","parameters":[],"src":"3729:2:8"},"returnParameters":{"id":823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":824,"src":"3755:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":821,"name":"uint256","nodeType":"ElementaryTypeName","src":"3755:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3754:9:8"},"scope":897,"src":"3699:65:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":825,"nodeType":"StructuredDocumentation","src":"3770:79:8","text":"@notice Get the backlogged amount of gas burnt in excess of the speed limit"},"functionSelector":"1d5b5c20","id":830,"implemented":false,"kind":"function","modifiers":[],"name":"getGasBacklog","nameLocation":"3863:13:8","nodeType":"FunctionDefinition","parameters":{"id":826,"nodeType":"ParameterList","parameters":[],"src":"3876:2:8"},"returnParameters":{"id":829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":830,"src":"3902:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":827,"name":"uint64","nodeType":"ElementaryTypeName","src":"3902:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3901:8:8"},"scope":897,"src":"3854:56:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":831,"nodeType":"StructuredDocumentation","src":"3916:85:8","text":"@notice Get how slowly ArbOS updates the L2 basefee in response to backlogged gas"},"functionSelector":"3dfb45b9","id":836,"implemented":false,"kind":"function","modifiers":[],"name":"getPricingInertia","nameLocation":"4015:17:8","nodeType":"FunctionDefinition","parameters":{"id":832,"nodeType":"ParameterList","parameters":[],"src":"4032:2:8"},"returnParameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":836,"src":"4058:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":833,"name":"uint64","nodeType":"ElementaryTypeName","src":"4058:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4057:8:8"},"scope":897,"src":"4006:60:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":837,"nodeType":"StructuredDocumentation","src":"4072:98:8","text":"@notice Get the forgivable amount of backlogged gas ArbOS will ignore when raising the basefee"},"functionSelector":"25754f91","id":842,"implemented":false,"kind":"function","modifiers":[],"name":"getGasBacklogTolerance","nameLocation":"4184:22:8","nodeType":"FunctionDefinition","parameters":{"id":838,"nodeType":"ParameterList","parameters":[],"src":"4206:2:8"},"returnParameters":{"id":841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":842,"src":"4232:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":839,"name":"uint64","nodeType":"ElementaryTypeName","src":"4232:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4231:8:8"},"scope":897,"src":"4175:65:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":843,"nodeType":"StructuredDocumentation","src":"4246:89:8","text":"@notice Returns the surplus of funds for L1 batch posting payments (may be negative)."},"functionSelector":"520acdd7","id":848,"implemented":false,"kind":"function","modifiers":[],"name":"getL1PricingSurplus","nameLocation":"4349:19:8","nodeType":"FunctionDefinition","parameters":{"id":844,"nodeType":"ParameterList","parameters":[],"src":"4368:2:8"},"returnParameters":{"id":847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":848,"src":"4394:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":845,"name":"int256","nodeType":"ElementaryTypeName","src":"4394:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4393:8:8"},"scope":897,"src":"4340:62:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":849,"nodeType":"StructuredDocumentation","src":"4408:100:8","text":"@notice Returns the base charge (in L1 gas) attributed to each data batch in the calldata pricer"},"functionSelector":"6ecca45a","id":854,"implemented":false,"kind":"function","modifiers":[],"name":"getPerBatchGasCharge","nameLocation":"4522:20:8","nodeType":"FunctionDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[],"src":"4542:2:8"},"returnParameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":854,"src":"4568:5:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":851,"name":"int64","nodeType":"ElementaryTypeName","src":"4568:5:8","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"4567:7:8"},"scope":897,"src":"4513:62:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"4581:61:8","text":"@notice Returns the cost amortization cap in basis points"},"functionSelector":"7a7d6beb","id":860,"implemented":false,"kind":"function","modifiers":[],"name":"getAmortizedCostCapBips","nameLocation":"4656:23:8","nodeType":"FunctionDefinition","parameters":{"id":856,"nodeType":"ParameterList","parameters":[],"src":"4679:2:8"},"returnParameters":{"id":859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":860,"src":"4705:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":857,"name":"uint64","nodeType":"ElementaryTypeName","src":"4705:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4704:8:8"},"scope":897,"src":"4647:66:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":861,"nodeType":"StructuredDocumentation","src":"4719:52:8","text":"@notice Returns the available funds from L1 fees"},"functionSelector":"5b39d23c","id":866,"implemented":false,"kind":"function","modifiers":[],"name":"getL1FeesAvailable","nameLocation":"4785:18:8","nodeType":"FunctionDefinition","parameters":{"id":862,"nodeType":"ParameterList","parameters":[],"src":"4803:2:8"},"returnParameters":{"id":865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":866,"src":"4829:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":863,"name":"uint256","nodeType":"ElementaryTypeName","src":"4829:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4828:9:8"},"scope":897,"src":"4776:62:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":867,"nodeType":"StructuredDocumentation","src":"4844:125:8","text":"@notice Returns the equilibration units parameter for L1 price adjustment algorithm\n Available in ArbOS version 20"},"functionSelector":"ad26ce90","id":872,"implemented":false,"kind":"function","modifiers":[],"name":"getL1PricingEquilibrationUnits","nameLocation":"4983:30:8","nodeType":"FunctionDefinition","parameters":{"id":868,"nodeType":"ParameterList","parameters":[],"src":"5013:2:8"},"returnParameters":{"id":871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":872,"src":"5039:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":869,"name":"uint256","nodeType":"ElementaryTypeName","src":"5039:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5038:9:8"},"scope":897,"src":"4974:74:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":873,"nodeType":"StructuredDocumentation","src":"5054:107:8","text":"@notice Returns the last time the L1 calldata pricer was updated.\n Available in ArbOS version 20"},"functionSelector":"138b47b4","id":878,"implemented":false,"kind":"function","modifiers":[],"name":"getLastL1PricingUpdateTime","nameLocation":"5175:26:8","nodeType":"FunctionDefinition","parameters":{"id":874,"nodeType":"ParameterList","parameters":[],"src":"5201:2:8"},"returnParameters":{"id":877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":878,"src":"5227:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":875,"name":"uint64","nodeType":"ElementaryTypeName","src":"5227:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"5226:8:8"},"scope":897,"src":"5166:69:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":879,"nodeType":"StructuredDocumentation","src":"5241:133:8","text":"@notice Returns the amount of L1 calldata payments due for rewards (per the L1 reward rate)\n Available in ArbOS version 20"},"functionSelector":"963d6002","id":884,"implemented":false,"kind":"function","modifiers":[],"name":"getL1PricingFundsDueForRewards","nameLocation":"5388:30:8","nodeType":"FunctionDefinition","parameters":{"id":880,"nodeType":"ParameterList","parameters":[],"src":"5418:2:8"},"returnParameters":{"id":883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":884,"src":"5444:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":881,"name":"uint256","nodeType":"ElementaryTypeName","src":"5444:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5443:9:8"},"scope":897,"src":"5379:74:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":885,"nodeType":"StructuredDocumentation","src":"5459:113:8","text":"@notice Returns the amount of L1 calldata posted since the last update.\n Available in ArbOS version 20"},"functionSelector":"eff01306","id":890,"implemented":false,"kind":"function","modifiers":[],"name":"getL1PricingUnitsSinceUpdate","nameLocation":"5586:28:8","nodeType":"FunctionDefinition","parameters":{"id":886,"nodeType":"ParameterList","parameters":[],"src":"5614:2:8"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":890,"src":"5640:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":887,"name":"uint64","nodeType":"ElementaryTypeName","src":"5640:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"5639:8:8"},"scope":897,"src":"5577:71:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":891,"nodeType":"StructuredDocumentation","src":"5654:121:8","text":"@notice Returns the L1 pricing surplus as of the last update (may be negative).\n Available in ArbOS version 20"},"functionSelector":"2987d027","id":896,"implemented":false,"kind":"function","modifiers":[],"name":"getLastL1PricingSurplus","nameLocation":"5789:23:8","nodeType":"FunctionDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[],"src":"5812:2:8"},"returnParameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":896,"src":"5838:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":893,"name":"int256","nodeType":"ElementaryTypeName","src":"5838:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"5837:8:8"},"scope":897,"src":"5780:66:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":898,"src":"594:5254:8","usedErrors":[]}],"src":"180:5668:8"},"id":8},"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbSys.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbSys.sol","exportedSymbols":{"ArbSys":[1043]},"id":1044,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":899,"literals":["solidity",">=","0.4",".21","<","0.9",".0"],"nodeType":"PragmaDirective","src":"159:32:9"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":900,"nodeType":"StructuredDocumentation","src":"193:246:9","text":" @title System level functionality\n @notice For use by contracts to interact with core L2-specific functionality.\n Precompiled contract that exists in every Arbitrum chain at address(100), 0x0000000000000000000000000000000000000064."},"fullyImplemented":false,"id":1043,"linearizedBaseContracts":[1043],"name":"ArbSys","nameLocation":"450:6:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":901,"nodeType":"StructuredDocumentation","src":"463:162:9","text":" @notice Get Arbitrum block number (distinct from L1 block number; Arbitrum genesis block has block number 0)\n @return block number as int"},"functionSelector":"a3b1b31d","id":906,"implemented":false,"kind":"function","modifiers":[],"name":"arbBlockNumber","nameLocation":"639:14:9","nodeType":"FunctionDefinition","parameters":{"id":902,"nodeType":"ParameterList","parameters":[],"src":"653:2:9"},"returnParameters":{"id":905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":906,"src":"679:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":903,"name":"uint256","nodeType":"ElementaryTypeName","src":"679:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"678:9:9"},"scope":1043,"src":"630:58:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":907,"nodeType":"StructuredDocumentation","src":"694:146:9","text":" @notice Get Arbitrum block hash (reverts unless currentBlockNum-256 <= arbBlockNum < currentBlockNum)\n @return block hash"},"functionSelector":"2b407a82","id":914,"implemented":false,"kind":"function","modifiers":[],"name":"arbBlockHash","nameLocation":"854:12:9","nodeType":"FunctionDefinition","parameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":909,"mutability":"mutable","name":"arbBlockNum","nameLocation":"875:11:9","nodeType":"VariableDeclaration","scope":914,"src":"867:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":908,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:21:9"},"returnParameters":{"id":913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":914,"src":"911:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":911,"name":"bytes32","nodeType":"ElementaryTypeName","src":"911:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"910:9:9"},"scope":1043,"src":"845:75:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":915,"nodeType":"StructuredDocumentation","src":"926:107:9","text":" @notice Gets the rollup's unique chain identifier\n @return Chain identifier as int"},"functionSelector":"d127f54a","id":920,"implemented":false,"kind":"function","modifiers":[],"name":"arbChainID","nameLocation":"1047:10:9","nodeType":"FunctionDefinition","parameters":{"id":916,"nodeType":"ParameterList","parameters":[],"src":"1057:2:9"},"returnParameters":{"id":919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":920,"src":"1083:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":917,"name":"uint256","nodeType":"ElementaryTypeName","src":"1083:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1082:9:9"},"scope":1043,"src":"1038:54:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":921,"nodeType":"StructuredDocumentation","src":"1098:118:9","text":" @notice Get internal version number identifying an ArbOS build\n @return version number as int"},"functionSelector":"051038f2","id":926,"implemented":false,"kind":"function","modifiers":[],"name":"arbOSVersion","nameLocation":"1230:12:9","nodeType":"FunctionDefinition","parameters":{"id":922,"nodeType":"ParameterList","parameters":[],"src":"1242:2:9"},"returnParameters":{"id":925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":926,"src":"1268:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":923,"name":"uint256","nodeType":"ElementaryTypeName","src":"1268:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:9:9"},"scope":1043,"src":"1221:56:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":927,"nodeType":"StructuredDocumentation","src":"1283:100:9","text":" @notice Returns 0 since Nitro has no concept of storage gas\n @return uint 0"},"functionSelector":"a94597ff","id":932,"implemented":false,"kind":"function","modifiers":[],"name":"getStorageGasAvailable","nameLocation":"1397:22:9","nodeType":"FunctionDefinition","parameters":{"id":928,"nodeType":"ParameterList","parameters":[],"src":"1419:2:9"},"returnParameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":932,"src":"1445:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":929,"name":"uint256","nodeType":"ElementaryTypeName","src":"1445:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1444:9:9"},"scope":1043,"src":"1388:66:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":933,"nodeType":"StructuredDocumentation","src":"1460:293:9","text":" @notice (deprecated) check if current call is top level (meaning it was triggered by an EoA or a L1 contract)\n @dev this call has been deprecated and may be removed in a future release\n @return true if current execution frame is not a call by another L2 contract"},"functionSelector":"08bd624c","id":938,"implemented":false,"kind":"function","modifiers":[],"name":"isTopLevelCall","nameLocation":"1767:14:9","nodeType":"FunctionDefinition","parameters":{"id":934,"nodeType":"ParameterList","parameters":[],"src":"1781:2:9"},"returnParameters":{"id":937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":936,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":938,"src":"1807:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":935,"name":"bool","nodeType":"ElementaryTypeName","src":"1807:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1806:6:9"},"scope":1043,"src":"1758:55:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":939,"nodeType":"StructuredDocumentation","src":"1819:192:9","text":" @notice map L1 sender contract address to its L2 alias\n @param sender sender address\n @param unused argument no longer used\n @return aliased sender address"},"functionSelector":"4dbbd506","id":948,"implemented":false,"kind":"function","modifiers":[],"name":"mapL1SenderContractAddressToL2Alias","nameLocation":"2025:35:9","nodeType":"FunctionDefinition","parameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":941,"mutability":"mutable","name":"sender","nameLocation":"2069:6:9","nodeType":"VariableDeclaration","scope":948,"src":"2061:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":940,"name":"address","nodeType":"ElementaryTypeName","src":"2061:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":943,"mutability":"mutable","name":"unused","nameLocation":"2085:6:9","nodeType":"VariableDeclaration","scope":948,"src":"2077:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":942,"name":"address","nodeType":"ElementaryTypeName","src":"2077:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2060:32:9"},"returnParameters":{"id":947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":948,"src":"2140:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":945,"name":"address","nodeType":"ElementaryTypeName","src":"2140:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2139:9:9"},"scope":1043,"src":"2016:133:9","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":949,"nodeType":"StructuredDocumentation","src":"2155:189:9","text":" @notice check if the caller (of this caller of this) is an aliased L1 contract address\n @return true iff the caller's address is an alias for an L1 contract address"},"functionSelector":"175a260b","id":954,"implemented":false,"kind":"function","modifiers":[],"name":"wasMyCallersAddressAliased","nameLocation":"2358:26:9","nodeType":"FunctionDefinition","parameters":{"id":950,"nodeType":"ParameterList","parameters":[],"src":"2384:2:9"},"returnParameters":{"id":953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":954,"src":"2410:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":951,"name":"bool","nodeType":"ElementaryTypeName","src":"2410:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2409:6:9"},"scope":1043,"src":"2349:67:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":955,"nodeType":"StructuredDocumentation","src":"2422:224:9","text":" @notice return the address of the caller (of this caller of this), without applying L1 contract address aliasing\n @return address of the caller's caller, without applying L1 contract address aliasing"},"functionSelector":"d74523b3","id":960,"implemented":false,"kind":"function","modifiers":[],"name":"myCallersAddressWithoutAliasing","nameLocation":"2660:31:9","nodeType":"FunctionDefinition","parameters":{"id":956,"nodeType":"ParameterList","parameters":[],"src":"2691:2:9"},"returnParameters":{"id":959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":960,"src":"2717:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":957,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2716:9:9"},"scope":1043,"src":"2651:75:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":961,"nodeType":"StructuredDocumentation","src":"2732:284:9","text":" @notice Send given amount of Eth to dest from sender.\n This is a convenience function, which is equivalent to calling sendTxToL1 with empty data.\n @param destination recipient address on L1\n @return unique identifier for this L2-to-L1 transaction."},"functionSelector":"25e16063","id":968,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawEth","nameLocation":"3030:11:9","nodeType":"FunctionDefinition","parameters":{"id":964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":963,"mutability":"mutable","name":"destination","nameLocation":"3050:11:9","nodeType":"VariableDeclaration","scope":968,"src":"3042:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":962,"name":"address","nodeType":"ElementaryTypeName","src":"3042:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3041:21:9"},"returnParameters":{"id":967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":968,"src":"3113:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":965,"name":"uint256","nodeType":"ElementaryTypeName","src":"3113:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3112:9:9"},"scope":1043,"src":"3021:101:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":969,"nodeType":"StructuredDocumentation","src":"3128:408:9","text":" @notice Send a transaction to L1\n @dev it is not possible to execute on the L1 any L2-to-L1 transaction which contains data\n to a contract address without any code (as enforced by the Bridge contract).\n @param destination recipient address on L1\n @param data (optional) calldata for L1 contract call\n @return a unique identifier for this L2-to-L1 transaction."},"functionSelector":"928c169a","id":978,"implemented":false,"kind":"function","modifiers":[],"name":"sendTxToL1","nameLocation":"3550:10:9","nodeType":"FunctionDefinition","parameters":{"id":974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":971,"mutability":"mutable","name":"destination","nameLocation":"3569:11:9","nodeType":"VariableDeclaration","scope":978,"src":"3561:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":970,"name":"address","nodeType":"ElementaryTypeName","src":"3561:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":973,"mutability":"mutable","name":"data","nameLocation":"3597:4:9","nodeType":"VariableDeclaration","scope":978,"src":"3582:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":972,"name":"bytes","nodeType":"ElementaryTypeName","src":"3582:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3560:42:9"},"returnParameters":{"id":977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":978,"src":"3653:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":975,"name":"uint256","nodeType":"ElementaryTypeName","src":"3653:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3652:9:9"},"scope":1043,"src":"3541:121:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":979,"nodeType":"StructuredDocumentation","src":"3668:230:9","text":" @notice Get send Merkle tree state\n @return size number of sends in the history\n @return root root hash of the send history\n @return partials hashes of partial subtrees in the send history tree"},"functionSelector":"7aeecd2a","id":989,"implemented":false,"kind":"function","modifiers":[],"name":"sendMerkleTreeState","nameLocation":"3912:19:9","nodeType":"FunctionDefinition","parameters":{"id":980,"nodeType":"ParameterList","parameters":[],"src":"3931:2:9"},"returnParameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":982,"mutability":"mutable","name":"size","nameLocation":"4002:4:9","nodeType":"VariableDeclaration","scope":989,"src":"3994:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":981,"name":"uint256","nodeType":"ElementaryTypeName","src":"3994:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":984,"mutability":"mutable","name":"root","nameLocation":"4028:4:9","nodeType":"VariableDeclaration","scope":989,"src":"4020:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":983,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4020:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":987,"mutability":"mutable","name":"partials","nameLocation":"4063:8:9","nodeType":"VariableDeclaration","scope":989,"src":"4046:25:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":985,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4046:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":986,"nodeType":"ArrayTypeName","src":"4046:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3980:101:9"},"scope":1043,"src":"3903:179:9","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":990,"nodeType":"StructuredDocumentation","src":"4088:133:9","text":" @notice creates a send txn from L2 to L1\n @param position = (level << 192) + leaf = (0 << 192) + leaf = leaf"},"id":1010,"name":"L2ToL1Tx","nameLocation":"4232:8:9","nodeType":"EventDefinition","parameters":{"id":1009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":992,"indexed":false,"mutability":"mutable","name":"caller","nameLocation":"4258:6:9","nodeType":"VariableDeclaration","scope":1010,"src":"4250:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":991,"name":"address","nodeType":"ElementaryTypeName","src":"4250:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":994,"indexed":true,"mutability":"mutable","name":"destination","nameLocation":"4290:11:9","nodeType":"VariableDeclaration","scope":1010,"src":"4274:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":993,"name":"address","nodeType":"ElementaryTypeName","src":"4274:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":996,"indexed":true,"mutability":"mutable","name":"hash","nameLocation":"4327:4:9","nodeType":"VariableDeclaration","scope":1010,"src":"4311:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":995,"name":"uint256","nodeType":"ElementaryTypeName","src":"4311:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":998,"indexed":true,"mutability":"mutable","name":"position","nameLocation":"4357:8:9","nodeType":"VariableDeclaration","scope":1010,"src":"4341:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":997,"name":"uint256","nodeType":"ElementaryTypeName","src":"4341:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1000,"indexed":false,"mutability":"mutable","name":"arbBlockNum","nameLocation":"4383:11:9","nodeType":"VariableDeclaration","scope":1010,"src":"4375:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":999,"name":"uint256","nodeType":"ElementaryTypeName","src":"4375:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1002,"indexed":false,"mutability":"mutable","name":"ethBlockNum","nameLocation":"4412:11:9","nodeType":"VariableDeclaration","scope":1010,"src":"4404:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1001,"name":"uint256","nodeType":"ElementaryTypeName","src":"4404:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1004,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"4441:9:9","nodeType":"VariableDeclaration","scope":1010,"src":"4433:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1003,"name":"uint256","nodeType":"ElementaryTypeName","src":"4433:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1006,"indexed":false,"mutability":"mutable","name":"callvalue","nameLocation":"4468:9:9","nodeType":"VariableDeclaration","scope":1010,"src":"4460:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1005,"name":"uint256","nodeType":"ElementaryTypeName","src":"4460:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1008,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"4493:4:9","nodeType":"VariableDeclaration","scope":1010,"src":"4487:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1007,"name":"bytes","nodeType":"ElementaryTypeName","src":"4487:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:263:9"},"src":"4226:278:9"},{"anonymous":false,"documentation":{"id":1011,"nodeType":"StructuredDocumentation","src":"4510:85:9","text":"@dev DEPRECATED in favour of the new L2ToL1Tx event above after the nitro upgrade"},"id":1033,"name":"L2ToL1Transaction","nameLocation":"4606:17:9","nodeType":"EventDefinition","parameters":{"id":1032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1013,"indexed":false,"mutability":"mutable","name":"caller","nameLocation":"4641:6:9","nodeType":"VariableDeclaration","scope":1033,"src":"4633:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1012,"name":"address","nodeType":"ElementaryTypeName","src":"4633:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1015,"indexed":true,"mutability":"mutable","name":"destination","nameLocation":"4673:11:9","nodeType":"VariableDeclaration","scope":1033,"src":"4657:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1014,"name":"address","nodeType":"ElementaryTypeName","src":"4657:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1017,"indexed":true,"mutability":"mutable","name":"uniqueId","nameLocation":"4710:8:9","nodeType":"VariableDeclaration","scope":1033,"src":"4694:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1016,"name":"uint256","nodeType":"ElementaryTypeName","src":"4694:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1019,"indexed":true,"mutability":"mutable","name":"batchNumber","nameLocation":"4744:11:9","nodeType":"VariableDeclaration","scope":1033,"src":"4728:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"4728:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1021,"indexed":false,"mutability":"mutable","name":"indexInBatch","nameLocation":"4773:12:9","nodeType":"VariableDeclaration","scope":1033,"src":"4765:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1020,"name":"uint256","nodeType":"ElementaryTypeName","src":"4765:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1023,"indexed":false,"mutability":"mutable","name":"arbBlockNum","nameLocation":"4803:11:9","nodeType":"VariableDeclaration","scope":1033,"src":"4795:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1022,"name":"uint256","nodeType":"ElementaryTypeName","src":"4795:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1025,"indexed":false,"mutability":"mutable","name":"ethBlockNum","nameLocation":"4832:11:9","nodeType":"VariableDeclaration","scope":1033,"src":"4824:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1024,"name":"uint256","nodeType":"ElementaryTypeName","src":"4824:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1027,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"4861:9:9","nodeType":"VariableDeclaration","scope":1033,"src":"4853:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1026,"name":"uint256","nodeType":"ElementaryTypeName","src":"4853:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1029,"indexed":false,"mutability":"mutable","name":"callvalue","nameLocation":"4888:9:9","nodeType":"VariableDeclaration","scope":1033,"src":"4880:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1028,"name":"uint256","nodeType":"ElementaryTypeName","src":"4880:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1031,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"4913:4:9","nodeType":"VariableDeclaration","scope":1033,"src":"4907:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1030,"name":"bytes","nodeType":"ElementaryTypeName","src":"4907:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4623:300:9"},"src":"4600:324:9"},{"anonymous":false,"documentation":{"id":1034,"nodeType":"StructuredDocumentation","src":"4930:250:9","text":" @notice logs a merkle branch for proof synthesis\n @param reserved an index meant only to align the 4th index with L2ToL1Transaction's 4th event\n @param hash the merkle hash\n @param position = (level << 192) + leaf"},"id":1042,"name":"SendMerkleUpdate","nameLocation":"5191:16:9","nodeType":"EventDefinition","parameters":{"id":1041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1036,"indexed":true,"mutability":"mutable","name":"reserved","nameLocation":"5233:8:9","nodeType":"VariableDeclaration","scope":1042,"src":"5217:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1035,"name":"uint256","nodeType":"ElementaryTypeName","src":"5217:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1038,"indexed":true,"mutability":"mutable","name":"hash","nameLocation":"5267:4:9","nodeType":"VariableDeclaration","scope":1042,"src":"5251:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1037,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5251:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1040,"indexed":true,"mutability":"mutable","name":"position","nameLocation":"5297:8:9","nodeType":"VariableDeclaration","scope":1042,"src":"5281:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1039,"name":"uint256","nodeType":"ElementaryTypeName","src":"5281:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5207:104:9"},"src":"5185:127:9"}],"scope":1044,"src":"440:4874:9","usedErrors":[]}],"src":"159:5156:9"},"id":9},"@chainlink/contracts/src/v0.8/vendor/@eth-optimism/contracts/v0.8.6/contracts/L2/predeploys/OVM_GasPriceOracle.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/@eth-optimism/contracts/v0.8.6/contracts/L2/predeploys/OVM_GasPriceOracle.sol","exportedSymbols":{"OVM_GasPriceOracle":[1275],"Ownable":[4995]},"id":1276,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1045,"literals":["solidity","0.8",".6"],"nodeType":"PragmaDirective","src":"32:22:10"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":1047,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1276,"sourceUnit":4996,"src":"79:69:10","symbolAliases":[{"foreign":{"id":1046,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"src":"88:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1049,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":4995,"src":"745:7:10"},"id":1050,"nodeType":"InheritanceSpecifier","src":"745:7:10"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1048,"nodeType":"StructuredDocumentation","src":"150:563:10","text":" @title OVM_GasPriceOracle\n @dev This contract exposes the current l2 gas price, a measure of how congested the network\n currently is. This measure is used by the Sequencer to determine what fee to charge for\n transactions. When the system is more congested, the l2 gas price will increase and fees\n will also increase as a result.\n All public variables are set while generating the initial L2 state. The\n constructor doesn't run in practice as the L2 state generation script uses\n the deployed bytecode instead of running the initcode."},"fullyImplemented":true,"id":1275,"linearizedBaseContracts":[1275,4995,5017],"name":"OVM_GasPriceOracle","nameLocation":"723:18:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"fe173b97","id":1052,"mutability":"mutable","name":"gasPrice","nameLocation":"861:8:10","nodeType":"VariableDeclaration","scope":1275,"src":"846:23:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1051,"name":"uint256","nodeType":"ElementaryTypeName","src":"846:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"519b4bd3","id":1054,"mutability":"mutable","name":"l1BaseFee","nameLocation":"917:9:10","nodeType":"VariableDeclaration","scope":1275,"src":"902:24:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1053,"name":"uint256","nodeType":"ElementaryTypeName","src":"902:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"0c18c162","id":1056,"mutability":"mutable","name":"overhead","nameLocation":"1005:8:10","nodeType":"VariableDeclaration","scope":1275,"src":"990:23:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1055,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"f45e65d8","id":1058,"mutability":"mutable","name":"scalar","nameLocation":"1070:6:10","nodeType":"VariableDeclaration","scope":1275,"src":"1055:21:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1057,"name":"uint256","nodeType":"ElementaryTypeName","src":"1055:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"313ce567","id":1060,"mutability":"mutable","name":"decimals","nameLocation":"1137:8:10","nodeType":"VariableDeclaration","scope":1275,"src":"1122:23:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1059,"name":"uint256","nodeType":"ElementaryTypeName","src":"1122:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":1072,"nodeType":"Block","src":"1339:42:10","statements":[{"expression":{"arguments":[{"id":1069,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"1367:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1068,"name":"transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4974,"src":"1349:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1349:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1071,"nodeType":"ExpressionStatement","src":"1349:25:10"}]},"documentation":{"id":1061,"nodeType":"StructuredDocumentation","src":"1217:79:10","text":" @param _owner Address that will initially own this contract."},"id":1073,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[],"id":1066,"kind":"baseConstructorSpecifier","modifierName":{"id":1065,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":4995,"src":"1329:7:10"},"nodeType":"ModifierInvocation","src":"1329:9:10"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1063,"mutability":"mutable","name":"_owner","nameLocation":"1321:6:10","nodeType":"VariableDeclaration","scope":1073,"src":"1313:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1062,"name":"address","nodeType":"ElementaryTypeName","src":"1313:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1312:16:10"},"returnParameters":{"id":1067,"nodeType":"ParameterList","parameters":[],"src":"1339:0:10"},"scope":1275,"src":"1301:80:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"anonymous":false,"id":1077,"name":"GasPriceUpdated","nameLocation":"1443:15:10","nodeType":"EventDefinition","parameters":{"id":1076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"indexed":false,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1077,"src":"1459:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1074,"name":"uint256","nodeType":"ElementaryTypeName","src":"1459:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1458:9:10"},"src":"1437:31:10"},{"anonymous":false,"id":1081,"name":"L1BaseFeeUpdated","nameLocation":"1479:16:10","nodeType":"EventDefinition","parameters":{"id":1080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1079,"indexed":false,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1081,"src":"1496:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1078,"name":"uint256","nodeType":"ElementaryTypeName","src":"1496:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:9:10"},"src":"1473:32:10"},{"anonymous":false,"id":1085,"name":"OverheadUpdated","nameLocation":"1516:15:10","nodeType":"EventDefinition","parameters":{"id":1084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1083,"indexed":false,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1085,"src":"1532:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1082,"name":"uint256","nodeType":"ElementaryTypeName","src":"1532:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1531:9:10"},"src":"1510:31:10"},{"anonymous":false,"id":1089,"name":"ScalarUpdated","nameLocation":"1552:13:10","nodeType":"EventDefinition","parameters":{"id":1088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1087,"indexed":false,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1089,"src":"1566:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1086,"name":"uint256","nodeType":"ElementaryTypeName","src":"1566:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1565:9:10"},"src":"1546:29:10"},{"anonymous":false,"id":1093,"name":"DecimalsUpdated","nameLocation":"1586:15:10","nodeType":"EventDefinition","parameters":{"id":1092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1091,"indexed":false,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1093,"src":"1602:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1090,"name":"uint256","nodeType":"ElementaryTypeName","src":"1602:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1601:9:10"},"src":"1580:31:10"},{"body":{"id":1109,"nodeType":"Block","src":"1915:78:10","statements":[{"expression":{"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1101,"name":"gasPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"1925:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1102,"name":"_gasPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"1936:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1925:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1104,"nodeType":"ExpressionStatement","src":"1925:20:10"},{"eventCall":{"arguments":[{"id":1106,"name":"_gasPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"1976:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1105,"name":"GasPriceUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"1960:15:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1960:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1108,"nodeType":"EmitStatement","src":"1955:31:10"}]},"documentation":{"id":1094,"nodeType":"StructuredDocumentation","src":"1697:105:10","text":" Allows the owner to modify the l2 gas price.\n @param _gasPrice New l2 gas price."},"functionSelector":"bf1fe420","id":1110,"implemented":true,"kind":"function","modifiers":[{"id":1099,"kind":"modifierInvocation","modifierName":{"id":1098,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":4914,"src":"1905:9:10"},"nodeType":"ModifierInvocation","src":"1905:9:10"}],"name":"setGasPrice","nameLocation":"1867:11:10","nodeType":"FunctionDefinition","parameters":{"id":1097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1096,"mutability":"mutable","name":"_gasPrice","nameLocation":"1887:9:10","nodeType":"VariableDeclaration","scope":1110,"src":"1879:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1095,"name":"uint256","nodeType":"ElementaryTypeName","src":"1879:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1878:19:10"},"returnParameters":{"id":1100,"nodeType":"ParameterList","parameters":[],"src":"1915:0:10"},"scope":1275,"src":"1858:135:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1126,"nodeType":"Block","src":"2213:78:10","statements":[{"expression":{"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1118,"name":"l1BaseFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"2223:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1119,"name":"_baseFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"2235:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2223:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1121,"nodeType":"ExpressionStatement","src":"2223:20:10"},{"eventCall":{"arguments":[{"id":1123,"name":"_baseFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"2275:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1122,"name":"L1BaseFeeUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"2258:16:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2258:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1125,"nodeType":"EmitStatement","src":"2253:31:10"}]},"documentation":{"id":1111,"nodeType":"StructuredDocumentation","src":"1999:101:10","text":" Allows the owner to modify the l1 base fee.\n @param _baseFee New l1 base fee"},"functionSelector":"bede39b5","id":1127,"implemented":true,"kind":"function","modifiers":[{"id":1116,"kind":"modifierInvocation","modifierName":{"id":1115,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":4914,"src":"2203:9:10"},"nodeType":"ModifierInvocation","src":"2203:9:10"}],"name":"setL1BaseFee","nameLocation":"2165:12:10","nodeType":"FunctionDefinition","parameters":{"id":1114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1113,"mutability":"mutable","name":"_baseFee","nameLocation":"2186:8:10","nodeType":"VariableDeclaration","scope":1127,"src":"2178:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1112,"name":"uint256","nodeType":"ElementaryTypeName","src":"2178:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2177:18:10"},"returnParameters":{"id":1117,"nodeType":"ParameterList","parameters":[],"src":"2213:0:10"},"scope":1275,"src":"2156:135:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1143,"nodeType":"Block","src":"2506:78:10","statements":[{"expression":{"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1135,"name":"overhead","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"2516:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1136,"name":"_overhead","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"2527:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2516:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1138,"nodeType":"ExpressionStatement","src":"2516:20:10"},{"eventCall":{"arguments":[{"id":1140,"name":"_overhead","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"2567:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1139,"name":"OverheadUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"2551:15:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2551:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1142,"nodeType":"EmitStatement","src":"2546:31:10"}]},"documentation":{"id":1128,"nodeType":"StructuredDocumentation","src":"2297:96:10","text":" Allows the owner to modify the overhead.\n @param _overhead New overhead"},"functionSelector":"3577afc5","id":1144,"implemented":true,"kind":"function","modifiers":[{"id":1133,"kind":"modifierInvocation","modifierName":{"id":1132,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":4914,"src":"2496:9:10"},"nodeType":"ModifierInvocation","src":"2496:9:10"}],"name":"setOverhead","nameLocation":"2458:11:10","nodeType":"FunctionDefinition","parameters":{"id":1131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1130,"mutability":"mutable","name":"_overhead","nameLocation":"2478:9:10","nodeType":"VariableDeclaration","scope":1144,"src":"2470:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1129,"name":"uint256","nodeType":"ElementaryTypeName","src":"2470:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2469:19:10"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[],"src":"2506:0:10"},"scope":1275,"src":"2449:135:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1160,"nodeType":"Block","src":"2789:70:10","statements":[{"expression":{"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1152,"name":"scalar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"2799:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1153,"name":"_scalar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"2808:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2799:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1155,"nodeType":"ExpressionStatement","src":"2799:16:10"},{"eventCall":{"arguments":[{"id":1157,"name":"_scalar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"2844:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1156,"name":"ScalarUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"2830:13:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2830:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1159,"nodeType":"EmitStatement","src":"2825:27:10"}]},"documentation":{"id":1145,"nodeType":"StructuredDocumentation","src":"2590:90:10","text":" Allows the owner to modify the scalar.\n @param _scalar New scalar"},"functionSelector":"70465597","id":1161,"implemented":true,"kind":"function","modifiers":[{"id":1150,"kind":"modifierInvocation","modifierName":{"id":1149,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":4914,"src":"2779:9:10"},"nodeType":"ModifierInvocation","src":"2779:9:10"}],"name":"setScalar","nameLocation":"2745:9:10","nodeType":"FunctionDefinition","parameters":{"id":1148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1147,"mutability":"mutable","name":"_scalar","nameLocation":"2763:7:10","nodeType":"VariableDeclaration","scope":1161,"src":"2755:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1146,"name":"uint256","nodeType":"ElementaryTypeName","src":"2755:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2754:17:10"},"returnParameters":{"id":1151,"nodeType":"ParameterList","parameters":[],"src":"2789:0:10"},"scope":1275,"src":"2736:123:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1177,"nodeType":"Block","src":"3074:78:10","statements":[{"expression":{"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1169,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"3084:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1170,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"3095:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3084:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1172,"nodeType":"ExpressionStatement","src":"3084:20:10"},{"eventCall":{"arguments":[{"id":1174,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"3135:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1173,"name":"DecimalsUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"3119:15:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3119:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1176,"nodeType":"EmitStatement","src":"3114:31:10"}]},"documentation":{"id":1162,"nodeType":"StructuredDocumentation","src":"2865:96:10","text":" Allows the owner to modify the decimals.\n @param _decimals New decimals"},"functionSelector":"8c8885c8","id":1178,"implemented":true,"kind":"function","modifiers":[{"id":1167,"kind":"modifierInvocation","modifierName":{"id":1166,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":4914,"src":"3064:9:10"},"nodeType":"ModifierInvocation","src":"3064:9:10"}],"name":"setDecimals","nameLocation":"3026:11:10","nodeType":"FunctionDefinition","parameters":{"id":1165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1164,"mutability":"mutable","name":"_decimals","nameLocation":"3046:9:10","nodeType":"VariableDeclaration","scope":1178,"src":"3038:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1163,"name":"uint256","nodeType":"ElementaryTypeName","src":"3038:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3037:19:10"},"returnParameters":{"id":1168,"nodeType":"ParameterList","parameters":[],"src":"3074:0:10"},"scope":1275,"src":"3017:135:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1218,"nodeType":"Block","src":"3524:254:10","statements":[{"assignments":[1187],"declarations":[{"constant":false,"id":1187,"mutability":"mutable","name":"l1GasUsed","nameLocation":"3542:9:10","nodeType":"VariableDeclaration","scope":1218,"src":"3534:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1186,"name":"uint256","nodeType":"ElementaryTypeName","src":"3534:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1191,"initialValue":{"arguments":[{"id":1189,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"3567:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1188,"name":"getL1GasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"3554:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory) view returns (uint256)"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3554:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3534:39:10"},{"assignments":[1193],"declarations":[{"constant":false,"id":1193,"mutability":"mutable","name":"l1Fee","nameLocation":"3591:5:10","nodeType":"VariableDeclaration","scope":1218,"src":"3583:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1192,"name":"uint256","nodeType":"ElementaryTypeName","src":"3583:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1197,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1194,"name":"l1GasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"3599:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1195,"name":"l1BaseFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"3611:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3599:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3583:37:10"},{"assignments":[1199],"declarations":[{"constant":false,"id":1199,"mutability":"mutable","name":"divisor","nameLocation":"3638:7:10","nodeType":"VariableDeclaration","scope":1218,"src":"3630:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1198,"name":"uint256","nodeType":"ElementaryTypeName","src":"3630:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1203,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3648:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1201,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"3652:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3648:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3630:30:10"},{"assignments":[1205],"declarations":[{"constant":false,"id":1205,"mutability":"mutable","name":"unscaled","nameLocation":"3678:8:10","nodeType":"VariableDeclaration","scope":1218,"src":"3670:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3670:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1209,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1206,"name":"l1Fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"3689:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1207,"name":"scalar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"3697:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3689:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3670:33:10"},{"assignments":[1211],"declarations":[{"constant":false,"id":1211,"mutability":"mutable","name":"scaled","nameLocation":"3721:6:10","nodeType":"VariableDeclaration","scope":1218,"src":"3713:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1210,"name":"uint256","nodeType":"ElementaryTypeName","src":"3713:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1215,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1212,"name":"unscaled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"3730:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1213,"name":"divisor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"3741:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3730:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3713:35:10"},{"expression":{"id":1216,"name":"scaled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"3765:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1185,"id":1217,"nodeType":"Return","src":"3758:13:10"}]},"documentation":{"id":1179,"nodeType":"StructuredDocumentation","src":"3158:242:10","text":" Computes the L1 portion of the fee\n based on the size of the RLP encoded tx\n and the current l1BaseFee\n @param _data Unsigned RLP encoded tx, 6 elements\n @return L1 fee that should be paid for the tx"},"functionSelector":"49948e0e","id":1219,"implemented":true,"kind":"function","modifiers":[],"name":"getL1Fee","nameLocation":"3465:8:10","nodeType":"FunctionDefinition","parameters":{"id":1182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1181,"mutability":"mutable","name":"_data","nameLocation":"3487:5:10","nodeType":"VariableDeclaration","scope":1219,"src":"3474:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1180,"name":"bytes","nodeType":"ElementaryTypeName","src":"3474:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3473:20:10"},"returnParameters":{"id":1185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1219,"src":"3515:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1183,"name":"uint256","nodeType":"ElementaryTypeName","src":"3515:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3514:9:10"},"scope":1275,"src":"3456:322:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1273,"nodeType":"Block","src":"4949:304:10","statements":[{"assignments":[1228],"declarations":[{"constant":false,"id":1228,"mutability":"mutable","name":"total","nameLocation":"4967:5:10","nodeType":"VariableDeclaration","scope":1273,"src":"4959:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1227,"name":"uint256","nodeType":"ElementaryTypeName","src":"4959:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1230,"initialValue":{"hexValue":"30","id":1229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4975:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4959:17:10"},{"body":{"id":1258,"nodeType":"Block","src":"5029:136:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1242,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"5047:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1244,"indexExpression":{"id":1243,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"5053:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5047:8:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5059:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5047:13:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1256,"nodeType":"Block","src":"5111:44:10","statements":[{"expression":{"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1252,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"5129:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5138:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"5129:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1255,"nodeType":"ExpressionStatement","src":"5129:11:10"}]},"id":1257,"nodeType":"IfStatement","src":"5043:112:10","trueBody":{"id":1251,"nodeType":"Block","src":"5062:43:10","statements":[{"expression":{"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1247,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"5080:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5089:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"5080:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1250,"nodeType":"ExpressionStatement","src":"5080:10:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1235,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"5006:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1236,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"5010:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5010:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5006:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1259,"initializationExpression":{"assignments":[1232],"declarations":[{"constant":false,"id":1232,"mutability":"mutable","name":"i","nameLocation":"4999:1:10","nodeType":"VariableDeclaration","scope":1259,"src":"4991:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1231,"name":"uint256","nodeType":"ElementaryTypeName","src":"4991:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1234,"initialValue":{"hexValue":"30","id":1233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4991:13:10"},"loopExpression":{"expression":{"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5024:3:10","subExpression":{"id":1239,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"5024:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1241,"nodeType":"ExpressionStatement","src":"5024:3:10"},"nodeType":"ForStatement","src":"4986:179:10"},{"assignments":[1261],"declarations":[{"constant":false,"id":1261,"mutability":"mutable","name":"unsigned","nameLocation":"5182:8:10","nodeType":"VariableDeclaration","scope":1273,"src":"5174:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1260,"name":"uint256","nodeType":"ElementaryTypeName","src":"5174:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1265,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1262,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"5193:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1263,"name":"overhead","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"5201:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5193:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5174:35:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1266,"name":"unsigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"5226:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1088_by_1","typeString":"int_const 1088"},"id":1269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3638","id":1267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5238:2:10","typeDescriptions":{"typeIdentifier":"t_rational_68_by_1","typeString":"int_const 68"},"value":"68"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":1268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5243:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"5238:7:10","typeDescriptions":{"typeIdentifier":"t_rational_1088_by_1","typeString":"int_const 1088"}}],"id":1270,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5237:9:10","typeDescriptions":{"typeIdentifier":"t_rational_1088_by_1","typeString":"int_const 1088"}},"src":"5226:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1226,"id":1272,"nodeType":"Return","src":"5219:27:10"}]},"documentation":{"id":1220,"nodeType":"StructuredDocumentation","src":"3823:1011:10","text":" Computes the amount of L1 gas used for a transaction\n The overhead represents the per batch gas overhead of\n posting both transaction and state roots to L1 given larger\n batch sizes.\n 4 gas for 0 byte\n https://github.com/ethereum/go-ethereum/blob/9ada4a2e2c415e6b0b51c50e901336872e028872/params/protocol_params.go#L33\n 16 gas for non zero byte\n https://github.com/ethereum/go-ethereum/blob/9ada4a2e2c415e6b0b51c50e901336872e028872/params/protocol_params.go#L87\n This will need to be updated if calldata gas prices change\n Account for the transaction being unsigned\n Padding is added to account for lack of signature on transaction\n 1 byte for RLP V prefix\n 1 byte for V\n 1 byte for RLP R prefix\n 32 bytes for R\n 1 byte for RLP S prefix\n 32 bytes for S\n Total: 68 bytes of padding\n @param _data Unsigned RLP encoded tx, 6 elements\n @return Amount of L1 gas used for a transaction"},"functionSelector":"de26c4a1","id":1274,"implemented":true,"kind":"function","modifiers":[],"name":"getL1GasUsed","nameLocation":"4886:12:10","nodeType":"FunctionDefinition","parameters":{"id":1223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1222,"mutability":"mutable","name":"_data","nameLocation":"4912:5:10","nodeType":"VariableDeclaration","scope":1274,"src":"4899:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1221,"name":"bytes","nodeType":"ElementaryTypeName","src":"4899:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4898:20:10"},"returnParameters":{"id":1226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1274,"src":"4940:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1224,"name":"uint256","nodeType":"ElementaryTypeName","src":"4940:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4939:9:10"},"scope":1275,"src":"4877:376:10","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":1276,"src":"714:4541:10","usedErrors":[]}],"src":"32:5224:10"},"id":10},"@chainlink/contracts/src/v0.8/vrf/VRF.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRF.sol","exportedSymbols":{"VRF":[2394]},"id":2395,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1277,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:11"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1278,"nodeType":"StructuredDocumentation","src":"57:7124:11","text":"****************************************************************************\n @notice Verification of verifiable-random-function (VRF) proofs, following\n @notice https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3\n @notice See https://eprint.iacr.org/2017/099.pdf for security proofs.\n @dev Bibliographic references:\n @dev Goldberg, et al., \"Verifiable Random Functions (VRFs)\", Internet Draft\n @dev draft-irtf-cfrg-vrf-05, IETF, Aug 11 2019,\n @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05\n @dev Papadopoulos, et al., \"Making NSEC5 Practical for DNSSEC\", Cryptology\n @dev ePrint Archive, Report 2017/099, https://eprint.iacr.org/2017/099.pdf\n ****************************************************************************\n @dev USAGE\n @dev The main entry point is _randomValueFromVRFProof. See its docstring.\n ****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is computationally indistinguishable to her from a uniform\n @dev random sample from the output space.\n @dev The purpose of this contract is to perform that verification.\n ****************************************************************************\n @dev DESIGN NOTES\n @dev The VRF algorithm verified here satisfies the full uniqueness, full\n @dev collision resistance, and full pseudo-randomness security properties.\n @dev See \"SECURITY PROPERTIES\" below, and\n @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-3\n @dev An elliptic curve point is generally represented in the solidity code\n @dev as a uint256[2], corresponding to its affine coordinates in\n @dev GF(FIELD_SIZE).\n @dev For the sake of efficiency, this implementation deviates from the spec\n @dev in some minor ways:\n @dev - Keccak hash rather than the SHA256 hash recommended in\n @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5\n @dev   Keccak costs much less gas on the EVM, and provides similar security.\n @dev - Secp256k1 curve instead of the P-256 or ED25519 curves recommended in\n @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5\n @dev   For curve-point multiplication, it's much cheaper to abuse ECRECOVER\n @dev - _hashToCurve recursively hashes until it finds a curve x-ordinate. On\n @dev   the EVM, this is slightly more efficient than the recommendation in\n @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.1.1\n @dev   step 5, to concatenate with a nonce then hash, and rehash with the\n @dev   nonce updated until a valid x-ordinate is found.\n @dev - _hashToCurve does not include a cipher version string or the byte 0x1\n @dev   in the hash message, as recommended in step 5.B of the draft\n @dev   standard. They are unnecessary here because no variation in the\n @dev   cipher suite is allowed.\n @dev - Similarly, the hash input in _scalarFromCurvePoints does not include a\n @dev   commitment to the cipher suite, either, which differs from step 2 of\n @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.3\n @dev   . Also, the hash input is the concatenation of the uncompressed\n @dev   points, not the compressed points as recommended in step 3.\n @dev - In the calculation of the challenge value \"c\", the \"u\" value (i.e.\n @dev   the value computed by Reggie as the nonce times the secp256k1\n @dev   generator point, see steps 5 and 7 of\n @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3\n @dev   ) is replaced by its ethereum address, i.e. the lower 160 bits of the\n @dev   keccak hash of the original u. This is because we only verify the\n @dev   calculation of u up to its address, by abusing ECRECOVER.\n ****************************************************************************\n @dev   SECURITY PROPERTIES\n @dev Here are the security properties for this VRF:\n @dev Full uniqueness: For any seed and valid VRF public key, there is\n @dev   exactly one VRF output which can be proved to come from that seed, in\n @dev   the sense that the proof will pass _verifyVRFProof.\n @dev Full collision resistance: It's cryptographically infeasible to find\n @dev   two seeds with same VRF output from a fixed, valid VRF key\n @dev Full pseudorandomness: Absent the proofs that the VRF outputs are\n @dev   derived from a given seed, the outputs are computationally\n @dev   indistinguishable from randomness.\n @dev https://eprint.iacr.org/2017/099.pdf, Appendix B contains the proofs\n @dev for these properties.\n @dev For secp256k1, the key validation described in section\n @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.6\n @dev is unnecessary, because secp256k1 has cofactor 1, and the\n @dev representation of the public key used here (affine x- and y-ordinates\n @dev of the secp256k1 point on the standard y^2=x^3+7 curve) cannot refer to\n @dev the point at infinity.\n ****************************************************************************\n @dev OTHER SECURITY CONSIDERATIONS\n @dev The seed input to the VRF could in principle force an arbitrary amount\n @dev of work in _hashToCurve, by requiring extra rounds of hashing and\n @dev checking whether that's yielded the x ordinate of a secp256k1 point.\n @dev However, under the Random Oracle Model the probability of choosing a\n @dev point which forces n extra rounds in _hashToCurve is 2⁻ⁿ. The base cost\n @dev for calling _hashToCurve is about 25,000 gas, and each round of checking\n @dev for a valid x ordinate costs about 15,555 gas, so to find a seed for\n @dev which _hashToCurve would cost more than 2,017,000 gas, one would have to\n @dev try, in expectation, about 2¹²⁸ seeds, which is infeasible for any\n @dev foreseeable computational resources. (25,000 + 128 * 15,555 < 2,017,000.)\n @dev Since the gas block limit for the Ethereum main net is 10,000,000 gas,\n @dev this means it is infeasible for an adversary to prevent correct\n @dev operation of this contract by choosing an adverse seed.\n @dev (See TestMeasureHashToCurveGasCost for verification of the gas cost for\n @dev _hashToCurve.)\n @dev It may be possible to make a secure constant-time _hashToCurve function.\n @dev See notes in _hashToCurve docstring."},"fullyImplemented":true,"id":2394,"linearizedBaseContracts":[2394],"name":"VRF","nameLocation":"7191:3:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1281,"mutability":"constant","name":"GROUP_ORDER","nameLocation":"7338:11:11","nodeType":"VariableDeclaration","scope":2394,"src":"7313:105:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1279,"name":"uint256","nodeType":"ElementaryTypeName","src":"7313:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"307846464646464646464646464646464646464646464646464646464646464646454241414544434536414634384130334242464432354538434430333634313431","id":1280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7352:66:11","typeDescriptions":{"typeIdentifier":"t_rational_115792089237316195423570985008687907852837564279074904382605163141518161494337_by_1","typeString":"int_const 1157...(70 digits omitted)...4337"},"value":"0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141"},"visibility":"private"},{"constant":true,"id":1284,"mutability":"constant","name":"FIELD_SIZE","nameLocation":"7525:10:11","nodeType":"VariableDeclaration","scope":2394,"src":"7500:152:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1282,"name":"uint256","nodeType":"ElementaryTypeName","src":"7500:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"307846464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646454646464646433246","id":1283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7586:66:11","typeDescriptions":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007908834671663_by_1","typeString":"int_const 1157...(70 digits omitted)...1663"},"value":"0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F"},"visibility":"private"},{"constant":true,"id":1287,"mutability":"constant","name":"WORD_LENGTH_BYTES","nameLocation":"7681:17:11","nodeType":"VariableDeclaration","scope":2394,"src":"7656:49:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1285,"name":"uint256","nodeType":"ElementaryTypeName","src":"7656:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783230","id":1286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7701:4:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"visibility":"private"},{"body":{"id":1363,"nodeType":"Block","src":"7924:878:11","statements":[{"assignments":[1297],"declarations":[{"constant":false,"id":1297,"mutability":"mutable","name":"callResult","nameLocation":"7938:10:11","nodeType":"VariableDeclaration","scope":1363,"src":"7930:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1296,"name":"uint256","nodeType":"ElementaryTypeName","src":"7930:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1298,"nodeType":"VariableDeclarationStatement","src":"7930:18:11"},{"assignments":[1304],"declarations":[{"constant":false,"id":1304,"mutability":"mutable","name":"bigModExpContractInputs","nameLocation":"7972:23:11","nodeType":"VariableDeclaration","scope":1363,"src":"7954:41:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6]"},"typeName":{"baseType":{"id":1302,"name":"uint256","nodeType":"ElementaryTypeName","src":"7954:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1303,"length":{"hexValue":"36","id":1301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7962:1:11","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"nodeType":"ArrayTypeName","src":"7954:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_storage_ptr","typeString":"uint256[6]"}},"visibility":"internal"}],"id":1305,"nodeType":"VariableDeclarationStatement","src":"7954:41:11"},{"expression":{"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1306,"name":"bigModExpContractInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"8001:23:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}},"id":1308,"indexExpression":{"hexValue":"30","id":1307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8025:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8001:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1309,"name":"WORD_LENGTH_BYTES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"8030:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8001:46:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1311,"nodeType":"ExpressionStatement","src":"8001:46:11"},{"expression":{"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1312,"name":"bigModExpContractInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"8071:23:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}},"id":1314,"indexExpression":{"hexValue":"31","id":1313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8095:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8071:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1315,"name":"WORD_LENGTH_BYTES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"8100:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8071:46:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1317,"nodeType":"ExpressionStatement","src":"8071:46:11"},{"expression":{"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1318,"name":"bigModExpContractInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"8145:23:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}},"id":1320,"indexExpression":{"hexValue":"32","id":1319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8169:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8145:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1321,"name":"WORD_LENGTH_BYTES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"8174:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8145:46:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1323,"nodeType":"ExpressionStatement","src":"8145:46:11"},{"expression":{"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1324,"name":"bigModExpContractInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"8218:23:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}},"id":1326,"indexExpression":{"hexValue":"33","id":1325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8242:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8218:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1327,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"8247:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8218:33:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1329,"nodeType":"ExpressionStatement","src":"8218:33:11"},{"expression":{"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1330,"name":"bigModExpContractInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"8257:23:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}},"id":1332,"indexExpression":{"hexValue":"34","id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8281:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8257:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1333,"name":"exponent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"8286:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8257:37:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1335,"nodeType":"ExpressionStatement","src":"8257:37:11"},{"expression":{"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1336,"name":"bigModExpContractInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"8300:23:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}},"id":1338,"indexExpression":{"hexValue":"35","id":1337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8324:1:11","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8300:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1339,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"8329:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8300:39:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1341,"nodeType":"ExpressionStatement","src":"8300:39:11"},{"assignments":[1347],"declarations":[{"constant":false,"id":1347,"mutability":"mutable","name":"output","nameLocation":"8363:6:11","nodeType":"VariableDeclaration","scope":1363,"src":"8345:24:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$1_memory_ptr","typeString":"uint256[1]"},"typeName":{"baseType":{"id":1345,"name":"uint256","nodeType":"ElementaryTypeName","src":"8345:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1346,"length":{"hexValue":"31","id":1344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8353:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"ArrayTypeName","src":"8345:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$1_storage_ptr","typeString":"uint256[1]"}},"visibility":"internal"}],"id":1348,"nodeType":"VariableDeclarationStatement","src":"8345:24:11"},{"AST":{"nodeType":"YulBlock","src":"8384:274:11","statements":[{"nodeType":"YulAssignment","src":"8392:260:11","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8430:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8426:3:11"},"nodeType":"YulFunctionCall","src":"8426:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8464:4:11","type":"","value":"0x05"},{"name":"bigModExpContractInputs","nodeType":"YulIdentifier","src":"8508:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"8541:4:11","type":"","value":"0xc0"},{"name":"output","nodeType":"YulIdentifier","src":"8596:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8612:4:11","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"8406:10:11"},"nodeType":"YulFunctionCall","src":"8406:246:11"},"variableNames":[{"name":"callResult","nodeType":"YulIdentifier","src":"8392:10:11"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":1304,"isOffset":false,"isSlot":false,"src":"8508:23:11","valueSize":1},{"declaration":1297,"isOffset":false,"isSlot":false,"src":"8392:10:11","valueSize":1},{"declaration":1347,"isOffset":false,"isSlot":false,"src":"8596:6:11","valueSize":1}],"id":1349,"nodeType":"InlineAssembly","src":"8375:283:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1350,"name":"callResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"8667:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8681:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8667:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1358,"nodeType":"IfStatement","src":"8663:113:11","trueBody":{"id":1357,"nodeType":"Block","src":"8684:92:11","statements":[{"expression":{"arguments":[{"hexValue":"6269674d6f64457870206661696c75726521","id":1354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8748:20:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_4bd695d9be776d24ba6aaa6ea48a189f388adfd8a5e6a1df7bd6471290ea4e5f","typeString":"literal_string \"bigModExp failure!\""},"value":"bigModExp failure!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_4bd695d9be776d24ba6aaa6ea48a189f388adfd8a5e6a1df7bd6471290ea4e5f","typeString":"literal_string \"bigModExp failure!\""}],"id":1353,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8741:6:11","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8741:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1356,"nodeType":"ExpressionStatement","src":"8741:28:11"}]}},{"expression":{"baseExpression":{"id":1359,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"8788:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$1_memory_ptr","typeString":"uint256[1] memory"}},"id":1361,"indexExpression":{"hexValue":"30","id":1360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8795:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8788:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1295,"id":1362,"nodeType":"Return","src":"8781:16:11"}]},"id":1364,"implemented":true,"kind":"function","modifiers":[],"name":"_bigModExp","nameLocation":"7834:10:11","nodeType":"FunctionDefinition","parameters":{"id":1292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1289,"mutability":"mutable","name":"base","nameLocation":"7853:4:11","nodeType":"VariableDeclaration","scope":1364,"src":"7845:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1288,"name":"uint256","nodeType":"ElementaryTypeName","src":"7845:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1291,"mutability":"mutable","name":"exponent","nameLocation":"7867:8:11","nodeType":"VariableDeclaration","scope":1364,"src":"7859:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1290,"name":"uint256","nodeType":"ElementaryTypeName","src":"7859:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7844:32:11"},"returnParameters":{"id":1295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1294,"mutability":"mutable","name":"exponentiation","nameLocation":"7908:14:11","nodeType":"VariableDeclaration","scope":1364,"src":"7900:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1293,"name":"uint256","nodeType":"ElementaryTypeName","src":"7900:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7899:24:11"},"scope":2394,"src":"7825:977:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"constant":true,"id":1372,"mutability":"constant","name":"SQRT_POWER","nameLocation":"9002:10:11","nodeType":"VariableDeclaration","scope":2394,"src":"8977:59:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1365,"name":"uint256","nodeType":"ElementaryTypeName","src":"8977:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":1366,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"9016:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9029:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9016:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1369,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9015:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":1370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9035:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9015:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":1384,"nodeType":"Block","src":"9165:43:11","statements":[{"expression":{"arguments":[{"id":1380,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"9189:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1381,"name":"SQRT_POWER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"9192:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1379,"name":"_bigModExp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"9178:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9178:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1378,"id":1383,"nodeType":"Return","src":"9171:32:11"}]},"id":1385,"implemented":true,"kind":"function","modifiers":[],"name":"_squareRoot","nameLocation":"9110:11:11","nodeType":"FunctionDefinition","parameters":{"id":1375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1374,"mutability":"mutable","name":"x","nameLocation":"9130:1:11","nodeType":"VariableDeclaration","scope":1385,"src":"9122:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1373,"name":"uint256","nodeType":"ElementaryTypeName","src":"9122:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9121:11:11"},"returnParameters":{"id":1378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1385,"src":"9156:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1376,"name":"uint256","nodeType":"ElementaryTypeName","src":"9156:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9155:9:11"},"scope":2394,"src":"9101:107:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1410,"nodeType":"Block","src":"9330:198:11","statements":[{"assignments":[1393],"declarations":[{"constant":false,"id":1393,"mutability":"mutable","name":"xCubed","nameLocation":"9425:6:11","nodeType":"VariableDeclaration","scope":1410,"src":"9417:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1392,"name":"uint256","nodeType":"ElementaryTypeName","src":"9417:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1403,"initialValue":{"arguments":[{"id":1395,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"9441:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1397,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"9451:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1398,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"9454:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1399,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"9457:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1396,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9444:6:11","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9444:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1401,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"9470:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1394,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9434:6:11","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9434:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9417:64:11"},{"expression":{"arguments":[{"id":1405,"name":"xCubed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"9501:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"37","id":1406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9509:1:11","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},{"id":1407,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"9512:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1404,"name":"addmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-2,"src":"9494:6:11","typeDescriptions":{"typeIdentifier":"t_function_addmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9494:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1391,"id":1409,"nodeType":"Return","src":"9487:36:11"}]},"id":1411,"implemented":true,"kind":"function","modifiers":[],"name":"_ySquared","nameLocation":"9277:9:11","nodeType":"FunctionDefinition","parameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1387,"mutability":"mutable","name":"x","nameLocation":"9295:1:11","nodeType":"VariableDeclaration","scope":1411,"src":"9287:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1386,"name":"uint256","nodeType":"ElementaryTypeName","src":"9287:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9286:11:11"},"returnParameters":{"id":1391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1411,"src":"9321:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1389,"name":"uint256","nodeType":"ElementaryTypeName","src":"9321:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9320:9:11"},"scope":2394,"src":"9268:260:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1454,"nodeType":"Block","src":"9634:389:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1421,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"9815:1:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1423,"indexExpression":{"hexValue":"30","id":1422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9817:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9815:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1424,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"9822:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9815:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420782d6f7264696e617465","id":1426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9834:20:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_787cf99fb194dba922561b5b1fd0b18a6a49c57eaa01d9c5279f2b2a5bdc1a86","typeString":"literal_string \"invalid x-ordinate\""},"value":"invalid x-ordinate"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_787cf99fb194dba922561b5b1fd0b18a6a49c57eaa01d9c5279f2b2a5bdc1a86","typeString":"literal_string \"invalid x-ordinate\""}],"id":1420,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9807:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9807:48:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1428,"nodeType":"ExpressionStatement","src":"9807:48:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1430,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"9916:1:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1432,"indexExpression":{"hexValue":"31","id":1431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9918:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9916:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1433,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"9923:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9916:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420792d6f7264696e617465","id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9935:20:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_ecc598139057476f7e46578e2e254b173afe0910225980583669989d2a737f84","typeString":"literal_string \"invalid y-ordinate\""},"value":"invalid y-ordinate"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ecc598139057476f7e46578e2e254b173afe0910225980583669989d2a737f84","typeString":"literal_string \"invalid y-ordinate\""}],"id":1429,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9908:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9908:48:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1437,"nodeType":"ExpressionStatement","src":"9908:48:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":1439,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"9979:1:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1441,"indexExpression":{"hexValue":"30","id":1440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9981:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9979:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1438,"name":"_ySquared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"9969:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9969:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"baseExpression":{"id":1444,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"9995:1:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1446,"indexExpression":{"hexValue":"31","id":1445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9997:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9995:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":1447,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"10001:1:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1449,"indexExpression":{"hexValue":"31","id":1448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10003:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10001:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1450,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"10007:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1443,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9988:6:11","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9988:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:49:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1419,"id":1453,"nodeType":"Return","src":"9962:56:11"}]},"id":1455,"implemented":true,"kind":"function","modifiers":[],"name":"_isOnCurve","nameLocation":"9573:10:11","nodeType":"FunctionDefinition","parameters":{"id":1416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1415,"mutability":"mutable","name":"p","nameLocation":"9602:1:11","nodeType":"VariableDeclaration","scope":1455,"src":"9584:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1412,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1414,"length":{"hexValue":"32","id":1413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9592:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"9584:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"src":"9583:21:11"},"returnParameters":{"id":1419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1455,"src":"9628:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1417,"name":"bool","nodeType":"ElementaryTypeName","src":"9628:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9627:6:11"},"scope":2394,"src":"9564:459:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1490,"nodeType":"Block","src":"10149:339:11","statements":[{"expression":{"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1462,"name":"x_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"10155:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":1466,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"10178:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1465,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10168:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10168:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10160:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1463,"name":"uint256","nodeType":"ElementaryTypeName","src":"10160:7:11","typeDescriptions":{}}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10160:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10155:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1470,"nodeType":"ExpressionStatement","src":"10155:26:11"},{"body":{"id":1486,"nodeType":"Block","src":"10409:60:11","statements":[{"expression":{"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1474,"name":"x_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"10417:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"id":1480,"name":"x_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"10457:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1478,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10440:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"10440:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10440:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1477,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10430:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10430:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10422:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1475,"name":"uint256","nodeType":"ElementaryTypeName","src":"10422:7:11","typeDescriptions":{}}},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10422:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10417:45:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1485,"nodeType":"ExpressionStatement","src":"10417:45:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1471,"name":"x_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"10391:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1472,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"10397:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10391:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1487,"nodeType":"WhileStatement","src":"10384:85:11"},{"expression":{"id":1488,"name":"x_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"10481:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1461,"id":1489,"nodeType":"Return","src":"10474:9:11"}]},"id":1491,"implemented":true,"kind":"function","modifiers":[],"name":"_fieldHash","nameLocation":"10087:10:11","nodeType":"FunctionDefinition","parameters":{"id":1458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1457,"mutability":"mutable","name":"b","nameLocation":"10111:1:11","nodeType":"VariableDeclaration","scope":1491,"src":"10098:14:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1456,"name":"bytes","nodeType":"ElementaryTypeName","src":"10098:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10097:16:11"},"returnParameters":{"id":1461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1460,"mutability":"mutable","name":"x_","nameLocation":"10145:2:11","nodeType":"VariableDeclaration","scope":1491,"src":"10137:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1459,"name":"uint256","nodeType":"ElementaryTypeName","src":"10137:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10136:12:11"},"scope":2394,"src":"10078:410:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1542,"nodeType":"Block","src":"10999:287:11","statements":[{"id":1539,"nodeType":"UncheckedBlock","src":"11005:263:11","statements":[{"expression":{"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1500,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"11023:1:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1502,"indexExpression":{"hexValue":"30","id":1501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11025:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11023:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1504,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"11041:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1503,"name":"_fieldHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"11030:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory) pure returns (uint256)"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11030:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11023:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1507,"nodeType":"ExpressionStatement","src":"11023:20:11"},{"expression":{"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1508,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"11051:1:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1510,"indexExpression":{"hexValue":"31","id":1509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11053:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11051:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"baseExpression":{"id":1513,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"11080:1:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1515,"indexExpression":{"hexValue":"30","id":1514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11082:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11080:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1512,"name":"_ySquared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"11070:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11070:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1511,"name":"_squareRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"11058:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11058:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1519,"nodeType":"ExpressionStatement","src":"11051:35:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1520,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"11098:1:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1522,"indexExpression":{"hexValue":"31","id":1521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11100:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11098:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":1523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11105:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11098:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11110:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11098:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1538,"nodeType":"IfStatement","src":"11094:168:11","trueBody":{"id":1537,"nodeType":"Block","src":"11113:149:11","statements":[{"expression":{"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1527,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"11229:1:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1529,"indexExpression":{"hexValue":"31","id":1528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11229:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1530,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"11236:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":1531,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"11249:1:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1533,"indexExpression":{"hexValue":"31","id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11251:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11249:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11236:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11229:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1536,"nodeType":"ExpressionStatement","src":"11229:24:11"}]}}]},{"expression":{"id":1540,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"11280:1:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"functionReturnParameters":1499,"id":1541,"nodeType":"Return","src":"11273:8:11"}]},"id":1543,"implemented":true,"kind":"function","modifiers":[],"name":"_newCandidateSecp256k1Point","nameLocation":"10911:27:11","nodeType":"FunctionDefinition","parameters":{"id":1494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1493,"mutability":"mutable","name":"b","nameLocation":"10952:1:11","nodeType":"VariableDeclaration","scope":1543,"src":"10939:14:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1492,"name":"bytes","nodeType":"ElementaryTypeName","src":"10939:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10938:16:11"},"returnParameters":{"id":1499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1498,"mutability":"mutable","name":"p","nameLocation":"10996:1:11","nodeType":"VariableDeclaration","scope":1543,"src":"10978:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1495,"name":"uint256","nodeType":"ElementaryTypeName","src":"10978:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1497,"length":{"hexValue":"32","id":1496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10986:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"10978:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"src":"10977:21:11"},"scope":2394,"src":"10902:384:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"constant":true,"id":1546,"mutability":"constant","name":"HASH_TO_CURVE_HASH_PREFIX","nameLocation":"11426:25:11","nodeType":"VariableDeclaration","scope":2394,"src":"11400:55:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1544,"name":"uint256","nodeType":"ElementaryTypeName","src":"11400:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11454:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"body":{"id":1589,"nodeType":"Block","src":"12332:215:11","statements":[{"expression":{"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1559,"name":"rv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"12338:2:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":1563,"name":"HASH_TO_CURVE_HASH_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"12388:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1564,"name":"pk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"12415:2:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":1565,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"12419:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1561,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12371:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"12371:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12371:54:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1560,"name":"_newCandidateSecp256k1Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"12343:27:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_array$_t_uint256_$2_memory_ptr_$","typeString":"function (bytes memory) view returns (uint256[2] memory)"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12343:83:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"src":"12338:88:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1569,"nodeType":"ExpressionStatement","src":"12338:88:11"},{"body":{"id":1585,"nodeType":"Block","src":"12456:72:11","statements":[{"expression":{"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1574,"name":"rv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"12464:2:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"baseExpression":{"id":1578,"name":"rv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"12514:2:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1580,"indexExpression":{"hexValue":"30","id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12517:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12514:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1576,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12497:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"12497:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12497:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1575,"name":"_newCandidateSecp256k1Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"12469:27:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_array$_t_uint256_$2_memory_ptr_$","typeString":"function (bytes memory) view returns (uint256[2] memory)"}},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12469:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"src":"12464:57:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1584,"nodeType":"ExpressionStatement","src":"12464:57:11"}]},"condition":{"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12439:15:11","subExpression":{"arguments":[{"id":1571,"name":"rv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"12451:2:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"id":1570,"name":"_isOnCurve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"12440:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$","typeString":"function (uint256[2] memory) pure returns (bool)"}},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12440:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1586,"nodeType":"WhileStatement","src":"12432:96:11"},{"expression":{"id":1587,"name":"rv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"12540:2:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"functionReturnParameters":1558,"id":1588,"nodeType":"Return","src":"12533:9:11"}]},"id":1590,"implemented":true,"kind":"function","modifiers":[],"name":"_hashToCurve","nameLocation":"12237:12:11","nodeType":"FunctionDefinition","parameters":{"id":1553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1550,"mutability":"mutable","name":"pk","nameLocation":"12268:2:11","nodeType":"VariableDeclaration","scope":1590,"src":"12250:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1547,"name":"uint256","nodeType":"ElementaryTypeName","src":"12250:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1549,"length":{"hexValue":"32","id":1548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12258:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"12250:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":1552,"mutability":"mutable","name":"input","nameLocation":"12280:5:11","nodeType":"VariableDeclaration","scope":1590,"src":"12272:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1551,"name":"uint256","nodeType":"ElementaryTypeName","src":"12272:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12249:37:11"},"returnParameters":{"id":1558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1557,"mutability":"mutable","name":"rv","nameLocation":"12328:2:11","nodeType":"VariableDeclaration","scope":1590,"src":"12310:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1554,"name":"uint256","nodeType":"ElementaryTypeName","src":"12310:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1556,"length":{"hexValue":"32","id":1555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12318:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"12310:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"src":"12309:22:11"},"scope":2394,"src":"12228:319:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1681,"nodeType":"Block","src":"13190:910:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1607,"name":"scalar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"13251:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13261:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13251:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7a65726f207363616c6172","id":1610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13264:13:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_e71e9381bf8fff7d9eeee436d182c3c8b982b1d416953f4ca9ccf572989baeca","typeString":"literal_string \"zero scalar\""},"value":"zero scalar"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e71e9381bf8fff7d9eeee436d182c3c8b982b1d416953f4ca9ccf572989baeca","typeString":"literal_string \"zero scalar\""}],"id":1606,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13243:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13243:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1612,"nodeType":"ExpressionStatement","src":"13243:35:11"},{"assignments":[1614],"declarations":[{"constant":false,"id":1614,"mutability":"mutable","name":"x","nameLocation":"13331:1:11","nodeType":"VariableDeclaration","scope":1681,"src":"13323:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1613,"name":"uint256","nodeType":"ElementaryTypeName","src":"13323:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1618,"initialValue":{"baseExpression":{"id":1615,"name":"multiplicand","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"13335:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1617,"indexExpression":{"hexValue":"30","id":1616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13348:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13335:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13323:27:11"},{"assignments":[1620],"declarations":[{"constant":false,"id":1620,"mutability":"mutable","name":"v","nameLocation":"13392:1:11","nodeType":"VariableDeclaration","scope":1681,"src":"13386:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1619,"name":"uint8","nodeType":"ElementaryTypeName","src":"13386:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1631,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1621,"name":"multiplicand","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"13396:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1623,"indexExpression":{"hexValue":"31","id":1622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13409:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13396:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":1624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13414:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13396:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13419:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13396:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"3238","id":1629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13428:2:11","typeDescriptions":{"typeIdentifier":"t_rational_28_by_1","typeString":"int_const 28"},"value":"28"},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13396:34:11","trueExpression":{"hexValue":"3237","id":1628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13423:2:11","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13386:44:11"},{"assignments":[1633],"declarations":[{"constant":false,"id":1633,"mutability":"mutable","name":"scalarTimesX","nameLocation":"13787:12:11","nodeType":"VariableDeclaration","scope":1681,"src":"13779:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1632,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13779:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1642,"initialValue":{"arguments":[{"arguments":[{"id":1637,"name":"scalar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"13817:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1638,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"13825:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1639,"name":"GROUP_ORDER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"13828:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1636,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"13810:6:11","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13810:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13802:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1634,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13802:7:11","typeDescriptions":{}}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13802:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"13779:62:11"},{"assignments":[1644],"declarations":[{"constant":false,"id":1644,"mutability":"mutable","name":"actual","nameLocation":"13855:6:11","nodeType":"VariableDeclaration","scope":1681,"src":"13847:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1643,"name":"address","nodeType":"ElementaryTypeName","src":"13847:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1657,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":1648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13874:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1646,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13874:7:11","typeDescriptions":{}}},"id":1649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13874:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1650,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"13886:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"id":1653,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"13897:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13889:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1651,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13889:7:11","typeDescriptions":{}}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13889:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1655,"name":"scalarTimesX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"13901:12:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1645,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"13864:9:11","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13864:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13847:67:11"},{"assignments":[1659],"declarations":[{"constant":false,"id":1659,"mutability":"mutable","name":"expected","nameLocation":"13988:8:11","nodeType":"VariableDeclaration","scope":1681,"src":"13980:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1658,"name":"address","nodeType":"ElementaryTypeName","src":"13980:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1675,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":1669,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"14050:7:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"expression":{"id":1667,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14033:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"14033:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14033:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1666,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"14023:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14023:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14015:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1664,"name":"uint256","nodeType":"ElementaryTypeName","src":"14015:7:11","typeDescriptions":{}}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14015:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14007:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1662,"name":"uint160","nodeType":"ElementaryTypeName","src":"14007:7:11","typeDescriptions":{}}},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14007:54:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13999:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1660,"name":"address","nodeType":"ElementaryTypeName","src":"13999:7:11","typeDescriptions":{}}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13999:63:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13980:82:11"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1676,"name":"actual","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"14076:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1677,"name":"expected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"14086:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14076:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1679,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14075:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1605,"id":1680,"nodeType":"Return","src":"14068:27:11"}]},"documentation":{"id":1591,"nodeType":"StructuredDocumentation","src":"12551:485:11","text":"*********************************************************************\n @notice Check that product==scalar*multiplicand\n @dev Based on Vitalik Buterin's idea in ethresear.ch post cited below.\n @param multiplicand: secp256k1 point\n @param scalar: non-zero GF(GROUP_ORDER) scalar\n @param product: secp256k1 expected to be multiplier * multiplicand\n @return verifies true iff product==scalar*multiplicand, with cryptographically high probability"},"id":1682,"implemented":true,"kind":"function","modifiers":[],"name":"_ecmulVerify","nameLocation":"13048:12:11","nodeType":"FunctionDefinition","parameters":{"id":1602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1595,"mutability":"mutable","name":"multiplicand","nameLocation":"13084:12:11","nodeType":"VariableDeclaration","scope":1682,"src":"13066:30:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1592,"name":"uint256","nodeType":"ElementaryTypeName","src":"13066:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1594,"length":{"hexValue":"32","id":1593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13074:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"13066:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":1597,"mutability":"mutable","name":"scalar","nameLocation":"13110:6:11","nodeType":"VariableDeclaration","scope":1682,"src":"13102:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1596,"name":"uint256","nodeType":"ElementaryTypeName","src":"13102:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1601,"mutability":"mutable","name":"product","nameLocation":"13140:7:11","nodeType":"VariableDeclaration","scope":1682,"src":"13122:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1598,"name":"uint256","nodeType":"ElementaryTypeName","src":"13122:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1600,"length":{"hexValue":"32","id":1599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13130:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"13122:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"src":"13060:91:11"},"returnParameters":{"id":1605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1604,"mutability":"mutable","name":"verifies","nameLocation":"13180:8:11","nodeType":"VariableDeclaration","scope":1682,"src":"13175:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1603,"name":"bool","nodeType":"ElementaryTypeName","src":"13175:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13174:15:11"},"scope":2394,"src":"13039:1061:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1736,"nodeType":"Block","src":"14329:349:11","statements":[{"id":1731,"nodeType":"UncheckedBlock","src":"14335:318:11","statements":[{"assignments":[1698],"declarations":[{"constant":false,"id":1698,"mutability":"mutable","name":"num1","nameLocation":"14361:4:11","nodeType":"VariableDeclaration","scope":1731,"src":"14353:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1697,"name":"uint256","nodeType":"ElementaryTypeName","src":"14353:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1704,"initialValue":{"arguments":[{"id":1700,"name":"z2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"14375:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1701,"name":"x1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"14379:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1702,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"14383:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1699,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"14368:6:11","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14368:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14353:41:11"},{"assignments":[1706],"declarations":[{"constant":false,"id":1706,"mutability":"mutable","name":"num2","nameLocation":"14521:4:11","nodeType":"VariableDeclaration","scope":1731,"src":"14513:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1705,"name":"uint256","nodeType":"ElementaryTypeName","src":"14513:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1714,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1708,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"14535:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1709,"name":"x2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"14548:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14535:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1711,"name":"z1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"14552:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1712,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"14556:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1707,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"14528:6:11","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14528:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14513:54:11"},{"expression":{"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1715,"name":"x3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"14576:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1716,"name":"z3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"14580:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1717,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"14575:8:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"arguments":[{"id":1719,"name":"num1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"14594:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1720,"name":"num2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"14600:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1721,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"14606:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1718,"name":"addmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-2,"src":"14587:6:11","typeDescriptions":{"typeIdentifier":"t_function_addmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14587:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1724,"name":"z1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"14626:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1725,"name":"z2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"14630:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1726,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"14634:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1723,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"14619:6:11","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14619:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1728,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14586:60:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"14575:71:11","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1730,"nodeType":"ExpressionStatement","src":"14575:71:11"}]},{"expression":{"components":[{"id":1732,"name":"x3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"14666:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1733,"name":"z3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"14670:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1734,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14665:8:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":1696,"id":1735,"nodeType":"Return","src":"14658:15:11"}]},"id":1737,"implemented":true,"kind":"function","modifiers":[],"name":"_projectiveSub","nameLocation":"14199:14:11","nodeType":"FunctionDefinition","parameters":{"id":1691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"mutability":"mutable","name":"x1","nameLocation":"14227:2:11","nodeType":"VariableDeclaration","scope":1737,"src":"14219:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1683,"name":"uint256","nodeType":"ElementaryTypeName","src":"14219:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1686,"mutability":"mutable","name":"z1","nameLocation":"14243:2:11","nodeType":"VariableDeclaration","scope":1737,"src":"14235:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1685,"name":"uint256","nodeType":"ElementaryTypeName","src":"14235:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1688,"mutability":"mutable","name":"x2","nameLocation":"14259:2:11","nodeType":"VariableDeclaration","scope":1737,"src":"14251:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1687,"name":"uint256","nodeType":"ElementaryTypeName","src":"14251:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1690,"mutability":"mutable","name":"z2","nameLocation":"14275:2:11","nodeType":"VariableDeclaration","scope":1737,"src":"14267:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1689,"name":"uint256","nodeType":"ElementaryTypeName","src":"14267:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14213:68:11"},"returnParameters":{"id":1696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1693,"mutability":"mutable","name":"x3","nameLocation":"14313:2:11","nodeType":"VariableDeclaration","scope":1737,"src":"14305:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1692,"name":"uint256","nodeType":"ElementaryTypeName","src":"14305:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1695,"mutability":"mutable","name":"z3","nameLocation":"14325:2:11","nodeType":"VariableDeclaration","scope":1737,"src":"14317:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1694,"name":"uint256","nodeType":"ElementaryTypeName","src":"14317:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14304:24:11"},"scope":2394,"src":"14190:488:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1772,"nodeType":"Block","src":"14903:99:11","statements":[{"expression":{"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1752,"name":"x3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"14910:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1753,"name":"z3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"14914:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1754,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"14909:8:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"arguments":[{"id":1756,"name":"x1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"14928:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1757,"name":"x2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"14932:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1758,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"14936:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1755,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"14921:6:11","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14921:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1761,"name":"z1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"14956:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1762,"name":"z2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"14960:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1763,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"14964:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1760,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"14949:6:11","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14949:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1765,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14920:56:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"14909:67:11","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1767,"nodeType":"ExpressionStatement","src":"14909:67:11"},{"expression":{"components":[{"id":1768,"name":"x3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"14990:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1769,"name":"z3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"14994:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1770,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14989:8:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":1751,"id":1771,"nodeType":"Return","src":"14982:15:11"}]},"id":1773,"implemented":true,"kind":"function","modifiers":[],"name":"_projectiveMul","nameLocation":"14773:14:11","nodeType":"FunctionDefinition","parameters":{"id":1746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1739,"mutability":"mutable","name":"x1","nameLocation":"14801:2:11","nodeType":"VariableDeclaration","scope":1773,"src":"14793:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1738,"name":"uint256","nodeType":"ElementaryTypeName","src":"14793:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1741,"mutability":"mutable","name":"z1","nameLocation":"14817:2:11","nodeType":"VariableDeclaration","scope":1773,"src":"14809:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1740,"name":"uint256","nodeType":"ElementaryTypeName","src":"14809:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1743,"mutability":"mutable","name":"x2","nameLocation":"14833:2:11","nodeType":"VariableDeclaration","scope":1773,"src":"14825:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1742,"name":"uint256","nodeType":"ElementaryTypeName","src":"14825:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1745,"mutability":"mutable","name":"z2","nameLocation":"14849:2:11","nodeType":"VariableDeclaration","scope":1773,"src":"14841:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1744,"name":"uint256","nodeType":"ElementaryTypeName","src":"14841:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14787:68:11"},"returnParameters":{"id":1751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1748,"mutability":"mutable","name":"x3","nameLocation":"14887:2:11","nodeType":"VariableDeclaration","scope":1773,"src":"14879:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1747,"name":"uint256","nodeType":"ElementaryTypeName","src":"14879:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1750,"mutability":"mutable","name":"z3","nameLocation":"14899:2:11","nodeType":"VariableDeclaration","scope":1773,"src":"14891:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1749,"name":"uint256","nodeType":"ElementaryTypeName","src":"14891:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14878:24:11"},"scope":2394,"src":"14764:238:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1931,"nodeType":"Block","src":"16809:1991:11","statements":[{"id":1925,"nodeType":"UncheckedBlock","src":"16815:1956:11","statements":[{"assignments":[1792,1794],"declarations":[{"constant":false,"id":1792,"mutability":"mutable","name":"z1","nameLocation":"17513:2:11","nodeType":"VariableDeclaration","scope":1925,"src":"17505:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1791,"name":"uint256","nodeType":"ElementaryTypeName","src":"17505:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1794,"mutability":"mutable","name":"z2","nameLocation":"17525:2:11","nodeType":"VariableDeclaration","scope":1925,"src":"17517:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1793,"name":"uint256","nodeType":"ElementaryTypeName","src":"17517:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1798,"initialValue":{"components":[{"hexValue":"31","id":1795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17532:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"31","id":1796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17535:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"id":1797,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17531:6:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_1_by_1_$_t_rational_1_by_1_$","typeString":"tuple(int_const 1,int_const 1)"}},"nodeType":"VariableDeclarationStatement","src":"17504:33:11"},{"assignments":[1800],"declarations":[{"constant":false,"id":1800,"mutability":"mutable","name":"lx","nameLocation":"17684:2:11","nodeType":"VariableDeclaration","scope":1925,"src":"17676:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1799,"name":"uint256","nodeType":"ElementaryTypeName","src":"17676:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1808,"initialValue":{"arguments":[{"id":1802,"name":"qy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"17696:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1803,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"17700:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1804,"name":"py","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"17713:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17700:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1806,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"17717:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1801,"name":"addmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-2,"src":"17689:6:11","typeDescriptions":{"typeIdentifier":"t_function_addmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17689:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17676:52:11"},{"assignments":[1810],"declarations":[{"constant":false,"id":1810,"mutability":"mutable","name":"lz","nameLocation":"17744:2:11","nodeType":"VariableDeclaration","scope":1925,"src":"17736:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1809,"name":"uint256","nodeType":"ElementaryTypeName","src":"17736:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1818,"initialValue":{"arguments":[{"id":1812,"name":"qx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"17756:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1813,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"17760:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1814,"name":"px","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"17773:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17760:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1816,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"17777:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1811,"name":"addmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-2,"src":"17749:6:11","typeDescriptions":{"typeIdentifier":"t_function_addmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17749:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17736:52:11"},{"assignments":[1820],"declarations":[{"constant":false,"id":1820,"mutability":"mutable","name":"dx","nameLocation":"17805:2:11","nodeType":"VariableDeclaration","scope":1925,"src":"17797:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1819,"name":"uint256","nodeType":"ElementaryTypeName","src":"17797:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1821,"nodeType":"VariableDeclarationStatement","src":"17797:10:11"},{"expression":{"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1822,"name":"sx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"17901:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1823,"name":"dx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"17905:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1824,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"17900:8:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1826,"name":"lx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"17926:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1827,"name":"lz","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"17930:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1828,"name":"lx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"17934:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1829,"name":"lz","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"17938:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1825,"name":"_projectiveMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"17911:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"}},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17911:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"17900:41:11","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1832,"nodeType":"ExpressionStatement","src":"17900:41:11"},{"expression":{"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1833,"name":"sx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"17973:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1834,"name":"dx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"17977:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1835,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"17972:8:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1837,"name":"sx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"17998:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1838,"name":"dx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"18002:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1839,"name":"px","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"18006:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1840,"name":"z1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"18010:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1836,"name":"_projectiveSub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"17983:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17983:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"17972:41:11","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1843,"nodeType":"ExpressionStatement","src":"17972:41:11"},{"expression":{"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1844,"name":"sx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"18048:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1845,"name":"dx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"18052:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1846,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"18047:8:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1848,"name":"sx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"18073:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1849,"name":"dx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"18077:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1850,"name":"qx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"18081:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1851,"name":"z2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"18085:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1847,"name":"_projectiveSub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"18058:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"}},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18058:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"18047:41:11","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1854,"nodeType":"ExpressionStatement","src":"18047:41:11"},{"assignments":[1856],"declarations":[{"constant":false,"id":1856,"mutability":"mutable","name":"dy","nameLocation":"18134:2:11","nodeType":"VariableDeclaration","scope":1925,"src":"18126:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1855,"name":"uint256","nodeType":"ElementaryTypeName","src":"18126:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1857,"nodeType":"VariableDeclarationStatement","src":"18126:10:11"},{"expression":{"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1858,"name":"sy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"18232:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1859,"name":"dy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"18236:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1860,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"18231:8:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1862,"name":"px","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"18257:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1863,"name":"z1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"18261:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1864,"name":"sx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"18265:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1865,"name":"dx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"18269:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1861,"name":"_projectiveSub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"18242:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18242:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"18231:41:11","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1868,"nodeType":"ExpressionStatement","src":"18231:41:11"},{"expression":{"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1869,"name":"sy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"18290:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1870,"name":"dy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"18294:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1871,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"18289:8:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1873,"name":"sy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"18315:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1874,"name":"dy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"18319:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1875,"name":"lx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"18323:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1876,"name":"lz","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"18327:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1872,"name":"_projectiveMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"18300:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"}},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18300:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"18289:41:11","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1879,"nodeType":"ExpressionStatement","src":"18289:41:11"},{"expression":{"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1880,"name":"sy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"18367:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1881,"name":"dy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"18371:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1882,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"18366:8:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1884,"name":"sy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"18392:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1885,"name":"dy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"18396:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1886,"name":"py","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"18400:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1887,"name":"z1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"18404:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1883,"name":"_projectiveSub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"18377:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18377:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"18366:41:11","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1890,"nodeType":"ExpressionStatement","src":"18366:41:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1891,"name":"dx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"18451:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1892,"name":"dy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"18457:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18451:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1923,"nodeType":"Block","src":"18669:96:11","statements":[{"expression":{"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1919,"name":"sz","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"18749:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1920,"name":"dx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"18754:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18749:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1922,"nodeType":"ExpressionStatement","src":"18749:7:11"}]},"id":1924,"nodeType":"IfStatement","src":"18447:318:11","trueBody":{"id":1918,"nodeType":"Block","src":"18461:202:11","statements":[{"expression":{"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1894,"name":"sx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"18541:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1896,"name":"sx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"18553:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1897,"name":"dy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"18557:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1898,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"18561:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1895,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"18546:6:11","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18546:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18541:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1901,"nodeType":"ExpressionStatement","src":"18541:31:11"},{"expression":{"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1902,"name":"sy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"18582:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1904,"name":"sy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"18594:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1905,"name":"dx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"18598:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1906,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"18602:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1903,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"18587:6:11","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18587:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18582:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1909,"nodeType":"ExpressionStatement","src":"18582:31:11"},{"expression":{"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1910,"name":"sz","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"18623:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1912,"name":"dx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"18635:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1913,"name":"dy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"18639:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1914,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"18643:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1911,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"18628:6:11","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18628:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18623:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1917,"nodeType":"ExpressionStatement","src":"18623:31:11"}]}}]},{"expression":{"components":[{"id":1926,"name":"sx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"18784:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1927,"name":"sy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"18788:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1928,"name":"sz","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"18792:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1929,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18783:12:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256)"}},"functionReturnParameters":1790,"id":1930,"nodeType":"Return","src":"18776:19:11"}]},"documentation":{"id":1774,"nodeType":"StructuredDocumentation","src":"15006:1647:11","text":"**************************************************************************\n@notice Computes elliptic-curve sum, in projective co-ordinates\n@dev Using projective coordinates avoids costly divisions\n@dev To use this with p and q in affine coordinates, call\n@dev _projectiveECAdd(px, py, qx, qy). This will return\n@dev the addition of (px, py, 1) and (qx, qy, 1), in the\n@dev secp256k1 group.\n@dev This can be used to calculate the z which is the inverse to zInv\n@dev in isValidVRFOutput. But consider using a faster\n@dev re-implementation such as ProjectiveECAdd in the golang vrf package.\n@dev This function assumes [px,py,1],[qx,qy,1] are valid projective\ncoordinates of secp256k1 points. That is safe in this contract,\nbecause this method is only used by _linearCombination, which checks\npoints are on the curve via ecrecover.**************************************************************************\n@param px The first affine coordinate of the first summand\n@param py The second affine coordinate of the first summand\n@param qx The first affine coordinate of the second summand\n@param qy The second affine coordinate of the second summand\n(px,py) and (qx,qy) must be distinct, valid secp256k1 points.**************************************************************************\nReturn values are projective coordinates of [px,py,1]+[qx,qy,1] as points\non secp256k1, in P²(𝔽ₙ)\n@return sx\n@return sy\n@return sz"},"id":1932,"implemented":true,"kind":"function","modifiers":[],"name":"_projectiveECAdd","nameLocation":"16665:16:11","nodeType":"FunctionDefinition","parameters":{"id":1783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1776,"mutability":"mutable","name":"px","nameLocation":"16695:2:11","nodeType":"VariableDeclaration","scope":1932,"src":"16687:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1775,"name":"uint256","nodeType":"ElementaryTypeName","src":"16687:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1778,"mutability":"mutable","name":"py","nameLocation":"16711:2:11","nodeType":"VariableDeclaration","scope":1932,"src":"16703:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1777,"name":"uint256","nodeType":"ElementaryTypeName","src":"16703:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1780,"mutability":"mutable","name":"qx","nameLocation":"16727:2:11","nodeType":"VariableDeclaration","scope":1932,"src":"16719:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1779,"name":"uint256","nodeType":"ElementaryTypeName","src":"16719:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1782,"mutability":"mutable","name":"qy","nameLocation":"16743:2:11","nodeType":"VariableDeclaration","scope":1932,"src":"16735:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1781,"name":"uint256","nodeType":"ElementaryTypeName","src":"16735:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16681:68:11"},"returnParameters":{"id":1790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1785,"mutability":"mutable","name":"sx","nameLocation":"16781:2:11","nodeType":"VariableDeclaration","scope":1932,"src":"16773:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1784,"name":"uint256","nodeType":"ElementaryTypeName","src":"16773:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1787,"mutability":"mutable","name":"sy","nameLocation":"16793:2:11","nodeType":"VariableDeclaration","scope":1932,"src":"16785:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1786,"name":"uint256","nodeType":"ElementaryTypeName","src":"16785:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1789,"mutability":"mutable","name":"sz","nameLocation":"16805:2:11","nodeType":"VariableDeclaration","scope":1932,"src":"16797:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1788,"name":"uint256","nodeType":"ElementaryTypeName","src":"16797:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16772:36:11"},"scope":2394,"src":"16656:2144:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2001,"nodeType":"Block","src":"19209:437:11","statements":[{"assignments":[1950],"declarations":[{"constant":false,"id":1950,"mutability":"mutable","name":"x","nameLocation":"19223:1:11","nodeType":"VariableDeclaration","scope":2001,"src":"19215:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1949,"name":"uint256","nodeType":"ElementaryTypeName","src":"19215:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1951,"nodeType":"VariableDeclarationStatement","src":"19215:9:11"},{"assignments":[1953],"declarations":[{"constant":false,"id":1953,"mutability":"mutable","name":"y","nameLocation":"19238:1:11","nodeType":"VariableDeclaration","scope":2001,"src":"19230:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1952,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1954,"nodeType":"VariableDeclarationStatement","src":"19230:9:11"},{"assignments":[1956],"declarations":[{"constant":false,"id":1956,"mutability":"mutable","name":"z","nameLocation":"19253:1:11","nodeType":"VariableDeclaration","scope":2001,"src":"19245:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1955,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1957,"nodeType":"VariableDeclarationStatement","src":"19245:9:11"},{"expression":{"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1958,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"19261:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1959,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"19264:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1960,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"19267:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1961,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"19260:9:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":1963,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"19289:2:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1965,"indexExpression":{"hexValue":"30","id":1964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19292:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19289:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":1966,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"19296:2:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1968,"indexExpression":{"hexValue":"31","id":1967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19299:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19296:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":1969,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"19303:2:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1971,"indexExpression":{"hexValue":"30","id":1970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19306:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19303:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":1972,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"19310:2:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1974,"indexExpression":{"hexValue":"31","id":1973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19313:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19310:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1962,"name":"_projectiveECAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"19272:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256) pure returns (uint256,uint256,uint256)"}},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19272:44:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256)"}},"src":"19260:56:11","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1977,"nodeType":"ExpressionStatement","src":"19260:56:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1980,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"19384:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1981,"name":"invZ","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"19387:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1982,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"19393:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1979,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"19377:6:11","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19377:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19408:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19377:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e765a206d75737420626520696e7665727365206f66207a","id":1986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19411:27:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_95046d93d9b2e6ba778cd180e8c682e7d907547386cb54bf80bca322c50144ca","typeString":"literal_string \"invZ must be inverse of z\""},"value":"invZ must be inverse of z"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_95046d93d9b2e6ba778cd180e8c682e7d907547386cb54bf80bca322c50144ca","typeString":"literal_string \"invZ must be inverse of z\""}],"id":1978,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19369:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19369:70:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1988,"nodeType":"ExpressionStatement","src":"19369:70:11"},{"expression":{"components":[{"arguments":[{"id":1990,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"19591:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1991,"name":"invZ","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"19594:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1992,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"19600:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1989,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"19584:6:11","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19584:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1995,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"19620:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1996,"name":"invZ","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"19623:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1997,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"19629:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1994,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"19613:6:11","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19613:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1999,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19583:58:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"functionReturnParameters":1948,"id":2000,"nodeType":"Return","src":"19576:65:11"}]},"id":2002,"implemented":true,"kind":"function","modifiers":[],"name":"_affineECAdd","nameLocation":"19080:12:11","nodeType":"FunctionDefinition","parameters":{"id":1943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1936,"mutability":"mutable","name":"p1","nameLocation":"19116:2:11","nodeType":"VariableDeclaration","scope":2002,"src":"19098:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1933,"name":"uint256","nodeType":"ElementaryTypeName","src":"19098:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1935,"length":{"hexValue":"32","id":1934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19106:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"19098:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":1940,"mutability":"mutable","name":"p2","nameLocation":"19142:2:11","nodeType":"VariableDeclaration","scope":2002,"src":"19124:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1937,"name":"uint256","nodeType":"ElementaryTypeName","src":"19124:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1939,"length":{"hexValue":"32","id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19132:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"19124:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":1942,"mutability":"mutable","name":"invZ","nameLocation":"19158:4:11","nodeType":"VariableDeclaration","scope":2002,"src":"19150:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1941,"name":"uint256","nodeType":"ElementaryTypeName","src":"19150:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19092:74:11"},"returnParameters":{"id":1948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2002,"src":"19190:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1944,"name":"uint256","nodeType":"ElementaryTypeName","src":"19190:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1946,"length":{"hexValue":"32","id":1945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19198:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"19190:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"src":"19189:19:11"},"scope":2394,"src":"19071:575:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2088,"nodeType":"Block","src":"19923:1052:11","statements":[{"id":2087,"nodeType":"UncheckedBlock","src":"19993:978:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2018,"name":"lcWitness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"20068:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20089:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20081:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2019,"name":"address","nodeType":"ElementaryTypeName","src":"20081:7:11","typeDescriptions":{}}},"id":2022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20081:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20068:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"626164207769746e657373","id":2024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20093:13:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_7fcbfa9df9f83be5218dd62480bcb5cdae56a970e549b88ff2403f5fcded9211","typeString":"literal_string \"bad witness\""},"value":"bad witness"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7fcbfa9df9f83be5218dd62480bcb5cdae56a970e549b88ff2403f5fcded9211","typeString":"literal_string \"bad witness\""}],"id":2017,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20060:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20060:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2026,"nodeType":"ExpressionStatement","src":"20060:47:11"},{"assignments":[2028],"declarations":[{"constant":false,"id":2028,"mutability":"mutable","name":"v","nameLocation":"20121:1:11","nodeType":"VariableDeclaration","scope":2087,"src":"20115:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2027,"name":"uint8","nodeType":"ElementaryTypeName","src":"20115:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2040,"initialValue":{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2029,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"20126:1:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":2031,"indexExpression":{"hexValue":"31","id":2030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20128:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20126:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":2032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20133:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"20126:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20138:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20126:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2036,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20125:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"3238","id":2038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20148:2:11","typeDescriptions":{"typeIdentifier":"t_rational_28_by_1","typeString":"int_const 28"},"value":"28"},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"20125:25:11","trueExpression":{"hexValue":"3237","id":2037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20143:2:11","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"20115:35:11"},{"assignments":[2042],"declarations":[{"constant":false,"id":2042,"mutability":"mutable","name":"pseudoHash","nameLocation":"20282:10:11","nodeType":"VariableDeclaration","scope":2087,"src":"20274:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2041,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20274:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2055,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2045,"name":"GROUP_ORDER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"20303:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"baseExpression":{"id":2047,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"20324:1:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":2049,"indexExpression":{"hexValue":"30","id":2048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20326:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20324:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2050,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"20330:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2051,"name":"GROUP_ORDER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"20333:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2046,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"20317:6:11","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20317:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20303:42:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20295:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2043,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20295:7:11","typeDescriptions":{}}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20295:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"20274:72:11"},{"assignments":[2057],"declarations":[{"constant":false,"id":2057,"mutability":"mutable","name":"pseudoSignature","nameLocation":"20373:15:11","nodeType":"VariableDeclaration","scope":2087,"src":"20365:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2056,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20365:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2068,"initialValue":{"arguments":[{"arguments":[{"id":2061,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"20406:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2062,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"20409:1:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":2064,"indexExpression":{"hexValue":"30","id":2063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20411:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20409:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2065,"name":"GROUP_ORDER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"20415:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2060,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"20399:6:11","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20399:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20391:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2058,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20391:7:11","typeDescriptions":{}}},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20391:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"20365:63:11"},{"assignments":[2070],"declarations":[{"constant":false,"id":2070,"mutability":"mutable","name":"computed","nameLocation":"20861:8:11","nodeType":"VariableDeclaration","scope":2087,"src":"20853:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2069,"name":"address","nodeType":"ElementaryTypeName","src":"20853:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2082,"initialValue":{"arguments":[{"id":2072,"name":"pseudoHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"20882:10:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2073,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"20894:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"baseExpression":{"id":2076,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"20905:1:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":2078,"indexExpression":{"hexValue":"30","id":2077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20907:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20905:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20897:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2074,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20897:7:11","typeDescriptions":{}}},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20897:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2080,"name":"pseudoSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"20912:15:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2071,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"20872:9:11","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20872:56:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"20853:75:11"},{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2083,"name":"computed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"20943:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2084,"name":"lcWitness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"20955:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20943:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2016,"id":2086,"nodeType":"Return","src":"20936:28:11"}]}]},"id":2089,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyLinearCombinationWithGenerator","nameLocation":"19774:37:11","nodeType":"FunctionDefinition","parameters":{"id":2013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2004,"mutability":"mutable","name":"c","nameLocation":"19825:1:11","nodeType":"VariableDeclaration","scope":2089,"src":"19817:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2003,"name":"uint256","nodeType":"ElementaryTypeName","src":"19817:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2008,"mutability":"mutable","name":"p","nameLocation":"19850:1:11","nodeType":"VariableDeclaration","scope":2089,"src":"19832:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":2005,"name":"uint256","nodeType":"ElementaryTypeName","src":"19832:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2007,"length":{"hexValue":"32","id":2006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19840:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"19832:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":2010,"mutability":"mutable","name":"s","nameLocation":"19865:1:11","nodeType":"VariableDeclaration","scope":2089,"src":"19857:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2009,"name":"uint256","nodeType":"ElementaryTypeName","src":"19857:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2012,"mutability":"mutable","name":"lcWitness","nameLocation":"19880:9:11","nodeType":"VariableDeclaration","scope":2089,"src":"19872:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2011,"name":"address","nodeType":"ElementaryTypeName","src":"19872:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19811:82:11"},"returnParameters":{"id":2016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2089,"src":"19917:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2014,"name":"bool","nodeType":"ElementaryTypeName","src":"19917:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19916:6:11"},"scope":2394,"src":"19765:1210:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2160,"nodeType":"Block","src":"21701:544:11","statements":[{"id":2159,"nodeType":"UncheckedBlock","src":"21707:534:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2119,"name":"cp1Witness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"21836:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":2121,"indexExpression":{"hexValue":"30","id":2120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21847:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21836:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2122,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"21852:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21836:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2124,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21835:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2125,"name":"sp2Witness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"21868:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":2127,"indexExpression":{"hexValue":"30","id":2126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21879:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21868:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2128,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"21884:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21868:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2130,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21867:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21835:60:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"706f696e747320696e2073756d206d7573742062652064697374696e6374","id":2132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21897:32:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ce93c410880bb13bca91831655ee36bc7ab052e7c8cb24dd914165b1030eeca","typeString":"literal_string \"points in sum must be distinct\""},"value":"points in sum must be distinct"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2ce93c410880bb13bca91831655ee36bc7ab052e7c8cb24dd914165b1030eeca","typeString":"literal_string \"points in sum must be distinct\""}],"id":2118,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21827:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21827:103:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2134,"nodeType":"ExpressionStatement","src":"21827:103:11"},{"expression":{"arguments":[{"arguments":[{"id":2137,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"22008:2:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":2138,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"22012:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2139,"name":"cp1Witness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"22015:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"id":2136,"name":"_ecmulVerify","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"21995:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$","typeString":"function (uint256[2] memory,uint256,uint256[2] memory) pure returns (bool)"}},"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21995:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4669727374206d756c20636865636b206661696c6564","id":2141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22028:24:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d9cf4c09fcc6ead19e539ee3210816df98f1219b8b47e830620ffd543bfea51f","typeString":"literal_string \"First mul check failed\""},"value":"First mul check failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d9cf4c09fcc6ead19e539ee3210816df98f1219b8b47e830620ffd543bfea51f","typeString":"literal_string \"First mul check failed\""}],"id":2135,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21987:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21987:66:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2143,"nodeType":"ExpressionStatement","src":"21987:66:11"},{"expression":{"arguments":[{"arguments":[{"id":2146,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"22131:2:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":2147,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"22135:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2148,"name":"sp2Witness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"22138:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"id":2145,"name":"_ecmulVerify","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"22118:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$","typeString":"function (uint256[2] memory,uint256,uint256[2] memory) pure returns (bool)"}},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22118:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5365636f6e64206d756c20636865636b206661696c6564","id":2150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22151:25:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_13447e9fa8630e4bb2fa50f1493aa790167933f55263568ac4ad74cb4d138234","typeString":"literal_string \"Second mul check failed\""},"value":"Second mul check failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13447e9fa8630e4bb2fa50f1493aa790167933f55263568ac4ad74cb4d138234","typeString":"literal_string \"Second mul check failed\""}],"id":2144,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22110:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22110:67:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2152,"nodeType":"ExpressionStatement","src":"22110:67:11"},{"expression":{"arguments":[{"id":2154,"name":"cp1Witness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"22205:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":2155,"name":"sp2Witness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"22217:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":2156,"name":"zInv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"22229:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2153,"name":"_affineECAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"22192:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$","typeString":"function (uint256[2] memory,uint256[2] memory,uint256) pure returns (uint256[2] memory)"}},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22192:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"functionReturnParameters":2117,"id":2158,"nodeType":"Return","src":"22185:49:11"}]}]},"id":2161,"implemented":true,"kind":"function","modifiers":[],"name":"_linearCombination","nameLocation":"21468:18:11","nodeType":"FunctionDefinition","parameters":{"id":2112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2091,"mutability":"mutable","name":"c","nameLocation":"21500:1:11","nodeType":"VariableDeclaration","scope":2161,"src":"21492:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2090,"name":"uint256","nodeType":"ElementaryTypeName","src":"21492:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2095,"mutability":"mutable","name":"p1","nameLocation":"21525:2:11","nodeType":"VariableDeclaration","scope":2161,"src":"21507:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":2092,"name":"uint256","nodeType":"ElementaryTypeName","src":"21507:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2094,"length":{"hexValue":"32","id":2093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21515:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"21507:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":2099,"mutability":"mutable","name":"cp1Witness","nameLocation":"21551:10:11","nodeType":"VariableDeclaration","scope":2161,"src":"21533:28:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":2096,"name":"uint256","nodeType":"ElementaryTypeName","src":"21533:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2098,"length":{"hexValue":"32","id":2097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21541:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"21533:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":2101,"mutability":"mutable","name":"s","nameLocation":"21575:1:11","nodeType":"VariableDeclaration","scope":2161,"src":"21567:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2100,"name":"uint256","nodeType":"ElementaryTypeName","src":"21567:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2105,"mutability":"mutable","name":"p2","nameLocation":"21600:2:11","nodeType":"VariableDeclaration","scope":2161,"src":"21582:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":2102,"name":"uint256","nodeType":"ElementaryTypeName","src":"21582:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2104,"length":{"hexValue":"32","id":2103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21590:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"21582:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":2109,"mutability":"mutable","name":"sp2Witness","nameLocation":"21626:10:11","nodeType":"VariableDeclaration","scope":2161,"src":"21608:28:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":2106,"name":"uint256","nodeType":"ElementaryTypeName","src":"21608:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2108,"length":{"hexValue":"32","id":2107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21616:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"21608:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":2111,"mutability":"mutable","name":"zInv","nameLocation":"21650:4:11","nodeType":"VariableDeclaration","scope":2161,"src":"21642:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2110,"name":"uint256","nodeType":"ElementaryTypeName","src":"21642:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21486:172:11"},"returnParameters":{"id":2117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2161,"src":"21682:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":2113,"name":"uint256","nodeType":"ElementaryTypeName","src":"21682:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2115,"length":{"hexValue":"32","id":2114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21690:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"21682:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"src":"21681:19:11"},"scope":2394,"src":"21459:786:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2164,"mutability":"constant","name":"SCALAR_FROM_CURVE_POINTS_HASH_PREFIX","nameLocation":"22404:36:11","nodeType":"VariableDeclaration","scope":2394,"src":"22378:66:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2162,"name":"uint256","nodeType":"ElementaryTypeName","src":"22378:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":2163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22443:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"internal"},{"body":{"id":2202,"nodeType":"Block","src":"23363:122:11","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2192,"name":"SCALAR_FROM_CURVE_POINTS_HASH_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"23411:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2193,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"23449:4:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":2194,"name":"pk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"23455:2:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":2195,"name":"gamma","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"23459:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":2196,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"23466:1:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":2197,"name":"uWitness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"23469:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2190,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"23394:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"23394:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23394:84:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2189,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"23384:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23384:95:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23376:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2187,"name":"uint256","nodeType":"ElementaryTypeName","src":"23376:7:11","typeDescriptions":{}}},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23376:104:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2186,"id":2201,"nodeType":"Return","src":"23369:111:11"}]},"id":2203,"implemented":true,"kind":"function","modifiers":[],"name":"_scalarFromCurvePoints","nameLocation":"23172:22:11","nodeType":"FunctionDefinition","parameters":{"id":2183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"hash","nameLocation":"23218:4:11","nodeType":"VariableDeclaration","scope":2203,"src":"23200:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":2165,"name":"uint256","nodeType":"ElementaryTypeName","src":"23200:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2167,"length":{"hexValue":"32","id":2166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23208:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"23200:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":2172,"mutability":"mutable","name":"pk","nameLocation":"23246:2:11","nodeType":"VariableDeclaration","scope":2203,"src":"23228:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":2169,"name":"uint256","nodeType":"ElementaryTypeName","src":"23228:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2171,"length":{"hexValue":"32","id":2170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23236:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"23228:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":2176,"mutability":"mutable","name":"gamma","nameLocation":"23272:5:11","nodeType":"VariableDeclaration","scope":2203,"src":"23254:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":2173,"name":"uint256","nodeType":"ElementaryTypeName","src":"23254:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2175,"length":{"hexValue":"32","id":2174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23262:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"23254:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":2178,"mutability":"mutable","name":"uWitness","nameLocation":"23291:8:11","nodeType":"VariableDeclaration","scope":2203,"src":"23283:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2177,"name":"address","nodeType":"ElementaryTypeName","src":"23283:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2182,"mutability":"mutable","name":"v","nameLocation":"23323:1:11","nodeType":"VariableDeclaration","scope":2203,"src":"23305:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":2179,"name":"uint256","nodeType":"ElementaryTypeName","src":"23305:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2181,"length":{"hexValue":"32","id":2180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23313:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"23305:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"src":"23194:134:11"},"returnParameters":{"id":2186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2185,"mutability":"mutable","name":"s","nameLocation":"23360:1:11","nodeType":"VariableDeclaration","scope":2203,"src":"23352:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2184,"name":"uint256","nodeType":"ElementaryTypeName","src":"23352:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23351:11:11"},"scope":2394,"src":"23163:322:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2315,"nodeType":"Block","src":"24328:1575:11","statements":[{"id":2314,"nodeType":"UncheckedBlock","src":"24334:1565:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2234,"name":"pk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"24420:2:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"id":2233,"name":"_isOnCurve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"24409:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$","typeString":"function (uint256[2] memory) pure returns (bool)"}},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24409:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7075626c6963206b6579206973206e6f74206f6e206375727665","id":2236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24425:28:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae4825d6ed8aab0513e68c27d2710aa68bcf110761c187d047951a5ec2580d8c","typeString":"literal_string \"public key is not on curve\""},"value":"public key is not on curve"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae4825d6ed8aab0513e68c27d2710aa68bcf110761c187d047951a5ec2580d8c","typeString":"literal_string \"public key is not on curve\""}],"id":2232,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24401:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24401:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2238,"nodeType":"ExpressionStatement","src":"24401:53:11"},{"expression":{"arguments":[{"arguments":[{"id":2241,"name":"gamma","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"24530:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"id":2240,"name":"_isOnCurve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"24519:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$","typeString":"function (uint256[2] memory) pure returns (bool)"}},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24519:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"67616d6d61206973206e6f74206f6e206375727665","id":2243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24538:23:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6038a70864418dbffbd772a49c391c3536f6b633b3f2ccbcd6a6e15dbadd34c","typeString":"literal_string \"gamma is not on curve\""},"value":"gamma is not on curve"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6038a70864418dbffbd772a49c391c3536f6b633b3f2ccbcd6a6e15dbadd34c","typeString":"literal_string \"gamma is not on curve\""}],"id":2239,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24511:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24511:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2245,"nodeType":"ExpressionStatement","src":"24511:51:11"},{"expression":{"arguments":[{"arguments":[{"id":2248,"name":"cGammaWitness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"24638:13:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"id":2247,"name":"_isOnCurve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"24627:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$","typeString":"function (uint256[2] memory) pure returns (bool)"}},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24627:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6347616d6d615769746e657373206973206e6f74206f6e206375727665","id":2250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24654:31:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f90959a5b25997fe56cdafc2f72d300e298468f5ac5e847db7890be22108d2b","typeString":"literal_string \"cGammaWitness is not on curve\""},"value":"cGammaWitness is not on curve"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9f90959a5b25997fe56cdafc2f72d300e298468f5ac5e847db7890be22108d2b","typeString":"literal_string \"cGammaWitness is not on curve\""}],"id":2246,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24619:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24619:67:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2252,"nodeType":"ExpressionStatement","src":"24619:67:11"},{"expression":{"arguments":[{"arguments":[{"id":2255,"name":"sHashWitness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"24762:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"id":2254,"name":"_isOnCurve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"24751:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$","typeString":"function (uint256[2] memory) pure returns (bool)"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24751:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"73486173685769746e657373206973206e6f74206f6e206375727665","id":2257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24777:30:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_ff425c3ce65530e49c0c35a5fdd7a61b00545f1fcc6482c28903cdcf48ac624f","typeString":"literal_string \"sHashWitness is not on curve\""},"value":"sHashWitness is not on curve"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ff425c3ce65530e49c0c35a5fdd7a61b00545f1fcc6482c28903cdcf48ac624f","typeString":"literal_string \"sHashWitness is not on curve\""}],"id":2253,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24743:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24743:65:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2259,"nodeType":"ExpressionStatement","src":"24743:65:11"},{"expression":{"arguments":[{"arguments":[{"id":2262,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"25289:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2263,"name":"pk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"25292:2:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":2264,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"25296:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2265,"name":"uWitness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"25299:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2261,"name":"_verifyLinearCombinationWithGenerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"25251:37:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,uint256[2] memory,uint256,address) pure returns (bool)"}},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25251:57:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6164647228632a706b2b732a6729213d5f755769746e657373","id":2267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25310:27:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_897d9ab785e875f3b83c51a39f09c2f6a852e06c26e3faf90359e5ad589f8cf1","typeString":"literal_string \"addr(c*pk+s*g)!=_uWitness\""},"value":"addr(c*pk+s*g)!=_uWitness"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_897d9ab785e875f3b83c51a39f09c2f6a852e06c26e3faf90359e5ad589f8cf1","typeString":"literal_string \"addr(c*pk+s*g)!=_uWitness\""}],"id":2260,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25243:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25243:95:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2269,"nodeType":"ExpressionStatement","src":"25243:95:11"},{"assignments":[2275],"declarations":[{"constant":false,"id":2275,"mutability":"mutable","name":"hash","nameLocation":"25451:4:11","nodeType":"VariableDeclaration","scope":2314,"src":"25433:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":2273,"name":"uint256","nodeType":"ElementaryTypeName","src":"25433:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2274,"length":{"hexValue":"32","id":2272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25441:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"25433:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"id":2280,"initialValue":{"arguments":[{"id":2277,"name":"pk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"25471:2:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":2278,"name":"seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"25475:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2276,"name":"_hashToCurve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"25458:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$","typeString":"function (uint256[2] memory,uint256) view returns (uint256[2] memory)"}},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25458:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"nodeType":"VariableDeclarationStatement","src":"25433:47:11"},{"assignments":[2286],"declarations":[{"constant":false,"id":2286,"mutability":"mutable","name":"v","nameLocation":"25590:1:11","nodeType":"VariableDeclaration","scope":2314,"src":"25572:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":2284,"name":"uint256","nodeType":"ElementaryTypeName","src":"25572:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2285,"length":{"hexValue":"32","id":2283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25580:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"25572:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"id":2296,"initialValue":{"arguments":[{"id":2288,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"25613:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2289,"name":"gamma","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"25616:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":2290,"name":"cGammaWitness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"25623:13:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":2291,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"25638:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2292,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"25641:4:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":2293,"name":"sHashWitness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"25647:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":2294,"name":"zInv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"25661:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2287,"name":"_linearCombination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"25594:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$","typeString":"function (uint256,uint256[2] memory,uint256[2] memory,uint256,uint256[2] memory,uint256[2] memory,uint256) pure returns (uint256[2] memory)"}},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25594:72:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"nodeType":"VariableDeclarationStatement","src":"25572:94:11"},{"assignments":[2298],"declarations":[{"constant":false,"id":2298,"mutability":"mutable","name":"derivedC","nameLocation":"25733:8:11","nodeType":"VariableDeclaration","scope":2314,"src":"25725:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2297,"name":"uint256","nodeType":"ElementaryTypeName","src":"25725:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2306,"initialValue":{"arguments":[{"id":2300,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"25767:4:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":2301,"name":"pk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"25773:2:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":2302,"name":"gamma","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"25777:5:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":2303,"name":"uWitness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"25784:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2304,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"25794:1:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"id":2299,"name":"_scalarFromCurvePoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"25744:22:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_address_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[2] memory,uint256[2] memory,uint256[2] memory,address,uint256[2] memory) pure returns (uint256)"}},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25744:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25725:71:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2308,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"25861:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2309,"name":"derivedC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"25866:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25861:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c69642070726f6f66","id":2311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25876:15:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624","typeString":"literal_string \"invalid proof\""},"value":"invalid proof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624","typeString":"literal_string \"invalid proof\""}],"id":2307,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25853:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25853:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2313,"nodeType":"ExpressionStatement","src":"25853:39:11"}]}]},"id":2316,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyVRFProof","nameLocation":"24078:15:11","nodeType":"FunctionDefinition","parameters":{"id":2230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2207,"mutability":"mutable","name":"pk","nameLocation":"24117:2:11","nodeType":"VariableDeclaration","scope":2316,"src":"24099:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":2204,"name":"uint256","nodeType":"ElementaryTypeName","src":"24099:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2206,"length":{"hexValue":"32","id":2205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24107:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"24099:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":2211,"mutability":"mutable","name":"gamma","nameLocation":"24143:5:11","nodeType":"VariableDeclaration","scope":2316,"src":"24125:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":2208,"name":"uint256","nodeType":"ElementaryTypeName","src":"24125:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2210,"length":{"hexValue":"32","id":2209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24133:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"24125:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":2213,"mutability":"mutable","name":"c","nameLocation":"24162:1:11","nodeType":"VariableDeclaration","scope":2316,"src":"24154:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2212,"name":"uint256","nodeType":"ElementaryTypeName","src":"24154:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2215,"mutability":"mutable","name":"s","nameLocation":"24177:1:11","nodeType":"VariableDeclaration","scope":2316,"src":"24169:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2214,"name":"uint256","nodeType":"ElementaryTypeName","src":"24169:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2217,"mutability":"mutable","name":"seed","nameLocation":"24192:4:11","nodeType":"VariableDeclaration","scope":2316,"src":"24184:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2216,"name":"uint256","nodeType":"ElementaryTypeName","src":"24184:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2219,"mutability":"mutable","name":"uWitness","nameLocation":"24210:8:11","nodeType":"VariableDeclaration","scope":2316,"src":"24202:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2218,"name":"address","nodeType":"ElementaryTypeName","src":"24202:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2223,"mutability":"mutable","name":"cGammaWitness","nameLocation":"24242:13:11","nodeType":"VariableDeclaration","scope":2316,"src":"24224:31:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":2220,"name":"uint256","nodeType":"ElementaryTypeName","src":"24224:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2222,"length":{"hexValue":"32","id":2221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24232:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"24224:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":2227,"mutability":"mutable","name":"sHashWitness","nameLocation":"24279:12:11","nodeType":"VariableDeclaration","scope":2316,"src":"24261:30:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":2224,"name":"uint256","nodeType":"ElementaryTypeName","src":"24261:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2226,"length":{"hexValue":"32","id":2225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24269:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"24261:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":2229,"mutability":"mutable","name":"zInv","nameLocation":"24305:4:11","nodeType":"VariableDeclaration","scope":2316,"src":"24297:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2228,"name":"uint256","nodeType":"ElementaryTypeName","src":"24297:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24093:220:11"},"returnParameters":{"id":2231,"nodeType":"ParameterList","parameters":[],"src":"24328:0:11"},"scope":2394,"src":"24069:1834:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"constant":true,"id":2319,"mutability":"constant","name":"VRF_RANDOM_OUTPUT_HASH_PREFIX","nameLocation":"26059:29:11","nodeType":"VariableDeclaration","scope":2394,"src":"26033:59:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2317,"name":"uint256","nodeType":"ElementaryTypeName","src":"26033:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33","id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26091:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"internal"},{"canonicalName":"VRF.Proof","id":2346,"members":[{"constant":false,"id":2323,"mutability":"mutable","name":"pk","nameLocation":"26127:2:11","nodeType":"VariableDeclaration","scope":2346,"src":"26116:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":2320,"name":"uint256","nodeType":"ElementaryTypeName","src":"26116:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2322,"length":{"hexValue":"32","id":2321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26124:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"26116:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":2327,"mutability":"mutable","name":"gamma","nameLocation":"26146:5:11","nodeType":"VariableDeclaration","scope":2346,"src":"26135:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":2324,"name":"uint256","nodeType":"ElementaryTypeName","src":"26135:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2326,"length":{"hexValue":"32","id":2325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26143:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"26135:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":2329,"mutability":"mutable","name":"c","nameLocation":"26165:1:11","nodeType":"VariableDeclaration","scope":2346,"src":"26157:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2328,"name":"uint256","nodeType":"ElementaryTypeName","src":"26157:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2331,"mutability":"mutable","name":"s","nameLocation":"26180:1:11","nodeType":"VariableDeclaration","scope":2346,"src":"26172:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2330,"name":"uint256","nodeType":"ElementaryTypeName","src":"26172:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2333,"mutability":"mutable","name":"seed","nameLocation":"26195:4:11","nodeType":"VariableDeclaration","scope":2346,"src":"26187:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2332,"name":"uint256","nodeType":"ElementaryTypeName","src":"26187:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2335,"mutability":"mutable","name":"uWitness","nameLocation":"26213:8:11","nodeType":"VariableDeclaration","scope":2346,"src":"26205:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2334,"name":"address","nodeType":"ElementaryTypeName","src":"26205:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2339,"mutability":"mutable","name":"cGammaWitness","nameLocation":"26238:13:11","nodeType":"VariableDeclaration","scope":2346,"src":"26227:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":2336,"name":"uint256","nodeType":"ElementaryTypeName","src":"26227:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2338,"length":{"hexValue":"32","id":2337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26235:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"26227:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":2343,"mutability":"mutable","name":"sHashWitness","nameLocation":"26268:12:11","nodeType":"VariableDeclaration","scope":2346,"src":"26257:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":2340,"name":"uint256","nodeType":"ElementaryTypeName","src":"26257:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2342,"length":{"hexValue":"32","id":2341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26265:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"26257:10:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":2345,"mutability":"mutable","name":"zInv","nameLocation":"26294:4:11","nodeType":"VariableDeclaration","scope":2346,"src":"26286:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2344,"name":"uint256","nodeType":"ElementaryTypeName","src":"26286:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Proof","nameLocation":"26104:5:11","nodeType":"StructDefinition","scope":2394,"src":"26097:206:11","visibility":"public"},{"body":{"id":2392,"nodeType":"Block","src":"26881:310:11","statements":[{"expression":{"arguments":[{"expression":{"id":2357,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"26910:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$2346_memory_ptr","typeString":"struct VRF.Proof memory"}},"id":2358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"pk","nodeType":"MemberAccess","referencedDeclaration":2323,"src":"26910:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"expression":{"id":2359,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"26926:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$2346_memory_ptr","typeString":"struct VRF.Proof memory"}},"id":2360,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"gamma","nodeType":"MemberAccess","referencedDeclaration":2327,"src":"26926:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"expression":{"id":2361,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"26945:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$2346_memory_ptr","typeString":"struct VRF.Proof memory"}},"id":2362,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"c","nodeType":"MemberAccess","referencedDeclaration":2329,"src":"26945:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2363,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"26960:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$2346_memory_ptr","typeString":"struct VRF.Proof memory"}},"id":2364,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"s","nodeType":"MemberAccess","referencedDeclaration":2331,"src":"26960:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2365,"name":"seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"26975:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2366,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"26987:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$2346_memory_ptr","typeString":"struct VRF.Proof memory"}},"id":2367,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"uWitness","nodeType":"MemberAccess","referencedDeclaration":2335,"src":"26987:14:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2368,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"27009:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$2346_memory_ptr","typeString":"struct VRF.Proof memory"}},"id":2369,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"cGammaWitness","nodeType":"MemberAccess","referencedDeclaration":2339,"src":"27009:19:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"expression":{"id":2370,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"27036:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$2346_memory_ptr","typeString":"struct VRF.Proof memory"}},"id":2371,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sHashWitness","nodeType":"MemberAccess","referencedDeclaration":2343,"src":"27036:18:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"expression":{"id":2372,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"27062:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$2346_memory_ptr","typeString":"struct VRF.Proof memory"}},"id":2373,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"zInv","nodeType":"MemberAccess","referencedDeclaration":2345,"src":"27062:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2356,"name":"_verifyVRFProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"26887:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint256[2] memory,uint256[2] memory,uint256,uint256,uint256,address,uint256[2] memory,uint256[2] memory,uint256) view"}},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26887:191:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2375,"nodeType":"ExpressionStatement","src":"26887:191:11"},{"expression":{"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2376,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"27084:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"id":2382,"name":"VRF_RANDOM_OUTPUT_HASH_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"27122:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2383,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"27153:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$2346_memory_ptr","typeString":"struct VRF.Proof memory"}},"id":2384,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"gamma","nodeType":"MemberAccess","referencedDeclaration":2327,"src":"27153:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"expression":{"id":2380,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"27111:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"27111:10:11","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27111:54:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2379,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"27101:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27101:65:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27093:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2377,"name":"uint256","nodeType":"ElementaryTypeName","src":"27093:7:11","typeDescriptions":{}}},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27093:74:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27084:83:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2389,"nodeType":"ExpressionStatement","src":"27084:83:11"},{"expression":{"id":2390,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"27180:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2355,"id":2391,"nodeType":"Return","src":"27173:13:11"}]},"id":2393,"implemented":true,"kind":"function","modifiers":[],"name":"_randomValueFromVRFProof","nameLocation":"26783:24:11","nodeType":"FunctionDefinition","parameters":{"id":2352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2349,"mutability":"mutable","name":"proof","nameLocation":"26821:5:11","nodeType":"VariableDeclaration","scope":2393,"src":"26808:18:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$2346_memory_ptr","typeString":"struct VRF.Proof"},"typeName":{"id":2348,"nodeType":"UserDefinedTypeName","pathNode":{"id":2347,"name":"Proof","nodeType":"IdentifierPath","referencedDeclaration":2346,"src":"26808:5:11"},"referencedDeclaration":2346,"src":"26808:5:11","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$2346_storage_ptr","typeString":"struct VRF.Proof"}},"visibility":"internal"},{"constant":false,"id":2351,"mutability":"mutable","name":"seed","nameLocation":"26836:4:11","nodeType":"VariableDeclaration","scope":2393,"src":"26828:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2350,"name":"uint256","nodeType":"ElementaryTypeName","src":"26828:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26807:34:11"},"returnParameters":{"id":2355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2354,"mutability":"mutable","name":"output","nameLocation":"26873:6:11","nodeType":"VariableDeclaration","scope":2393,"src":"26865:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2353,"name":"uint256","nodeType":"ElementaryTypeName","src":"26865:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26864:16:11"},"scope":2394,"src":"26774:417:11","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2395,"src":"7182:20011:11","usedErrors":[]}],"src":"32:27162:11"},"id":11},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","exportedSymbols":{"VRFConsumerBaseV2":[2452]},"id":2453,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2396,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:12"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2397,"nodeType":"StructuredDocumentation","src":"57:5275:12","text":"****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinator\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords),\n @dev see (VRFCoordinatorInterface for a description of the arguments).\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."},"fullyImplemented":false,"id":2452,"linearizedBaseContracts":[2452],"name":"VRFConsumerBaseV2","nameLocation":"5351:17:12","nodeType":"ContractDefinition","nodes":[{"id":2403,"name":"OnlyCoordinatorCanFulfill","nameLocation":"5379:25:12","nodeType":"ErrorDefinition","parameters":{"id":2402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2399,"mutability":"mutable","name":"have","nameLocation":"5413:4:12","nodeType":"VariableDeclaration","scope":2403,"src":"5405:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2398,"name":"address","nodeType":"ElementaryTypeName","src":"5405:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2401,"mutability":"mutable","name":"want","nameLocation":"5427:4:12","nodeType":"VariableDeclaration","scope":2403,"src":"5419:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2400,"name":"address","nodeType":"ElementaryTypeName","src":"5419:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5404:28:12"},"src":"5373:60:12"},{"constant":false,"id":2405,"mutability":"immutable","name":"vrfCoordinator","nameLocation":"5546:14:12","nodeType":"VariableDeclaration","scope":2452,"src":"5520:40:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2404,"name":"address","nodeType":"ElementaryTypeName","src":"5520:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":2415,"nodeType":"Block","src":"5677:43:12","statements":[{"expression":{"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2411,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"5683:14:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2412,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"5700:15:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5683:32:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2414,"nodeType":"ExpressionStatement","src":"5683:32:12"}]},"documentation":{"id":2406,"nodeType":"StructuredDocumentation","src":"5565:72:12","text":" @param _vrfCoordinator address of VRFCoordinator contract"},"id":2416,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2408,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"5660:15:12","nodeType":"VariableDeclaration","scope":2416,"src":"5652:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2407,"name":"address","nodeType":"ElementaryTypeName","src":"5652:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5651:25:12"},"returnParameters":{"id":2410,"nodeType":"ParameterList","parameters":[],"src":"5677:0:12"},"scope":2452,"src":"5640:80:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":2417,"nodeType":"StructuredDocumentation","src":"5724:686:12","text":" @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"},"id":2425,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"6514:18:12","nodeType":"FunctionDefinition","parameters":{"id":2423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2419,"mutability":"mutable","name":"requestId","nameLocation":"6541:9:12","nodeType":"VariableDeclaration","scope":2425,"src":"6533:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2418,"name":"uint256","nodeType":"ElementaryTypeName","src":"6533:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2422,"mutability":"mutable","name":"randomWords","nameLocation":"6569:11:12","nodeType":"VariableDeclaration","scope":2425,"src":"6552:28:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2420,"name":"uint256","nodeType":"ElementaryTypeName","src":"6552:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2421,"nodeType":"ArrayTypeName","src":"6552:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6532:49:12"},"returnParameters":{"id":2424,"nodeType":"ParameterList","parameters":[],"src":"6598:0:12"},"scope":2452,"src":"6505:94:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2450,"nodeType":"Block","src":"6883:167:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2433,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6893:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6893:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2435,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"6907:14:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6893:28:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2444,"nodeType":"IfStatement","src":"6889:109:12","trueBody":{"id":2443,"nodeType":"Block","src":"6923:75:12","statements":[{"errorCall":{"arguments":[{"expression":{"id":2438,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6964:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6964:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2440,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"6976:14:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2437,"name":"OnlyCoordinatorCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"6938:25:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6938:53:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2442,"nodeType":"RevertStatement","src":"6931:60:12"}]}},{"expression":{"arguments":[{"id":2446,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"7022:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2447,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"7033:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2445,"name":"fulfillRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"7003:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory)"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7003:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2449,"nodeType":"ExpressionStatement","src":"7003:42:12"}]},"functionSelector":"1fe543e3","id":2451,"implemented":true,"kind":"function","modifiers":[],"name":"rawFulfillRandomWords","nameLocation":"6803:21:12","nodeType":"FunctionDefinition","parameters":{"id":2431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2427,"mutability":"mutable","name":"requestId","nameLocation":"6833:9:12","nodeType":"VariableDeclaration","scope":2451,"src":"6825:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2426,"name":"uint256","nodeType":"ElementaryTypeName","src":"6825:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2430,"mutability":"mutable","name":"randomWords","nameLocation":"6861:11:12","nodeType":"VariableDeclaration","scope":2451,"src":"6844:28:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2428,"name":"uint256","nodeType":"ElementaryTypeName","src":"6844:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2429,"nodeType":"ArrayTypeName","src":"6844:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6824:49:12"},"returnParameters":{"id":2432,"nodeType":"ParameterList","parameters":[],"src":"6883:0:12"},"scope":2452,"src":"6794:256:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2453,"src":"5333:1719:12","usedErrors":[2403]}],"src":"32:7021:12"},"id":12},"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol","exportedSymbols":{"AggregatorV3Interface":[590],"BlockhashStoreInterface":[4786],"ChainSpecificUtil":[352],"ConfirmedOwner":[381],"IERC677Receiver":[602],"LinkTokenInterface":[713],"TypeAndVersionInterface":[360],"VRF":[2394],"VRFConsumerBaseV2":[2452],"VRFCoordinatorV2":[4776],"VRFCoordinatorV2Interface":[4882]},"id":4777,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2454,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:13"},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol","file":"../shared/interfaces/LinkTokenInterface.sol","id":2456,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4777,"sourceUnit":714,"src":"57:79:13","symbolAliases":[{"foreign":{"id":2455,"name":"LinkTokenInterface","nodeType":"Identifier","overloadedDeclarations":[],"src":"65:18:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/interfaces/BlockhashStoreInterface.sol","file":"./interfaces/BlockhashStoreInterface.sol","id":2458,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4777,"sourceUnit":4787,"src":"137:81:13","symbolAliases":[{"foreign":{"id":2457,"name":"BlockhashStoreInterface","nodeType":"Identifier","overloadedDeclarations":[],"src":"145:23:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol","file":"../shared/interfaces/AggregatorV3Interface.sol","id":2460,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4777,"sourceUnit":591,"src":"219:85:13","symbolAliases":[{"foreign":{"id":2459,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"src":"227:21:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol","file":"./interfaces/VRFCoordinatorV2Interface.sol","id":2462,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4777,"sourceUnit":4883,"src":"305:85:13","symbolAliases":[{"foreign":{"id":2461,"name":"VRFCoordinatorV2Interface","nodeType":"Identifier","overloadedDeclarations":[],"src":"313:25:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol","file":"../interfaces/TypeAndVersionInterface.sol","id":2464,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4777,"sourceUnit":361,"src":"391:82:13","symbolAliases":[{"foreign":{"id":2463,"name":"TypeAndVersionInterface","nodeType":"Identifier","overloadedDeclarations":[],"src":"399:23:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol","file":"../shared/interfaces/IERC677Receiver.sol","id":2466,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4777,"sourceUnit":603,"src":"474:73:13","symbolAliases":[{"foreign":{"id":2465,"name":"IERC677Receiver","nodeType":"Identifier","overloadedDeclarations":[],"src":"482:15:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRF.sol","file":"./VRF.sol","id":2468,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4777,"sourceUnit":2395,"src":"548:30:13","symbolAliases":[{"foreign":{"id":2467,"name":"VRF","nodeType":"Identifier","overloadedDeclarations":[],"src":"556:3:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol","file":"../shared/access/ConfirmedOwner.sol","id":2470,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4777,"sourceUnit":382,"src":"579:67:13","symbolAliases":[{"foreign":{"id":2469,"name":"ConfirmedOwner","nodeType":"Identifier","overloadedDeclarations":[],"src":"587:14:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","file":"./VRFConsumerBaseV2.sol","id":2472,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4777,"sourceUnit":2453,"src":"647:58:13","symbolAliases":[{"foreign":{"id":2471,"name":"VRFConsumerBaseV2","nodeType":"Identifier","overloadedDeclarations":[],"src":"655:17:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/ChainSpecificUtil.sol","file":"../ChainSpecificUtil.sol","id":2474,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4777,"sourceUnit":353,"src":"706:59:13","symbolAliases":[{"foreign":{"id":2473,"name":"ChainSpecificUtil","nodeType":"Identifier","overloadedDeclarations":[],"src":"714:17:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2475,"name":"VRF","nodeType":"IdentifierPath","referencedDeclaration":2394,"src":"796:3:13"},"id":2476,"nodeType":"InheritanceSpecifier","src":"796:3:13"},{"baseName":{"id":2477,"name":"ConfirmedOwner","nodeType":"IdentifierPath","referencedDeclaration":381,"src":"801:14:13"},"id":2478,"nodeType":"InheritanceSpecifier","src":"801:14:13"},{"baseName":{"id":2479,"name":"TypeAndVersionInterface","nodeType":"IdentifierPath","referencedDeclaration":360,"src":"817:23:13"},"id":2480,"nodeType":"InheritanceSpecifier","src":"817:23:13"},{"baseName":{"id":2481,"name":"VRFCoordinatorV2Interface","nodeType":"IdentifierPath","referencedDeclaration":4882,"src":"842:25:13"},"id":2482,"nodeType":"InheritanceSpecifier","src":"842:25:13"},{"baseName":{"id":2483,"name":"IERC677Receiver","nodeType":"IdentifierPath","referencedDeclaration":602,"src":"869:15:13"},"id":2484,"nodeType":"InheritanceSpecifier","src":"869:15:13"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4776,"linearizedBaseContracts":[4776,602,4882,360,381,544,618,2394],"name":"VRFCoordinatorV2","nameLocation":"776:16:13","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"1b6b6d23","id":2487,"mutability":"immutable","name":"LINK","nameLocation":"1009:4:13","nodeType":"VariableDeclaration","scope":4776,"src":"973:40:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$713","typeString":"contract LinkTokenInterface"},"typeName":{"id":2486,"nodeType":"UserDefinedTypeName","pathNode":{"id":2485,"name":"LinkTokenInterface","nodeType":"IdentifierPath","referencedDeclaration":713,"src":"973:18:13"},"referencedDeclaration":713,"src":"973:18:13","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$713","typeString":"contract LinkTokenInterface"}},"visibility":"public"},{"constant":false,"functionSelector":"ad178361","id":2490,"mutability":"immutable","name":"LINK_ETH_FEED","nameLocation":"1140:13:13","nodeType":"VariableDeclaration","scope":4776,"src":"1101:52:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$590","typeString":"contract AggregatorV3Interface"},"typeName":{"id":2489,"nodeType":"UserDefinedTypeName","pathNode":{"id":2488,"name":"AggregatorV3Interface","nodeType":"IdentifierPath","referencedDeclaration":590,"src":"1101:21:13"},"referencedDeclaration":590,"src":"1101:21:13","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$590","typeString":"contract AggregatorV3Interface"}},"visibility":"public"},{"constant":false,"functionSelector":"689c4517","id":2493,"mutability":"immutable","name":"BLOCKHASH_STORE","nameLocation":"1282:15:13","nodeType":"VariableDeclaration","scope":4776,"src":"1241:56:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_BlockhashStoreInterface_$4786","typeString":"contract BlockhashStoreInterface"},"typeName":{"id":2492,"nodeType":"UserDefinedTypeName","pathNode":{"id":2491,"name":"BlockhashStoreInterface","nodeType":"IdentifierPath","referencedDeclaration":4786,"src":"1241:23:13"},"referencedDeclaration":4786,"src":"1241:23:13","typeDescriptions":{"typeIdentifier":"t_contract$_BlockhashStoreInterface_$4786","typeString":"contract BlockhashStoreInterface"}},"visibility":"public"},{"constant":true,"functionSelector":"64d51a2a","id":2496,"mutability":"constant","name":"MAX_CONSUMERS","nameLocation":"1526:13:13","nodeType":"VariableDeclaration","scope":4776,"src":"1503:42:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2494,"name":"uint16","nodeType":"ElementaryTypeName","src":"1503:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"313030","id":2495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1542:3:13","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"public"},{"id":2498,"name":"TooManyConsumers","nameLocation":"1555:16:13","nodeType":"ErrorDefinition","parameters":{"id":2497,"nodeType":"ParameterList","parameters":[],"src":"1571:2:13"},"src":"1549:25:13"},{"id":2500,"name":"InsufficientBalance","nameLocation":"1583:19:13","nodeType":"ErrorDefinition","parameters":{"id":2499,"nodeType":"ParameterList","parameters":[],"src":"1602:2:13"},"src":"1577:28:13"},{"id":2506,"name":"InvalidConsumer","nameLocation":"1614:15:13","nodeType":"ErrorDefinition","parameters":{"id":2505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2502,"mutability":"mutable","name":"subId","nameLocation":"1637:5:13","nodeType":"VariableDeclaration","scope":2506,"src":"1630:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2501,"name":"uint64","nodeType":"ElementaryTypeName","src":"1630:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2504,"mutability":"mutable","name":"consumer","nameLocation":"1652:8:13","nodeType":"VariableDeclaration","scope":2506,"src":"1644:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2503,"name":"address","nodeType":"ElementaryTypeName","src":"1644:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1629:32:13"},"src":"1608:54:13"},{"id":2508,"name":"InvalidSubscription","nameLocation":"1671:19:13","nodeType":"ErrorDefinition","parameters":{"id":2507,"nodeType":"ParameterList","parameters":[],"src":"1690:2:13"},"src":"1665:28:13"},{"id":2510,"name":"OnlyCallableFromLink","nameLocation":"1702:20:13","nodeType":"ErrorDefinition","parameters":{"id":2509,"nodeType":"ParameterList","parameters":[],"src":"1722:2:13"},"src":"1696:29:13"},{"id":2512,"name":"InvalidCalldata","nameLocation":"1734:15:13","nodeType":"ErrorDefinition","parameters":{"id":2511,"nodeType":"ParameterList","parameters":[],"src":"1749:2:13"},"src":"1728:24:13"},{"id":2516,"name":"MustBeSubOwner","nameLocation":"1761:14:13","nodeType":"ErrorDefinition","parameters":{"id":2515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2514,"mutability":"mutable","name":"owner","nameLocation":"1784:5:13","nodeType":"VariableDeclaration","scope":2516,"src":"1776:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2513,"name":"address","nodeType":"ElementaryTypeName","src":"1776:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1775:15:13"},"src":"1755:36:13"},{"id":2518,"name":"PendingRequestExists","nameLocation":"1800:20:13","nodeType":"ErrorDefinition","parameters":{"id":2517,"nodeType":"ParameterList","parameters":[],"src":"1820:2:13"},"src":"1794:29:13"},{"id":2522,"name":"MustBeRequestedOwner","nameLocation":"1832:20:13","nodeType":"ErrorDefinition","parameters":{"id":2521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2520,"mutability":"mutable","name":"proposedOwner","nameLocation":"1861:13:13","nodeType":"VariableDeclaration","scope":2522,"src":"1853:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2519,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1852:23:13"},"src":"1826:50:13"},{"id":2528,"name":"BalanceInvariantViolated","nameLocation":"1885:24:13","nodeType":"ErrorDefinition","parameters":{"id":2527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2524,"mutability":"mutable","name":"internalBalance","nameLocation":"1918:15:13","nodeType":"VariableDeclaration","scope":2528,"src":"1910:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2523,"name":"uint256","nodeType":"ElementaryTypeName","src":"1910:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2526,"mutability":"mutable","name":"externalBalance","nameLocation":"1943:15:13","nodeType":"VariableDeclaration","scope":2528,"src":"1935:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2525,"name":"uint256","nodeType":"ElementaryTypeName","src":"1935:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1909:50:13"},"src":"1879:81:13"},{"anonymous":false,"id":2534,"name":"FundsRecovered","nameLocation":"1992:14:13","nodeType":"EventDefinition","parameters":{"id":2533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2530,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"2015:2:13","nodeType":"VariableDeclaration","scope":2534,"src":"2007:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2529,"name":"address","nodeType":"ElementaryTypeName","src":"2007:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2532,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2027:6:13","nodeType":"VariableDeclaration","scope":2534,"src":"2019:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2531,"name":"uint256","nodeType":"ElementaryTypeName","src":"2019:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2006:28:13"},"src":"1986:49:13"},{"canonicalName":"VRFCoordinatorV2.Subscription","id":2539,"members":[{"constant":false,"id":2536,"mutability":"mutable","name":"balance","nameLocation":"2247:7:13","nodeType":"VariableDeclaration","scope":2539,"src":"2240:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2535,"name":"uint96","nodeType":"ElementaryTypeName","src":"2240:6:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2538,"mutability":"mutable","name":"reqCount","nameLocation":"2322:8:13","nodeType":"VariableDeclaration","scope":2539,"src":"2315:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2537,"name":"uint64","nodeType":"ElementaryTypeName","src":"2315:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"Subscription","nameLocation":"2116:12:13","nodeType":"StructDefinition","scope":4776,"src":"2109:243:13","visibility":"public"},{"canonicalName":"VRFCoordinatorV2.SubscriptionConfig","id":2547,"members":[{"constant":false,"id":2541,"mutability":"mutable","name":"owner","nameLocation":"2436:5:13","nodeType":"VariableDeclaration","scope":2547,"src":"2428:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2540,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2543,"mutability":"mutable","name":"requestedOwner","nameLocation":"2498:14:13","nodeType":"VariableDeclaration","scope":2547,"src":"2490:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2542,"name":"address","nodeType":"ElementaryTypeName","src":"2490:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2546,"mutability":"mutable","name":"consumers","nameLocation":"2972:9:13","nodeType":"VariableDeclaration","scope":2547,"src":"2962:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2544,"name":"address","nodeType":"ElementaryTypeName","src":"2962:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2545,"nodeType":"ArrayTypeName","src":"2962:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"name":"SubscriptionConfig","nameLocation":"2403:18:13","nodeType":"StructDefinition","scope":4776,"src":"2396:590:13","visibility":"public"},{"constant":false,"id":2553,"mutability":"mutable","name":"s_consumers","nameLocation":"3169:11:13","nodeType":"VariableDeclaration","scope":4776,"src":"3076:104:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint64_$_$","typeString":"mapping(address => mapping(uint64 => uint64))"},"typeName":{"id":2552,"keyType":{"id":2548,"name":"address","nodeType":"ElementaryTypeName","src":"3084:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3076:45:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint64_$_$","typeString":"mapping(address => mapping(uint64 => uint64))"},"valueType":{"id":2551,"keyType":{"id":2549,"name":"uint64","nodeType":"ElementaryTypeName","src":"3103:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Mapping","src":"3095:25:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_uint64_$","typeString":"mapping(uint64 => uint64)"},"valueType":{"id":2550,"name":"uint64","nodeType":"ElementaryTypeName","src":"3113:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}}},"visibility":"private"},{"constant":false,"id":2558,"mutability":"mutable","name":"s_subscriptionConfigs","nameLocation":"3267:21:13","nodeType":"VariableDeclaration","scope":4776,"src":"3184:104:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2547_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig)"},"typeName":{"id":2557,"keyType":{"id":2554,"name":"uint64","nodeType":"ElementaryTypeName","src":"3192:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Mapping","src":"3184:37:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2547_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig)"},"valueType":{"id":2556,"nodeType":"UserDefinedTypeName","pathNode":{"id":2555,"name":"SubscriptionConfig","nodeType":"IdentifierPath","referencedDeclaration":2547,"src":"3202:18:13"},"referencedDeclaration":2547,"src":"3202:18:13","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_storage_ptr","typeString":"struct VRFCoordinatorV2.SubscriptionConfig"}}},"visibility":"private"},{"constant":false,"id":2563,"mutability":"mutable","name":"s_subscriptions","nameLocation":"3363:15:13","nodeType":"VariableDeclaration","scope":4776,"src":"3292:86:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2539_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.Subscription)"},"typeName":{"id":2562,"keyType":{"id":2559,"name":"uint64","nodeType":"ElementaryTypeName","src":"3300:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Mapping","src":"3292:31:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2539_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.Subscription)"},"valueType":{"id":2561,"nodeType":"UserDefinedTypeName","pathNode":{"id":2560,"name":"Subscription","nodeType":"IdentifierPath","referencedDeclaration":2539,"src":"3310:12:13"},"referencedDeclaration":2539,"src":"3310:12:13","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2539_storage_ptr","typeString":"struct VRFCoordinatorV2.Subscription"}}},"visibility":"private"},{"constant":false,"id":2565,"mutability":"mutable","name":"s_currentSubId","nameLocation":"3515:14:13","nodeType":"VariableDeclaration","scope":4776,"src":"3500:29:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2564,"name":"uint64","nodeType":"ElementaryTypeName","src":"3500:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"private"},{"constant":false,"id":2567,"mutability":"mutable","name":"s_totalBalance","nameLocation":"3829:14:13","nodeType":"VariableDeclaration","scope":4776,"src":"3814:29:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2566,"name":"uint96","nodeType":"ElementaryTypeName","src":"3814:6:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"private"},{"anonymous":false,"id":2573,"name":"SubscriptionCreated","nameLocation":"3853:19:13","nodeType":"EventDefinition","parameters":{"id":2572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2569,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"3888:5:13","nodeType":"VariableDeclaration","scope":2573,"src":"3873:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2568,"name":"uint64","nodeType":"ElementaryTypeName","src":"3873:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2571,"indexed":false,"mutability":"mutable","name":"owner","nameLocation":"3903:5:13","nodeType":"VariableDeclaration","scope":2573,"src":"3895:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2570,"name":"address","nodeType":"ElementaryTypeName","src":"3895:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3872:37:13"},"src":"3847:63:13"},{"anonymous":false,"id":2581,"name":"SubscriptionFunded","nameLocation":"3919:18:13","nodeType":"EventDefinition","parameters":{"id":2580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2575,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"3953:5:13","nodeType":"VariableDeclaration","scope":2581,"src":"3938:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2574,"name":"uint64","nodeType":"ElementaryTypeName","src":"3938:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2577,"indexed":false,"mutability":"mutable","name":"oldBalance","nameLocation":"3968:10:13","nodeType":"VariableDeclaration","scope":2581,"src":"3960:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2576,"name":"uint256","nodeType":"ElementaryTypeName","src":"3960:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2579,"indexed":false,"mutability":"mutable","name":"newBalance","nameLocation":"3988:10:13","nodeType":"VariableDeclaration","scope":2581,"src":"3980:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2578,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3937:62:13"},"src":"3913:87:13"},{"anonymous":false,"id":2587,"name":"SubscriptionConsumerAdded","nameLocation":"4009:25:13","nodeType":"EventDefinition","parameters":{"id":2586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2583,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"4050:5:13","nodeType":"VariableDeclaration","scope":2587,"src":"4035:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2582,"name":"uint64","nodeType":"ElementaryTypeName","src":"4035:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2585,"indexed":false,"mutability":"mutable","name":"consumer","nameLocation":"4065:8:13","nodeType":"VariableDeclaration","scope":2587,"src":"4057:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2584,"name":"address","nodeType":"ElementaryTypeName","src":"4057:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4034:40:13"},"src":"4003:72:13"},{"anonymous":false,"id":2593,"name":"SubscriptionConsumerRemoved","nameLocation":"4084:27:13","nodeType":"EventDefinition","parameters":{"id":2592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2589,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"4127:5:13","nodeType":"VariableDeclaration","scope":2593,"src":"4112:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2588,"name":"uint64","nodeType":"ElementaryTypeName","src":"4112:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2591,"indexed":false,"mutability":"mutable","name":"consumer","nameLocation":"4142:8:13","nodeType":"VariableDeclaration","scope":2593,"src":"4134:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2590,"name":"address","nodeType":"ElementaryTypeName","src":"4134:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4111:40:13"},"src":"4078:74:13"},{"anonymous":false,"id":2601,"name":"SubscriptionCanceled","nameLocation":"4161:20:13","nodeType":"EventDefinition","parameters":{"id":2600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2595,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"4197:5:13","nodeType":"VariableDeclaration","scope":2601,"src":"4182:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2594,"name":"uint64","nodeType":"ElementaryTypeName","src":"4182:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2597,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"4212:2:13","nodeType":"VariableDeclaration","scope":2601,"src":"4204:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2596,"name":"address","nodeType":"ElementaryTypeName","src":"4204:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2599,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"4224:6:13","nodeType":"VariableDeclaration","scope":2601,"src":"4216:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2598,"name":"uint256","nodeType":"ElementaryTypeName","src":"4216:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4181:50:13"},"src":"4155:77:13"},{"anonymous":false,"id":2609,"name":"SubscriptionOwnerTransferRequested","nameLocation":"4241:34:13","nodeType":"EventDefinition","parameters":{"id":2608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2603,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"4291:5:13","nodeType":"VariableDeclaration","scope":2609,"src":"4276:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2602,"name":"uint64","nodeType":"ElementaryTypeName","src":"4276:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2605,"indexed":false,"mutability":"mutable","name":"from","nameLocation":"4306:4:13","nodeType":"VariableDeclaration","scope":2609,"src":"4298:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2604,"name":"address","nodeType":"ElementaryTypeName","src":"4298:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2607,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"4320:2:13","nodeType":"VariableDeclaration","scope":2609,"src":"4312:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2606,"name":"address","nodeType":"ElementaryTypeName","src":"4312:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4275:48:13"},"src":"4235:89:13"},{"anonymous":false,"id":2617,"name":"SubscriptionOwnerTransferred","nameLocation":"4333:28:13","nodeType":"EventDefinition","parameters":{"id":2616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2611,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"4377:5:13","nodeType":"VariableDeclaration","scope":2617,"src":"4362:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2610,"name":"uint64","nodeType":"ElementaryTypeName","src":"4362:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2613,"indexed":false,"mutability":"mutable","name":"from","nameLocation":"4392:4:13","nodeType":"VariableDeclaration","scope":2617,"src":"4384:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2612,"name":"address","nodeType":"ElementaryTypeName","src":"4384:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2615,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"4406:2:13","nodeType":"VariableDeclaration","scope":2617,"src":"4398:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2614,"name":"address","nodeType":"ElementaryTypeName","src":"4398:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4361:48:13"},"src":"4327:83:13"},{"constant":true,"functionSelector":"15c48b84","id":2620,"mutability":"constant","name":"MAX_REQUEST_CONFIRMATIONS","nameLocation":"4563:25:13","nodeType":"VariableDeclaration","scope":4776,"src":"4540:54:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2618,"name":"uint16","nodeType":"ElementaryTypeName","src":"4540:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"323030","id":2619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4591:3:13","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},"visibility":"public"},{"constant":true,"functionSelector":"40d6bb82","id":2623,"mutability":"constant","name":"MAX_NUM_WORDS","nameLocation":"4621:13:13","nodeType":"VariableDeclaration","scope":4776,"src":"4598:42:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2621,"name":"uint32","nodeType":"ElementaryTypeName","src":"4598:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"353030","id":2622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4637:3:13","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"},"visibility":"public"},{"constant":true,"id":2626,"mutability":"constant","name":"GAS_FOR_CALL_EXACT_CHECK","nameLocation":"4773:24:13","nodeType":"VariableDeclaration","scope":4776,"src":"4748:57:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2624,"name":"uint256","nodeType":"ElementaryTypeName","src":"4748:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"355f303030","id":2625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4800:5:13","typeDescriptions":{"typeIdentifier":"t_rational_5000_by_1","typeString":"int_const 5000"},"value":"5_000"},"visibility":"private"},{"id":2634,"name":"InvalidRequestConfirmations","nameLocation":"4815:27:13","nodeType":"ErrorDefinition","parameters":{"id":2633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2628,"mutability":"mutable","name":"have","nameLocation":"4850:4:13","nodeType":"VariableDeclaration","scope":2634,"src":"4843:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2627,"name":"uint16","nodeType":"ElementaryTypeName","src":"4843:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2630,"mutability":"mutable","name":"min","nameLocation":"4863:3:13","nodeType":"VariableDeclaration","scope":2634,"src":"4856:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2629,"name":"uint16","nodeType":"ElementaryTypeName","src":"4856:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2632,"mutability":"mutable","name":"max","nameLocation":"4875:3:13","nodeType":"VariableDeclaration","scope":2634,"src":"4868:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2631,"name":"uint16","nodeType":"ElementaryTypeName","src":"4868:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"4842:37:13"},"src":"4809:71:13"},{"id":2640,"name":"GasLimitTooBig","nameLocation":"4889:14:13","nodeType":"ErrorDefinition","parameters":{"id":2639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2636,"mutability":"mutable","name":"have","nameLocation":"4911:4:13","nodeType":"VariableDeclaration","scope":2640,"src":"4904:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2635,"name":"uint32","nodeType":"ElementaryTypeName","src":"4904:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2638,"mutability":"mutable","name":"want","nameLocation":"4924:4:13","nodeType":"VariableDeclaration","scope":2640,"src":"4917:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2637,"name":"uint32","nodeType":"ElementaryTypeName","src":"4917:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4903:26:13"},"src":"4883:47:13"},{"id":2646,"name":"NumWordsTooBig","nameLocation":"4939:14:13","nodeType":"ErrorDefinition","parameters":{"id":2645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2642,"mutability":"mutable","name":"have","nameLocation":"4961:4:13","nodeType":"VariableDeclaration","scope":2646,"src":"4954:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2641,"name":"uint32","nodeType":"ElementaryTypeName","src":"4954:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2644,"mutability":"mutable","name":"want","nameLocation":"4974:4:13","nodeType":"VariableDeclaration","scope":2646,"src":"4967:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2643,"name":"uint32","nodeType":"ElementaryTypeName","src":"4967:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4953:26:13"},"src":"4933:47:13"},{"id":2650,"name":"ProvingKeyAlreadyRegistered","nameLocation":"4989:27:13","nodeType":"ErrorDefinition","parameters":{"id":2649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2648,"mutability":"mutable","name":"keyHash","nameLocation":"5025:7:13","nodeType":"VariableDeclaration","scope":2650,"src":"5017:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2647,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5017:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5016:17:13"},"src":"4983:51:13"},{"id":2654,"name":"NoSuchProvingKey","nameLocation":"5043:16:13","nodeType":"ErrorDefinition","parameters":{"id":2653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2652,"mutability":"mutable","name":"keyHash","nameLocation":"5068:7:13","nodeType":"VariableDeclaration","scope":2654,"src":"5060:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2651,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5060:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5059:17:13"},"src":"5037:40:13"},{"id":2658,"name":"InvalidLinkWeiPrice","nameLocation":"5086:19:13","nodeType":"ErrorDefinition","parameters":{"id":2657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2656,"mutability":"mutable","name":"linkWei","nameLocation":"5113:7:13","nodeType":"VariableDeclaration","scope":2658,"src":"5106:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2655,"name":"int256","nodeType":"ElementaryTypeName","src":"5106:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"5105:16:13"},"src":"5080:42:13"},{"id":2664,"name":"InsufficientGasForConsumer","nameLocation":"5131:26:13","nodeType":"ErrorDefinition","parameters":{"id":2663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2660,"mutability":"mutable","name":"have","nameLocation":"5166:4:13","nodeType":"VariableDeclaration","scope":2664,"src":"5158:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2659,"name":"uint256","nodeType":"ElementaryTypeName","src":"5158:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2662,"mutability":"mutable","name":"want","nameLocation":"5180:4:13","nodeType":"VariableDeclaration","scope":2664,"src":"5172:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2661,"name":"uint256","nodeType":"ElementaryTypeName","src":"5172:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5157:28:13"},"src":"5125:61:13"},{"id":2666,"name":"NoCorrespondingRequest","nameLocation":"5195:22:13","nodeType":"ErrorDefinition","parameters":{"id":2665,"nodeType":"ParameterList","parameters":[],"src":"5217:2:13"},"src":"5189:31:13"},{"id":2668,"name":"IncorrectCommitment","nameLocation":"5229:19:13","nodeType":"ErrorDefinition","parameters":{"id":2667,"nodeType":"ParameterList","parameters":[],"src":"5248:2:13"},"src":"5223:28:13"},{"id":2672,"name":"BlockhashNotInStore","nameLocation":"5260:19:13","nodeType":"ErrorDefinition","parameters":{"id":2671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2670,"mutability":"mutable","name":"blockNum","nameLocation":"5288:8:13","nodeType":"VariableDeclaration","scope":2672,"src":"5280:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2669,"name":"uint256","nodeType":"ElementaryTypeName","src":"5280:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5279:18:13"},"src":"5254:44:13"},{"id":2674,"name":"PaymentTooLarge","nameLocation":"5307:15:13","nodeType":"ErrorDefinition","parameters":{"id":2673,"nodeType":"ParameterList","parameters":[],"src":"5322:2:13"},"src":"5301:24:13"},{"id":2676,"name":"Reentrant","nameLocation":"5334:9:13","nodeType":"ErrorDefinition","parameters":{"id":2675,"nodeType":"ParameterList","parameters":[],"src":"5343:2:13"},"src":"5328:18:13"},{"canonicalName":"VRFCoordinatorV2.RequestCommitment","id":2687,"members":[{"constant":false,"id":2678,"mutability":"mutable","name":"blockNum","nameLocation":"5387:8:13","nodeType":"VariableDeclaration","scope":2687,"src":"5380:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2677,"name":"uint64","nodeType":"ElementaryTypeName","src":"5380:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2680,"mutability":"mutable","name":"subId","nameLocation":"5408:5:13","nodeType":"VariableDeclaration","scope":2687,"src":"5401:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2679,"name":"uint64","nodeType":"ElementaryTypeName","src":"5401:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2682,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"5426:16:13","nodeType":"VariableDeclaration","scope":2687,"src":"5419:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2681,"name":"uint32","nodeType":"ElementaryTypeName","src":"5419:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2684,"mutability":"mutable","name":"numWords","nameLocation":"5455:8:13","nodeType":"VariableDeclaration","scope":2687,"src":"5448:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2683,"name":"uint32","nodeType":"ElementaryTypeName","src":"5448:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2686,"mutability":"mutable","name":"sender","nameLocation":"5477:6:13","nodeType":"VariableDeclaration","scope":2687,"src":"5469:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2685,"name":"address","nodeType":"ElementaryTypeName","src":"5469:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"RequestCommitment","nameLocation":"5356:17:13","nodeType":"StructDefinition","scope":4776,"src":"5349:139:13","visibility":"public"},{"constant":false,"id":2691,"mutability":"mutable","name":"s_provingKeys","nameLocation":"5554:13:13","nodeType":"VariableDeclaration","scope":4776,"src":"5491:76:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"typeName":{"id":2690,"keyType":{"id":2688,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5499:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"5491:27:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"valueType":{"id":2689,"name":"address","nodeType":"ElementaryTypeName","src":"5510:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":2694,"mutability":"mutable","name":"s_provingKeyHashes","nameLocation":"5589:18:13","nodeType":"VariableDeclaration","scope":4776,"src":"5571:36:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2692,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5571:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2693,"nodeType":"ArrayTypeName","src":"5571:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"private"},{"constant":false,"id":2698,"mutability":"mutable","name":"s_withdrawableTokens","nameLocation":"5678:20:13","nodeType":"VariableDeclaration","scope":4776,"src":"5611:87:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint96_$","typeString":"mapping(address => uint96)"},"typeName":{"id":2697,"keyType":{"id":2695,"name":"address","nodeType":"ElementaryTypeName","src":"5619:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"5611:26:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint96_$","typeString":"mapping(address => uint96)"},"valueType":{"id":2696,"name":"uint96","nodeType":"ElementaryTypeName","src":"5630:6:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}},"visibility":"private"},{"constant":false,"id":2702,"mutability":"mutable","name":"s_requestCommitments","nameLocation":"5771:20:13","nodeType":"VariableDeclaration","scope":4776,"src":"5702:89:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"},"typeName":{"id":2701,"keyType":{"id":2699,"name":"uint256","nodeType":"ElementaryTypeName","src":"5710:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"5702:27:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"},"valueType":{"id":2700,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5721:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"visibility":"private"},{"anonymous":false,"id":2708,"name":"ProvingKeyRegistered","nameLocation":"5801:20:13","nodeType":"EventDefinition","parameters":{"id":2707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2704,"indexed":false,"mutability":"mutable","name":"keyHash","nameLocation":"5830:7:13","nodeType":"VariableDeclaration","scope":2708,"src":"5822:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2703,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5822:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2706,"indexed":true,"mutability":"mutable","name":"oracle","nameLocation":"5855:6:13","nodeType":"VariableDeclaration","scope":2708,"src":"5839:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2705,"name":"address","nodeType":"ElementaryTypeName","src":"5839:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5821:41:13"},"src":"5795:68:13"},{"anonymous":false,"id":2714,"name":"ProvingKeyDeregistered","nameLocation":"5872:22:13","nodeType":"EventDefinition","parameters":{"id":2713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2710,"indexed":false,"mutability":"mutable","name":"keyHash","nameLocation":"5903:7:13","nodeType":"VariableDeclaration","scope":2714,"src":"5895:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2709,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5895:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2712,"indexed":true,"mutability":"mutable","name":"oracle","nameLocation":"5928:6:13","nodeType":"VariableDeclaration","scope":2714,"src":"5912:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2711,"name":"address","nodeType":"ElementaryTypeName","src":"5912:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5894:41:13"},"src":"5866:70:13"},{"anonymous":false,"id":2732,"name":"RandomWordsRequested","nameLocation":"5945:20:13","nodeType":"EventDefinition","parameters":{"id":2731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2716,"indexed":true,"mutability":"mutable","name":"keyHash","nameLocation":"5987:7:13","nodeType":"VariableDeclaration","scope":2732,"src":"5971:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2715,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5971:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2718,"indexed":false,"mutability":"mutable","name":"requestId","nameLocation":"6008:9:13","nodeType":"VariableDeclaration","scope":2732,"src":"6000:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2717,"name":"uint256","nodeType":"ElementaryTypeName","src":"6000:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2720,"indexed":false,"mutability":"mutable","name":"preSeed","nameLocation":"6031:7:13","nodeType":"VariableDeclaration","scope":2732,"src":"6023:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2719,"name":"uint256","nodeType":"ElementaryTypeName","src":"6023:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2722,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"6059:5:13","nodeType":"VariableDeclaration","scope":2732,"src":"6044:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2721,"name":"uint64","nodeType":"ElementaryTypeName","src":"6044:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2724,"indexed":false,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"6077:27:13","nodeType":"VariableDeclaration","scope":2732,"src":"6070:34:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2723,"name":"uint16","nodeType":"ElementaryTypeName","src":"6070:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2726,"indexed":false,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"6117:16:13","nodeType":"VariableDeclaration","scope":2732,"src":"6110:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2725,"name":"uint32","nodeType":"ElementaryTypeName","src":"6110:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2728,"indexed":false,"mutability":"mutable","name":"numWords","nameLocation":"6146:8:13","nodeType":"VariableDeclaration","scope":2732,"src":"6139:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2727,"name":"uint32","nodeType":"ElementaryTypeName","src":"6139:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2730,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"6176:6:13","nodeType":"VariableDeclaration","scope":2732,"src":"6160:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2729,"name":"address","nodeType":"ElementaryTypeName","src":"6160:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5965:221:13"},"src":"5939:248:13"},{"anonymous":false,"id":2742,"name":"RandomWordsFulfilled","nameLocation":"6196:20:13","nodeType":"EventDefinition","parameters":{"id":2741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2734,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"6233:9:13","nodeType":"VariableDeclaration","scope":2742,"src":"6217:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2733,"name":"uint256","nodeType":"ElementaryTypeName","src":"6217:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2736,"indexed":false,"mutability":"mutable","name":"outputSeed","nameLocation":"6252:10:13","nodeType":"VariableDeclaration","scope":2742,"src":"6244:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2735,"name":"uint256","nodeType":"ElementaryTypeName","src":"6244:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2738,"indexed":false,"mutability":"mutable","name":"payment","nameLocation":"6271:7:13","nodeType":"VariableDeclaration","scope":2742,"src":"6264:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2737,"name":"uint96","nodeType":"ElementaryTypeName","src":"6264:6:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2740,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"6285:7:13","nodeType":"VariableDeclaration","scope":2742,"src":"6280:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2739,"name":"bool","nodeType":"ElementaryTypeName","src":"6280:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6216:77:13"},"src":"6190:104:13"},{"canonicalName":"VRFCoordinatorV2.Config","id":2753,"members":[{"constant":false,"id":2744,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"6325:27:13","nodeType":"VariableDeclaration","scope":2753,"src":"6318:34:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2743,"name":"uint16","nodeType":"ElementaryTypeName","src":"6318:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2746,"mutability":"mutable","name":"maxGasLimit","nameLocation":"6365:11:13","nodeType":"VariableDeclaration","scope":2753,"src":"6358:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2745,"name":"uint32","nodeType":"ElementaryTypeName","src":"6358:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2748,"mutability":"mutable","name":"reentrancyLock","nameLocation":"6417:14:13","nodeType":"VariableDeclaration","scope":2753,"src":"6412:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2747,"name":"bool","nodeType":"ElementaryTypeName","src":"6412:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2750,"mutability":"mutable","name":"stalenessSeconds","nameLocation":"6573:16:13","nodeType":"VariableDeclaration","scope":2753,"src":"6566:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2749,"name":"uint32","nodeType":"ElementaryTypeName","src":"6566:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2752,"mutability":"mutable","name":"gasAfterPaymentCalculation","nameLocation":"6739:26:13","nodeType":"VariableDeclaration","scope":2753,"src":"6732:33:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2751,"name":"uint32","nodeType":"ElementaryTypeName","src":"6732:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"name":"Config","nameLocation":"6305:6:13","nodeType":"StructDefinition","scope":4776,"src":"6298:472:13","visibility":"public"},{"constant":false,"id":2755,"mutability":"mutable","name":"s_fallbackWeiPerUnitLink","nameLocation":"6788:24:13","nodeType":"VariableDeclaration","scope":4776,"src":"6773:39:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2754,"name":"int256","nodeType":"ElementaryTypeName","src":"6773:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"private"},{"constant":false,"id":2758,"mutability":"mutable","name":"s_config","nameLocation":"6831:8:13","nodeType":"VariableDeclaration","scope":4776,"src":"6816:23:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2753_storage","typeString":"struct VRFCoordinatorV2.Config"},"typeName":{"id":2757,"nodeType":"UserDefinedTypeName","pathNode":{"id":2756,"name":"Config","nodeType":"IdentifierPath","referencedDeclaration":2753,"src":"6816:6:13"},"referencedDeclaration":2753,"src":"6816:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2753_storage_ptr","typeString":"struct VRFCoordinatorV2.Config"}},"visibility":"private"},{"constant":false,"id":2761,"mutability":"mutable","name":"s_feeConfig","nameLocation":"6861:11:13","nodeType":"VariableDeclaration","scope":4776,"src":"6843:29:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2780_storage","typeString":"struct VRFCoordinatorV2.FeeConfig"},"typeName":{"id":2760,"nodeType":"UserDefinedTypeName","pathNode":{"id":2759,"name":"FeeConfig","nodeType":"IdentifierPath","referencedDeclaration":2780,"src":"6843:9:13"},"referencedDeclaration":2780,"src":"6843:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2780_storage_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig"}},"visibility":"private"},{"canonicalName":"VRFCoordinatorV2.FeeConfig","id":2780,"members":[{"constant":false,"id":2763,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier1","nameLocation":"7007:30:13","nodeType":"VariableDeclaration","scope":2780,"src":"7000:37:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2762,"name":"uint32","nodeType":"ElementaryTypeName","src":"7000:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2765,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier2","nameLocation":"7050:30:13","nodeType":"VariableDeclaration","scope":2780,"src":"7043:37:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2764,"name":"uint32","nodeType":"ElementaryTypeName","src":"7043:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2767,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier3","nameLocation":"7093:30:13","nodeType":"VariableDeclaration","scope":2780,"src":"7086:37:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2766,"name":"uint32","nodeType":"ElementaryTypeName","src":"7086:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2769,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier4","nameLocation":"7136:30:13","nodeType":"VariableDeclaration","scope":2780,"src":"7129:37:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2768,"name":"uint32","nodeType":"ElementaryTypeName","src":"7129:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2771,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier5","nameLocation":"7179:30:13","nodeType":"VariableDeclaration","scope":2780,"src":"7172:37:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2770,"name":"uint32","nodeType":"ElementaryTypeName","src":"7172:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2773,"mutability":"mutable","name":"reqsForTier2","nameLocation":"7222:12:13","nodeType":"VariableDeclaration","scope":2780,"src":"7215:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2772,"name":"uint24","nodeType":"ElementaryTypeName","src":"7215:6:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2775,"mutability":"mutable","name":"reqsForTier3","nameLocation":"7247:12:13","nodeType":"VariableDeclaration","scope":2780,"src":"7240:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2774,"name":"uint24","nodeType":"ElementaryTypeName","src":"7240:6:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2777,"mutability":"mutable","name":"reqsForTier4","nameLocation":"7272:12:13","nodeType":"VariableDeclaration","scope":2780,"src":"7265:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2776,"name":"uint24","nodeType":"ElementaryTypeName","src":"7265:6:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2779,"mutability":"mutable","name":"reqsForTier5","nameLocation":"7297:12:13","nodeType":"VariableDeclaration","scope":2780,"src":"7290:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2778,"name":"uint24","nodeType":"ElementaryTypeName","src":"7290:6:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"name":"FeeConfig","nameLocation":"6883:9:13","nodeType":"StructDefinition","scope":4776,"src":"6876:438:13","visibility":"public"},{"anonymous":false,"id":2795,"name":"ConfigSet","nameLocation":"7323:9:13","nodeType":"EventDefinition","parameters":{"id":2794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2782,"indexed":false,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"7345:27:13","nodeType":"VariableDeclaration","scope":2795,"src":"7338:34:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2781,"name":"uint16","nodeType":"ElementaryTypeName","src":"7338:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2784,"indexed":false,"mutability":"mutable","name":"maxGasLimit","nameLocation":"7385:11:13","nodeType":"VariableDeclaration","scope":2795,"src":"7378:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2783,"name":"uint32","nodeType":"ElementaryTypeName","src":"7378:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2786,"indexed":false,"mutability":"mutable","name":"stalenessSeconds","nameLocation":"7409:16:13","nodeType":"VariableDeclaration","scope":2795,"src":"7402:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2785,"name":"uint32","nodeType":"ElementaryTypeName","src":"7402:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2788,"indexed":false,"mutability":"mutable","name":"gasAfterPaymentCalculation","nameLocation":"7438:26:13","nodeType":"VariableDeclaration","scope":2795,"src":"7431:33:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2787,"name":"uint32","nodeType":"ElementaryTypeName","src":"7431:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2790,"indexed":false,"mutability":"mutable","name":"fallbackWeiPerUnitLink","nameLocation":"7477:22:13","nodeType":"VariableDeclaration","scope":2795,"src":"7470:29:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2789,"name":"int256","nodeType":"ElementaryTypeName","src":"7470:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2793,"indexed":false,"mutability":"mutable","name":"feeConfig","nameLocation":"7515:9:13","nodeType":"VariableDeclaration","scope":2795,"src":"7505:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2780_memory_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig"},"typeName":{"id":2792,"nodeType":"UserDefinedTypeName","pathNode":{"id":2791,"name":"FeeConfig","nodeType":"IdentifierPath","referencedDeclaration":2780,"src":"7505:9:13"},"referencedDeclaration":2780,"src":"7505:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2780_storage_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig"}},"visibility":"internal"}],"src":"7332:196:13"},"src":"7317:212:13"},{"body":{"id":2826,"nodeType":"Block","src":"7631:161:13","statements":[{"expression":{"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2808,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"7637:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$713","typeString":"contract LinkTokenInterface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2810,"name":"link","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"7663:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2809,"name":"LinkTokenInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"7644:18:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LinkTokenInterface_$713_$","typeString":"type(contract LinkTokenInterface)"}},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7644:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$713","typeString":"contract LinkTokenInterface"}},"src":"7637:31:13","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$713","typeString":"contract LinkTokenInterface"}},"id":2813,"nodeType":"ExpressionStatement","src":"7637:31:13"},{"expression":{"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2814,"name":"LINK_ETH_FEED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"7674:13:13","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$590","typeString":"contract AggregatorV3Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2816,"name":"linkEthFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"7712:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2815,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"7690:21:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AggregatorV3Interface_$590_$","typeString":"type(contract AggregatorV3Interface)"}},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7690:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$590","typeString":"contract AggregatorV3Interface"}},"src":"7674:50:13","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$590","typeString":"contract AggregatorV3Interface"}},"id":2819,"nodeType":"ExpressionStatement","src":"7674:50:13"},{"expression":{"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2820,"name":"BLOCKHASH_STORE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"7730:15:13","typeDescriptions":{"typeIdentifier":"t_contract$_BlockhashStoreInterface_$4786","typeString":"contract BlockhashStoreInterface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2822,"name":"blockhashStore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"7772:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2821,"name":"BlockhashStoreInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"7748:23:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BlockhashStoreInterface_$4786_$","typeString":"type(contract BlockhashStoreInterface)"}},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7748:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_BlockhashStoreInterface_$4786","typeString":"contract BlockhashStoreInterface"}},"src":"7730:57:13","typeDescriptions":{"typeIdentifier":"t_contract$_BlockhashStoreInterface_$4786","typeString":"contract BlockhashStoreInterface"}},"id":2825,"nodeType":"ExpressionStatement","src":"7730:57:13"}]},"id":2827,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":2804,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7619:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7619:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2806,"kind":"baseConstructorSpecifier","modifierName":{"id":2803,"name":"ConfirmedOwner","nodeType":"IdentifierPath","referencedDeclaration":381,"src":"7604:14:13"},"nodeType":"ModifierInvocation","src":"7604:26:13"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2797,"mutability":"mutable","name":"link","nameLocation":"7553:4:13","nodeType":"VariableDeclaration","scope":2827,"src":"7545:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2796,"name":"address","nodeType":"ElementaryTypeName","src":"7545:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2799,"mutability":"mutable","name":"blockhashStore","nameLocation":"7567:14:13","nodeType":"VariableDeclaration","scope":2827,"src":"7559:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2798,"name":"address","nodeType":"ElementaryTypeName","src":"7559:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2801,"mutability":"mutable","name":"linkEthFeed","nameLocation":"7591:11:13","nodeType":"VariableDeclaration","scope":2827,"src":"7583:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2800,"name":"address","nodeType":"ElementaryTypeName","src":"7583:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7544:59:13"},"returnParameters":{"id":2807,"nodeType":"ParameterList","parameters":[],"src":"7631:0:13"},"scope":4776,"src":"7533:259:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2876,"nodeType":"Block","src":"8081:254:13","statements":[{"assignments":[2840],"declarations":[{"constant":false,"id":2840,"mutability":"mutable","name":"kh","nameLocation":"8095:2:13","nodeType":"VariableDeclaration","scope":2876,"src":"8087:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2839,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8087:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2844,"initialValue":{"arguments":[{"id":2842,"name":"publicProvingKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"8110:16:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2] calldata"}],"id":2841,"name":"hashOfKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"8100:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bytes32_$","typeString":"function (uint256[2] memory) pure returns (bytes32)"}},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8100:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8087:40:13"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2845,"name":"s_provingKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"8137:13:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":2847,"indexExpression":{"id":2846,"name":"kh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"8151:2:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8137:17:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8166:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8158:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2848,"name":"address","nodeType":"ElementaryTypeName","src":"8158:7:13","typeDescriptions":{}}},"id":2851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8158:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8137:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2858,"nodeType":"IfStatement","src":"8133:90:13","trueBody":{"id":2857,"nodeType":"Block","src":"8170:53:13","statements":[{"errorCall":{"arguments":[{"id":2854,"name":"kh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"8213:2:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2853,"name":"ProvingKeyAlreadyRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"8185:27:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8185:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2856,"nodeType":"RevertStatement","src":"8178:38:13"}]}},{"expression":{"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2859,"name":"s_provingKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"8228:13:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":2861,"indexExpression":{"id":2860,"name":"kh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"8242:2:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8228:17:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2862,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"8248:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8228:26:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2864,"nodeType":"ExpressionStatement","src":"8228:26:13"},{"expression":{"arguments":[{"id":2868,"name":"kh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"8284:2:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2865,"name":"s_provingKeyHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"8260:18:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"8260:23:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8260:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2870,"nodeType":"ExpressionStatement","src":"8260:27:13"},{"eventCall":{"arguments":[{"id":2872,"name":"kh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"8319:2:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2873,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"8323:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2871,"name":"ProvingKeyRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"8298:20:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8298:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2875,"nodeType":"EmitStatement","src":"8293:37:13"}]},"documentation":{"id":2828,"nodeType":"StructuredDocumentation","src":"7796:181:13","text":" @notice Registers a proving key to an oracle.\n @param oracle address of the oracle\n @param publicProvingKey key that oracle can use to submit vrf fulfillments"},"functionSelector":"6f64f03f","id":2877,"implemented":true,"kind":"function","modifiers":[{"id":2837,"kind":"modifierInvocation","modifierName":{"id":2836,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":543,"src":"8071:9:13"},"nodeType":"ModifierInvocation","src":"8071:9:13"}],"name":"registerProvingKey","nameLocation":"7989:18:13","nodeType":"FunctionDefinition","parameters":{"id":2835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2830,"mutability":"mutable","name":"oracle","nameLocation":"8016:6:13","nodeType":"VariableDeclaration","scope":2877,"src":"8008:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2829,"name":"address","nodeType":"ElementaryTypeName","src":"8008:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2834,"mutability":"mutable","name":"publicProvingKey","nameLocation":"8044:16:13","nodeType":"VariableDeclaration","scope":2877,"src":"8024:36:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":2831,"name":"uint256","nodeType":"ElementaryTypeName","src":"8024:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2833,"length":{"hexValue":"32","id":2832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8032:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"8024:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"src":"8007:54:13"},"returnParameters":{"id":2838,"nodeType":"ParameterList","parameters":[],"src":"8081:0:13"},"scope":4776,"src":"7980:355:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2961,"nodeType":"Block","src":"8571:570:13","statements":[{"assignments":[2888],"declarations":[{"constant":false,"id":2888,"mutability":"mutable","name":"kh","nameLocation":"8585:2:13","nodeType":"VariableDeclaration","scope":2961,"src":"8577:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2887,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8577:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2892,"initialValue":{"arguments":[{"id":2890,"name":"publicProvingKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2882,"src":"8600:16:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2] calldata"}],"id":2889,"name":"hashOfKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"8590:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bytes32_$","typeString":"function (uint256[2] memory) pure returns (bytes32)"}},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8590:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8577:40:13"},{"assignments":[2894],"declarations":[{"constant":false,"id":2894,"mutability":"mutable","name":"oracle","nameLocation":"8631:6:13","nodeType":"VariableDeclaration","scope":2961,"src":"8623:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2893,"name":"address","nodeType":"ElementaryTypeName","src":"8623:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2898,"initialValue":{"baseExpression":{"id":2895,"name":"s_provingKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"8640:13:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":2897,"indexExpression":{"id":2896,"name":"kh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"8654:2:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8640:17:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8623:34:13"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2899,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"8667:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8685:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8677:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2900,"name":"address","nodeType":"ElementaryTypeName","src":"8677:7:13","typeDescriptions":{}}},"id":2903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8677:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8667:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2910,"nodeType":"IfStatement","src":"8663:68:13","trueBody":{"id":2909,"nodeType":"Block","src":"8689:42:13","statements":[{"errorCall":{"arguments":[{"id":2906,"name":"kh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"8721:2:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2905,"name":"NoSuchProvingKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"8704:16:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8704:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2908,"nodeType":"RevertStatement","src":"8697:27:13"}]}},{"expression":{"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"8736:24:13","subExpression":{"baseExpression":{"id":2911,"name":"s_provingKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"8743:13:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":2913,"indexExpression":{"id":2912,"name":"kh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"8757:2:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8743:17:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2915,"nodeType":"ExpressionStatement","src":"8736:24:13"},{"body":{"id":2954,"nodeType":"Block","src":"8822:270:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2927,"name":"s_provingKeyHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"8834:18:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2929,"indexExpression":{"id":2928,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"8853:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8834:21:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2930,"name":"kh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"8859:2:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8834:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2953,"nodeType":"IfStatement","src":"8830:256:13","trueBody":{"id":2952,"nodeType":"Block","src":"8863:223:13","statements":[{"assignments":[2933],"declarations":[{"constant":false,"id":2933,"mutability":"mutable","name":"last","nameLocation":"8881:4:13","nodeType":"VariableDeclaration","scope":2952,"src":"8873:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2932,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8873:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2940,"initialValue":{"baseExpression":{"id":2934,"name":"s_provingKeyHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"8888:18:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2939,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2935,"name":"s_provingKeyHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"8907:18:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8907:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8935:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8907:29:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8888:49:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8873:64:13"},{"expression":{"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2941,"name":"s_provingKeyHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"9015:18:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2943,"indexExpression":{"id":2942,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"9034:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9015:21:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2944,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"9039:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9015:28:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2946,"nodeType":"ExpressionStatement","src":"9015:28:13"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2947,"name":"s_provingKeyHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"9053:18:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"9053:22:13","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9053:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2951,"nodeType":"ExpressionStatement","src":"9053:24:13"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2920,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"8786:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2921,"name":"s_provingKeyHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"8790:18:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8790:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8786:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2955,"initializationExpression":{"assignments":[2917],"declarations":[{"constant":false,"id":2917,"mutability":"mutable","name":"i","nameLocation":"8779:1:13","nodeType":"VariableDeclaration","scope":2955,"src":"8771:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2916,"name":"uint256","nodeType":"ElementaryTypeName","src":"8771:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2919,"initialValue":{"hexValue":"30","id":2918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8783:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8771:13:13"},"loopExpression":{"expression":{"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8817:3:13","subExpression":{"id":2924,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"8817:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2926,"nodeType":"ExpressionStatement","src":"8817:3:13"},"nodeType":"ForStatement","src":"8766:326:13"},{"eventCall":{"arguments":[{"id":2957,"name":"kh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"9125:2:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2958,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"9129:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2956,"name":"ProvingKeyDeregistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"9102:22:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9102:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2960,"nodeType":"EmitStatement","src":"9097:39:13"}]},"documentation":{"id":2878,"nodeType":"StructuredDocumentation","src":"8339:142:13","text":" @notice Deregisters a proving key to an oracle.\n @param publicProvingKey key that oracle can use to submit vrf fulfillments"},"functionSelector":"08821d58","id":2962,"implemented":true,"kind":"function","modifiers":[{"id":2885,"kind":"modifierInvocation","modifierName":{"id":2884,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":543,"src":"8561:9:13"},"nodeType":"ModifierInvocation","src":"8561:9:13"}],"name":"deregisterProvingKey","nameLocation":"8493:20:13","nodeType":"FunctionDefinition","parameters":{"id":2883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2882,"mutability":"mutable","name":"publicProvingKey","nameLocation":"8534:16:13","nodeType":"VariableDeclaration","scope":2962,"src":"8514:36:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":2879,"name":"uint256","nodeType":"ElementaryTypeName","src":"8514:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2881,"length":{"hexValue":"32","id":2880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8522:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"8514:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"src":"8513:38:13"},"returnParameters":{"id":2886,"nodeType":"ParameterList","parameters":[],"src":"8571:0:13"},"scope":4776,"src":"8484:657:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2979,"nodeType":"Block","src":"9365:50:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":2975,"name":"publicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"9399:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"expression":{"id":2973,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9388:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"9388:10:13","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9388:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2972,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9378:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9378:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2971,"id":2978,"nodeType":"Return","src":"9371:39:13"}]},"documentation":{"id":2963,"nodeType":"StructuredDocumentation","src":"9145:139:13","text":" @notice Returns the proving key hash key associated with this public key\n @param publicKey the key to return the hash of"},"functionSelector":"caf70c4a","id":2980,"implemented":true,"kind":"function","modifiers":[],"name":"hashOfKey","nameLocation":"9296:9:13","nodeType":"FunctionDefinition","parameters":{"id":2968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2967,"mutability":"mutable","name":"publicKey","nameLocation":"9324:9:13","nodeType":"VariableDeclaration","scope":2980,"src":"9306:27:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":2964,"name":"uint256","nodeType":"ElementaryTypeName","src":"9306:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2966,"length":{"hexValue":"32","id":2965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"9306:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"src":"9305:29:13"},"returnParameters":{"id":2971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2980,"src":"9356:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2969,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9356:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9355:9:13"},"scope":4776,"src":"9287:128:13","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":3046,"nodeType":"Block","src":"10202:871:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2999,"name":"minimumRequestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"10212:27:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3000,"name":"MAX_REQUEST_CONFIRMATIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"10242:25:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"10212:55:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3009,"nodeType":"IfStatement","src":"10208:227:13","trueBody":{"id":3008,"nodeType":"Block","src":"10269:166:13","statements":[{"errorCall":{"arguments":[{"id":3003,"name":"minimumRequestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"10321:27:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3004,"name":"minimumRequestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"10358:27:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3005,"name":"MAX_REQUEST_CONFIRMATIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"10395:25:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":3002,"name":"InvalidRequestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"10284:27:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint16_$_t_uint16_$_t_uint16_$returns$__$","typeString":"function (uint16,uint16,uint16) pure"}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10284:144:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3007,"nodeType":"RevertStatement","src":"10277:151:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3010,"name":"fallbackWeiPerUnitLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"10444:22:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":3011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10470:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10444:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3018,"nodeType":"IfStatement","src":"10440:98:13","trueBody":{"id":3017,"nodeType":"Block","src":"10473:65:13","statements":[{"errorCall":{"arguments":[{"id":3014,"name":"fallbackWeiPerUnitLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"10508:22:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3013,"name":"InvalidLinkWeiPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"10488:19:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10488:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3016,"nodeType":"RevertStatement","src":"10481:50:13"}]}},{"expression":{"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3019,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"10543:8:13","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2753_storage","typeString":"struct VRFCoordinatorV2.Config storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3021,"name":"minimumRequestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"10598:27:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3022,"name":"maxGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"10646:11:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3023,"name":"stalenessSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"10683:16:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3024,"name":"gasAfterPaymentCalculation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"10735:26:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"66616c7365","id":3025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10785:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3020,"name":"Config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"10554:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Config_$2753_storage_ptr_$","typeString":"type(struct VRFCoordinatorV2.Config storage pointer)"}},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["minimumRequestConfirmations","maxGasLimit","stalenessSeconds","gasAfterPaymentCalculation","reentrancyLock"],"nodeType":"FunctionCall","src":"10554:243:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2753_memory_ptr","typeString":"struct VRFCoordinatorV2.Config memory"}},"src":"10543:254:13","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2753_storage","typeString":"struct VRFCoordinatorV2.Config storage ref"}},"id":3028,"nodeType":"ExpressionStatement","src":"10543:254:13"},{"expression":{"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3029,"name":"s_feeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"10803:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2780_storage","typeString":"struct VRFCoordinatorV2.FeeConfig storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3030,"name":"feeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"10817:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2780_memory_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig memory"}},"src":"10803:23:13","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2780_storage","typeString":"struct VRFCoordinatorV2.FeeConfig storage ref"}},"id":3032,"nodeType":"ExpressionStatement","src":"10803:23:13"},{"expression":{"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3033,"name":"s_fallbackWeiPerUnitLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"10832:24:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3034,"name":"fallbackWeiPerUnitLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"10859:22:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"10832:49:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3036,"nodeType":"ExpressionStatement","src":"10832:49:13"},{"eventCall":{"arguments":[{"id":3038,"name":"minimumRequestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"10909:27:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3039,"name":"maxGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"10944:11:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3040,"name":"stalenessSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"10963:16:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3041,"name":"gasAfterPaymentCalculation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"10987:26:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3042,"name":"fallbackWeiPerUnitLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"11021:22:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3043,"name":"s_feeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"11051:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2780_storage","typeString":"struct VRFCoordinatorV2.FeeConfig storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_struct$_FeeConfig_$2780_storage","typeString":"struct VRFCoordinatorV2.FeeConfig storage ref"}],"id":3037,"name":"ConfigSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"10892:9:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_uint32_$_t_uint32_$_t_uint32_$_t_int256_$_t_struct$_FeeConfig_$2780_memory_ptr_$returns$__$","typeString":"function (uint16,uint32,uint32,uint32,int256,struct VRFCoordinatorV2.FeeConfig memory)"}},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10892:176:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3045,"nodeType":"EmitStatement","src":"10887:181:13"}]},"documentation":{"id":2981,"nodeType":"StructuredDocumentation","src":"9419:539:13","text":" @notice Sets the configuration of the vrfv2 coordinator\n @param minimumRequestConfirmations global min for request confirmations\n @param maxGasLimit global max for request gas limit\n @param stalenessSeconds if the eth/link feed is more stale then this, use the fallback price\n @param gasAfterPaymentCalculation gas used in doing accounting after completing the gas measurement\n @param fallbackWeiPerUnitLink fallback eth/link price in the case of a stale feed\n @param feeConfig fee tier configuration"},"functionSelector":"4cb48a54","id":3047,"implemented":true,"kind":"function","modifiers":[{"id":2997,"kind":"modifierInvocation","modifierName":{"id":2996,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":543,"src":"10192:9:13"},"nodeType":"ModifierInvocation","src":"10192:9:13"}],"name":"setConfig","nameLocation":"9970:9:13","nodeType":"FunctionDefinition","parameters":{"id":2995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2983,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"9992:27:13","nodeType":"VariableDeclaration","scope":3047,"src":"9985:34:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2982,"name":"uint16","nodeType":"ElementaryTypeName","src":"9985:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2985,"mutability":"mutable","name":"maxGasLimit","nameLocation":"10032:11:13","nodeType":"VariableDeclaration","scope":3047,"src":"10025:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2984,"name":"uint32","nodeType":"ElementaryTypeName","src":"10025:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2987,"mutability":"mutable","name":"stalenessSeconds","nameLocation":"10056:16:13","nodeType":"VariableDeclaration","scope":3047,"src":"10049:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2986,"name":"uint32","nodeType":"ElementaryTypeName","src":"10049:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2989,"mutability":"mutable","name":"gasAfterPaymentCalculation","nameLocation":"10085:26:13","nodeType":"VariableDeclaration","scope":3047,"src":"10078:33:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2988,"name":"uint32","nodeType":"ElementaryTypeName","src":"10078:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2991,"mutability":"mutable","name":"fallbackWeiPerUnitLink","nameLocation":"10124:22:13","nodeType":"VariableDeclaration","scope":3047,"src":"10117:29:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2990,"name":"int256","nodeType":"ElementaryTypeName","src":"10117:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2994,"mutability":"mutable","name":"feeConfig","nameLocation":"10169:9:13","nodeType":"VariableDeclaration","scope":3047,"src":"10152:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2780_memory_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig"},"typeName":{"id":2993,"nodeType":"UserDefinedTypeName","pathNode":{"id":2992,"name":"FeeConfig","nodeType":"IdentifierPath","referencedDeclaration":2780,"src":"10152:9:13"},"referencedDeclaration":2780,"src":"10152:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2780_storage_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig"}},"visibility":"internal"}],"src":"9979:203:13"},"returnParameters":{"id":2998,"nodeType":"ParameterList","parameters":[],"src":"10202:0:13"},"scope":4776,"src":"9961:1112:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3068,"nodeType":"Block","src":"11281:172:13","statements":[{"expression":{"components":[{"expression":{"id":3058,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"11302:8:13","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2753_storage","typeString":"struct VRFCoordinatorV2.Config storage ref"}},"id":3059,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"minimumRequestConfirmations","nodeType":"MemberAccess","referencedDeclaration":2744,"src":"11302:36:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"expression":{"id":3060,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"11346:8:13","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2753_storage","typeString":"struct VRFCoordinatorV2.Config storage ref"}},"id":3061,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"maxGasLimit","nodeType":"MemberAccess","referencedDeclaration":2746,"src":"11346:20:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":3062,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"11374:8:13","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2753_storage","typeString":"struct VRFCoordinatorV2.Config storage ref"}},"id":3063,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stalenessSeconds","nodeType":"MemberAccess","referencedDeclaration":2750,"src":"11374:25:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":3064,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"11407:8:13","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2753_storage","typeString":"struct VRFCoordinatorV2.Config storage ref"}},"id":3065,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"gasAfterPaymentCalculation","nodeType":"MemberAccess","referencedDeclaration":2752,"src":"11407:35:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":3066,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11294:154:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint16_$_t_uint32_$_t_uint32_$_t_uint32_$","typeString":"tuple(uint16,uint32,uint32,uint32)"}},"functionReturnParameters":3057,"id":3067,"nodeType":"Return","src":"11287:161:13"}]},"functionSelector":"c3f909d4","id":3069,"implemented":true,"kind":"function","modifiers":[],"name":"getConfig","nameLocation":"11086:9:13","nodeType":"FunctionDefinition","parameters":{"id":3048,"nodeType":"ParameterList","parameters":[],"src":"11095:2:13"},"returnParameters":{"id":3057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3050,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"11147:27:13","nodeType":"VariableDeclaration","scope":3069,"src":"11140:34:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3049,"name":"uint16","nodeType":"ElementaryTypeName","src":"11140:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3052,"mutability":"mutable","name":"maxGasLimit","nameLocation":"11189:11:13","nodeType":"VariableDeclaration","scope":3069,"src":"11182:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3051,"name":"uint32","nodeType":"ElementaryTypeName","src":"11182:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3054,"mutability":"mutable","name":"stalenessSeconds","nameLocation":"11215:16:13","nodeType":"VariableDeclaration","scope":3069,"src":"11208:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3053,"name":"uint32","nodeType":"ElementaryTypeName","src":"11208:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3056,"mutability":"mutable","name":"gasAfterPaymentCalculation","nameLocation":"11246:26:13","nodeType":"VariableDeclaration","scope":3069,"src":"11239:33:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3055,"name":"uint32","nodeType":"ElementaryTypeName","src":"11239:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"11132:146:13"},"scope":4776,"src":"11077:376:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3110,"nodeType":"Block","src":"11857:402:13","statements":[{"expression":{"components":[{"expression":{"id":3090,"name":"s_feeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"11878:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2780_storage","typeString":"struct VRFCoordinatorV2.FeeConfig storage ref"}},"id":3091,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fulfillmentFlatFeeLinkPPMTier1","nodeType":"MemberAccess","referencedDeclaration":2763,"src":"11878:42:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":3092,"name":"s_feeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"11928:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2780_storage","typeString":"struct VRFCoordinatorV2.FeeConfig storage ref"}},"id":3093,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fulfillmentFlatFeeLinkPPMTier2","nodeType":"MemberAccess","referencedDeclaration":2765,"src":"11928:42:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":3094,"name":"s_feeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"11978:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2780_storage","typeString":"struct VRFCoordinatorV2.FeeConfig storage ref"}},"id":3095,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fulfillmentFlatFeeLinkPPMTier3","nodeType":"MemberAccess","referencedDeclaration":2767,"src":"11978:42:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":3096,"name":"s_feeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"12028:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2780_storage","typeString":"struct VRFCoordinatorV2.FeeConfig storage ref"}},"id":3097,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fulfillmentFlatFeeLinkPPMTier4","nodeType":"MemberAccess","referencedDeclaration":2769,"src":"12028:42:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":3098,"name":"s_feeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"12078:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2780_storage","typeString":"struct VRFCoordinatorV2.FeeConfig storage ref"}},"id":3099,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fulfillmentFlatFeeLinkPPMTier5","nodeType":"MemberAccess","referencedDeclaration":2771,"src":"12078:42:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":3100,"name":"s_feeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"12128:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2780_storage","typeString":"struct VRFCoordinatorV2.FeeConfig storage ref"}},"id":3101,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"reqsForTier2","nodeType":"MemberAccess","referencedDeclaration":2773,"src":"12128:24:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"expression":{"id":3102,"name":"s_feeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"12160:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2780_storage","typeString":"struct VRFCoordinatorV2.FeeConfig storage ref"}},"id":3103,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"reqsForTier3","nodeType":"MemberAccess","referencedDeclaration":2775,"src":"12160:24:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"expression":{"id":3104,"name":"s_feeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"12192:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2780_storage","typeString":"struct VRFCoordinatorV2.FeeConfig storage ref"}},"id":3105,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"reqsForTier4","nodeType":"MemberAccess","referencedDeclaration":2777,"src":"12192:24:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"expression":{"id":3106,"name":"s_feeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"12224:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2780_storage","typeString":"struct VRFCoordinatorV2.FeeConfig storage ref"}},"id":3107,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"reqsForTier5","nodeType":"MemberAccess","referencedDeclaration":2779,"src":"12224:24:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"id":3108,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11870:384:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint32_$_t_uint32_$_t_uint32_$_t_uint24_$_t_uint24_$_t_uint24_$_t_uint24_$","typeString":"tuple(uint32,uint32,uint32,uint32,uint32,uint24,uint24,uint24,uint24)"}},"functionReturnParameters":3089,"id":3109,"nodeType":"Return","src":"11863:391:13"}]},"functionSelector":"5fbbc0d2","id":3111,"implemented":true,"kind":"function","modifiers":[],"name":"getFeeConfig","nameLocation":"11466:12:13","nodeType":"FunctionDefinition","parameters":{"id":3070,"nodeType":"ParameterList","parameters":[],"src":"11478:2:13"},"returnParameters":{"id":3089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3072,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier1","nameLocation":"11530:30:13","nodeType":"VariableDeclaration","scope":3111,"src":"11523:37:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3071,"name":"uint32","nodeType":"ElementaryTypeName","src":"11523:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3074,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier2","nameLocation":"11575:30:13","nodeType":"VariableDeclaration","scope":3111,"src":"11568:37:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3073,"name":"uint32","nodeType":"ElementaryTypeName","src":"11568:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3076,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier3","nameLocation":"11620:30:13","nodeType":"VariableDeclaration","scope":3111,"src":"11613:37:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3075,"name":"uint32","nodeType":"ElementaryTypeName","src":"11613:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3078,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier4","nameLocation":"11665:30:13","nodeType":"VariableDeclaration","scope":3111,"src":"11658:37:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3077,"name":"uint32","nodeType":"ElementaryTypeName","src":"11658:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3080,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier5","nameLocation":"11710:30:13","nodeType":"VariableDeclaration","scope":3111,"src":"11703:37:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3079,"name":"uint32","nodeType":"ElementaryTypeName","src":"11703:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3082,"mutability":"mutable","name":"reqsForTier2","nameLocation":"11755:12:13","nodeType":"VariableDeclaration","scope":3111,"src":"11748:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":3081,"name":"uint24","nodeType":"ElementaryTypeName","src":"11748:6:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":3084,"mutability":"mutable","name":"reqsForTier3","nameLocation":"11782:12:13","nodeType":"VariableDeclaration","scope":3111,"src":"11775:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":3083,"name":"uint24","nodeType":"ElementaryTypeName","src":"11775:6:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":3086,"mutability":"mutable","name":"reqsForTier4","nameLocation":"11809:12:13","nodeType":"VariableDeclaration","scope":3111,"src":"11802:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":3085,"name":"uint24","nodeType":"ElementaryTypeName","src":"11802:6:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":3088,"mutability":"mutable","name":"reqsForTier5","nameLocation":"11836:12:13","nodeType":"VariableDeclaration","scope":3111,"src":"11829:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":3087,"name":"uint24","nodeType":"ElementaryTypeName","src":"11829:6:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"11515:339:13"},"scope":4776,"src":"11457:802:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3118,"nodeType":"Block","src":"12322:32:13","statements":[{"expression":{"id":3116,"name":"s_totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"12335:14:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":3115,"id":3117,"nodeType":"Return","src":"12328:21:13"}]},"functionSelector":"12b58349","id":3119,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalBalance","nameLocation":"12272:15:13","nodeType":"FunctionDefinition","parameters":{"id":3112,"nodeType":"ParameterList","parameters":[],"src":"12287:2:13"},"returnParameters":{"id":3115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3119,"src":"12313:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3113,"name":"uint256","nodeType":"ElementaryTypeName","src":"12313:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12312:9:13"},"scope":4776,"src":"12263:91:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3126,"nodeType":"Block","src":"12426:42:13","statements":[{"expression":{"id":3124,"name":"s_fallbackWeiPerUnitLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"12439:24:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3123,"id":3125,"nodeType":"Return","src":"12432:31:13"}]},"functionSelector":"356dac71","id":3127,"implemented":true,"kind":"function","modifiers":[],"name":"getFallbackWeiPerUnitLink","nameLocation":"12367:25:13","nodeType":"FunctionDefinition","parameters":{"id":3120,"nodeType":"ParameterList","parameters":[],"src":"12392:2:13"},"returnParameters":{"id":3123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3127,"src":"12418:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3121,"name":"int256","nodeType":"ElementaryTypeName","src":"12418:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"12417:8:13"},"scope":4776,"src":"12358:110:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3157,"nodeType":"Block","src":"12783:181:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3135,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"12793:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2547_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":3137,"indexExpression":{"id":3136,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"12815:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12793:28:13","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":3138,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2541,"src":"12793:34:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12839:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12831:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3139,"name":"address","nodeType":"ElementaryTypeName","src":"12831:7:13","typeDescriptions":{}}},"id":3142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12831:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12793:48:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3148,"nodeType":"IfStatement","src":"12789:97:13","trueBody":{"id":3147,"nodeType":"Block","src":"12843:43:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3144,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"12858:19:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12858:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3146,"nodeType":"RevertStatement","src":"12851:28:13"}]}},{"expression":{"arguments":[{"id":3150,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"12917:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"baseExpression":{"id":3151,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"12924:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2547_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":3153,"indexExpression":{"id":3152,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"12946:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12924:28:13","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":3154,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2541,"src":"12924:34:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3149,"name":"_cancelSubscriptionHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"12891:25:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint64_$_t_address_$returns$__$","typeString":"function (uint64,address)"}},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12891:68:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3156,"nodeType":"ExpressionStatement","src":"12891:68:13"}]},"documentation":{"id":3128,"nodeType":"StructuredDocumentation","src":"12472:242:13","text":" @notice Owner cancel subscription, sends remaining link directly to the subscription owner.\n @param subId subscription id\n @dev notably can be called even if there are pending requests, outstanding ones may fail onchain"},"functionSelector":"02bcc5b6","id":3158,"implemented":true,"kind":"function","modifiers":[{"id":3133,"kind":"modifierInvocation","modifierName":{"id":3132,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":543,"src":"12773:9:13"},"nodeType":"ModifierInvocation","src":"12773:9:13"}],"name":"ownerCancelSubscription","nameLocation":"12726:23:13","nodeType":"FunctionDefinition","parameters":{"id":3131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3130,"mutability":"mutable","name":"subId","nameLocation":"12757:5:13","nodeType":"VariableDeclaration","scope":3158,"src":"12750:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3129,"name":"uint64","nodeType":"ElementaryTypeName","src":"12750:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"12749:14:13"},"returnParameters":{"id":3134,"nodeType":"ParameterList","parameters":[],"src":"12783:0:13"},"scope":4776,"src":"12717:247:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3216,"nodeType":"Block","src":"13145:480:13","statements":[{"assignments":[3167],"declarations":[{"constant":false,"id":3167,"mutability":"mutable","name":"externalBalance","nameLocation":"13159:15:13","nodeType":"VariableDeclaration","scope":3216,"src":"13151:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3166,"name":"uint256","nodeType":"ElementaryTypeName","src":"13151:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3175,"initialValue":{"arguments":[{"arguments":[{"id":3172,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13200:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2_$4776","typeString":"contract VRFCoordinatorV2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VRFCoordinatorV2_$4776","typeString":"contract VRFCoordinatorV2"}],"id":3171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13192:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3170,"name":"address","nodeType":"ElementaryTypeName","src":"13192:7:13","typeDescriptions":{}}},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13192:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3168,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"13177:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$713","typeString":"contract LinkTokenInterface"}},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":645,"src":"13177:14:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13177:29:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13151:55:13"},{"assignments":[3177],"declarations":[{"constant":false,"id":3177,"mutability":"mutable","name":"internalBalance","nameLocation":"13220:15:13","nodeType":"VariableDeclaration","scope":3216,"src":"13212:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3176,"name":"uint256","nodeType":"ElementaryTypeName","src":"13212:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3182,"initialValue":{"arguments":[{"id":3180,"name":"s_totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"13246:14:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":3179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13238:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3178,"name":"uint256","nodeType":"ElementaryTypeName","src":"13238:7:13","typeDescriptions":{}}},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13238:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13212:49:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3183,"name":"internalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"13271:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3184,"name":"externalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"13289:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13271:33:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3192,"nodeType":"IfStatement","src":"13267:119:13","trueBody":{"id":3191,"nodeType":"Block","src":"13306:80:13","statements":[{"errorCall":{"arguments":[{"id":3187,"name":"internalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"13346:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3188,"name":"externalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"13363:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3186,"name":"BalanceInvariantViolated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"13321:24:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13321:58:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3190,"nodeType":"RevertStatement","src":"13314:65:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3193,"name":"internalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"13395:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3194,"name":"externalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"13413:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13395:33:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3215,"nodeType":"IfStatement","src":"13391:176:13","trueBody":{"id":3214,"nodeType":"Block","src":"13430:137:13","statements":[{"assignments":[3197],"declarations":[{"constant":false,"id":3197,"mutability":"mutable","name":"amount","nameLocation":"13446:6:13","nodeType":"VariableDeclaration","scope":3214,"src":"13438:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3196,"name":"uint256","nodeType":"ElementaryTypeName","src":"13438:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3201,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3198,"name":"externalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"13455:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3199,"name":"internalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"13473:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13455:33:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13438:50:13"},{"expression":{"arguments":[{"id":3205,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"13510:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3206,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"13514:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3202,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"13496:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$713","typeString":"contract LinkTokenInterface"}},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":690,"src":"13496:13:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13496:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3208,"nodeType":"ExpressionStatement","src":"13496:25:13"},{"eventCall":{"arguments":[{"id":3210,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"13549:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3211,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"13553:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3209,"name":"FundsRecovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2534,"src":"13534:14:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13534:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3213,"nodeType":"EmitStatement","src":"13529:31:13"}]}}]},"documentation":{"id":3159,"nodeType":"StructuredDocumentation","src":"12968:121:13","text":" @notice Recover link sent with transfer instead of transferAndCall.\n @param to address to send link to"},"functionSelector":"e72f6e30","id":3217,"implemented":true,"kind":"function","modifiers":[{"id":3164,"kind":"modifierInvocation","modifierName":{"id":3163,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":543,"src":"13135:9:13"},"nodeType":"ModifierInvocation","src":"13135:9:13"}],"name":"recoverFunds","nameLocation":"13101:12:13","nodeType":"FunctionDefinition","parameters":{"id":3162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3161,"mutability":"mutable","name":"to","nameLocation":"13122:2:13","nodeType":"VariableDeclaration","scope":3217,"src":"13114:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3160,"name":"address","nodeType":"ElementaryTypeName","src":"13114:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13113:12:13"},"returnParameters":{"id":3165,"nodeType":"ParameterList","parameters":[],"src":"13145:0:13"},"scope":4776,"src":"13092:533:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4799],"body":{"id":3236,"nodeType":"Block","src":"13778:98:13","statements":[{"expression":{"components":[{"expression":{"id":3229,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"13792:8:13","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2753_storage","typeString":"struct VRFCoordinatorV2.Config storage ref"}},"id":3230,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"minimumRequestConfirmations","nodeType":"MemberAccess","referencedDeclaration":2744,"src":"13792:36:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"expression":{"id":3231,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"13830:8:13","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2753_storage","typeString":"struct VRFCoordinatorV2.Config storage ref"}},"id":3232,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"maxGasLimit","nodeType":"MemberAccess","referencedDeclaration":2746,"src":"13830:20:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3233,"name":"s_provingKeyHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"13852:18:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}}],"id":3234,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13791:80:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint16_$_t_uint32_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"tuple(uint16,uint32,bytes32[] storage ref)"}},"functionReturnParameters":3228,"id":3235,"nodeType":"Return","src":"13784:87:13"}]},"documentation":{"id":3218,"nodeType":"StructuredDocumentation","src":"13629:52:13","text":" @inheritdoc VRFCoordinatorV2Interface"},"functionSelector":"00012291","id":3237,"implemented":true,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"13693:16:13","nodeType":"FunctionDefinition","overrides":{"id":3220,"nodeType":"OverrideSpecifier","overrides":[],"src":"13726:8:13"},"parameters":{"id":3219,"nodeType":"ParameterList","parameters":[],"src":"13709:2:13"},"returnParameters":{"id":3228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3237,"src":"13744:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3221,"name":"uint16","nodeType":"ElementaryTypeName","src":"13744:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3237,"src":"13752:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3223,"name":"uint32","nodeType":"ElementaryTypeName","src":"13752:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3237,"src":"13760:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13760:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3226,"nodeType":"ArrayTypeName","src":"13760:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"13743:34:13"},"scope":4776,"src":"13684:192:13","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[4815],"body":{"id":3389,"nodeType":"Block","src":"14138:2061:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3256,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"14204:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2547_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":3258,"indexExpression":{"id":3257,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"14226:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14204:28:13","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":3259,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2541,"src":"14204:34:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14250:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14242:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3260,"name":"address","nodeType":"ElementaryTypeName","src":"14242:7:13","typeDescriptions":{}}},"id":3263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14242:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14204:48:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3269,"nodeType":"IfStatement","src":"14200:97:13","trueBody":{"id":3268,"nodeType":"Block","src":"14254:43:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3265,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"14269:19:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14269:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3267,"nodeType":"RevertStatement","src":"14262:28:13"}]}},{"assignments":[3271],"declarations":[{"constant":false,"id":3271,"mutability":"mutable","name":"currentNonce","nameLocation":"14529:12:13","nodeType":"VariableDeclaration","scope":3389,"src":"14522:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3270,"name":"uint64","nodeType":"ElementaryTypeName","src":"14522:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":3278,"initialValue":{"baseExpression":{"baseExpression":{"id":3272,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"14544:11:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint64_$_$","typeString":"mapping(address => mapping(uint64 => uint64))"}},"id":3275,"indexExpression":{"expression":{"id":3273,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14556:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"14556:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14544:23:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_uint64_$","typeString":"mapping(uint64 => uint64)"}},"id":3277,"indexExpression":{"id":3276,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"14568:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14544:30:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"14522:52:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3279,"name":"currentNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"14584:12:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14600:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14584:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3289,"nodeType":"IfStatement","src":"14580:79:13","trueBody":{"id":3288,"nodeType":"Block","src":"14603:56:13","statements":[{"errorCall":{"arguments":[{"id":3283,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"14634:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"id":3284,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14641:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"14641:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3282,"name":"InvalidConsumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"14618:15:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint64_$_t_address_$returns$__$","typeString":"function (uint64,address) pure"}},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14618:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3287,"nodeType":"RevertStatement","src":"14611:41:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3290,"name":"requestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"14730:20:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3291,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"14753:8:13","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2753_storage","typeString":"struct VRFCoordinatorV2.Config storage ref"}},"id":3292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"minimumRequestConfirmations","nodeType":"MemberAccess","referencedDeclaration":2744,"src":"14753:36:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"14730:59:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3294,"name":"requestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"14793:20:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3295,"name":"MAX_REQUEST_CONFIRMATIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"14816:25:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"14793:48:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14730:111:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3306,"nodeType":"IfStatement","src":"14719:297:13","trueBody":{"id":3305,"nodeType":"Block","src":"14848:168:13","statements":[{"errorCall":{"arguments":[{"id":3299,"name":"requestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"14900:20:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"expression":{"id":3300,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"14930:8:13","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2753_storage","typeString":"struct VRFCoordinatorV2.Config storage ref"}},"id":3301,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"minimumRequestConfirmations","nodeType":"MemberAccess","referencedDeclaration":2744,"src":"14930:36:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3302,"name":"MAX_REQUEST_CONFIRMATIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"14976:25:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":3298,"name":"InvalidRequestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"14863:27:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint16_$_t_uint16_$_t_uint16_$returns$__$","typeString":"function (uint16,uint16,uint16) pure"}},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14863:146:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3304,"nodeType":"RevertStatement","src":"14856:153:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3307,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"15230:16:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":3308,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"15249:8:13","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2753_storage","typeString":"struct VRFCoordinatorV2.Config storage ref"}},"id":3309,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"maxGasLimit","nodeType":"MemberAccess","referencedDeclaration":2746,"src":"15249:20:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15230:39:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3318,"nodeType":"IfStatement","src":"15226:121:13","trueBody":{"id":3317,"nodeType":"Block","src":"15271:76:13","statements":[{"errorCall":{"arguments":[{"id":3312,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"15301:16:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":3313,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"15319:8:13","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2753_storage","typeString":"struct VRFCoordinatorV2.Config storage ref"}},"id":3314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"maxGasLimit","nodeType":"MemberAccess","referencedDeclaration":2746,"src":"15319:20:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":3311,"name":"GasLimitTooBig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2640,"src":"15286:14:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint32_$_t_uint32_$returns$__$","typeString":"function (uint32,uint32) pure"}},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15286:54:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3316,"nodeType":"RevertStatement","src":"15279:61:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3319,"name":"numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"15356:8:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3320,"name":"MAX_NUM_WORDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"15367:13:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15356:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3328,"nodeType":"IfStatement","src":"15352:91:13","trueBody":{"id":3327,"nodeType":"Block","src":"15382:61:13","statements":[{"errorCall":{"arguments":[{"id":3323,"name":"numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"15412:8:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3324,"name":"MAX_NUM_WORDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"15422:13:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":3322,"name":"NumWordsTooBig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"15397:14:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint32_$_t_uint32_$returns$__$","typeString":"function (uint32,uint32) pure"}},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15397:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3326,"nodeType":"RevertStatement","src":"15390:46:13"}]}},{"assignments":[3330],"declarations":[{"constant":false,"id":3330,"mutability":"mutable","name":"nonce","nameLocation":"15654:5:13","nodeType":"VariableDeclaration","scope":3389,"src":"15647:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3329,"name":"uint64","nodeType":"ElementaryTypeName","src":"15647:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":3334,"initialValue":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3331,"name":"currentNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"15662:12:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15677:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15662:16:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"15647:31:13"},{"assignments":[3336,3338],"declarations":[{"constant":false,"id":3336,"mutability":"mutable","name":"requestId","nameLocation":"15693:9:13","nodeType":"VariableDeclaration","scope":3389,"src":"15685:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3335,"name":"uint256","nodeType":"ElementaryTypeName","src":"15685:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3338,"mutability":"mutable","name":"preSeed","nameLocation":"15712:7:13","nodeType":"VariableDeclaration","scope":3389,"src":"15704:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3337,"name":"uint256","nodeType":"ElementaryTypeName","src":"15704:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3346,"initialValue":{"arguments":[{"id":3340,"name":"keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"15741:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3341,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15750:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"15750:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3343,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"15762:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3344,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"15769:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":3339,"name":"_computeRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"15723:17:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_address_$_t_uint64_$_t_uint64_$returns$_t_uint256_$_t_uint256_$","typeString":"function (bytes32,address,uint64,uint64) pure returns (uint256,uint256)"}},"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15723:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15684:91:13"},{"expression":{"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3347,"name":"s_requestCommitments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"15782:20:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":3349,"indexExpression":{"id":3348,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"15803:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15782:31:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3353,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"15844:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3354,"name":"ChainSpecificUtil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"15855:17:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ChainSpecificUtil_$352_$","typeString":"type(library ChainSpecificUtil)"}},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_getBlockNumber","nodeType":"MemberAccess","referencedDeclaration":144,"src":"15855:33:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15855:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3357,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"15892:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3358,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"15899:16:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3359,"name":"numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"15917:8:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":3360,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15927:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"15927:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3351,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"15833:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"15833:10:13","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15833:105:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3350,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"15816:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15816:128:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"15782:162:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3365,"nodeType":"ExpressionStatement","src":"15782:162:13"},{"eventCall":{"arguments":[{"id":3367,"name":"keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"15983:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3368,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"15998:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3369,"name":"preSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"16015:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3370,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"16030:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3371,"name":"requestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"16043:20:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3372,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"16071:16:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3373,"name":"numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"16095:8:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":3374,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16111:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"16111:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3366,"name":"RandomWordsRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"15955:20:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$_t_address_$returns$__$","typeString":"function (bytes32,uint256,uint256,uint64,uint16,uint32,uint32,address)"}},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15955:172:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3377,"nodeType":"EmitStatement","src":"15950:177:13"},{"expression":{"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3378,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"16133:11:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint64_$_$","typeString":"mapping(address => mapping(uint64 => uint64))"}},"id":3382,"indexExpression":{"expression":{"id":3379,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16145:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"16145:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16133:23:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_uint64_$","typeString":"mapping(uint64 => uint64)"}},"id":3383,"indexExpression":{"id":3381,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"16157:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16133:30:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3384,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"16166:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"16133:38:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":3386,"nodeType":"ExpressionStatement","src":"16133:38:13"},{"expression":{"id":3387,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"16185:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3255,"id":3388,"nodeType":"Return","src":"16178:16:13"}]},"documentation":{"id":3238,"nodeType":"StructuredDocumentation","src":"13880:52:13","text":" @inheritdoc VRFCoordinatorV2Interface"},"functionSelector":"5d3b1d30","id":3390,"implemented":true,"kind":"function","modifiers":[{"id":3252,"kind":"modifierInvocation","modifierName":{"id":3251,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":4765,"src":"14107:12:13"},"nodeType":"ModifierInvocation","src":"14107:12:13"}],"name":"requestRandomWords","nameLocation":"13944:18:13","nodeType":"FunctionDefinition","overrides":{"id":3250,"nodeType":"OverrideSpecifier","overrides":[],"src":"14098:8:13"},"parameters":{"id":3249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3240,"mutability":"mutable","name":"keyHash","nameLocation":"13976:7:13","nodeType":"VariableDeclaration","scope":3390,"src":"13968:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3239,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13968:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3242,"mutability":"mutable","name":"subId","nameLocation":"13996:5:13","nodeType":"VariableDeclaration","scope":3390,"src":"13989:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3241,"name":"uint64","nodeType":"ElementaryTypeName","src":"13989:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3244,"mutability":"mutable","name":"requestConfirmations","nameLocation":"14014:20:13","nodeType":"VariableDeclaration","scope":3390,"src":"14007:27:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3243,"name":"uint16","nodeType":"ElementaryTypeName","src":"14007:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3246,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"14047:16:13","nodeType":"VariableDeclaration","scope":3390,"src":"14040:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3245,"name":"uint32","nodeType":"ElementaryTypeName","src":"14040:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3248,"mutability":"mutable","name":"numWords","nameLocation":"14076:8:13","nodeType":"VariableDeclaration","scope":3390,"src":"14069:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3247,"name":"uint32","nodeType":"ElementaryTypeName","src":"14069:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"13962:126:13"},"returnParameters":{"id":3255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3390,"src":"14129:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3253,"name":"uint256","nodeType":"ElementaryTypeName","src":"14129:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14128:9:13"},"scope":4776,"src":"13935:2264:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3402,"nodeType":"Block","src":"16422:49:13","statements":[{"expression":{"baseExpression":{"id":3398,"name":"s_requestCommitments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"16435:20:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":3400,"indexExpression":{"id":3399,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"16456:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16435:31:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3397,"id":3401,"nodeType":"Return","src":"16428:38:13"}]},"documentation":{"id":3391,"nodeType":"StructuredDocumentation","src":"16203:142:13","text":" @notice Get request commitment\n @param requestId id of request\n @dev used to determine if a request is fulfilled or not"},"functionSelector":"69bcdb7d","id":3403,"implemented":true,"kind":"function","modifiers":[],"name":"getCommitment","nameLocation":"16357:13:13","nodeType":"FunctionDefinition","parameters":{"id":3394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3393,"mutability":"mutable","name":"requestId","nameLocation":"16379:9:13","nodeType":"VariableDeclaration","scope":3403,"src":"16371:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3392,"name":"uint256","nodeType":"ElementaryTypeName","src":"16371:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16370:19:13"},"returnParameters":{"id":3397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3403,"src":"16413:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3395,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16413:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16412:9:13"},"scope":4776,"src":"16348:123:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3446,"nodeType":"Block","src":"16623:162:13","statements":[{"assignments":[3419],"declarations":[{"constant":false,"id":3419,"mutability":"mutable","name":"preSeed","nameLocation":"16637:7:13","nodeType":"VariableDeclaration","scope":3446,"src":"16629:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3418,"name":"uint256","nodeType":"ElementaryTypeName","src":"16629:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3432,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3425,"name":"keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"16676:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3426,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"16685:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3427,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"16693:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3428,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"16700:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"id":3423,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16665:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"16665:10:13","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16665:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3422,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"16655:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16655:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16647:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3420,"name":"uint256","nodeType":"ElementaryTypeName","src":"16647:7:13","typeDescriptions":{}}},"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16647:61:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16629:79:13"},{"expression":{"components":[{"arguments":[{"arguments":[{"arguments":[{"id":3438,"name":"keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"16751:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3439,"name":"preSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"16760:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3436,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16740:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"16740:10:13","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16740:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3435,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"16730:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16730:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16722:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3433,"name":"uint256","nodeType":"ElementaryTypeName","src":"16722:7:13","typeDescriptions":{}}},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16722:48:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3443,"name":"preSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"16772:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3444,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16721:59:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":3417,"id":3445,"nodeType":"Return","src":"16714:66:13"}]},"id":3447,"implemented":true,"kind":"function","modifiers":[],"name":"_computeRequestId","nameLocation":"16484:17:13","nodeType":"FunctionDefinition","parameters":{"id":3412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3405,"mutability":"mutable","name":"keyHash","nameLocation":"16515:7:13","nodeType":"VariableDeclaration","scope":3447,"src":"16507:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3404,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16507:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3407,"mutability":"mutable","name":"sender","nameLocation":"16536:6:13","nodeType":"VariableDeclaration","scope":3447,"src":"16528:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3406,"name":"address","nodeType":"ElementaryTypeName","src":"16528:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3409,"mutability":"mutable","name":"subId","nameLocation":"16555:5:13","nodeType":"VariableDeclaration","scope":3447,"src":"16548:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3408,"name":"uint64","nodeType":"ElementaryTypeName","src":"16548:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3411,"mutability":"mutable","name":"nonce","nameLocation":"16573:5:13","nodeType":"VariableDeclaration","scope":3447,"src":"16566:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3410,"name":"uint64","nodeType":"ElementaryTypeName","src":"16566:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"16501:81:13"},"returnParameters":{"id":3417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3447,"src":"16605:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3413,"name":"uint256","nodeType":"ElementaryTypeName","src":"16605:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3447,"src":"16614:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3415,"name":"uint256","nodeType":"ElementaryTypeName","src":"16614:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16604:18:13"},"scope":4776,"src":"16475:310:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3462,"nodeType":"Block","src":"17052:1210:13","statements":[{"AST":{"nodeType":"YulBlock","src":"17067:1171:13","statements":[{"nodeType":"YulVariableDeclaration","src":"17075:14:13","value":{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"17084:3:13"},"nodeType":"YulFunctionCall","src":"17084:5:13"},"variables":[{"name":"g","nodeType":"YulTypedName","src":"17079:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"17599:30:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17616:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17619:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17609:6:13"},"nodeType":"YulFunctionCall","src":"17609:12:13"},"nodeType":"YulExpressionStatement","src":"17609:12:13"}]},"condition":{"arguments":[{"name":"g","nodeType":"YulIdentifier","src":"17570:1:13"},{"name":"GAS_FOR_CALL_EXACT_CHECK","nodeType":"YulIdentifier","src":"17573:24:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17567:2:13"},"nodeType":"YulFunctionCall","src":"17567:31:13"},"nodeType":"YulIf","src":"17564:2:13"},{"nodeType":"YulAssignment","src":"17636:37:13","value":{"arguments":[{"name":"g","nodeType":"YulIdentifier","src":"17645:1:13"},{"name":"GAS_FOR_CALL_EXACT_CHECK","nodeType":"YulIdentifier","src":"17648:24:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17641:3:13"},"nodeType":"YulFunctionCall","src":"17641:32:13"},"variableNames":[{"name":"g","nodeType":"YulIdentifier","src":"17636:1:13"}]},{"body":{"nodeType":"YulBlock","src":"17816:30:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17833:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17836:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17826:6:13"},"nodeType":"YulFunctionCall","src":"17826:12:13"},"nodeType":"YulExpressionStatement","src":"17826:12:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"g","nodeType":"YulIdentifier","src":"17788:1:13"},{"arguments":[{"name":"g","nodeType":"YulIdentifier","src":"17795:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"17798:2:13","type":"","value":"64"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17791:3:13"},"nodeType":"YulFunctionCall","src":"17791:10:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17784:3:13"},"nodeType":"YulFunctionCall","src":"17784:18:13"},{"name":"gasAmount","nodeType":"YulIdentifier","src":"17804:9:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17781:2:13"},"nodeType":"YulFunctionCall","src":"17781:33:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17774:6:13"},"nodeType":"YulFunctionCall","src":"17774:41:13"},"nodeType":"YulIf","src":"17771:2:13"},{"body":{"nodeType":"YulBlock","src":"17984:30:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18001:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18004:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17994:6:13"},"nodeType":"YulFunctionCall","src":"17994:12:13"},"nodeType":"YulExpressionStatement","src":"17994:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"target","nodeType":"YulIdentifier","src":"17975:6:13"}],"functionName":{"name":"extcodesize","nodeType":"YulIdentifier","src":"17963:11:13"},"nodeType":"YulFunctionCall","src":"17963:19:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17956:6:13"},"nodeType":"YulFunctionCall","src":"17956:27:13"},"nodeType":"YulIf","src":"17953:2:13"},{"nodeType":"YulAssignment","src":"18159:73:13","value":{"arguments":[{"name":"gasAmount","nodeType":"YulIdentifier","src":"18175:9:13"},{"name":"target","nodeType":"YulIdentifier","src":"18186:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"18194:1:13","type":"","value":"0"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18201:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"18207:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18197:3:13"},"nodeType":"YulFunctionCall","src":"18197:15:13"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18220:4:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18214:5:13"},"nodeType":"YulFunctionCall","src":"18214:11:13"},{"kind":"number","nodeType":"YulLiteral","src":"18227:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18230:1:13","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"18170:4:13"},"nodeType":"YulFunctionCall","src":"18170:62:13"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18159:7:13"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":2626,"isOffset":false,"isSlot":false,"src":"17573:24:13","valueSize":1},{"declaration":2626,"isOffset":false,"isSlot":false,"src":"17648:24:13","valueSize":1},{"declaration":3454,"isOffset":false,"isSlot":false,"src":"18201:4:13","valueSize":1},{"declaration":3454,"isOffset":false,"isSlot":false,"src":"18220:4:13","valueSize":1},{"declaration":3450,"isOffset":false,"isSlot":false,"src":"17804:9:13","valueSize":1},{"declaration":3450,"isOffset":false,"isSlot":false,"src":"18175:9:13","valueSize":1},{"declaration":3457,"isOffset":false,"isSlot":false,"src":"18159:7:13","valueSize":1},{"declaration":3452,"isOffset":false,"isSlot":false,"src":"17975:6:13","valueSize":1},{"declaration":3452,"isOffset":false,"isSlot":false,"src":"18186:6:13","valueSize":1}],"id":3459,"nodeType":"InlineAssembly","src":"17058:1180:13"},{"expression":{"id":3460,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"18250:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3458,"id":3461,"nodeType":"Return","src":"18243:14:13"}]},"documentation":{"id":3448,"nodeType":"StructuredDocumentation","src":"16789:148:13","text":" @dev calls target address with exactly gasAmount gas and data as calldata\n or reverts if at least gasAmount gas is not available."},"id":3463,"implemented":true,"kind":"function","modifiers":[],"name":"_callWithExactGas","nameLocation":"16949:17:13","nodeType":"FunctionDefinition","parameters":{"id":3455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3450,"mutability":"mutable","name":"gasAmount","nameLocation":"16975:9:13","nodeType":"VariableDeclaration","scope":3463,"src":"16967:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3449,"name":"uint256","nodeType":"ElementaryTypeName","src":"16967:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3452,"mutability":"mutable","name":"target","nameLocation":"16994:6:13","nodeType":"VariableDeclaration","scope":3463,"src":"16986:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3451,"name":"address","nodeType":"ElementaryTypeName","src":"16986:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3454,"mutability":"mutable","name":"data","nameLocation":"17015:4:13","nodeType":"VariableDeclaration","scope":3463,"src":"17002:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3453,"name":"bytes","nodeType":"ElementaryTypeName","src":"17002:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16966:54:13"},"returnParameters":{"id":3458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3457,"mutability":"mutable","name":"success","nameLocation":"17043:7:13","nodeType":"VariableDeclaration","scope":3463,"src":"17038:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3456,"name":"bool","nodeType":"ElementaryTypeName","src":"17038:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17037:14:13"},"scope":4776,"src":"16940:1322:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3618,"nodeType":"Block","src":"18438:1156:13","statements":[{"expression":{"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3478,"name":"keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"18444:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3480,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"18464:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$2346_memory_ptr","typeString":"struct VRF.Proof memory"}},"id":3481,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"pk","nodeType":"MemberAccess","referencedDeclaration":2323,"src":"18464:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"id":3479,"name":"hashOfKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"18454:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bytes32_$","typeString":"function (uint256[2] memory) pure returns (bytes32)"}},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18454:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"18444:29:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3484,"nodeType":"ExpressionStatement","src":"18444:29:13"},{"assignments":[3486],"declarations":[{"constant":false,"id":3486,"mutability":"mutable","name":"oracle","nameLocation":"18538:6:13","nodeType":"VariableDeclaration","scope":3618,"src":"18530:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3485,"name":"address","nodeType":"ElementaryTypeName","src":"18530:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3490,"initialValue":{"baseExpression":{"id":3487,"name":"s_provingKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"18547:13:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":3489,"indexExpression":{"id":3488,"name":"keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"18561:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18547:22:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"18530:39:13"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3491,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"18579:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18597:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18589:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3492,"name":"address","nodeType":"ElementaryTypeName","src":"18589:7:13","typeDescriptions":{}}},"id":3495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18589:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18579:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3502,"nodeType":"IfStatement","src":"18575:73:13","trueBody":{"id":3501,"nodeType":"Block","src":"18601:47:13","statements":[{"errorCall":{"arguments":[{"id":3498,"name":"keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"18633:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3497,"name":"NoSuchProvingKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"18616:16:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18616:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3500,"nodeType":"RevertStatement","src":"18609:32:13"}]}},{"expression":{"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3503,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"18653:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"id":3509,"name":"keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"18694:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3510,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"18703:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$2346_memory_ptr","typeString":"struct VRF.Proof memory"}},"id":3511,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"seed","nodeType":"MemberAccess","referencedDeclaration":2333,"src":"18703:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3507,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"18683:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"18683:10:13","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18683:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3506,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"18673:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18673:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18665:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3504,"name":"uint256","nodeType":"ElementaryTypeName","src":"18665:7:13","typeDescriptions":{}}},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18665:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18653:63:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3516,"nodeType":"ExpressionStatement","src":"18653:63:13"},{"assignments":[3518],"declarations":[{"constant":false,"id":3518,"mutability":"mutable","name":"commitment","nameLocation":"18730:10:13","nodeType":"VariableDeclaration","scope":3618,"src":"18722:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3517,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18722:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3522,"initialValue":{"baseExpression":{"id":3519,"name":"s_requestCommitments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"18743:20:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":3521,"indexExpression":{"id":3520,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"18764:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18743:31:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"18722:52:13"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3523,"name":"commitment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"18784:10:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18798:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18784:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3530,"nodeType":"IfStatement","src":"18780:67:13","trueBody":{"id":3529,"nodeType":"Block","src":"18801:46:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3526,"name":"NoCorrespondingRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"18816:22:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18816:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3528,"nodeType":"RevertStatement","src":"18809:31:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3531,"name":"commitment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"18863:10:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"arguments":[{"id":3535,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"18898:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3536,"name":"rc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"18909:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2687_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}},"id":3537,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockNum","nodeType":"MemberAccess","referencedDeclaration":2678,"src":"18909:11:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"id":3538,"name":"rc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"18922:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2687_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}},"id":3539,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":2680,"src":"18922:8:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"id":3540,"name":"rc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"18932:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2687_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}},"id":3541,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"callbackGasLimit","nodeType":"MemberAccess","referencedDeclaration":2682,"src":"18932:19:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":3542,"name":"rc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"18953:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2687_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}},"id":3543,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":2684,"src":"18953:11:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":3544,"name":"rc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"18966:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2687_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}},"id":3545,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":2686,"src":"18966:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3533,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"18887:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"18887:10:13","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18887:89:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3532,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"18877:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18877:100:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"18863:114:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3553,"nodeType":"IfStatement","src":"18852:175:13","trueBody":{"id":3552,"nodeType":"Block","src":"18984:43:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3549,"name":"IncorrectCommitment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"18999:19:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18999:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3551,"nodeType":"RevertStatement","src":"18992:28:13"}]}},{"assignments":[3555],"declarations":[{"constant":false,"id":3555,"mutability":"mutable","name":"blockHash","nameLocation":"19041:9:13","nodeType":"VariableDeclaration","scope":3618,"src":"19033:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3554,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19033:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3561,"initialValue":{"arguments":[{"expression":{"id":3558,"name":"rc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"19085:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2687_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}},"id":3559,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockNum","nodeType":"MemberAccess","referencedDeclaration":2678,"src":"19085:11:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"id":3556,"name":"ChainSpecificUtil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"19053:17:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ChainSpecificUtil_$352_$","typeString":"type(library ChainSpecificUtil)"}},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_getBlockhash","nodeType":"MemberAccess","referencedDeclaration":120,"src":"19053:31:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint64_$returns$_t_bytes32_$","typeString":"function (uint64) view returns (bytes32)"}},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19053:44:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"19033:64:13"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3562,"name":"blockHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"19107:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19128:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19120:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3563,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19120:7:13","typeDescriptions":{}}},"id":3566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19120:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"19107:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3590,"nodeType":"IfStatement","src":"19103:191:13","trueBody":{"id":3589,"nodeType":"Block","src":"19132:162:13","statements":[{"expression":{"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3568,"name":"blockHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"19140:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3571,"name":"rc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"19181:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2687_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}},"id":3572,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockNum","nodeType":"MemberAccess","referencedDeclaration":2678,"src":"19181:11:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"id":3569,"name":"BLOCKHASH_STORE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"19152:15:13","typeDescriptions":{"typeIdentifier":"t_contract$_BlockhashStoreInterface_$4786","typeString":"contract BlockhashStoreInterface"}},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getBlockhash","nodeType":"MemberAccess","referencedDeclaration":4785,"src":"19152:28:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) view external returns (bytes32)"}},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19152:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"19140:53:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3575,"nodeType":"ExpressionStatement","src":"19140:53:13"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3576,"name":"blockHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"19205:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19226:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19218:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3577,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19218:7:13","typeDescriptions":{}}},"id":3580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19218:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"19205:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3588,"nodeType":"IfStatement","src":"19201:87:13","trueBody":{"id":3587,"nodeType":"Block","src":"19230:58:13","statements":[{"errorCall":{"arguments":[{"expression":{"id":3583,"name":"rc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"19267:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2687_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}},"id":3584,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockNum","nodeType":"MemberAccess","referencedDeclaration":2678,"src":"19267:11:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":3582,"name":"BlockhashNotInStore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"19247:19:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19247:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3586,"nodeType":"RevertStatement","src":"19240:39:13"}]}}]}},{"assignments":[3592],"declarations":[{"constant":false,"id":3592,"mutability":"mutable","name":"actualSeed","nameLocation":"19384:10:13","nodeType":"VariableDeclaration","scope":3618,"src":"19376:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3591,"name":"uint256","nodeType":"ElementaryTypeName","src":"19376:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3604,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":3598,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"19432:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$2346_memory_ptr","typeString":"struct VRF.Proof memory"}},"id":3599,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"seed","nodeType":"MemberAccess","referencedDeclaration":2333,"src":"19432:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3600,"name":"blockHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"19444:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3596,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19415:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"19415:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19415:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3595,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"19405:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19405:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19397:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3593,"name":"uint256","nodeType":"ElementaryTypeName","src":"19397:7:13","typeDescriptions":{}}},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19397:59:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19376:80:13"},{"expression":{"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3605,"name":"randomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"19462:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3608,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"19504:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$2346_memory_ptr","typeString":"struct VRF.Proof memory"}},{"id":3609,"name":"actualSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"19511:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Proof_$2346_memory_ptr","typeString":"struct VRF.Proof memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3606,"name":"VRF","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"19475:3:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRF_$2394_$","typeString":"type(contract VRF)"}},"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_randomValueFromVRFProof","nodeType":"MemberAccess","referencedDeclaration":2393,"src":"19475:28:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Proof_$2346_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct VRF.Proof memory,uint256) view returns (uint256)"}},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19475:47:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19462:60:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3612,"nodeType":"ExpressionStatement","src":"19462:60:13"},{"expression":{"components":[{"id":3613,"name":"keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"19558:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3614,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"19567:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3615,"name":"randomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"19578:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3616,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19557:32:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_uint256_$_t_uint256_$","typeString":"tuple(bytes32,uint256,uint256)"}},"functionReturnParameters":3477,"id":3617,"nodeType":"Return","src":"19550:39:13"}]},"id":3619,"implemented":true,"kind":"function","modifiers":[],"name":"_getRandomnessFromProof","nameLocation":"18275:23:13","nodeType":"FunctionDefinition","parameters":{"id":3470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3466,"mutability":"mutable","name":"proof","nameLocation":"18317:5:13","nodeType":"VariableDeclaration","scope":3619,"src":"18304:18:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$2346_memory_ptr","typeString":"struct VRF.Proof"},"typeName":{"id":3465,"nodeType":"UserDefinedTypeName","pathNode":{"id":3464,"name":"Proof","nodeType":"IdentifierPath","referencedDeclaration":2346,"src":"18304:5:13"},"referencedDeclaration":2346,"src":"18304:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$2346_storage_ptr","typeString":"struct VRF.Proof"}},"visibility":"internal"},{"constant":false,"id":3469,"mutability":"mutable","name":"rc","nameLocation":"18353:2:13","nodeType":"VariableDeclaration","scope":3619,"src":"18328:27:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2687_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment"},"typeName":{"id":3468,"nodeType":"UserDefinedTypeName","pathNode":{"id":3467,"name":"RequestCommitment","nodeType":"IdentifierPath","referencedDeclaration":2687,"src":"18328:17:13"},"referencedDeclaration":2687,"src":"18328:17:13","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2687_storage_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment"}},"visibility":"internal"}],"src":"18298:61:13"},"returnParameters":{"id":3477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3472,"mutability":"mutable","name":"keyHash","nameLocation":"18390:7:13","nodeType":"VariableDeclaration","scope":3619,"src":"18382:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3471,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18382:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3474,"mutability":"mutable","name":"requestId","nameLocation":"18407:9:13","nodeType":"VariableDeclaration","scope":3619,"src":"18399:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3473,"name":"uint256","nodeType":"ElementaryTypeName","src":"18399:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3476,"mutability":"mutable","name":"randomness","nameLocation":"18426:10:13","nodeType":"VariableDeclaration","scope":3619,"src":"18418:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3475,"name":"uint256","nodeType":"ElementaryTypeName","src":"18418:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18381:56:13"},"scope":4776,"src":"18266:1328:13","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3689,"nodeType":"Block","src":"19803:569:13","statements":[{"assignments":[3628],"declarations":[{"constant":false,"id":3628,"mutability":"mutable","name":"fc","nameLocation":"19826:2:13","nodeType":"VariableDeclaration","scope":3689,"src":"19809:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2780_memory_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig"},"typeName":{"id":3627,"nodeType":"UserDefinedTypeName","pathNode":{"id":3626,"name":"FeeConfig","nodeType":"IdentifierPath","referencedDeclaration":2780,"src":"19809:9:13"},"referencedDeclaration":2780,"src":"19809:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2780_storage_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig"}},"visibility":"internal"}],"id":3630,"initialValue":{"id":3629,"name":"s_feeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"19831:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2780_storage","typeString":"struct VRFCoordinatorV2.FeeConfig storage ref"}},"nodeType":"VariableDeclarationStatement","src":"19809:33:13"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19852:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3632,"name":"reqCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"19857:8:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"19852:13:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3634,"name":"reqCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"19869:8:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":3635,"name":"fc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"19881:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2780_memory_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig memory"}},"id":3636,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"reqsForTier2","nodeType":"MemberAccess","referencedDeclaration":2773,"src":"19881:15:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"19869:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19852:44:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3643,"nodeType":"IfStatement","src":"19848:105:13","trueBody":{"id":3642,"nodeType":"Block","src":"19898:55:13","statements":[{"expression":{"expression":{"id":3639,"name":"fc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"19913:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2780_memory_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig memory"}},"id":3640,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fulfillmentFlatFeeLinkPPMTier1","nodeType":"MemberAccess","referencedDeclaration":2763,"src":"19913:33:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":3625,"id":3641,"nodeType":"Return","src":"19906:40:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3644,"name":"fc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"19962:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2780_memory_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig memory"}},"id":3645,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"reqsForTier2","nodeType":"MemberAccess","referencedDeclaration":2773,"src":"19962:15:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3646,"name":"reqCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"19980:8:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"19962:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3648,"name":"reqCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"19992:8:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":3649,"name":"fc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"20004:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2780_memory_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig memory"}},"id":3650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"reqsForTier3","nodeType":"MemberAccess","referencedDeclaration":2775,"src":"20004:15:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"19992:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19962:57:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3657,"nodeType":"IfStatement","src":"19958:118:13","trueBody":{"id":3656,"nodeType":"Block","src":"20021:55:13","statements":[{"expression":{"expression":{"id":3653,"name":"fc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"20036:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2780_memory_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig memory"}},"id":3654,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fulfillmentFlatFeeLinkPPMTier2","nodeType":"MemberAccess","referencedDeclaration":2765,"src":"20036:33:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":3625,"id":3655,"nodeType":"Return","src":"20029:40:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3658,"name":"fc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"20085:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2780_memory_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig memory"}},"id":3659,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"reqsForTier3","nodeType":"MemberAccess","referencedDeclaration":2775,"src":"20085:15:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3660,"name":"reqCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"20103:8:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"20085:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3662,"name":"reqCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"20115:8:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":3663,"name":"fc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"20127:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2780_memory_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig memory"}},"id":3664,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"reqsForTier4","nodeType":"MemberAccess","referencedDeclaration":2777,"src":"20127:15:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"20115:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"20085:57:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3671,"nodeType":"IfStatement","src":"20081:118:13","trueBody":{"id":3670,"nodeType":"Block","src":"20144:55:13","statements":[{"expression":{"expression":{"id":3667,"name":"fc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"20159:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2780_memory_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig memory"}},"id":3668,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fulfillmentFlatFeeLinkPPMTier3","nodeType":"MemberAccess","referencedDeclaration":2767,"src":"20159:33:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":3625,"id":3669,"nodeType":"Return","src":"20152:40:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3672,"name":"fc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"20208:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2780_memory_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig memory"}},"id":3673,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"reqsForTier4","nodeType":"MemberAccess","referencedDeclaration":2777,"src":"20208:15:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3674,"name":"reqCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"20226:8:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"20208:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3676,"name":"reqCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"20238:8:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":3677,"name":"fc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"20250:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2780_memory_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig memory"}},"id":3678,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"reqsForTier5","nodeType":"MemberAccess","referencedDeclaration":2779,"src":"20250:15:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"20238:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"20208:57:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3685,"nodeType":"IfStatement","src":"20204:118:13","trueBody":{"id":3684,"nodeType":"Block","src":"20267:55:13","statements":[{"expression":{"expression":{"id":3681,"name":"fc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"20282:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2780_memory_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig memory"}},"id":3682,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fulfillmentFlatFeeLinkPPMTier4","nodeType":"MemberAccess","referencedDeclaration":2769,"src":"20282:33:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":3625,"id":3683,"nodeType":"Return","src":"20275:40:13"}]}},{"expression":{"expression":{"id":3686,"name":"fc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"20334:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2780_memory_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig memory"}},"id":3687,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fulfillmentFlatFeeLinkPPMTier5","nodeType":"MemberAccess","referencedDeclaration":2771,"src":"20334:33:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":3625,"id":3688,"nodeType":"Return","src":"20327:40:13"}]},"functionSelector":"d2f9f9a7","id":3690,"implemented":true,"kind":"function","modifiers":[],"name":"getFeeTier","nameLocation":"19746:10:13","nodeType":"FunctionDefinition","parameters":{"id":3622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3621,"mutability":"mutable","name":"reqCount","nameLocation":"19764:8:13","nodeType":"VariableDeclaration","scope":3690,"src":"19757:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3620,"name":"uint64","nodeType":"ElementaryTypeName","src":"19757:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"19756:17:13"},"returnParameters":{"id":3625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3690,"src":"19795:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3623,"name":"uint32","nodeType":"ElementaryTypeName","src":"19795:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"19794:8:13"},"scope":4776,"src":"19737:635:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3867,"nodeType":"Block","src":"20824:2207:13","statements":[{"assignments":[3704],"declarations":[{"constant":false,"id":3704,"mutability":"mutable","name":"startGas","nameLocation":"20838:8:13","nodeType":"VariableDeclaration","scope":3867,"src":"20830:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3703,"name":"uint256","nodeType":"ElementaryTypeName","src":"20830:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3707,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3705,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"20849:7:13","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20849:9:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20830:28:13"},{"assignments":[3709,3711,3713],"declarations":[{"constant":false,"id":3709,"mutability":"mutable","name":"keyHash","nameLocation":"20873:7:13","nodeType":"VariableDeclaration","scope":3867,"src":"20865:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3708,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20865:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3711,"mutability":"mutable","name":"requestId","nameLocation":"20890:9:13","nodeType":"VariableDeclaration","scope":3867,"src":"20882:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3710,"name":"uint256","nodeType":"ElementaryTypeName","src":"20882:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3713,"mutability":"mutable","name":"randomness","nameLocation":"20909:10:13","nodeType":"VariableDeclaration","scope":3867,"src":"20901:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3712,"name":"uint256","nodeType":"ElementaryTypeName","src":"20901:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3718,"initialValue":{"arguments":[{"id":3715,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"20947:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$2346_memory_ptr","typeString":"struct VRF.Proof memory"}},{"id":3716,"name":"rc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"20954:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2687_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Proof_$2346_memory_ptr","typeString":"struct VRF.Proof memory"},{"typeIdentifier":"t_struct$_RequestCommitment_$2687_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}],"id":3714,"name":"_getRandomnessFromProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"20923:23:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Proof_$2346_memory_ptr_$_t_struct$_RequestCommitment_$2687_memory_ptr_$returns$_t_bytes32_$_t_uint256_$_t_uint256_$","typeString":"function (struct VRF.Proof memory,struct VRFCoordinatorV2.RequestCommitment memory) view returns (bytes32,uint256,uint256)"}},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20923:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_uint256_$_t_uint256_$","typeString":"tuple(bytes32,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"20864:93:13"},{"assignments":[3723],"declarations":[{"constant":false,"id":3723,"mutability":"mutable","name":"randomWords","nameLocation":"20981:11:13","nodeType":"VariableDeclaration","scope":3867,"src":"20964:28:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3721,"name":"uint256","nodeType":"ElementaryTypeName","src":"20964:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3722,"nodeType":"ArrayTypeName","src":"20964:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3730,"initialValue":{"arguments":[{"expression":{"id":3727,"name":"rc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"21009:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2687_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}},"id":3728,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":2684,"src":"21009:11:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":3726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"20995:13:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3724,"name":"uint256","nodeType":"ElementaryTypeName","src":"20999:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3725,"nodeType":"ArrayTypeName","src":"20999:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20995:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"20964:57:13"},{"body":{"id":3757,"nodeType":"Block","src":"21069:77:13","statements":[{"expression":{"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3742,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"21077:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3744,"indexExpression":{"id":3743,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"21089:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"21077:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"id":3750,"name":"randomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"21123:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3751,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"21135:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3748,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"21112:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"21112:10:13","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21112:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3747,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"21102:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21102:36:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21094:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3745,"name":"uint256","nodeType":"ElementaryTypeName","src":"21094:7:13","typeDescriptions":{}}},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21094:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21077:62:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3756,"nodeType":"ExpressionStatement","src":"21077:62:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3735,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"21047:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3736,"name":"rc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"21051:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2687_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}},"id":3737,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":2684,"src":"21051:11:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"21047:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3758,"initializationExpression":{"assignments":[3732],"declarations":[{"constant":false,"id":3732,"mutability":"mutable","name":"i","nameLocation":"21040:1:13","nodeType":"VariableDeclaration","scope":3758,"src":"21032:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3731,"name":"uint256","nodeType":"ElementaryTypeName","src":"21032:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3734,"initialValue":{"hexValue":"30","id":3733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21044:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"21032:13:13"},"loopExpression":{"expression":{"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"21064:3:13","subExpression":{"id":3739,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"21064:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3741,"nodeType":"ExpressionStatement","src":"21064:3:13"},"nodeType":"ForStatement","src":"21027:119:13"},{"expression":{"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"21152:38:13","subExpression":{"baseExpression":{"id":3759,"name":"s_requestCommitments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"21159:20:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":3761,"indexExpression":{"id":3760,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"21180:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"21159:31:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3763,"nodeType":"ExpressionStatement","src":"21152:38:13"},{"assignments":[3766],"declarations":[{"constant":false,"id":3766,"mutability":"mutable","name":"v","nameLocation":"21214:1:13","nodeType":"VariableDeclaration","scope":3867,"src":"21196:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2_$2452","typeString":"contract VRFConsumerBaseV2"},"typeName":{"id":3765,"nodeType":"UserDefinedTypeName","pathNode":{"id":3764,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":2452,"src":"21196:17:13"},"referencedDeclaration":2452,"src":"21196:17:13","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2_$2452","typeString":"contract VRFConsumerBaseV2"}},"visibility":"internal"}],"id":3767,"nodeType":"VariableDeclarationStatement","src":"21196:19:13"},{"assignments":[3769],"declarations":[{"constant":false,"id":3769,"mutability":"mutable","name":"resp","nameLocation":"21234:4:13","nodeType":"VariableDeclaration","scope":3867,"src":"21221:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3768,"name":"bytes","nodeType":"ElementaryTypeName","src":"21221:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3778,"initialValue":{"arguments":[{"expression":{"expression":{"id":3772,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"21264:1:13","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2_$2452","typeString":"contract VRFConsumerBaseV2"}},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rawFulfillRandomWords","nodeType":"MemberAccess","referencedDeclaration":2451,"src":"21264:23:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory) external"}},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"21264:32:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3775,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"21298:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3776,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"21309:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":3770,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"21241:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"21241:22:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21241:80:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"21221:100:13"},{"expression":{"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3779,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"21743:8:13","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2753_storage","typeString":"struct VRFCoordinatorV2.Config storage ref"}},"id":3781,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"reentrancyLock","nodeType":"MemberAccess","referencedDeclaration":2748,"src":"21743:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21769:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"21743:30:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3784,"nodeType":"ExpressionStatement","src":"21743:30:13"},{"assignments":[3786],"declarations":[{"constant":false,"id":3786,"mutability":"mutable","name":"success","nameLocation":"21784:7:13","nodeType":"VariableDeclaration","scope":3867,"src":"21779:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3785,"name":"bool","nodeType":"ElementaryTypeName","src":"21779:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3794,"initialValue":{"arguments":[{"expression":{"id":3788,"name":"rc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"21812:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2687_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}},"id":3789,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"callbackGasLimit","nodeType":"MemberAccess","referencedDeclaration":2682,"src":"21812:19:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":3790,"name":"rc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"21833:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2687_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}},"id":3791,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":2686,"src":"21833:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3792,"name":"resp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"21844:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3787,"name":"_callWithExactGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"21794:17:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (uint256,address,bytes memory) returns (bool)"}},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21794:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"21779:70:13"},{"expression":{"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3795,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"21855:8:13","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2753_storage","typeString":"struct VRFCoordinatorV2.Config storage ref"}},"id":3797,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"reentrancyLock","nodeType":"MemberAccess","referencedDeclaration":2748,"src":"21855:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21881:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"21855:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3800,"nodeType":"ExpressionStatement","src":"21855:31:13"},{"assignments":[3802],"declarations":[{"constant":false,"id":3802,"mutability":"mutable","name":"reqCount","nameLocation":"21955:8:13","nodeType":"VariableDeclaration","scope":3867,"src":"21948:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3801,"name":"uint64","nodeType":"ElementaryTypeName","src":"21948:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":3808,"initialValue":{"expression":{"baseExpression":{"id":3803,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"21966:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2539_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.Subscription storage ref)"}},"id":3806,"indexExpression":{"expression":{"id":3804,"name":"rc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"21982:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2687_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}},"id":3805,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":2680,"src":"21982:8:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21966:25:13","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2539_storage","typeString":"struct VRFCoordinatorV2.Subscription storage ref"}},"id":3807,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"reqCount","nodeType":"MemberAccess","referencedDeclaration":2538,"src":"21966:34:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"21948:52:13"},{"expression":{"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3809,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"22006:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2539_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.Subscription storage ref)"}},"id":3812,"indexExpression":{"expression":{"id":3810,"name":"rc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"22022:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2687_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}},"id":3811,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":2680,"src":"22022:8:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22006:25:13","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2539_storage","typeString":"struct VRFCoordinatorV2.Subscription storage ref"}},"id":3813,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"reqCount","nodeType":"MemberAccess","referencedDeclaration":2538,"src":"22006:34:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22044:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22006:39:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":3816,"nodeType":"ExpressionStatement","src":"22006:39:13"},{"assignments":[3818],"declarations":[{"constant":false,"id":3818,"mutability":"mutable","name":"payment","nameLocation":"22525:7:13","nodeType":"VariableDeclaration","scope":3867,"src":"22518:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3817,"name":"uint96","nodeType":"ElementaryTypeName","src":"22518:6:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":3829,"initialValue":{"arguments":[{"id":3820,"name":"startGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"22566:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3821,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"22582:8:13","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2753_storage","typeString":"struct VRFCoordinatorV2.Config storage ref"}},"id":3822,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"gasAfterPaymentCalculation","nodeType":"MemberAccess","referencedDeclaration":2752,"src":"22582:35:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"id":3824,"name":"reqCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"22636:8:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":3823,"name":"getFeeTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"22625:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint64_$returns$_t_uint32_$","typeString":"function (uint64) view returns (uint32)"}},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22625:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":3826,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"22653:2:13","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"gasprice","nodeType":"MemberAccess","src":"22653:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3819,"name":"_calculatePaymentAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"22535:23:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint256_$returns$_t_uint96_$","typeString":"function (uint256,uint256,uint32,uint256) view returns (uint96)"}},"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22535:135:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"22518:152:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":3836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3830,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"22680:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2539_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.Subscription storage ref)"}},"id":3833,"indexExpression":{"expression":{"id":3831,"name":"rc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"22696:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2687_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}},"id":3832,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":2680,"src":"22696:8:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22680:25:13","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2539_storage","typeString":"struct VRFCoordinatorV2.Subscription storage ref"}},"id":3834,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2536,"src":"22680:33:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3835,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"22716:7:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"22680:43:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3841,"nodeType":"IfStatement","src":"22676:92:13","trueBody":{"id":3840,"nodeType":"Block","src":"22725:43:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3837,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"22740:19:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22740:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3839,"nodeType":"RevertStatement","src":"22733:28:13"}]}},{"expression":{"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3842,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"22773:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2539_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.Subscription storage ref)"}},"id":3845,"indexExpression":{"expression":{"id":3843,"name":"rc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"22789:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2687_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}},"id":3844,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":2680,"src":"22789:8:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22773:25:13","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2539_storage","typeString":"struct VRFCoordinatorV2.Subscription storage ref"}},"id":3846,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2536,"src":"22773:33:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3847,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"22810:7:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"22773:44:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":3849,"nodeType":"ExpressionStatement","src":"22773:44:13"},{"expression":{"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3850,"name":"s_withdrawableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"22823:20:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint96_$","typeString":"mapping(address => uint96)"}},"id":3854,"indexExpression":{"baseExpression":{"id":3851,"name":"s_provingKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"22844:13:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":3853,"indexExpression":{"id":3852,"name":"keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"22858:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22844:22:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"22823:44:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3855,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"22871:7:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"22823:55:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":3857,"nodeType":"ExpressionStatement","src":"22823:55:13"},{"eventCall":{"arguments":[{"id":3859,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"22966:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3860,"name":"randomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"22977:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3861,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"22989:7:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":3862,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"22998:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3858,"name":"RandomWordsFulfilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"22945:20:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint96_$_t_bool_$returns$__$","typeString":"function (uint256,uint256,uint96,bool)"}},"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22945:61:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3864,"nodeType":"EmitStatement","src":"22940:66:13"},{"expression":{"id":3865,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"23019:7:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":3702,"id":3866,"nodeType":"Return","src":"23012:14:13"}]},"functionSelector":"af198b97","id":3868,"implemented":true,"kind":"function","modifiers":[{"id":3699,"kind":"modifierInvocation","modifierName":{"id":3698,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":4765,"src":"20794:12:13"},"nodeType":"ModifierInvocation","src":"20794:12:13"}],"name":"fulfillRandomWords","nameLocation":"20717:18:13","nodeType":"FunctionDefinition","parameters":{"id":3697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3693,"mutability":"mutable","name":"proof","nameLocation":"20749:5:13","nodeType":"VariableDeclaration","scope":3868,"src":"20736:18:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$2346_memory_ptr","typeString":"struct VRF.Proof"},"typeName":{"id":3692,"nodeType":"UserDefinedTypeName","pathNode":{"id":3691,"name":"Proof","nodeType":"IdentifierPath","referencedDeclaration":2346,"src":"20736:5:13"},"referencedDeclaration":2346,"src":"20736:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$2346_storage_ptr","typeString":"struct VRF.Proof"}},"visibility":"internal"},{"constant":false,"id":3696,"mutability":"mutable","name":"rc","nameLocation":"20781:2:13","nodeType":"VariableDeclaration","scope":3868,"src":"20756:27:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2687_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment"},"typeName":{"id":3695,"nodeType":"UserDefinedTypeName","pathNode":{"id":3694,"name":"RequestCommitment","nodeType":"IdentifierPath","referencedDeclaration":2687,"src":"20756:17:13"},"referencedDeclaration":2687,"src":"20756:17:13","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2687_storage_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment"}},"visibility":"internal"}],"src":"20735:49:13"},"returnParameters":{"id":3702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3868,"src":"20816:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3700,"name":"uint96","nodeType":"ElementaryTypeName","src":"20816:6:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"20815:8:13"},"scope":4776,"src":"20708:2323:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3956,"nodeType":"Block","src":"23278:760:13","statements":[{"assignments":[3882],"declarations":[{"constant":false,"id":3882,"mutability":"mutable","name":"weiPerUnitLink","nameLocation":"23291:14:13","nodeType":"VariableDeclaration","scope":3956,"src":"23284:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3881,"name":"int256","nodeType":"ElementaryTypeName","src":"23284:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3883,"nodeType":"VariableDeclarationStatement","src":"23284:21:13"},{"expression":{"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3884,"name":"weiPerUnitLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"23311:14:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3885,"name":"_getFeedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4004,"src":"23328:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_int256_$","typeString":"function () view returns (int256)"}},"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23328:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23311:31:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3888,"nodeType":"ExpressionStatement","src":"23311:31:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3889,"name":"weiPerUnitLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"23352:14:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":3890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23370:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23352:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3897,"nodeType":"IfStatement","src":"23348:82:13","trueBody":{"id":3896,"nodeType":"Block","src":"23373:57:13","statements":[{"errorCall":{"arguments":[{"id":3893,"name":"weiPerUnitLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"23408:14:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3892,"name":"InvalidLinkWeiPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"23388:19:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23388:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3895,"nodeType":"RevertStatement","src":"23381:42:13"}]}},{"assignments":[3899],"declarations":[{"constant":false,"id":3899,"mutability":"mutable","name":"l1CostWei","nameLocation":"23504:9:13","nodeType":"VariableDeclaration","scope":3956,"src":"23496:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3898,"name":"uint256","nodeType":"ElementaryTypeName","src":"23496:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3905,"initialValue":{"arguments":[{"expression":{"id":3902,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"23557:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"23557:8:13","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":3900,"name":"ChainSpecificUtil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"23516:17:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ChainSpecificUtil_$352_$","typeString":"type(library ChainSpecificUtil)"}},"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_getCurrentTxL1GasFees","nodeType":"MemberAccess","referencedDeclaration":184,"src":"23516:40:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory) view returns (uint256)"}},"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23516:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23496:70:13"},{"assignments":[3907],"declarations":[{"constant":false,"id":3907,"mutability":"mutable","name":"paymentNoFee","nameLocation":"23652:12:13","nodeType":"VariableDeclaration","scope":3956,"src":"23644:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3906,"name":"uint256","nodeType":"ElementaryTypeName","src":"23644:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3928,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31653138","id":3908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23668:4:13","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3909,"name":"weiPerUnitGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"23676:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3910,"name":"gasAfterPaymentCalculation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"23693:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3911,"name":"startGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"23722:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23693:37:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3913,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"23733:7:13","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23733:9:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23693:49:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3916,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23692:51:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23676:67:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3918,"name":"l1CostWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"23746:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23676:79:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3920,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23675:81:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23668:88:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3922,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23667:90:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[{"id":3925,"name":"weiPerUnitLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"23774:14:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23766:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3923,"name":"uint256","nodeType":"ElementaryTypeName","src":"23766:7:13","typeDescriptions":{}}},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23766:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23667:122:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23644:145:13"},{"assignments":[3930],"declarations":[{"constant":false,"id":3930,"mutability":"mutable","name":"fee","nameLocation":"23803:3:13","nodeType":"VariableDeclaration","scope":3956,"src":"23795:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3929,"name":"uint256","nodeType":"ElementaryTypeName","src":"23795:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3937,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31653132","id":3931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23809:4:13","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3934,"name":"fulfillmentFlatFeeLinkPPM","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"23824:25:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":3933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23816:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3932,"name":"uint256","nodeType":"ElementaryTypeName","src":"23816:7:13","typeDescriptions":{}}},"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23816:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23809:41:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23795:55:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3938,"name":"paymentNoFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"23860:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31653237","id":3939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23876:4:13","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000"},"value":"1e27"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3940,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"23883:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23876:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3942,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23875:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23860:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3948,"nodeType":"IfStatement","src":"23856:139:13","trueBody":{"id":3947,"nodeType":"Block","src":"23889:106:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3944,"name":"PaymentTooLarge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"23904:15:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23904:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3946,"nodeType":"RevertStatement","src":"23897:24:13"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3951,"name":"paymentNoFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"24014:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3952,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"24029:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24014:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24007:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3949,"name":"uint96","nodeType":"ElementaryTypeName","src":"24007:6:13","typeDescriptions":{}}},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24007:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":3880,"id":3955,"nodeType":"Return","src":"24000:33:13"}]},"id":3957,"implemented":true,"kind":"function","modifiers":[],"name":"_calculatePaymentAmount","nameLocation":"23092:23:13","nodeType":"FunctionDefinition","parameters":{"id":3877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3870,"mutability":"mutable","name":"startGas","nameLocation":"23129:8:13","nodeType":"VariableDeclaration","scope":3957,"src":"23121:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3869,"name":"uint256","nodeType":"ElementaryTypeName","src":"23121:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3872,"mutability":"mutable","name":"gasAfterPaymentCalculation","nameLocation":"23151:26:13","nodeType":"VariableDeclaration","scope":3957,"src":"23143:34:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3871,"name":"uint256","nodeType":"ElementaryTypeName","src":"23143:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3874,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPM","nameLocation":"23190:25:13","nodeType":"VariableDeclaration","scope":3957,"src":"23183:32:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3873,"name":"uint32","nodeType":"ElementaryTypeName","src":"23183:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3876,"mutability":"mutable","name":"weiPerUnitGas","nameLocation":"23229:13:13","nodeType":"VariableDeclaration","scope":3957,"src":"23221:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3875,"name":"uint256","nodeType":"ElementaryTypeName","src":"23221:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23115:131:13"},"returnParameters":{"id":3880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3957,"src":"23270:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3878,"name":"uint96","nodeType":"ElementaryTypeName","src":"23270:6:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"23269:8:13"},"scope":4776,"src":"23083:955:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4003,"nodeType":"Block","src":"24096:439:13","statements":[{"assignments":[3963],"declarations":[{"constant":false,"id":3963,"mutability":"mutable","name":"stalenessSeconds","nameLocation":"24109:16:13","nodeType":"VariableDeclaration","scope":4003,"src":"24102:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3962,"name":"uint32","nodeType":"ElementaryTypeName","src":"24102:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":3966,"initialValue":{"expression":{"id":3964,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"24128:8:13","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2753_storage","typeString":"struct VRFCoordinatorV2.Config storage ref"}},"id":3965,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stalenessSeconds","nodeType":"MemberAccess","referencedDeclaration":2750,"src":"24128:25:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"24102:51:13"},{"assignments":[3968],"declarations":[{"constant":false,"id":3968,"mutability":"mutable","name":"staleFallback","nameLocation":"24164:13:13","nodeType":"VariableDeclaration","scope":4003,"src":"24159:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3967,"name":"bool","nodeType":"ElementaryTypeName","src":"24159:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3972,"initialValue":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3969,"name":"stalenessSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"24180:16:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24199:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24180:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"24159:41:13"},{"assignments":[3974],"declarations":[{"constant":false,"id":3974,"mutability":"mutable","name":"timestamp","nameLocation":"24214:9:13","nodeType":"VariableDeclaration","scope":4003,"src":"24206:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3973,"name":"uint256","nodeType":"ElementaryTypeName","src":"24206:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3975,"nodeType":"VariableDeclarationStatement","src":"24206:17:13"},{"assignments":[3977],"declarations":[{"constant":false,"id":3977,"mutability":"mutable","name":"weiPerUnitLink","nameLocation":"24236:14:13","nodeType":"VariableDeclaration","scope":4003,"src":"24229:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3976,"name":"int256","nodeType":"ElementaryTypeName","src":"24229:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3978,"nodeType":"VariableDeclarationStatement","src":"24229:21:13"},{"expression":{"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[null,{"id":3979,"name":"weiPerUnitLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"24259:14:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},null,{"id":3980,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"24277:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},null],"id":3981,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"24256:33:13","typeDescriptions":{"typeIdentifier":"t_tuple$__$_t_int256_$__$_t_uint256_$__$","typeString":"tuple(,int256,,uint256,)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3982,"name":"LINK_ETH_FEED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"24292:13:13","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$590","typeString":"contract AggregatorV3Interface"}},"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"latestRoundData","nodeType":"MemberAccess","referencedDeclaration":589,"src":"24292:29:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"function () view external returns (uint80,int256,uint256,uint256,uint80)"}},"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24292:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"src":"24256:67:13","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3986,"nodeType":"ExpressionStatement","src":"24256:67:13"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3987,"name":"staleFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3968,"src":"24383:13:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3988,"name":"stalenessSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"24400:16:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3989,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"24419:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"24419:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3991,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"24437:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24419:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24400:46:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24383:63:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4000,"nodeType":"IfStatement","src":"24379:125:13","trueBody":{"id":3999,"nodeType":"Block","src":"24448:56:13","statements":[{"expression":{"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3995,"name":"weiPerUnitLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"24456:14:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3996,"name":"s_fallbackWeiPerUnitLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"24473:24:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24456:41:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3998,"nodeType":"ExpressionStatement","src":"24456:41:13"}]}},{"expression":{"id":4001,"name":"weiPerUnitLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"24516:14:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3961,"id":4002,"nodeType":"Return","src":"24509:21:13"}]},"id":4004,"implemented":true,"kind":"function","modifiers":[],"name":"_getFeedData","nameLocation":"24051:12:13","nodeType":"FunctionDefinition","parameters":{"id":3958,"nodeType":"ParameterList","parameters":[],"src":"24063:2:13"},"returnParameters":{"id":3961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4004,"src":"24088:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3959,"name":"int256","nodeType":"ElementaryTypeName","src":"24088:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24087:8:13"},"scope":4776,"src":"24042:493:13","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4046,"nodeType":"Block","src":"24783:265:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4013,"name":"s_withdrawableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"24793:20:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint96_$","typeString":"mapping(address => uint96)"}},"id":4016,"indexExpression":{"expression":{"id":4014,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24814:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"24814:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24793:32:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4017,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"24828:6:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"24793:41:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4023,"nodeType":"IfStatement","src":"24789:90:13","trueBody":{"id":4022,"nodeType":"Block","src":"24836:43:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4019,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"24851:19:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24851:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4021,"nodeType":"RevertStatement","src":"24844:28:13"}]}},{"expression":{"id":4029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4024,"name":"s_withdrawableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"24884:20:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint96_$","typeString":"mapping(address => uint96)"}},"id":4027,"indexExpression":{"expression":{"id":4025,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"24905:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"24905:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"24884:32:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4028,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"24920:6:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"24884:42:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":4030,"nodeType":"ExpressionStatement","src":"24884:42:13"},{"expression":{"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4031,"name":"s_totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"24932:14:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4032,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"24950:6:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"24932:24:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":4034,"nodeType":"ExpressionStatement","src":"24932:24:13"},{"condition":{"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"24966:33:13","subExpression":{"arguments":[{"id":4037,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"24981:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4038,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"24992:6:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"expression":{"id":4035,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"24967:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$713","typeString":"contract LinkTokenInterface"}},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":690,"src":"24967:13:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24967:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4045,"nodeType":"IfStatement","src":"24962:82:13","trueBody":{"id":4044,"nodeType":"Block","src":"25001:43:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4041,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"25016:19:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25016:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4043,"nodeType":"RevertStatement","src":"25009:28:13"}]}}]},"functionSelector":"66316d8d","id":4047,"implemented":true,"kind":"function","modifiers":[{"id":4011,"kind":"modifierInvocation","modifierName":{"id":4010,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":4765,"src":"24770:12:13"},"nodeType":"ModifierInvocation","src":"24770:12:13"}],"name":"oracleWithdraw","nameLocation":"24712:14:13","nodeType":"FunctionDefinition","parameters":{"id":4009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4006,"mutability":"mutable","name":"recipient","nameLocation":"24735:9:13","nodeType":"VariableDeclaration","scope":4047,"src":"24727:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4005,"name":"address","nodeType":"ElementaryTypeName","src":"24727:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4008,"mutability":"mutable","name":"amount","nameLocation":"24753:6:13","nodeType":"VariableDeclaration","scope":4047,"src":"24746:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4007,"name":"uint96","nodeType":"ElementaryTypeName","src":"24746:6:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"24726:34:13"},"returnParameters":{"id":4012,"nodeType":"ParameterList","parameters":[],"src":"24783:0:13"},"scope":4776,"src":"24703:345:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[601],"body":{"id":4136,"nodeType":"Block","src":"25167:630:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4059,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"25177:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"25177:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":4063,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"25199:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$713","typeString":"contract LinkTokenInterface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LinkTokenInterface_$713","typeString":"contract LinkTokenInterface"}],"id":4062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25191:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4061,"name":"address","nodeType":"ElementaryTypeName","src":"25191:7:13","typeDescriptions":{}}},"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25191:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"25177:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4070,"nodeType":"IfStatement","src":"25173:77:13","trueBody":{"id":4069,"nodeType":"Block","src":"25206:44:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4066,"name":"OnlyCallableFromLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"25221:20:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25221:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4068,"nodeType":"RevertStatement","src":"25214:29:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4071,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"25259:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"25259:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3332","id":4073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25274:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25259:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4079,"nodeType":"IfStatement","src":"25255:62:13","trueBody":{"id":4078,"nodeType":"Block","src":"25278:39:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4075,"name":"InvalidCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"25293:15:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25293:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4077,"nodeType":"RevertStatement","src":"25286:24:13"}]}},{"assignments":[4081],"declarations":[{"constant":false,"id":4081,"mutability":"mutable","name":"subId","nameLocation":"25329:5:13","nodeType":"VariableDeclaration","scope":4136,"src":"25322:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4080,"name":"uint64","nodeType":"ElementaryTypeName","src":"25322:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":4089,"initialValue":{"arguments":[{"id":4084,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"25348:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"components":[{"id":4086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25355:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4085,"name":"uint64","nodeType":"ElementaryTypeName","src":"25355:6:13","typeDescriptions":{}}}],"id":4087,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"25354:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"expression":{"id":4082,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"25337:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"25337:10:13","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25337:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"25322:41:13"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4090,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"25373:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2547_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":4092,"indexExpression":{"id":4091,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"25395:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25373:28:13","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":4093,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2541,"src":"25373:34:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25419:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25411:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4094,"name":"address","nodeType":"ElementaryTypeName","src":"25411:7:13","typeDescriptions":{}}},"id":4097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25411:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"25373:48:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4103,"nodeType":"IfStatement","src":"25369:97:13","trueBody":{"id":4102,"nodeType":"Block","src":"25423:43:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4099,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"25438:19:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25438:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4101,"nodeType":"RevertStatement","src":"25431:28:13"}]}},{"assignments":[4105],"declarations":[{"constant":false,"id":4105,"mutability":"mutable","name":"oldBalance","nameLocation":"25588:10:13","nodeType":"VariableDeclaration","scope":4136,"src":"25580:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4104,"name":"uint256","nodeType":"ElementaryTypeName","src":"25580:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4110,"initialValue":{"expression":{"baseExpression":{"id":4106,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"25601:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2539_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.Subscription storage ref)"}},"id":4108,"indexExpression":{"id":4107,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"25617:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25601:22:13","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2539_storage","typeString":"struct VRFCoordinatorV2.Subscription storage ref"}},"id":4109,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2536,"src":"25601:30:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"25580:51:13"},{"expression":{"id":4119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4111,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"25637:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2539_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.Subscription storage ref)"}},"id":4113,"indexExpression":{"id":4112,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"25653:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25637:22:13","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2539_storage","typeString":"struct VRFCoordinatorV2.Subscription storage ref"}},"id":4114,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2536,"src":"25637:30:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":4117,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"25678:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25671:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4115,"name":"uint96","nodeType":"ElementaryTypeName","src":"25671:6:13","typeDescriptions":{}}},"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25671:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"25637:48:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":4120,"nodeType":"ExpressionStatement","src":"25637:48:13"},{"expression":{"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4121,"name":"s_totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"25691:14:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":4124,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"25716:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25709:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4122,"name":"uint96","nodeType":"ElementaryTypeName","src":"25709:6:13","typeDescriptions":{}}},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25709:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"25691:32:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":4127,"nodeType":"ExpressionStatement","src":"25691:32:13"},{"eventCall":{"arguments":[{"id":4129,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"25753:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":4130,"name":"oldBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"25760:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4131,"name":"oldBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"25772:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4132,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"25785:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25772:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4128,"name":"SubscriptionFunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"25734:18:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint64,uint256,uint256)"}},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25734:58:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4135,"nodeType":"EmitStatement","src":"25729:63:13"}]},"functionSelector":"a4c0ed36","id":4137,"implemented":true,"kind":"function","modifiers":[{"id":4057,"kind":"modifierInvocation","modifierName":{"id":4056,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":4765,"src":"25154:12:13"},"nodeType":"ModifierInvocation","src":"25154:12:13"}],"name":"onTokenTransfer","nameLocation":"25061:15:13","nodeType":"FunctionDefinition","overrides":{"id":4055,"nodeType":"OverrideSpecifier","overrides":[],"src":"25145:8:13"},"parameters":{"id":4054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4137,"src":"25077:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4048,"name":"address","nodeType":"ElementaryTypeName","src":"25077:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4051,"mutability":"mutable","name":"amount","nameLocation":"25107:6:13","nodeType":"VariableDeclaration","scope":4137,"src":"25099:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4050,"name":"uint256","nodeType":"ElementaryTypeName","src":"25099:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4053,"mutability":"mutable","name":"data","nameLocation":"25130:4:13","nodeType":"VariableDeclaration","scope":4137,"src":"25115:19:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4052,"name":"bytes","nodeType":"ElementaryTypeName","src":"25115:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"25076:59:13"},"returnParameters":{"id":4058,"nodeType":"ParameterList","parameters":[],"src":"25167:0:13"},"scope":4776,"src":"25052:745:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4144,"nodeType":"Block","src":"25859:32:13","statements":[{"expression":{"id":4142,"name":"s_currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"25872:14:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":4141,"id":4143,"nodeType":"Return","src":"25865:21:13"}]},"functionSelector":"06bfa637","id":4145,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentSubId","nameLocation":"25810:15:13","nodeType":"FunctionDefinition","parameters":{"id":4138,"nodeType":"ParameterList","parameters":[],"src":"25825:2:13"},"returnParameters":{"id":4141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4145,"src":"25851:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4139,"name":"uint64","nodeType":"ElementaryTypeName","src":"25851:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"25850:8:13"},"scope":4776,"src":"25801:90:13","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[4836],"body":{"id":4193,"nodeType":"Block","src":"26105:291:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4161,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"26115:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2547_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":4163,"indexExpression":{"id":4162,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"26137:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26115:28:13","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":4164,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2541,"src":"26115:34:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26161:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26153:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4165,"name":"address","nodeType":"ElementaryTypeName","src":"26153:7:13","typeDescriptions":{}}},"id":4168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26153:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"26115:48:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4174,"nodeType":"IfStatement","src":"26111:97:13","trueBody":{"id":4173,"nodeType":"Block","src":"26165:43:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4170,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"26180:19:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26180:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4172,"nodeType":"RevertStatement","src":"26173:28:13"}]}},{"expression":{"components":[{"expression":{"baseExpression":{"id":4175,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"26228:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2539_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.Subscription storage ref)"}},"id":4177,"indexExpression":{"id":4176,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"26244:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26228:22:13","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2539_storage","typeString":"struct VRFCoordinatorV2.Subscription storage ref"}},"id":4178,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2536,"src":"26228:30:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"expression":{"baseExpression":{"id":4179,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"26266:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2539_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.Subscription storage ref)"}},"id":4181,"indexExpression":{"id":4180,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"26282:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26266:22:13","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2539_storage","typeString":"struct VRFCoordinatorV2.Subscription storage ref"}},"id":4182,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"reqCount","nodeType":"MemberAccess","referencedDeclaration":2538,"src":"26266:31:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"baseExpression":{"id":4183,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"26305:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2547_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":4185,"indexExpression":{"id":4184,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"26327:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26305:28:13","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":4186,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2541,"src":"26305:34:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":4187,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"26347:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2547_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":4189,"indexExpression":{"id":4188,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"26369:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26347:28:13","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":4190,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":2546,"src":"26347:38:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}}],"id":4191,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26220:171:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint96_$_t_uint64_$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"tuple(uint96,uint64,address,address[] storage ref)"}},"functionReturnParameters":4160,"id":4192,"nodeType":"Return","src":"26213:178:13"}]},"documentation":{"id":4146,"nodeType":"StructuredDocumentation","src":"25895:52:13","text":" @inheritdoc VRFCoordinatorV2Interface"},"functionSelector":"a47c7696","id":4194,"implemented":true,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"25959:15:13","nodeType":"FunctionDefinition","overrides":{"id":4150,"nodeType":"OverrideSpecifier","overrides":[],"src":"26011:8:13"},"parameters":{"id":4149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4148,"mutability":"mutable","name":"subId","nameLocation":"25987:5:13","nodeType":"VariableDeclaration","scope":4194,"src":"25980:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4147,"name":"uint64","nodeType":"ElementaryTypeName","src":"25980:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"25974:22:13"},"returnParameters":{"id":4160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4152,"mutability":"mutable","name":"balance","nameLocation":"26036:7:13","nodeType":"VariableDeclaration","scope":4194,"src":"26029:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4151,"name":"uint96","nodeType":"ElementaryTypeName","src":"26029:6:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":4154,"mutability":"mutable","name":"reqCount","nameLocation":"26052:8:13","nodeType":"VariableDeclaration","scope":4194,"src":"26045:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4153,"name":"uint64","nodeType":"ElementaryTypeName","src":"26045:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4156,"mutability":"mutable","name":"owner","nameLocation":"26070:5:13","nodeType":"VariableDeclaration","scope":4194,"src":"26062:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4155,"name":"address","nodeType":"ElementaryTypeName","src":"26062:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4159,"mutability":"mutable","name":"consumers","nameLocation":"26094:9:13","nodeType":"VariableDeclaration","scope":4194,"src":"26077:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4157,"name":"address","nodeType":"ElementaryTypeName","src":"26077:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4158,"nodeType":"ArrayTypeName","src":"26077:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"26028:76:13"},"scope":4776,"src":"25950:446:13","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[4821],"body":{"id":4252,"nodeType":"Block","src":"26533:436:13","statements":[{"expression":{"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"26539:16:13","subExpression":{"id":4203,"name":"s_currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"26539:14:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4205,"nodeType":"ExpressionStatement","src":"26539:16:13"},{"assignments":[4207],"declarations":[{"constant":false,"id":4207,"mutability":"mutable","name":"currentSubId","nameLocation":"26568:12:13","nodeType":"VariableDeclaration","scope":4252,"src":"26561:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4206,"name":"uint64","nodeType":"ElementaryTypeName","src":"26561:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":4209,"initialValue":{"id":4208,"name":"s_currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"26583:14:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"26561:36:13"},{"assignments":[4214],"declarations":[{"constant":false,"id":4214,"mutability":"mutable","name":"consumers","nameLocation":"26620:9:13","nodeType":"VariableDeclaration","scope":4252,"src":"26603:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4212,"name":"address","nodeType":"ElementaryTypeName","src":"26603:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4213,"nodeType":"ArrayTypeName","src":"26603:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4220,"initialValue":{"arguments":[{"hexValue":"30","id":4218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26646:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"26632:13:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":4215,"name":"address","nodeType":"ElementaryTypeName","src":"26636:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4216,"nodeType":"ArrayTypeName","src":"26636:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":4219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26632:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"26603:45:13"},{"expression":{"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4221,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"26654:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2539_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.Subscription storage ref)"}},"id":4223,"indexExpression":{"id":4222,"name":"currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"26670:12:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"26654:29:13","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2539_storage","typeString":"struct VRFCoordinatorV2.Subscription storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":4225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26709:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":4226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26722:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4224,"name":"Subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"26686:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Subscription_$2539_storage_ptr_$","typeString":"type(struct VRFCoordinatorV2.Subscription storage pointer)"}},"id":4227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"names":["balance","reqCount"],"nodeType":"FunctionCall","src":"26686:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2539_memory_ptr","typeString":"struct VRFCoordinatorV2.Subscription memory"}},"src":"26654:71:13","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2539_storage","typeString":"struct VRFCoordinatorV2.Subscription storage ref"}},"id":4229,"nodeType":"ExpressionStatement","src":"26654:71:13"},{"expression":{"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4230,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"26731:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2547_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":4232,"indexExpression":{"id":4231,"name":"currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"26753:12:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"26731:35:13","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4234,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"26803:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"26803:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":4238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26845:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26837:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4236,"name":"address","nodeType":"ElementaryTypeName","src":"26837:7:13","typeDescriptions":{}}},"id":4239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26837:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4240,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4214,"src":"26866:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":4233,"name":"SubscriptionConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"26769:18:13","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_SubscriptionConfig_$2547_storage_ptr_$","typeString":"type(struct VRFCoordinatorV2.SubscriptionConfig storage pointer)"}},"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["owner","requestedOwner","consumers"],"nodeType":"FunctionCall","src":"26769:113:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_memory_ptr","typeString":"struct VRFCoordinatorV2.SubscriptionConfig memory"}},"src":"26731:151:13","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":4243,"nodeType":"ExpressionStatement","src":"26731:151:13"},{"eventCall":{"arguments":[{"id":4245,"name":"currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"26914:12:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"id":4246,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"26928:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"26928:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4244,"name":"SubscriptionCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"26894:19:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_address_$returns$__$","typeString":"function (uint64,address)"}},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26894:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4249,"nodeType":"EmitStatement","src":"26889:50:13"},{"expression":{"id":4250,"name":"currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"26952:12:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":4202,"id":4251,"nodeType":"Return","src":"26945:19:13"}]},"documentation":{"id":4195,"nodeType":"StructuredDocumentation","src":"26400:52:13","text":" @inheritdoc VRFCoordinatorV2Interface"},"functionSelector":"a21a23e4","id":4253,"implemented":true,"kind":"function","modifiers":[{"id":4199,"kind":"modifierInvocation","modifierName":{"id":4198,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":4765,"src":"26503:12:13"},"nodeType":"ModifierInvocation","src":"26503:12:13"}],"name":"createSubscription","nameLocation":"26464:18:13","nodeType":"FunctionDefinition","overrides":{"id":4197,"nodeType":"OverrideSpecifier","overrides":[],"src":"26494:8:13"},"parameters":{"id":4196,"nodeType":"ParameterList","parameters":[],"src":"26482:2:13"},"returnParameters":{"id":4202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4253,"src":"26525:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4200,"name":"uint64","nodeType":"ElementaryTypeName","src":"26525:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"26524:8:13"},"scope":4776,"src":"26455:514:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4844],"body":{"id":4289,"nodeType":"Block","src":"27165:296:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4267,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"27255:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2547_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":4269,"indexExpression":{"id":4268,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"27277:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27255:28:13","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":4270,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"requestedOwner","nodeType":"MemberAccess","referencedDeclaration":2543,"src":"27255:43:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4271,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"27302:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"27255:55:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4288,"nodeType":"IfStatement","src":"27251:206:13","trueBody":{"id":4287,"nodeType":"Block","src":"27312:145:13","statements":[{"expression":{"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4273,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"27320:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2547_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":4275,"indexExpression":{"id":4274,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"27342:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27320:28:13","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":4276,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"requestedOwner","nodeType":"MemberAccess","referencedDeclaration":2543,"src":"27320:43:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4277,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"27366:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"27320:54:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4279,"nodeType":"ExpressionStatement","src":"27320:54:13"},{"eventCall":{"arguments":[{"id":4281,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"27422:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"id":4282,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"27429:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"27429:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4284,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"27441:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4280,"name":"SubscriptionOwnerTransferRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"27387:34:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_address_$_t_address_$returns$__$","typeString":"function (uint64,address,address)"}},"id":4285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27387:63:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4286,"nodeType":"EmitStatement","src":"27382:68:13"}]}}]},"documentation":{"id":4254,"nodeType":"StructuredDocumentation","src":"26973:52:13","text":" @inheritdoc VRFCoordinatorV2Interface"},"functionSelector":"04c357cb","id":4290,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4262,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"27145:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":4263,"kind":"modifierInvocation","modifierName":{"id":4261,"name":"onlySubOwner","nodeType":"IdentifierPath","referencedDeclaration":4754,"src":"27132:12:13"},"nodeType":"ModifierInvocation","src":"27132:19:13"},{"id":4265,"kind":"modifierInvocation","modifierName":{"id":4264,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":4765,"src":"27152:12:13"},"nodeType":"ModifierInvocation","src":"27152:12:13"}],"name":"requestSubscriptionOwnerTransfer","nameLocation":"27037:32:13","nodeType":"FunctionDefinition","overrides":{"id":4260,"nodeType":"OverrideSpecifier","overrides":[],"src":"27123:8:13"},"parameters":{"id":4259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4256,"mutability":"mutable","name":"subId","nameLocation":"27082:5:13","nodeType":"VariableDeclaration","scope":4290,"src":"27075:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4255,"name":"uint64","nodeType":"ElementaryTypeName","src":"27075:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4258,"mutability":"mutable","name":"newOwner","nameLocation":"27101:8:13","nodeType":"VariableDeclaration","scope":4290,"src":"27093:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4257,"name":"address","nodeType":"ElementaryTypeName","src":"27093:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"27069:44:13"},"returnParameters":{"id":4266,"nodeType":"ParameterList","parameters":[],"src":"27165:0:13"},"scope":4776,"src":"27028:433:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4850],"body":{"id":4361,"nodeType":"Block","src":"27606:504:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4299,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"27616:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2547_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":4301,"indexExpression":{"id":4300,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"27638:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27616:28:13","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":4302,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2541,"src":"27616:34:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27662:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27654:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4303,"name":"address","nodeType":"ElementaryTypeName","src":"27654:7:13","typeDescriptions":{}}},"id":4306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27654:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"27616:48:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4312,"nodeType":"IfStatement","src":"27612:97:13","trueBody":{"id":4311,"nodeType":"Block","src":"27666:43:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4308,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"27681:19:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27681:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4310,"nodeType":"RevertStatement","src":"27674:28:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4313,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"27718:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2547_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":4315,"indexExpression":{"id":4314,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"27740:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27718:28:13","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":4316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"requestedOwner","nodeType":"MemberAccess","referencedDeclaration":2543,"src":"27718:43:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":4317,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"27765:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"27765:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"27718:57:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4328,"nodeType":"IfStatement","src":"27714:150:13","trueBody":{"id":4327,"nodeType":"Block","src":"27777:87:13","statements":[{"errorCall":{"arguments":[{"expression":{"baseExpression":{"id":4321,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"27813:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2547_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":4323,"indexExpression":{"id":4322,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"27835:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27813:28:13","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":4324,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"requestedOwner","nodeType":"MemberAccess","referencedDeclaration":2543,"src":"27813:43:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4320,"name":"MustBeRequestedOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"27792:20:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":4325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27792:65:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4326,"nodeType":"RevertStatement","src":"27785:72:13"}]}},{"assignments":[4330],"declarations":[{"constant":false,"id":4330,"mutability":"mutable","name":"oldOwner","nameLocation":"27877:8:13","nodeType":"VariableDeclaration","scope":4361,"src":"27869:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4329,"name":"address","nodeType":"ElementaryTypeName","src":"27869:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4335,"initialValue":{"expression":{"baseExpression":{"id":4331,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"27888:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2547_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":4333,"indexExpression":{"id":4332,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"27910:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27888:28:13","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":4334,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2541,"src":"27888:34:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"27869:53:13"},{"expression":{"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4336,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"27928:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2547_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":4338,"indexExpression":{"id":4337,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"27950:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27928:28:13","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":4339,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2541,"src":"27928:34:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4340,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"27965:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"27965:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"27928:47:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4343,"nodeType":"ExpressionStatement","src":"27928:47:13"},{"expression":{"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4344,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"27981:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2547_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":4346,"indexExpression":{"id":4345,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"28003:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27981:28:13","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":4347,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"requestedOwner","nodeType":"MemberAccess","referencedDeclaration":2543,"src":"27981:43:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":4350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28035:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28027:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4348,"name":"address","nodeType":"ElementaryTypeName","src":"28027:7:13","typeDescriptions":{}}},"id":4351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28027:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"27981:56:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4353,"nodeType":"ExpressionStatement","src":"27981:56:13"},{"eventCall":{"arguments":[{"id":4355,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"28077:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":4356,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"28084:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4357,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"28094:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"28094:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4354,"name":"SubscriptionOwnerTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"28048:28:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_address_$_t_address_$returns$__$","typeString":"function (uint64,address,address)"}},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28048:57:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4360,"nodeType":"EmitStatement","src":"28043:62:13"}]},"documentation":{"id":4291,"nodeType":"StructuredDocumentation","src":"27465:52:13","text":" @inheritdoc VRFCoordinatorV2Interface"},"functionSelector":"82359740","id":4362,"implemented":true,"kind":"function","modifiers":[{"id":4297,"kind":"modifierInvocation","modifierName":{"id":4296,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":4765,"src":"27593:12:13"},"nodeType":"ModifierInvocation","src":"27593:12:13"}],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"27529:31:13","nodeType":"FunctionDefinition","overrides":{"id":4295,"nodeType":"OverrideSpecifier","overrides":[],"src":"27584:8:13"},"parameters":{"id":4294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4293,"mutability":"mutable","name":"subId","nameLocation":"27568:5:13","nodeType":"VariableDeclaration","scope":4362,"src":"27561:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4292,"name":"uint64","nodeType":"ElementaryTypeName","src":"27561:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"27560:14:13"},"returnParameters":{"id":4298,"nodeType":"ParameterList","parameters":[],"src":"27606:0:13"},"scope":4776,"src":"27520:590:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4866],"body":{"id":4470,"nodeType":"Block","src":"28276:819:13","statements":[{"condition":{"arguments":[{"id":4377,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"28307:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":4376,"name":"pendingRequestExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"28286:20:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint64_$returns$_t_bool_$","typeString":"function (uint64) view returns (bool)"}},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28286:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4383,"nodeType":"IfStatement","src":"28282:77:13","trueBody":{"id":4382,"nodeType":"Block","src":"28315:44:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4379,"name":"PendingRequestExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"28330:20:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28330:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4381,"nodeType":"RevertStatement","src":"28323:29:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":4384,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"28368:11:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint64_$_$","typeString":"mapping(address => mapping(uint64 => uint64))"}},"id":4386,"indexExpression":{"id":4385,"name":"consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"28380:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"28368:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_uint64_$","typeString":"mapping(uint64 => uint64)"}},"id":4388,"indexExpression":{"id":4387,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"28390:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"28368:28:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28400:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"28368:33:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4397,"nodeType":"IfStatement","src":"28364:93:13","trueBody":{"id":4396,"nodeType":"Block","src":"28403:54:13","statements":[{"errorCall":{"arguments":[{"id":4392,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"28434:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":4393,"name":"consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"28441:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4391,"name":"InvalidConsumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"28418:15:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint64_$_t_address_$returns$__$","typeString":"function (uint64,address) pure"}},"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28418:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4395,"nodeType":"RevertStatement","src":"28411:39:13"}]}},{"assignments":[4402],"declarations":[{"constant":false,"id":4402,"mutability":"mutable","name":"consumers","nameLocation":"28516:9:13","nodeType":"VariableDeclaration","scope":4470,"src":"28499:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4400,"name":"address","nodeType":"ElementaryTypeName","src":"28499:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4401,"nodeType":"ArrayTypeName","src":"28499:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4407,"initialValue":{"expression":{"baseExpression":{"id":4403,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"28528:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2547_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":4405,"indexExpression":{"id":4404,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"28550:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"28528:28:13","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":4406,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":2546,"src":"28528:38:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"28499:67:13"},{"assignments":[4409],"declarations":[{"constant":false,"id":4409,"mutability":"mutable","name":"lastConsumerIndex","nameLocation":"28580:17:13","nodeType":"VariableDeclaration","scope":4470,"src":"28572:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4408,"name":"uint256","nodeType":"ElementaryTypeName","src":"28572:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4414,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4410,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"28600:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"28600:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28619:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28600:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28572:48:13"},{"body":{"id":4456,"nodeType":"Block","src":"28673:322:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4426,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"28685:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4428,"indexExpression":{"id":4427,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"28695:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"28685:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4429,"name":"consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"28701:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"28685:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4455,"nodeType":"IfStatement","src":"28681:308:13","trueBody":{"id":4454,"nodeType":"Block","src":"28711:278:13","statements":[{"assignments":[4432],"declarations":[{"constant":false,"id":4432,"mutability":"mutable","name":"last","nameLocation":"28729:4:13","nodeType":"VariableDeclaration","scope":4454,"src":"28721:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4431,"name":"address","nodeType":"ElementaryTypeName","src":"28721:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4436,"initialValue":{"baseExpression":{"id":4433,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"28736:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4435,"indexExpression":{"id":4434,"name":"lastConsumerIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"28746:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"28736:28:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"28721:43:13"},{"expression":{"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":4437,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"28824:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2547_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":4439,"indexExpression":{"id":4438,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"28846:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"28824:28:13","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":4440,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":2546,"src":"28824:38:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4442,"indexExpression":{"id":4441,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"28863:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"28824:41:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4443,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"28868:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"28824:48:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4445,"nodeType":"ExpressionStatement","src":"28824:48:13"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"baseExpression":{"id":4446,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"28921:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2547_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":4448,"indexExpression":{"id":4447,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"28943:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"28921:28:13","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":4449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":2546,"src":"28921:38:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"28921:42:13","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28921:44:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4452,"nodeType":"ExpressionStatement","src":"28921:44:13"},{"id":4453,"nodeType":"Break","src":"28975:5:13"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4419,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"28646:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4420,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"28650:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"28650:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28646:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4457,"initializationExpression":{"assignments":[4416],"declarations":[{"constant":false,"id":4416,"mutability":"mutable","name":"i","nameLocation":"28639:1:13","nodeType":"VariableDeclaration","scope":4457,"src":"28631:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4415,"name":"uint256","nodeType":"ElementaryTypeName","src":"28631:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4418,"initialValue":{"hexValue":"30","id":4417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28643:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"28631:13:13"},"loopExpression":{"expression":{"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"28668:3:13","subExpression":{"id":4423,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"28668:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4425,"nodeType":"ExpressionStatement","src":"28668:3:13"},"nodeType":"ForStatement","src":"28626:369:13"},{"expression":{"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"29000:35:13","subExpression":{"baseExpression":{"baseExpression":{"id":4458,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"29007:11:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint64_$_$","typeString":"mapping(address => mapping(uint64 => uint64))"}},"id":4460,"indexExpression":{"id":4459,"name":"consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"29019:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29007:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_uint64_$","typeString":"mapping(uint64 => uint64)"}},"id":4462,"indexExpression":{"id":4461,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"29029:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"29007:28:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4464,"nodeType":"ExpressionStatement","src":"29000:35:13"},{"eventCall":{"arguments":[{"id":4466,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"29074:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":4467,"name":"consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"29081:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4465,"name":"SubscriptionConsumerRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"29046:27:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_address_$returns$__$","typeString":"function (uint64,address)"}},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29046:44:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4469,"nodeType":"EmitStatement","src":"29041:49:13"}]},"documentation":{"id":4363,"nodeType":"StructuredDocumentation","src":"28114:52:13","text":" @inheritdoc VRFCoordinatorV2Interface"},"functionSelector":"9f87fad7","id":4471,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4371,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"28256:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":4372,"kind":"modifierInvocation","modifierName":{"id":4370,"name":"onlySubOwner","nodeType":"IdentifierPath","referencedDeclaration":4754,"src":"28243:12:13"},"nodeType":"ModifierInvocation","src":"28243:19:13"},{"id":4374,"kind":"modifierInvocation","modifierName":{"id":4373,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":4765,"src":"28263:12:13"},"nodeType":"ModifierInvocation","src":"28263:12:13"}],"name":"removeConsumer","nameLocation":"28178:14:13","nodeType":"FunctionDefinition","overrides":{"id":4369,"nodeType":"OverrideSpecifier","overrides":[],"src":"28234:8:13"},"parameters":{"id":4368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4365,"mutability":"mutable","name":"subId","nameLocation":"28200:5:13","nodeType":"VariableDeclaration","scope":4471,"src":"28193:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4364,"name":"uint64","nodeType":"ElementaryTypeName","src":"28193:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4367,"mutability":"mutable","name":"consumer","nameLocation":"28215:8:13","nodeType":"VariableDeclaration","scope":4471,"src":"28207:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4366,"name":"address","nodeType":"ElementaryTypeName","src":"28207:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"28192:32:13"},"returnParameters":{"id":4375,"nodeType":"ParameterList","parameters":[],"src":"28276:0:13"},"scope":4776,"src":"28169:926:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4858],"body":{"id":4528,"nodeType":"Block","src":"29258:576:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"baseExpression":{"id":4485,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"29321:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2547_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":4487,"indexExpression":{"id":4486,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"29343:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29321:28:13","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":4488,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":2546,"src":"29321:38:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"29321:45:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4490,"name":"MAX_CONSUMERS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"29370:13:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"29321:62:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4496,"nodeType":"IfStatement","src":"29317:108:13","trueBody":{"id":4495,"nodeType":"Block","src":"29385:40:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4492,"name":"TooManyConsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"29400:16:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29400:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4494,"nodeType":"RevertStatement","src":"29393:25:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":4497,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"29434:11:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint64_$_$","typeString":"mapping(address => mapping(uint64 => uint64))"}},"id":4499,"indexExpression":{"id":4498,"name":"consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"29446:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29434:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_uint64_$","typeString":"mapping(uint64 => uint64)"}},"id":4501,"indexExpression":{"id":4500,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"29456:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29434:28:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29466:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"29434:33:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4506,"nodeType":"IfStatement","src":"29430:177:13","trueBody":{"id":4505,"nodeType":"Block","src":"29469:138:13","statements":[{"functionReturnParameters":4484,"id":4504,"nodeType":"Return","src":"29594:7:13"}]}},{"expression":{"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4507,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"29684:11:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint64_$_$","typeString":"mapping(address => mapping(uint64 => uint64))"}},"id":4510,"indexExpression":{"id":4508,"name":"consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"29696:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29684:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_uint64_$","typeString":"mapping(uint64 => uint64)"}},"id":4511,"indexExpression":{"id":4509,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"29706:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"29684:28:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":4512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29715:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29684:32:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4514,"nodeType":"ExpressionStatement","src":"29684:32:13"},{"expression":{"arguments":[{"id":4520,"name":"consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"29766:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"baseExpression":{"id":4515,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"29722:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2547_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":4517,"indexExpression":{"id":4516,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"29744:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29722:28:13","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":4518,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":2546,"src":"29722:38:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"29722:43:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29722:53:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4522,"nodeType":"ExpressionStatement","src":"29722:53:13"},{"eventCall":{"arguments":[{"id":4524,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"29813:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":4525,"name":"consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"29820:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4523,"name":"SubscriptionConsumerAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"29787:25:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_address_$returns$__$","typeString":"function (uint64,address)"}},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29787:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4527,"nodeType":"EmitStatement","src":"29782:47:13"}]},"documentation":{"id":4472,"nodeType":"StructuredDocumentation","src":"29099:52:13","text":" @inheritdoc VRFCoordinatorV2Interface"},"functionSelector":"7341c10c","id":4529,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4480,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"29238:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":4481,"kind":"modifierInvocation","modifierName":{"id":4479,"name":"onlySubOwner","nodeType":"IdentifierPath","referencedDeclaration":4754,"src":"29225:12:13"},"nodeType":"ModifierInvocation","src":"29225:19:13"},{"id":4483,"kind":"modifierInvocation","modifierName":{"id":4482,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":4765,"src":"29245:12:13"},"nodeType":"ModifierInvocation","src":"29245:12:13"}],"name":"addConsumer","nameLocation":"29163:11:13","nodeType":"FunctionDefinition","overrides":{"id":4478,"nodeType":"OverrideSpecifier","overrides":[],"src":"29216:8:13"},"parameters":{"id":4477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4474,"mutability":"mutable","name":"subId","nameLocation":"29182:5:13","nodeType":"VariableDeclaration","scope":4529,"src":"29175:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4473,"name":"uint64","nodeType":"ElementaryTypeName","src":"29175:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4476,"mutability":"mutable","name":"consumer","nameLocation":"29197:8:13","nodeType":"VariableDeclaration","scope":4529,"src":"29189:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4475,"name":"address","nodeType":"ElementaryTypeName","src":"29189:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"29174:32:13"},"returnParameters":{"id":4484,"nodeType":"ParameterList","parameters":[],"src":"29258:0:13"},"scope":4776,"src":"29154:680:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4874],"body":{"id":4556,"nodeType":"Block","src":"29998:129:13","statements":[{"condition":{"arguments":[{"id":4544,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"30029:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":4543,"name":"pendingRequestExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"30008:20:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint64_$returns$_t_bool_$","typeString":"function (uint64) view returns (bool)"}},"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30008:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4550,"nodeType":"IfStatement","src":"30004:77:13","trueBody":{"id":4549,"nodeType":"Block","src":"30037:44:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4546,"name":"PendingRequestExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"30052:20:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30052:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4548,"nodeType":"RevertStatement","src":"30045:29:13"}]}},{"expression":{"arguments":[{"id":4552,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"30112:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":4553,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4534,"src":"30119:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4551,"name":"_cancelSubscriptionHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"30086:25:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint64_$_t_address_$returns$__$","typeString":"function (uint64,address)"}},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30086:36:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4555,"nodeType":"ExpressionStatement","src":"30086:36:13"}]},"documentation":{"id":4530,"nodeType":"StructuredDocumentation","src":"29838:52:13","text":" @inheritdoc VRFCoordinatorV2Interface"},"functionSelector":"d7ae1d30","id":4557,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4538,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"29978:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":4539,"kind":"modifierInvocation","modifierName":{"id":4537,"name":"onlySubOwner","nodeType":"IdentifierPath","referencedDeclaration":4754,"src":"29965:12:13"},"nodeType":"ModifierInvocation","src":"29965:19:13"},{"id":4541,"kind":"modifierInvocation","modifierName":{"id":4540,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":4765,"src":"29985:12:13"},"nodeType":"ModifierInvocation","src":"29985:12:13"}],"name":"cancelSubscription","nameLocation":"29902:18:13","nodeType":"FunctionDefinition","overrides":{"id":4536,"nodeType":"OverrideSpecifier","overrides":[],"src":"29956:8:13"},"parameters":{"id":4535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4532,"mutability":"mutable","name":"subId","nameLocation":"29928:5:13","nodeType":"VariableDeclaration","scope":4557,"src":"29921:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4531,"name":"uint64","nodeType":"ElementaryTypeName","src":"29921:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4534,"mutability":"mutable","name":"to","nameLocation":"29943:2:13","nodeType":"VariableDeclaration","scope":4557,"src":"29935:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4533,"name":"address","nodeType":"ElementaryTypeName","src":"29935:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"29920:26:13"},"returnParameters":{"id":4542,"nodeType":"ParameterList","parameters":[],"src":"29998:0:13"},"scope":4776,"src":"29893:234:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4643,"nodeType":"Block","src":"30213:615:13","statements":[{"assignments":[4568],"declarations":[{"constant":false,"id":4568,"mutability":"mutable","name":"subConfig","nameLocation":"30245:9:13","nodeType":"VariableDeclaration","scope":4643,"src":"30219:35:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_memory_ptr","typeString":"struct VRFCoordinatorV2.SubscriptionConfig"},"typeName":{"id":4567,"nodeType":"UserDefinedTypeName","pathNode":{"id":4566,"name":"SubscriptionConfig","nodeType":"IdentifierPath","referencedDeclaration":2547,"src":"30219:18:13"},"referencedDeclaration":2547,"src":"30219:18:13","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_storage_ptr","typeString":"struct VRFCoordinatorV2.SubscriptionConfig"}},"visibility":"internal"}],"id":4572,"initialValue":{"baseExpression":{"id":4569,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"30257:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2547_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":4571,"indexExpression":{"id":4570,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"30279:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30257:28:13","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"nodeType":"VariableDeclarationStatement","src":"30219:66:13"},{"assignments":[4575],"declarations":[{"constant":false,"id":4575,"mutability":"mutable","name":"sub","nameLocation":"30311:3:13","nodeType":"VariableDeclaration","scope":4643,"src":"30291:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2539_memory_ptr","typeString":"struct VRFCoordinatorV2.Subscription"},"typeName":{"id":4574,"nodeType":"UserDefinedTypeName","pathNode":{"id":4573,"name":"Subscription","nodeType":"IdentifierPath","referencedDeclaration":2539,"src":"30291:12:13"},"referencedDeclaration":2539,"src":"30291:12:13","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2539_storage_ptr","typeString":"struct VRFCoordinatorV2.Subscription"}},"visibility":"internal"}],"id":4579,"initialValue":{"baseExpression":{"id":4576,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"30317:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2539_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.Subscription storage ref)"}},"id":4578,"indexExpression":{"id":4577,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"30333:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30317:22:13","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2539_storage","typeString":"struct VRFCoordinatorV2.Subscription storage ref"}},"nodeType":"VariableDeclarationStatement","src":"30291:48:13"},{"assignments":[4581],"declarations":[{"constant":false,"id":4581,"mutability":"mutable","name":"balance","nameLocation":"30352:7:13","nodeType":"VariableDeclaration","scope":4643,"src":"30345:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4580,"name":"uint96","nodeType":"ElementaryTypeName","src":"30345:6:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":4584,"initialValue":{"expression":{"id":4582,"name":"sub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"30362:3:13","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2539_memory_ptr","typeString":"struct VRFCoordinatorV2.Subscription memory"}},"id":4583,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2536,"src":"30362:11:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"30345:28:13"},{"body":{"id":4607,"nodeType":"Block","src":"30512:64:13","statements":[{"expression":{"id":4605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"30520:49:13","subExpression":{"baseExpression":{"baseExpression":{"id":4597,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"30527:11:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint64_$_$","typeString":"mapping(address => mapping(uint64 => uint64))"}},"id":4602,"indexExpression":{"baseExpression":{"expression":{"id":4598,"name":"subConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"30539:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_memory_ptr","typeString":"struct VRFCoordinatorV2.SubscriptionConfig memory"}},"id":4599,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":2546,"src":"30539:19:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4601,"indexExpression":{"id":4600,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4586,"src":"30559:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30539:22:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30527:35:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_uint64_$","typeString":"mapping(uint64 => uint64)"}},"id":4604,"indexExpression":{"id":4603,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"30563:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"30527:42:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4606,"nodeType":"ExpressionStatement","src":"30520:49:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4589,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4586,"src":"30475:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":4590,"name":"subConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"30479:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_memory_ptr","typeString":"struct VRFCoordinatorV2.SubscriptionConfig memory"}},"id":4591,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":2546,"src":"30479:19:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"30479:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30475:30:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4608,"initializationExpression":{"assignments":[4586],"declarations":[{"constant":false,"id":4586,"mutability":"mutable","name":"i","nameLocation":"30468:1:13","nodeType":"VariableDeclaration","scope":4608,"src":"30460:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4585,"name":"uint256","nodeType":"ElementaryTypeName","src":"30460:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4588,"initialValue":{"hexValue":"30","id":4587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30472:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"30460:13:13"},"loopExpression":{"expression":{"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"30507:3:13","subExpression":{"id":4594,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4586,"src":"30507:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4596,"nodeType":"ExpressionStatement","src":"30507:3:13"},"nodeType":"ForStatement","src":"30455:121:13"},{"expression":{"id":4612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"30581:35:13","subExpression":{"baseExpression":{"id":4609,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"30588:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2547_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":4611,"indexExpression":{"id":4610,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"30610:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"30588:28:13","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4613,"nodeType":"ExpressionStatement","src":"30581:35:13"},{"expression":{"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"30622:29:13","subExpression":{"baseExpression":{"id":4614,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"30629:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2539_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.Subscription storage ref)"}},"id":4616,"indexExpression":{"id":4615,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"30645:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"30629:22:13","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2539_storage","typeString":"struct VRFCoordinatorV2.Subscription storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4618,"nodeType":"ExpressionStatement","src":"30622:29:13"},{"expression":{"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4619,"name":"s_totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"30657:14:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4620,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"30675:7:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"30657:25:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":4622,"nodeType":"ExpressionStatement","src":"30657:25:13"},{"condition":{"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"30692:36:13","subExpression":{"arguments":[{"id":4625,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4561,"src":"30707:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4628,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"30719:7:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":4627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30711:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4626,"name":"uint256","nodeType":"ElementaryTypeName","src":"30711:7:13","typeDescriptions":{}}},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30711:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4623,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"30693:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$713","typeString":"contract LinkTokenInterface"}},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":690,"src":"30693:13:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30693:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4636,"nodeType":"IfStatement","src":"30688:85:13","trueBody":{"id":4635,"nodeType":"Block","src":"30730:43:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4632,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"30745:19:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30745:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4634,"nodeType":"RevertStatement","src":"30738:28:13"}]}},{"eventCall":{"arguments":[{"id":4638,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"30804:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":4639,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4561,"src":"30811:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4640,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"30815:7:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":4637,"name":"SubscriptionCanceled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"30783:20:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint64,address,uint256)"}},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30783:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4642,"nodeType":"EmitStatement","src":"30778:45:13"}]},"id":4644,"implemented":true,"kind":"function","modifiers":[{"id":4564,"kind":"modifierInvocation","modifierName":{"id":4563,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":4765,"src":"30200:12:13"},"nodeType":"ModifierInvocation","src":"30200:12:13"}],"name":"_cancelSubscriptionHelper","nameLocation":"30140:25:13","nodeType":"FunctionDefinition","parameters":{"id":4562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4559,"mutability":"mutable","name":"subId","nameLocation":"30173:5:13","nodeType":"VariableDeclaration","scope":4644,"src":"30166:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4558,"name":"uint64","nodeType":"ElementaryTypeName","src":"30166:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4561,"mutability":"mutable","name":"to","nameLocation":"30188:2:13","nodeType":"VariableDeclaration","scope":4644,"src":"30180:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4560,"name":"address","nodeType":"ElementaryTypeName","src":"30180:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"30165:26:13"},"returnParameters":{"id":4565,"nodeType":"ParameterList","parameters":[],"src":"30213:0:13"},"scope":4776,"src":"30131:697:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"baseFunctions":[4881],"body":{"id":4719,"nodeType":"Block","src":"31124:512:13","statements":[{"assignments":[4655],"declarations":[{"constant":false,"id":4655,"mutability":"mutable","name":"subConfig","nameLocation":"31156:9:13","nodeType":"VariableDeclaration","scope":4719,"src":"31130:35:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_memory_ptr","typeString":"struct VRFCoordinatorV2.SubscriptionConfig"},"typeName":{"id":4654,"nodeType":"UserDefinedTypeName","pathNode":{"id":4653,"name":"SubscriptionConfig","nodeType":"IdentifierPath","referencedDeclaration":2547,"src":"31130:18:13"},"referencedDeclaration":2547,"src":"31130:18:13","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_storage_ptr","typeString":"struct VRFCoordinatorV2.SubscriptionConfig"}},"visibility":"internal"}],"id":4659,"initialValue":{"baseExpression":{"id":4656,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"31168:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2547_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":4658,"indexExpression":{"id":4657,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"31190:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"31168:28:13","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"nodeType":"VariableDeclarationStatement","src":"31130:66:13"},{"body":{"id":4715,"nodeType":"Block","src":"31259:355:13","statements":[{"body":{"id":4713,"nodeType":"Block","src":"31323:285:13","statements":[{"assignments":[4684,null],"declarations":[{"constant":false,"id":4684,"mutability":"mutable","name":"reqId","nameLocation":"31342:5:13","nodeType":"VariableDeclaration","scope":4713,"src":"31334:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4683,"name":"uint256","nodeType":"ElementaryTypeName","src":"31334:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":4703,"initialValue":{"arguments":[{"baseExpression":{"id":4686,"name":"s_provingKeyHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"31382:18:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4688,"indexExpression":{"id":4687,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4673,"src":"31401:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"31382:21:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"expression":{"id":4689,"name":"subConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"31415:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_memory_ptr","typeString":"struct VRFCoordinatorV2.SubscriptionConfig memory"}},"id":4690,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":2546,"src":"31415:19:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4692,"indexExpression":{"id":4691,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"31435:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"31415:22:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4693,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"31449:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"baseExpression":{"baseExpression":{"id":4694,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"31466:11:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint64_$_$","typeString":"mapping(address => mapping(uint64 => uint64))"}},"id":4699,"indexExpression":{"baseExpression":{"expression":{"id":4695,"name":"subConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"31478:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_memory_ptr","typeString":"struct VRFCoordinatorV2.SubscriptionConfig memory"}},"id":4696,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":2546,"src":"31478:19:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4698,"indexExpression":{"id":4697,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"31498:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"31478:22:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"31466:35:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_uint64_$","typeString":"mapping(uint64 => uint64)"}},"id":4701,"indexExpression":{"id":4700,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"31502:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"31466:42:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":4685,"name":"_computeRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"31353:17:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_address_$_t_uint64_$_t_uint64_$returns$_t_uint256_$_t_uint256_$","typeString":"function (bytes32,address,uint64,uint64) pure returns (uint256,uint256)"}},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31353:165:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"31333:185:13"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4704,"name":"s_requestCommitments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"31532:20:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":4706,"indexExpression":{"id":4705,"name":"reqId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"31553:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"31532:27:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31563:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"31532:32:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4712,"nodeType":"IfStatement","src":"31528:72:13","trueBody":{"id":4711,"nodeType":"Block","src":"31566:34:13","statements":[{"expression":{"hexValue":"74727565","id":4709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"31585:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4652,"id":4710,"nodeType":"Return","src":"31578:11:13"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4676,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4673,"src":"31287:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4677,"name":"s_provingKeyHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"31291:18:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"31291:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31287:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4714,"initializationExpression":{"assignments":[4673],"declarations":[{"constant":false,"id":4673,"mutability":"mutable","name":"j","nameLocation":"31280:1:13","nodeType":"VariableDeclaration","scope":4714,"src":"31272:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4672,"name":"uint256","nodeType":"ElementaryTypeName","src":"31272:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4675,"initialValue":{"hexValue":"30","id":4674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31284:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"31272:13:13"},"loopExpression":{"expression":{"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"31318:3:13","subExpression":{"id":4680,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4673,"src":"31318:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4682,"nodeType":"ExpressionStatement","src":"31318:3:13"},"nodeType":"ForStatement","src":"31267:341:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4664,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"31222:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":4665,"name":"subConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"31226:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_memory_ptr","typeString":"struct VRFCoordinatorV2.SubscriptionConfig memory"}},"id":4666,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":2546,"src":"31226:19:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"31226:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31222:30:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4716,"initializationExpression":{"assignments":[4661],"declarations":[{"constant":false,"id":4661,"mutability":"mutable","name":"i","nameLocation":"31215:1:13","nodeType":"VariableDeclaration","scope":4716,"src":"31207:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4660,"name":"uint256","nodeType":"ElementaryTypeName","src":"31207:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4663,"initialValue":{"hexValue":"30","id":4662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31219:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"31207:13:13"},"loopExpression":{"expression":{"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"31254:3:13","subExpression":{"id":4669,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"31254:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4671,"nodeType":"ExpressionStatement","src":"31254:3:13"},"nodeType":"ForStatement","src":"31202:412:13"},{"expression":{"hexValue":"66616c7365","id":4717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"31626:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4652,"id":4718,"nodeType":"Return","src":"31619:12:13"}]},"documentation":{"id":4645,"nodeType":"StructuredDocumentation","src":"30832:209:13","text":" @inheritdoc VRFCoordinatorV2Interface\n @dev Looping is bounded to MAX_CONSUMERS*(number of keyhashes).\n @dev Used to disable subscription canceling while outstanding request are present."},"functionSelector":"e82ad7d4","id":4720,"implemented":true,"kind":"function","modifiers":[],"name":"pendingRequestExists","nameLocation":"31053:20:13","nodeType":"FunctionDefinition","overrides":{"id":4649,"nodeType":"OverrideSpecifier","overrides":[],"src":"31100:8:13"},"parameters":{"id":4648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4647,"mutability":"mutable","name":"subId","nameLocation":"31081:5:13","nodeType":"VariableDeclaration","scope":4720,"src":"31074:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4646,"name":"uint64","nodeType":"ElementaryTypeName","src":"31074:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"31073:14:13"},"returnParameters":{"id":4652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4720,"src":"31118:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4650,"name":"bool","nodeType":"ElementaryTypeName","src":"31118:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"31117:6:13"},"scope":4776,"src":"31044:592:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4753,"nodeType":"Block","src":"31676:214:13","statements":[{"assignments":[4725],"declarations":[{"constant":false,"id":4725,"mutability":"mutable","name":"owner","nameLocation":"31690:5:13","nodeType":"VariableDeclaration","scope":4753,"src":"31682:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4724,"name":"address","nodeType":"ElementaryTypeName","src":"31682:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4730,"initialValue":{"expression":{"baseExpression":{"id":4726,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"31698:21:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2547_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":4728,"indexExpression":{"id":4727,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4722,"src":"31720:5:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"31698:28:13","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2547_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":4729,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2541,"src":"31698:34:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"31682:50:13"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4731,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"31742:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31759:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31751:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4732,"name":"address","nodeType":"ElementaryTypeName","src":"31751:7:13","typeDescriptions":{}}},"id":4735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31751:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"31742:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4741,"nodeType":"IfStatement","src":"31738:68:13","trueBody":{"id":4740,"nodeType":"Block","src":"31763:43:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4737,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"31778:19:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31778:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4739,"nodeType":"RevertStatement","src":"31771:28:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4742,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"31815:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"31815:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4744,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"31829:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"31815:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4751,"nodeType":"IfStatement","src":"31811:68:13","trueBody":{"id":4750,"nodeType":"Block","src":"31836:43:13","statements":[{"errorCall":{"arguments":[{"id":4747,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"31866:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4746,"name":"MustBeSubOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"31851:14:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31851:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4749,"nodeType":"RevertStatement","src":"31844:28:13"}]}},{"id":4752,"nodeType":"PlaceholderStatement","src":"31884:1:13"}]},"id":4754,"name":"onlySubOwner","nameLocation":"31649:12:13","nodeType":"ModifierDefinition","parameters":{"id":4723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4722,"mutability":"mutable","name":"subId","nameLocation":"31669:5:13","nodeType":"VariableDeclaration","scope":4754,"src":"31662:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4721,"name":"uint64","nodeType":"ElementaryTypeName","src":"31662:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"31661:14:13"},"src":"31640:250:13","virtual":false,"visibility":"internal"},{"body":{"id":4764,"nodeType":"Block","src":"31918:79:13","statements":[{"condition":{"expression":{"id":4756,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"31928:8:13","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2753_storage","typeString":"struct VRFCoordinatorV2.Config storage ref"}},"id":4757,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"reentrancyLock","nodeType":"MemberAccess","referencedDeclaration":2748,"src":"31928:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4762,"nodeType":"IfStatement","src":"31924:62:13","trueBody":{"id":4761,"nodeType":"Block","src":"31953:33:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4758,"name":"Reentrant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"31968:9:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31968:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4760,"nodeType":"RevertStatement","src":"31961:18:13"}]}},{"id":4763,"nodeType":"PlaceholderStatement","src":"31991:1:13"}]},"id":4765,"name":"nonReentrant","nameLocation":"31903:12:13","nodeType":"ModifierDefinition","parameters":{"id":4755,"nodeType":"ParameterList","parameters":[],"src":"31915:2:13"},"src":"31894:103:13","virtual":false,"visibility":"internal"},{"baseFunctions":[359],"body":{"id":4774,"nodeType":"Block","src":"32182:42:13","statements":[{"expression":{"hexValue":"565246436f6f7264696e61746f72563220312e302e30","id":4772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32195:24:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_bcc416b0563d7914fb48d8a6fcff1787610831c816d473813484a25d85a0ae03","typeString":"literal_string \"VRFCoordinatorV2 1.0.0\""},"value":"VRFCoordinatorV2 1.0.0"},"functionReturnParameters":4771,"id":4773,"nodeType":"Return","src":"32188:31:13"}]},"documentation":{"id":4766,"nodeType":"StructuredDocumentation","src":"32001:97:13","text":" @notice The type and version of this contract\n @return Type and version string"},"functionSelector":"181f5a77","id":4775,"implemented":true,"kind":"function","modifiers":[],"name":"typeAndVersion","nameLocation":"32110:14:13","nodeType":"FunctionDefinition","overrides":{"id":4768,"nodeType":"OverrideSpecifier","overrides":[],"src":"32149:8:13"},"parameters":{"id":4767,"nodeType":"ParameterList","parameters":[],"src":"32124:2:13"},"returnParameters":{"id":4771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4775,"src":"32167:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4769,"name":"string","nodeType":"ElementaryTypeName","src":"32167:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32166:15:13"},"scope":4776,"src":"32101:123:13","stateMutability":"pure","virtual":true,"visibility":"external"}],"scope":4777,"src":"767:31459:13","usedErrors":[2498,2500,2506,2508,2510,2512,2516,2518,2522,2528,2634,2640,2646,2650,2654,2658,2664,2666,2668,2672,2674,2676]}],"src":"32:32195:13"},"id":13},"@chainlink/contracts/src/v0.8/vrf/interfaces/BlockhashStoreInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/interfaces/BlockhashStoreInterface.sol","exportedSymbols":{"BlockhashStoreInterface":[4786]},"id":4787,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4778,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:14"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4786,"linearizedBaseContracts":[4786],"name":"BlockhashStoreInterface","nameLocation":"67:23:14","nodeType":"ContractDefinition","nodes":[{"functionSelector":"e9413d38","id":4785,"implemented":false,"kind":"function","modifiers":[],"name":"getBlockhash","nameLocation":"104:12:14","nodeType":"FunctionDefinition","parameters":{"id":4781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4780,"mutability":"mutable","name":"number","nameLocation":"125:6:14","nodeType":"VariableDeclaration","scope":4785,"src":"117:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4779,"name":"uint256","nodeType":"ElementaryTypeName","src":"117:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"116:16:14"},"returnParameters":{"id":4784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4785,"src":"156:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4782,"name":"bytes32","nodeType":"ElementaryTypeName","src":"156:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"155:9:14"},"scope":4786,"src":"95:70:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4787,"src":"57:110:14","usedErrors":[]}],"src":"32:136:14"},"id":14},"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol","exportedSymbols":{"VRFCoordinatorV2Interface":[4882]},"id":4883,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4788,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:15"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4882,"linearizedBaseContracts":[4882],"name":"VRFCoordinatorV2Interface","nameLocation":"67:25:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4789,"nodeType":"StructuredDocumentation","src":"97:267:15","text":" @notice Get configuration relevant for making requests\n @return minimumRequestConfirmations global min for request confirmations\n @return maxGasLimit global max for request gas limit\n @return s_provingKeyHashes list of registered key hashes"},"functionSelector":"00012291","id":4799,"implemented":false,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"376:16:15","nodeType":"FunctionDefinition","parameters":{"id":4790,"nodeType":"ParameterList","parameters":[],"src":"392:2:15"},"returnParameters":{"id":4798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4799,"src":"418:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4791,"name":"uint16","nodeType":"ElementaryTypeName","src":"418:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4799,"src":"426:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4793,"name":"uint32","nodeType":"ElementaryTypeName","src":"426:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4799,"src":"434:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4795,"name":"bytes32","nodeType":"ElementaryTypeName","src":"434:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4796,"nodeType":"ArrayTypeName","src":"434:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"417:34:15"},"scope":4882,"src":"367:85:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4800,"nodeType":"StructuredDocumentation","src":"456:1511:15","text":" @notice Request a set of random words.\n @param keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n @param subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n @param minimumRequestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n @param callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n @param numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."},"functionSelector":"5d3b1d30","id":4815,"implemented":false,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"1979:18:15","nodeType":"FunctionDefinition","parameters":{"id":4811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4802,"mutability":"mutable","name":"keyHash","nameLocation":"2011:7:15","nodeType":"VariableDeclaration","scope":4815,"src":"2003:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4801,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2003:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4804,"mutability":"mutable","name":"subId","nameLocation":"2031:5:15","nodeType":"VariableDeclaration","scope":4815,"src":"2024:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4803,"name":"uint64","nodeType":"ElementaryTypeName","src":"2024:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4806,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"2049:27:15","nodeType":"VariableDeclaration","scope":4815,"src":"2042:34:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4805,"name":"uint16","nodeType":"ElementaryTypeName","src":"2042:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4808,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2089:16:15","nodeType":"VariableDeclaration","scope":4815,"src":"2082:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4807,"name":"uint32","nodeType":"ElementaryTypeName","src":"2082:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4810,"mutability":"mutable","name":"numWords","nameLocation":"2118:8:15","nodeType":"VariableDeclaration","scope":4815,"src":"2111:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4809,"name":"uint32","nodeType":"ElementaryTypeName","src":"2111:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1997:133:15"},"returnParameters":{"id":4814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4813,"mutability":"mutable","name":"requestId","nameLocation":"2157:9:15","nodeType":"VariableDeclaration","scope":4815,"src":"2149:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4812,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2148:19:15"},"scope":4882,"src":"1970:198:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4816,"nodeType":"StructuredDocumentation","src":"2172:384:15","text":" @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));"},"functionSelector":"a21a23e4","id":4821,"implemented":false,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"2568:18:15","nodeType":"FunctionDefinition","parameters":{"id":4817,"nodeType":"ParameterList","parameters":[],"src":"2586:2:15"},"returnParameters":{"id":4820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4819,"mutability":"mutable","name":"subId","nameLocation":"2614:5:15","nodeType":"VariableDeclaration","scope":4821,"src":"2607:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4818,"name":"uint64","nodeType":"ElementaryTypeName","src":"2607:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2606:14:15"},"scope":4882,"src":"2559:62:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4822,"nodeType":"StructuredDocumentation","src":"2625:381:15","text":" @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return reqCount - number of requests for this subscription, determines fee tier.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."},"functionSelector":"a47c7696","id":4836,"implemented":false,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"3018:15:15","nodeType":"FunctionDefinition","parameters":{"id":4825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4824,"mutability":"mutable","name":"subId","nameLocation":"3046:5:15","nodeType":"VariableDeclaration","scope":4836,"src":"3039:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4823,"name":"uint64","nodeType":"ElementaryTypeName","src":"3039:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3033:22:15"},"returnParameters":{"id":4835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4827,"mutability":"mutable","name":"balance","nameLocation":"3086:7:15","nodeType":"VariableDeclaration","scope":4836,"src":"3079:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4826,"name":"uint96","nodeType":"ElementaryTypeName","src":"3079:6:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":4829,"mutability":"mutable","name":"reqCount","nameLocation":"3102:8:15","nodeType":"VariableDeclaration","scope":4836,"src":"3095:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4828,"name":"uint64","nodeType":"ElementaryTypeName","src":"3095:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4831,"mutability":"mutable","name":"owner","nameLocation":"3120:5:15","nodeType":"VariableDeclaration","scope":4836,"src":"3112:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4830,"name":"address","nodeType":"ElementaryTypeName","src":"3112:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4834,"mutability":"mutable","name":"consumers","nameLocation":"3144:9:15","nodeType":"VariableDeclaration","scope":4836,"src":"3127:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4832,"name":"address","nodeType":"ElementaryTypeName","src":"3127:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4833,"nodeType":"ArrayTypeName","src":"3127:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3078:76:15"},"scope":4882,"src":"3009:146:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4837,"nodeType":"StructuredDocumentation","src":"3159:164:15","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"},"functionSelector":"04c357cb","id":4844,"implemented":false,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"3335:32:15","nodeType":"FunctionDefinition","parameters":{"id":4842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4839,"mutability":"mutable","name":"subId","nameLocation":"3375:5:15","nodeType":"VariableDeclaration","scope":4844,"src":"3368:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4838,"name":"uint64","nodeType":"ElementaryTypeName","src":"3368:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4841,"mutability":"mutable","name":"newOwner","nameLocation":"3390:8:15","nodeType":"VariableDeclaration","scope":4844,"src":"3382:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4840,"name":"address","nodeType":"ElementaryTypeName","src":"3382:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3367:32:15"},"returnParameters":{"id":4843,"nodeType":"ParameterList","parameters":[],"src":"3408:0:15"},"scope":4882,"src":"3326:83:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4845,"nodeType":"StructuredDocumentation","src":"3413:212:15","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."},"functionSelector":"82359740","id":4850,"implemented":false,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"3637:31:15","nodeType":"FunctionDefinition","parameters":{"id":4848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4847,"mutability":"mutable","name":"subId","nameLocation":"3676:5:15","nodeType":"VariableDeclaration","scope":4850,"src":"3669:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4846,"name":"uint64","nodeType":"ElementaryTypeName","src":"3669:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3668:14:15"},"returnParameters":{"id":4849,"nodeType":"ParameterList","parameters":[],"src":"3691:0:15"},"scope":4882,"src":"3628:64:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4851,"nodeType":"StructuredDocumentation","src":"3696:170:15","text":" @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"},"functionSelector":"7341c10c","id":4858,"implemented":false,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"3878:11:15","nodeType":"FunctionDefinition","parameters":{"id":4856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4853,"mutability":"mutable","name":"subId","nameLocation":"3897:5:15","nodeType":"VariableDeclaration","scope":4858,"src":"3890:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4852,"name":"uint64","nodeType":"ElementaryTypeName","src":"3890:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4855,"mutability":"mutable","name":"consumer","nameLocation":"3912:8:15","nodeType":"VariableDeclaration","scope":4858,"src":"3904:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4854,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3889:32:15"},"returnParameters":{"id":4857,"nodeType":"ParameterList","parameters":[],"src":"3930:0:15"},"scope":4882,"src":"3869:62:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4859,"nodeType":"StructuredDocumentation","src":"3935:172:15","text":" @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"},"functionSelector":"9f87fad7","id":4866,"implemented":false,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"4119:14:15","nodeType":"FunctionDefinition","parameters":{"id":4864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4861,"mutability":"mutable","name":"subId","nameLocation":"4141:5:15","nodeType":"VariableDeclaration","scope":4866,"src":"4134:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4860,"name":"uint64","nodeType":"ElementaryTypeName","src":"4134:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4863,"mutability":"mutable","name":"consumer","nameLocation":"4156:8:15","nodeType":"VariableDeclaration","scope":4866,"src":"4148:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4862,"name":"address","nodeType":"ElementaryTypeName","src":"4148:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4133:32:15"},"returnParameters":{"id":4865,"nodeType":"ParameterList","parameters":[],"src":"4174:0:15"},"scope":4882,"src":"4110:65:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4867,"nodeType":"StructuredDocumentation","src":"4179:140:15","text":" @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"},"functionSelector":"d7ae1d30","id":4874,"implemented":false,"kind":"function","modifiers":[],"name":"cancelSubscription","nameLocation":"4331:18:15","nodeType":"FunctionDefinition","parameters":{"id":4872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4869,"mutability":"mutable","name":"subId","nameLocation":"4357:5:15","nodeType":"VariableDeclaration","scope":4874,"src":"4350:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4868,"name":"uint64","nodeType":"ElementaryTypeName","src":"4350:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4871,"mutability":"mutable","name":"to","nameLocation":"4372:2:15","nodeType":"VariableDeclaration","scope":4874,"src":"4364:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4870,"name":"address","nodeType":"ElementaryTypeName","src":"4364:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4349:26:15"},"returnParameters":{"id":4873,"nodeType":"ParameterList","parameters":[],"src":"4384:0:15"},"scope":4882,"src":"4322:63:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e82ad7d4","id":4881,"implemented":false,"kind":"function","modifiers":[],"name":"pendingRequestExists","nameLocation":"4690:20:15","nodeType":"FunctionDefinition","parameters":{"id":4877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4876,"mutability":"mutable","name":"subId","nameLocation":"4718:5:15","nodeType":"VariableDeclaration","scope":4881,"src":"4711:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4875,"name":"uint64","nodeType":"ElementaryTypeName","src":"4711:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4710:14:15"},"returnParameters":{"id":4880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4881,"src":"4748:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4878,"name":"bool","nodeType":"ElementaryTypeName","src":"4748:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4747:6:15"},"scope":4882,"src":"4681:73:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4883,"src":"57:4699:15","usedErrors":[]}],"src":"32:4725:15"},"id":15},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[5017],"Ownable":[4995]},"id":4996,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4884,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:16"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":4885,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4996,"sourceUnit":5018,"src":"127:30:16","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4887,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":5017,"src":"683:7:16"},"id":4888,"nodeType":"InheritanceSpecifier","src":"683:7:16"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":4886,"nodeType":"StructuredDocumentation","src":"159:494:16","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":4995,"linearizedBaseContracts":[4995,5017],"name":"Ownable","nameLocation":"672:7:16","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":4890,"mutability":"mutable","name":"_owner","nameLocation":"713:6:16","nodeType":"VariableDeclaration","scope":4995,"src":"697:22:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4889,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":4896,"name":"OwnershipTransferred","nameLocation":"732:20:16","nodeType":"EventDefinition","parameters":{"id":4895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4892,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:16","nodeType":"VariableDeclaration","scope":4896,"src":"753:29:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4891,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4894,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:16","nodeType":"VariableDeclaration","scope":4896,"src":"784:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4893,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:16"},"src":"726:84:16"},{"body":{"id":4905,"nodeType":"Block","src":"926:49:16","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4901,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"955:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4900,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"936:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4904,"nodeType":"ExpressionStatement","src":"936:32:16"}]},"documentation":{"id":4897,"nodeType":"StructuredDocumentation","src":"816:91:16","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":4906,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4898,"nodeType":"ParameterList","parameters":[],"src":"923:2:16"},"returnParameters":{"id":4899,"nodeType":"ParameterList","parameters":[],"src":"926:0:16"},"scope":4995,"src":"912:63:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4913,"nodeType":"Block","src":"1084:41:16","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4909,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"1094:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4911,"nodeType":"ExpressionStatement","src":"1094:13:16"},{"id":4912,"nodeType":"PlaceholderStatement","src":"1117:1:16"}]},"documentation":{"id":4907,"nodeType":"StructuredDocumentation","src":"981:77:16","text":" @dev Throws if called by any account other than the owner."},"id":4914,"name":"onlyOwner","nameLocation":"1072:9:16","nodeType":"ModifierDefinition","parameters":{"id":4908,"nodeType":"ParameterList","parameters":[],"src":"1081:2:16"},"src":"1063:62:16","virtual":false,"visibility":"internal"},{"body":{"id":4922,"nodeType":"Block","src":"1256:30:16","statements":[{"expression":{"id":4920,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"1273:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4919,"id":4921,"nodeType":"Return","src":"1266:13:16"}]},"documentation":{"id":4915,"nodeType":"StructuredDocumentation","src":"1131:65:16","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":4923,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:16","nodeType":"FunctionDefinition","parameters":{"id":4916,"nodeType":"ParameterList","parameters":[],"src":"1215:2:16"},"returnParameters":{"id":4919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4923,"src":"1247:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4917,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:16"},"scope":4995,"src":"1201:85:16","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":4936,"nodeType":"Block","src":"1404:85:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4928,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"1422:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4930,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"1433:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":4933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":4927,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4935,"nodeType":"ExpressionStatement","src":"1414:68:16"}]},"documentation":{"id":4924,"nodeType":"StructuredDocumentation","src":"1292:62:16","text":" @dev Throws if the sender is not the owner."},"id":4937,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:16","nodeType":"FunctionDefinition","parameters":{"id":4925,"nodeType":"ParameterList","parameters":[],"src":"1379:2:16"},"returnParameters":{"id":4926,"nodeType":"ParameterList","parameters":[],"src":"1404:0:16"},"scope":4995,"src":"1359:130:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4950,"nodeType":"Block","src":"1878:47:16","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":4946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4944,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:16","typeDescriptions":{}}},"id":4947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1907:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4943,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"1888:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1888:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4949,"nodeType":"ExpressionStatement","src":"1888:30:16"}]},"documentation":{"id":4938,"nodeType":"StructuredDocumentation","src":"1495:324:16","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":4951,"implemented":true,"kind":"function","modifiers":[{"id":4941,"kind":"modifierInvocation","modifierName":{"id":4940,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":4914,"src":"1868:9:16"},"nodeType":"ModifierInvocation","src":"1868:9:16"}],"name":"renounceOwnership","nameLocation":"1833:17:16","nodeType":"FunctionDefinition","parameters":{"id":4939,"nodeType":"ParameterList","parameters":[],"src":"1850:2:16"},"returnParameters":{"id":4942,"nodeType":"ParameterList","parameters":[],"src":"1878:0:16"},"scope":4995,"src":"1824:101:16","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":4973,"nodeType":"Block","src":"2144:128:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4960,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4954,"src":"2162:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4961,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:16","typeDescriptions":{}}},"id":4964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2174:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":4966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":4959,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2154:73:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4968,"nodeType":"ExpressionStatement","src":"2154:73:16"},{"expression":{"arguments":[{"id":4970,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4954,"src":"2256:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4969,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"2237:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2237:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4972,"nodeType":"ExpressionStatement","src":"2237:28:16"}]},"documentation":{"id":4952,"nodeType":"StructuredDocumentation","src":"1931:138:16","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":4974,"implemented":true,"kind":"function","modifiers":[{"id":4957,"kind":"modifierInvocation","modifierName":{"id":4956,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":4914,"src":"2134:9:16"},"nodeType":"ModifierInvocation","src":"2134:9:16"}],"name":"transferOwnership","nameLocation":"2083:17:16","nodeType":"FunctionDefinition","parameters":{"id":4955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4954,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:16","nodeType":"VariableDeclaration","scope":4974,"src":"2101:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4953,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:16"},"returnParameters":{"id":4958,"nodeType":"ParameterList","parameters":[],"src":"2144:0:16"},"scope":4995,"src":"2074:198:16","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":4993,"nodeType":"Block","src":"2489:124:16","statements":[{"assignments":[4981],"declarations":[{"constant":false,"id":4981,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:16","nodeType":"VariableDeclaration","scope":4993,"src":"2499:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4980,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4983,"initialValue":{"id":4982,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"2518:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:16"},{"expression":{"id":4986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4984,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"2534:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4985,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"2543:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4987,"nodeType":"ExpressionStatement","src":"2534:17:16"},{"eventCall":{"arguments":[{"id":4989,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"2587:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4990,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"2597:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4988,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"2566:20:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2566:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4992,"nodeType":"EmitStatement","src":"2561:45:16"}]},"documentation":{"id":4975,"nodeType":"StructuredDocumentation","src":"2278:143:16","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":4994,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:16","nodeType":"FunctionDefinition","parameters":{"id":4978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4977,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:16","nodeType":"VariableDeclaration","scope":4994,"src":"2454:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4976,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:16"},"returnParameters":{"id":4979,"nodeType":"ParameterList","parameters":[],"src":"2489:0:16"},"scope":4995,"src":"2426:187:16","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":4996,"src":"654:1961:16","usedErrors":[]}],"src":"102:2514:16"},"id":16},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[5017]},"id":5018,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4997,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:17"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":4998,"nodeType":"StructuredDocumentation","src":"111:496:17","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":5017,"linearizedBaseContracts":[5017],"name":"Context","nameLocation":"626:7:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":5006,"nodeType":"Block","src":"702:34:17","statements":[{"expression":{"expression":{"id":5003,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5002,"id":5005,"nodeType":"Return","src":"712:17:17"}]},"id":5007,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:17","nodeType":"FunctionDefinition","parameters":{"id":4999,"nodeType":"ParameterList","parameters":[],"src":"659:2:17"},"returnParameters":{"id":5002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5007,"src":"693:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5000,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:17"},"scope":5017,"src":"640:96:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":5015,"nodeType":"Block","src":"809:32:17","statements":[{"expression":{"expression":{"id":5012,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":5011,"id":5014,"nodeType":"Return","src":"819:15:17"}]},"id":5016,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:17","nodeType":"FunctionDefinition","parameters":{"id":5008,"nodeType":"ParameterList","parameters":[],"src":"759:2:17"},"returnParameters":{"id":5011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5016,"src":"793:14:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5009,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:17"},"scope":5017,"src":"742:99:17","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":5018,"src":"608:235:17","usedErrors":[]}],"src":"86:758:17"},"id":17},"contracts/Raffle.sol":{"ast":{"absolutePath":"contracts/Raffle.sol","exportedSymbols":{"AggregatorV3Interface":[590],"BlockhashStoreInterface":[4786],"ChainSpecificUtil":[352],"ConfirmedOwner":[381],"IERC677Receiver":[602],"LinkTokenInterface":[713],"Raffle":[5229],"Raffle__NotEnoughETHEntered":[5023],"Raffle__TransferFailed":[5025],"TypeAndVersionInterface":[360],"VRF":[2394],"VRFConsumerBaseV2":[2452],"VRFCoordinatorV2":[4776],"VRFCoordinatorV2Interface":[4882]},"id":5230,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5019,"literals":["solidity","^","0.8",".6"],"nodeType":"PragmaDirective","src":"32:23:18"},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","file":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","id":5020,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5230,"sourceUnit":2453,"src":"57:65:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol","file":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol","id":5021,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5230,"sourceUnit":4777,"src":"123:64:18","symbolAliases":[],"unitAlias":""},{"id":5023,"name":"Raffle__NotEnoughETHEntered","nameLocation":"195:27:18","nodeType":"ErrorDefinition","parameters":{"id":5022,"nodeType":"ParameterList","parameters":[],"src":"222:2:18"},"src":"189:36:18"},{"id":5025,"name":"Raffle__TransferFailed","nameLocation":"232:22:18","nodeType":"ErrorDefinition","parameters":{"id":5024,"nodeType":"ParameterList","parameters":[],"src":"254:2:18"},"src":"226:31:18"},{"abstract":false,"baseContracts":[{"baseName":{"id":5026,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":2452,"src":"278:17:18"},"id":5027,"nodeType":"InheritanceSpecifier","src":"278:17:18"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5229,"linearizedBaseContracts":[5229,2452],"name":"Raffle","nameLocation":"268:6:18","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":5029,"mutability":"immutable","name":"i_entranceFee","nameLocation":"354:13:18","nodeType":"VariableDeclaration","scope":5229,"src":"328:39:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5028,"name":"uint256","nodeType":"ElementaryTypeName","src":"328:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":5032,"mutability":"mutable","name":"s_players","nameLocation":"399:9:18","nodeType":"VariableDeclaration","scope":5229,"src":"373:35:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[]"},"typeName":{"baseType":{"id":5030,"name":"address","nodeType":"ElementaryTypeName","src":"373:15:18","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":5031,"nodeType":"ArrayTypeName","src":"373:17:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}},"visibility":"private"},{"constant":false,"id":5035,"mutability":"immutable","name":"i_VRFCoordinator","nameLocation":"458:16:18","nodeType":"VariableDeclaration","scope":5229,"src":"414:60:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$4882","typeString":"contract VRFCoordinatorV2Interface"},"typeName":{"id":5034,"nodeType":"UserDefinedTypeName","pathNode":{"id":5033,"name":"VRFCoordinatorV2Interface","nodeType":"IdentifierPath","referencedDeclaration":4882,"src":"414:25:18"},"referencedDeclaration":4882,"src":"414:25:18","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$4882","typeString":"contract VRFCoordinatorV2Interface"}},"visibility":"private"},{"constant":false,"id":5037,"mutability":"immutable","name":"i_gasLane","nameLocation":"506:9:18","nodeType":"VariableDeclaration","scope":5229,"src":"480:35:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5036,"name":"bytes32","nodeType":"ElementaryTypeName","src":"480:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":5039,"mutability":"immutable","name":"i_subscriptionId","nameLocation":"546:16:18","nodeType":"VariableDeclaration","scope":5229,"src":"521:41:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5038,"name":"uint64","nodeType":"ElementaryTypeName","src":"521:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"private"},{"constant":false,"id":5041,"mutability":"immutable","name":"i_callBackGasLimit","nameLocation":"593:18:18","nodeType":"VariableDeclaration","scope":5229,"src":"568:43:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5040,"name":"uint32","nodeType":"ElementaryTypeName","src":"568:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"private"},{"constant":true,"id":5044,"mutability":"constant","name":"REQUEST_CONFIRMATIONS","nameLocation":"641:21:18","nodeType":"VariableDeclaration","scope":5229,"src":"617:49:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5042,"name":"uint16","nodeType":"ElementaryTypeName","src":"617:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"33","id":5043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"665:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"constant":true,"id":5047,"mutability":"constant","name":"NUM_WORDS","nameLocation":"696:9:18","nodeType":"VariableDeclaration","scope":5229,"src":"672:37:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5045,"name":"uint32","nodeType":"ElementaryTypeName","src":"672:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"31","id":5046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"708:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":false,"id":5049,"mutability":"mutable","name":"s_recentWinner","nameLocation":"760:14:18","nodeType":"VariableDeclaration","scope":5229,"src":"744:30:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5048,"name":"address","nodeType":"ElementaryTypeName","src":"744:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":5053,"name":"RaffleEntered","nameLocation":"804:13:18","nodeType":"EventDefinition","parameters":{"id":5052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5051,"indexed":true,"mutability":"mutable","name":"player","nameLocation":"834:6:18","nodeType":"VariableDeclaration","scope":5053,"src":"818:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5050,"name":"address","nodeType":"ElementaryTypeName","src":"818:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"817:24:18"},"src":"798:44:18"},{"anonymous":false,"id":5057,"name":"RequestedRaffleWinner","nameLocation":"853:21:18","nodeType":"EventDefinition","parameters":{"id":5056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5055,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"891:9:18","nodeType":"VariableDeclaration","scope":5057,"src":"875:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5054,"name":"uint256","nodeType":"ElementaryTypeName","src":"875:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"874:27:18"},"src":"847:55:18"},{"anonymous":false,"id":5061,"name":"WinnerPicked","nameLocation":"913:12:18","nodeType":"EventDefinition","parameters":{"id":5060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5059,"indexed":true,"mutability":"mutable","name":"winner","nameLocation":"942:6:18","nodeType":"VariableDeclaration","scope":5061,"src":"926:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5058,"name":"address","nodeType":"ElementaryTypeName","src":"926:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"925:24:18"},"src":"907:43:18"},{"body":{"id":5099,"nodeType":"Block","src":"1162:235:18","statements":[{"expression":{"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5077,"name":"i_entranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"1172:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5078,"name":"entranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5065,"src":"1188:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1172:27:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5080,"nodeType":"ExpressionStatement","src":"1172:27:18"},{"expression":{"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5081,"name":"i_VRFCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5035,"src":"1209:16:18","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$4882","typeString":"contract VRFCoordinatorV2Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5083,"name":"VRFCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"1254:16:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5082,"name":"VRFCoordinatorV2Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"1228:25:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFCoordinatorV2Interface_$4882_$","typeString":"type(contract VRFCoordinatorV2Interface)"}},"id":5084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1228:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$4882","typeString":"contract VRFCoordinatorV2Interface"}},"src":"1209:62:18","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$4882","typeString":"contract VRFCoordinatorV2Interface"}},"id":5086,"nodeType":"ExpressionStatement","src":"1209:62:18"},{"expression":{"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5087,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5037,"src":"1281:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5088,"name":"gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5067,"src":"1293:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1281:19:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5090,"nodeType":"ExpressionStatement","src":"1281:19:18"},{"expression":{"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5091,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"1310:16:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5092,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5069,"src":"1329:14:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"1310:33:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":5094,"nodeType":"ExpressionStatement","src":"1310:33:18"},{"expression":{"id":5097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5095,"name":"i_callBackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5041,"src":"1353:18:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5096,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5071,"src":"1374:16:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"1353:37:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":5098,"nodeType":"ExpressionStatement","src":"1353:37:18"}]},"id":5100,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":5074,"name":"VRFCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"1144:16:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5075,"kind":"baseConstructorSpecifier","modifierName":{"id":5073,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":2452,"src":"1126:17:18"},"nodeType":"ModifierInvocation","src":"1126:35:18"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5063,"mutability":"mutable","name":"VRFCoordinatorV2","nameLocation":"985:16:18","nodeType":"VariableDeclaration","scope":5100,"src":"977:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5062,"name":"address","nodeType":"ElementaryTypeName","src":"977:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5065,"mutability":"mutable","name":"entranceFee","nameLocation":"1019:11:18","nodeType":"VariableDeclaration","scope":5100,"src":"1011:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5064,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5067,"mutability":"mutable","name":"gasLane","nameLocation":"1048:7:18","nodeType":"VariableDeclaration","scope":5100,"src":"1040:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5066,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1040:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5069,"mutability":"mutable","name":"subscriptionId","nameLocation":"1072:14:18","nodeType":"VariableDeclaration","scope":5100,"src":"1065:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5068,"name":"uint64","nodeType":"ElementaryTypeName","src":"1065:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":5071,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1103:16:18","nodeType":"VariableDeclaration","scope":5100,"src":"1096:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5070,"name":"uint32","nodeType":"ElementaryTypeName","src":"1096:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"967:158:18"},"returnParameters":{"id":5076,"nodeType":"ParameterList","parameters":[],"src":"1162:0:18"},"scope":5229,"src":"956:441:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5127,"nodeType":"Block","src":"1441:381:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5103,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1623:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"1623:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5105,"name":"i_entranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"1635:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1623:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5111,"nodeType":"IfStatement","src":"1619:92:18","trueBody":{"id":5110,"nodeType":"Block","src":"1650:61:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5107,"name":"Raffle__NotEnoughETHEntered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"1671:27:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1671:29:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5109,"nodeType":"RevertStatement","src":"1664:36:18"}]}},{"expression":{"arguments":[{"arguments":[{"expression":{"id":5117,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1744:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1744:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1736:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":5115,"name":"address","nodeType":"ElementaryTypeName","src":"1736:8:18","stateMutability":"payable","typeDescriptions":{}}},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1736:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"id":5112,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"1721:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":5114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"1721:14:18","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$bound_to$_t_array$_t_address_payable_$dyn_storage_ptr_$","typeString":"function (address payable[] storage pointer,address payable)"}},"id":5120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1721:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5121,"nodeType":"ExpressionStatement","src":"1721:35:18"},{"eventCall":{"arguments":[{"expression":{"id":5123,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1804:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1804:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5122,"name":"RaffleEntered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"1790:13:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1790:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5126,"nodeType":"EmitStatement","src":"1785:30:18"}]},"functionSelector":"2cfcc539","id":5128,"implemented":true,"kind":"function","modifiers":[],"name":"enterRaffle","nameLocation":"1412:11:18","nodeType":"FunctionDefinition","parameters":{"id":5101,"nodeType":"ParameterList","parameters":[],"src":"1423:2:18"},"returnParameters":{"id":5102,"nodeType":"ParameterList","parameters":[],"src":"1441:0:18"},"scope":5229,"src":"1403:419:18","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":5146,"nodeType":"Block","src":"1868:283:18","statements":[{"assignments":[5132],"declarations":[{"constant":false,"id":5132,"mutability":"mutable","name":"requestId","nameLocation":"1886:9:18","nodeType":"VariableDeclaration","scope":5146,"src":"1878:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5131,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5141,"initialValue":{"arguments":[{"id":5135,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5037,"src":"1947:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5136,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"1981:16:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":5137,"name":"REQUEST_CONFIRMATIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"2011:21:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":5138,"name":"i_callBackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5041,"src":"2046:18:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":5139,"name":"NUM_WORDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5047,"src":"2078:9:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":5133,"name":"i_VRFCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5035,"src":"1898:16:18","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$4882","typeString":"contract VRFCoordinatorV2Interface"}},"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"requestRandomWords","nodeType":"MemberAccess","referencedDeclaration":4815,"src":"1898:35:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$","typeString":"function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"}},"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1898:199:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1878:219:18"},{"eventCall":{"arguments":[{"id":5143,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5132,"src":"2134:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5142,"name":"RequestedRaffleWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"2112:21:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2112:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5145,"nodeType":"EmitStatement","src":"2107:37:18"}]},"functionSelector":"522a1f0b","id":5147,"implemented":true,"kind":"function","modifiers":[],"name":"requestRandomWinner","nameLocation":"1837:19:18","nodeType":"FunctionDefinition","parameters":{"id":5129,"nodeType":"ParameterList","parameters":[],"src":"1856:2:18"},"returnParameters":{"id":5130,"nodeType":"ParameterList","parameters":[],"src":"1868:0:18"},"scope":5229,"src":"1828:323:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2425],"body":{"id":5199,"nodeType":"Block","src":"2280:406:18","statements":[{"assignments":[5157],"declarations":[{"constant":false,"id":5157,"mutability":"mutable","name":"indexOfWinner","nameLocation":"2298:13:18","nodeType":"VariableDeclaration","scope":5199,"src":"2290:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5156,"name":"uint256","nodeType":"ElementaryTypeName","src":"2290:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5164,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5158,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5152,"src":"2314:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5160,"indexExpression":{"hexValue":"30","id":5159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2326:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2314:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"expression":{"id":5161,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"2331:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2331:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2314:33:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2290:57:18"},{"assignments":[5166],"declarations":[{"constant":false,"id":5166,"mutability":"mutable","name":"recentWinner","nameLocation":"2373:12:18","nodeType":"VariableDeclaration","scope":5199,"src":"2357:28:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":5165,"name":"address","nodeType":"ElementaryTypeName","src":"2357:15:18","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"id":5170,"initialValue":{"baseExpression":{"id":5167,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"2388:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":5169,"indexExpression":{"id":5168,"name":"indexOfWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"2398:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2388:24:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"2357:55:18"},{"expression":{"id":5173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5171,"name":"s_recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5049,"src":"2422:14:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5172,"name":"recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"2439:12:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"2422:29:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5174,"nodeType":"ExpressionStatement","src":"2422:29:18"},{"assignments":[5176,null],"declarations":[{"constant":false,"id":5176,"mutability":"mutable","name":"success","nameLocation":"2467:7:18","nodeType":"VariableDeclaration","scope":5199,"src":"2462:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5175,"name":"bool","nodeType":"ElementaryTypeName","src":"2462:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":5187,"initialValue":{"arguments":[{"hexValue":"","id":5185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2528:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":5177,"name":"recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"2480:12:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":5178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2480:17:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"arguments":[{"id":5181,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2513:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_Raffle_$5229","typeString":"contract Raffle"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Raffle_$5229","typeString":"contract Raffle"}],"id":5180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2505:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5179,"name":"address","nodeType":"ElementaryTypeName","src":"2505:7:18","typeDescriptions":{}}},"id":5182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2505:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2505:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2480:47:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2480:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2461:70:18"},{"condition":{"id":5189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2573:8:18","subExpression":{"id":5188,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"2574:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5194,"nodeType":"IfStatement","src":"2569:70:18","trueBody":{"id":5193,"nodeType":"Block","src":"2583:56:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5190,"name":"Raffle__TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"2604:22:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2604:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5192,"nodeType":"RevertStatement","src":"2597:31:18"}]}},{"eventCall":{"arguments":[{"id":5196,"name":"recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"2666:12:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":5195,"name":"WinnerPicked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"2653:12:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2653:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5198,"nodeType":"EmitStatement","src":"2648:31:18"}]},"id":5200,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"2166:18:18","nodeType":"FunctionDefinition","overrides":{"id":5154,"nodeType":"OverrideSpecifier","overrides":[],"src":"2271:8:18"},"parameters":{"id":5153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5200,"src":"2194:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5148,"name":"uint256","nodeType":"ElementaryTypeName","src":"2194:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5152,"mutability":"mutable","name":"randomWords","nameLocation":"2244:11:18","nodeType":"VariableDeclaration","scope":5200,"src":"2227:28:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5150,"name":"uint256","nodeType":"ElementaryTypeName","src":"2227:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5151,"nodeType":"ArrayTypeName","src":"2227:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2184:77:18"},"returnParameters":{"id":5155,"nodeType":"ParameterList","parameters":[],"src":"2280:0:18"},"scope":5229,"src":"2157:529:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5207,"nodeType":"Block","src":"2781:37:18","statements":[{"expression":{"id":5205,"name":"i_entranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"2798:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5204,"id":5206,"nodeType":"Return","src":"2791:20:18"}]},"functionSelector":"09bc33a7","id":5208,"implemented":true,"kind":"function","modifiers":[],"name":"getEntranceFee","nameLocation":"2734:14:18","nodeType":"FunctionDefinition","parameters":{"id":5201,"nodeType":"ParameterList","parameters":[],"src":"2748:2:18"},"returnParameters":{"id":5204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5203,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5208,"src":"2772:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5202,"name":"uint256","nodeType":"ElementaryTypeName","src":"2772:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2771:9:18"},"scope":5229,"src":"2725:93:18","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5219,"nodeType":"Block","src":"2888:40:18","statements":[{"expression":{"baseExpression":{"id":5215,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"2905:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":5217,"indexExpression":{"id":5216,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5210,"src":"2915:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2905:16:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":5214,"id":5218,"nodeType":"Return","src":"2898:23:18"}]},"functionSelector":"e55ae4e8","id":5220,"implemented":true,"kind":"function","modifiers":[],"name":"getPlayer","nameLocation":"2833:9:18","nodeType":"FunctionDefinition","parameters":{"id":5211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5210,"mutability":"mutable","name":"index","nameLocation":"2851:5:18","nodeType":"VariableDeclaration","scope":5220,"src":"2843:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5209,"name":"uint256","nodeType":"ElementaryTypeName","src":"2843:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2842:15:18"},"returnParameters":{"id":5214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5220,"src":"2879:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5212,"name":"address","nodeType":"ElementaryTypeName","src":"2879:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2878:9:18"},"scope":5229,"src":"2824:104:18","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5227,"nodeType":"Block","src":"2991:38:18","statements":[{"expression":{"id":5225,"name":"s_recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5049,"src":"3008:14:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5224,"id":5226,"nodeType":"Return","src":"3001:21:18"}]},"functionSelector":"473f1ddc","id":5228,"implemented":true,"kind":"function","modifiers":[],"name":"getRecentWinner","nameLocation":"2943:15:18","nodeType":"FunctionDefinition","parameters":{"id":5221,"nodeType":"ParameterList","parameters":[],"src":"2958:2:18"},"returnParameters":{"id":5224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5228,"src":"2982:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5222,"name":"address","nodeType":"ElementaryTypeName","src":"2982:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2981:9:18"},"scope":5229,"src":"2934:95:18","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":5230,"src":"259:2772:18","usedErrors":[2403,5023,5025]}],"src":"32:3000:18"},"id":18}},"contracts":{"@chainlink/contracts/src/v0.8/ChainSpecificUtil.sol":{"ChainSpecificUtil":{"abi":[],"devdoc":{"details":"A library that abstracts out opcodes that behave differently across chains.The methods below return values that are pertinent to the given chain.For instance, ChainSpecificUtil.getBlockNumber() returns L2 block number in L2 chains","kind":"dev","methods":{},"stateVariables":{"ARBGAS_ADDR":{"details":"ARBGAS_ADDR is the address of the ArbGasInfo precompile on Arbitrum.reference: https://github.com/OffchainLabs/nitro/blob/v2.0.14/contracts/src/precompiles/ArbGasInfo.sol#L10"},"ARBSYS_ADDR":{"details":"ARBSYS_ADDR is the address of the ArbSys precompile on Arbitrum.reference: https://github.com/OffchainLabs/nitro/blob/v2.0.14/contracts/src/precompiles/ArbSys.sol#L10"},"BASE_MAINNET_CHAIN_ID":{"details":"Base is a OP stack based rollup and follows the same L1 pricing logic as Optimism."},"L1_FEE_DATA_PADDING":{"details":"L1_FEE_DATA_PADDING includes 35 bytes for L1 data padding for Optimism"},"OVM_GASPRICEORACLE_ADDR":{"details":"OVM_GASPRICEORACLE_ADDR is the address of the OVM_GasPriceOracle precompile on Optimism.reference: https://community.optimism.io/docs/developers/build/transaction-fees/#estimating-the-l1-data-fee"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aba2413946c3628b8138208ab47f69b5db6ed0386ea1a7b924cedc3b403f386b64736f6c63430008060033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB LOG2 COINBASE CODECOPY CHAINID 0xC3 PUSH3 0x8B8138 KECCAK256 DUP11 0xB4 PUSH32 0x69B5DB6ED0386EA1A7B924CEDC3B403F386B64736F6C63430008060033000000 ","sourceMap":"621:7036:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aba2413946c3628b8138208ab47f69b5db6ed0386ea1a7b924cedc3b403f386b64736f6c63430008060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB LOG2 COINBASE CODECOPY CHAINID 0xC3 PUSH3 0x8B8138 KECCAK256 DUP11 0xB4 PUSH32 0x69B5DB6ED0386EA1A7B924CEDC3B403F386B64736F6C63430008060033000000 ","sourceMap":"621:7036:0:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_calculateOptimismL1DataFee(uint256)":"infinite","_getBlockNumber()":"infinite","_getBlockhash(uint64)":"infinite","_getCurrentTxL1GasFees(bytes memory)":"infinite","_getL1CalldataGasCost(uint256)":"infinite","_isArbitrumChainId(uint256)":"infinite","_isOptimismChainId(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"A library that abstracts out opcodes that behave differently across chains.The methods below return values that are pertinent to the given chain.For instance, ChainSpecificUtil.getBlockNumber() returns L2 block number in L2 chains\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARBGAS_ADDR\":{\"details\":\"ARBGAS_ADDR is the address of the ArbGasInfo precompile on Arbitrum.reference: https://github.com/OffchainLabs/nitro/blob/v2.0.14/contracts/src/precompiles/ArbGasInfo.sol#L10\"},\"ARBSYS_ADDR\":{\"details\":\"ARBSYS_ADDR is the address of the ArbSys precompile on Arbitrum.reference: https://github.com/OffchainLabs/nitro/blob/v2.0.14/contracts/src/precompiles/ArbSys.sol#L10\"},\"BASE_MAINNET_CHAIN_ID\":{\"details\":\"Base is a OP stack based rollup and follows the same L1 pricing logic as Optimism.\"},\"L1_FEE_DATA_PADDING\":{\"details\":\"L1_FEE_DATA_PADDING includes 35 bytes for L1 data padding for Optimism\"},\"OVM_GASPRICEORACLE_ADDR\":{\"details\":\"OVM_GASPRICEORACLE_ADDR is the address of the OVM_GasPriceOracle precompile on Optimism.reference: https://community.optimism.io/docs/developers/build/transaction-fees/#estimating-the-l1-data-fee\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/ChainSpecificUtil.sol\":\"ChainSpecificUtil\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/ChainSpecificUtil.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport {ArbSys} from \\\"./vendor/@arbitrum/nitro-contracts/src/precompiles/ArbSys.sol\\\";\\nimport {ArbGasInfo} from \\\"./vendor/@arbitrum/nitro-contracts/src/precompiles/ArbGasInfo.sol\\\";\\nimport {OVM_GasPriceOracle} from \\\"./vendor/@eth-optimism/contracts/v0.8.6/contracts/L2/predeploys/OVM_GasPriceOracle.sol\\\";\\n\\n/// @dev A library that abstracts out opcodes that behave differently across chains.\\n/// @dev The methods below return values that are pertinent to the given chain.\\n/// @dev For instance, ChainSpecificUtil.getBlockNumber() returns L2 block number in L2 chains\\nlibrary ChainSpecificUtil {\\n  // ------------ Start Arbitrum Constants ------------\\n\\n  /// @dev ARBSYS_ADDR is the address of the ArbSys precompile on Arbitrum.\\n  /// @dev reference: https://github.com/OffchainLabs/nitro/blob/v2.0.14/contracts/src/precompiles/ArbSys.sol#L10\\n  address private constant ARBSYS_ADDR = address(0x0000000000000000000000000000000000000064);\\n  ArbSys private constant ARBSYS = ArbSys(ARBSYS_ADDR);\\n\\n  /// @dev ARBGAS_ADDR is the address of the ArbGasInfo precompile on Arbitrum.\\n  /// @dev reference: https://github.com/OffchainLabs/nitro/blob/v2.0.14/contracts/src/precompiles/ArbGasInfo.sol#L10\\n  address private constant ARBGAS_ADDR = address(0x000000000000000000000000000000000000006C);\\n  ArbGasInfo private constant ARBGAS = ArbGasInfo(ARBGAS_ADDR);\\n\\n  uint256 private constant ARB_MAINNET_CHAIN_ID = 42161;\\n  uint256 private constant ARB_GOERLI_TESTNET_CHAIN_ID = 421613;\\n  uint256 private constant ARB_SEPOLIA_TESTNET_CHAIN_ID = 421614;\\n\\n  // ------------ End Arbitrum Constants ------------\\n\\n  // ------------ Start Optimism Constants ------------\\n  /// @dev L1_FEE_DATA_PADDING includes 35 bytes for L1 data padding for Optimism\\n  bytes internal constant L1_FEE_DATA_PADDING =\\n    \\\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\\\";\\n  /// @dev OVM_GASPRICEORACLE_ADDR is the address of the OVM_GasPriceOracle precompile on Optimism.\\n  /// @dev reference: https://community.optimism.io/docs/developers/build/transaction-fees/#estimating-the-l1-data-fee\\n  address private constant OVM_GASPRICEORACLE_ADDR = address(0x420000000000000000000000000000000000000F);\\n  OVM_GasPriceOracle private constant OVM_GASPRICEORACLE = OVM_GasPriceOracle(OVM_GASPRICEORACLE_ADDR);\\n\\n  uint256 private constant OP_MAINNET_CHAIN_ID = 10;\\n  uint256 private constant OP_GOERLI_CHAIN_ID = 420;\\n  uint256 private constant OP_SEPOLIA_CHAIN_ID = 11155420;\\n\\n  /// @dev Base is a OP stack based rollup and follows the same L1 pricing logic as Optimism.\\n  uint256 private constant BASE_MAINNET_CHAIN_ID = 8453;\\n  uint256 private constant BASE_GOERLI_CHAIN_ID = 84531;\\n\\n  // ------------ End Optimism Constants ------------\\n\\n  /**\\n   * @notice Returns the blockhash for the given blockNumber.\\n   * @notice If the blockNumber is more than 256 blocks in the past, returns the empty string.\\n   * @notice When on a known Arbitrum chain, it uses ArbSys.arbBlockHash to get the blockhash.\\n   * @notice Otherwise, it uses the blockhash opcode.\\n   * @notice Note that the blockhash opcode will return the L2 blockhash on Optimism.\\n   */\\n  function _getBlockhash(uint64 blockNumber) internal view returns (bytes32) {\\n    uint256 chainid = block.chainid;\\n    if (_isArbitrumChainId(chainid)) {\\n      if ((_getBlockNumber() - blockNumber) > 256 || blockNumber >= _getBlockNumber()) {\\n        return \\\"\\\";\\n      }\\n      return ARBSYS.arbBlockHash(blockNumber);\\n    }\\n    return blockhash(blockNumber);\\n  }\\n\\n  /**\\n   * @notice Returns the block number of the current block.\\n   * @notice When on a known Arbitrum chain, it uses ArbSys.arbBlockNumber to get the block number.\\n   * @notice Otherwise, it uses the block.number opcode.\\n   * @notice Note that the block.number opcode will return the L2 block number on Optimism.\\n   */\\n  function _getBlockNumber() internal view returns (uint256) {\\n    uint256 chainid = block.chainid;\\n    if (_isArbitrumChainId(chainid)) {\\n      return ARBSYS.arbBlockNumber();\\n    }\\n    return block.number;\\n  }\\n\\n  /**\\n   * @notice Returns the L1 fees that will be paid for the current transaction, given any calldata\\n   * @notice for the current transaction.\\n   * @notice When on a known Arbitrum chain, it uses ArbGas.getCurrentTxL1GasFees to get the fees.\\n   * @notice On Arbitrum, the provided calldata is not used to calculate the fees.\\n   * @notice On Optimism, the provided calldata is passed to the OVM_GasPriceOracle predeploy\\n   * @notice and getL1Fee is called to get the fees.\\n   */\\n  function _getCurrentTxL1GasFees(bytes memory txCallData) internal view returns (uint256) {\\n    uint256 chainid = block.chainid;\\n    if (_isArbitrumChainId(chainid)) {\\n      return ARBGAS.getCurrentTxL1GasFees();\\n    } else if (_isOptimismChainId(chainid)) {\\n      return OVM_GASPRICEORACLE.getL1Fee(bytes.concat(txCallData, L1_FEE_DATA_PADDING));\\n    }\\n    return 0;\\n  }\\n\\n  /**\\n   * @notice Returns the gas cost in wei of calldataSizeBytes of calldata being posted\\n   * @notice to L1.\\n   */\\n  function _getL1CalldataGasCost(uint256 calldataSizeBytes) internal view returns (uint256) {\\n    uint256 chainid = block.chainid;\\n    if (_isArbitrumChainId(chainid)) {\\n      (, uint256 l1PricePerByte, , , , ) = ARBGAS.getPricesInWei();\\n      // see https://developer.arbitrum.io/devs-how-tos/how-to-estimate-gas#where-do-we-get-all-this-information-from\\n      // for the justification behind the 140 number.\\n      return l1PricePerByte * (calldataSizeBytes + 140);\\n    } else if (_isOptimismChainId(chainid)) {\\n      return _calculateOptimismL1DataFee(calldataSizeBytes);\\n    }\\n    return 0;\\n  }\\n\\n  /**\\n   * @notice Return true if and only if the provided chain ID is an Arbitrum chain ID.\\n   */\\n  function _isArbitrumChainId(uint256 chainId) internal pure returns (bool) {\\n    return\\n      chainId == ARB_MAINNET_CHAIN_ID ||\\n      chainId == ARB_GOERLI_TESTNET_CHAIN_ID ||\\n      chainId == ARB_SEPOLIA_TESTNET_CHAIN_ID;\\n  }\\n\\n  /**\\n   * @notice Return true if and only if the provided chain ID is an Optimism chain ID.\\n   * @notice Note that optimism chain id's are also OP stack chain id's.\\n   */\\n  function _isOptimismChainId(uint256 chainId) internal pure returns (bool) {\\n    return\\n      chainId == OP_MAINNET_CHAIN_ID ||\\n      chainId == OP_GOERLI_CHAIN_ID ||\\n      chainId == OP_SEPOLIA_CHAIN_ID ||\\n      chainId == BASE_MAINNET_CHAIN_ID ||\\n      chainId == BASE_GOERLI_CHAIN_ID;\\n  }\\n\\n  function _calculateOptimismL1DataFee(uint256 calldataSizeBytes) internal view returns (uint256) {\\n    // from: https://community.optimism.io/docs/developers/build/transaction-fees/#the-l1-data-fee\\n    // l1_data_fee = l1_gas_price * (tx_data_gas + fixed_overhead) * dynamic_overhead\\n    // tx_data_gas = count_zero_bytes(tx_data) * 4 + count_non_zero_bytes(tx_data) * 16\\n    // note we conservatively assume all non-zero bytes.\\n    uint256 l1BaseFeeWei = OVM_GASPRICEORACLE.l1BaseFee();\\n    uint256 numZeroBytes = 0;\\n    uint256 numNonzeroBytes = calldataSizeBytes - numZeroBytes;\\n    uint256 txDataGas = numZeroBytes * 4 + numNonzeroBytes * 16;\\n    uint256 fixedOverhead = OVM_GASPRICEORACLE.overhead();\\n\\n    // The scalar is some value like 0.684, but is represented as\\n    // that times 10 ^ number of scalar decimals.\\n    // e.g scalar = 0.684 * 10^6\\n    // The divisor is used to divide that and have a net result of the true scalar.\\n    uint256 scalar = OVM_GASPRICEORACLE.scalar();\\n    uint256 scalarDecimals = OVM_GASPRICEORACLE.decimals();\\n    uint256 divisor = 10 ** scalarDecimals;\\n\\n    uint256 l1DataFee = (l1BaseFeeWei * (txDataGas + fixedOverhead) * scalar) / divisor;\\n    return l1DataFee;\\n  }\\n}\\n\",\"keccak256\":\"0x2f12816c4070308f58ccdd8102733a0bb031d945d1500fcd2297492d7ae674fe\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbGasInfo.sol\":{\"content\":\"// Copyright 2021-2022, Offchain Labs, Inc.\\n// For license information, see https://github.com/OffchainLabs/nitro-contracts/blob/main/LICENSE\\n// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.4.21 <0.9.0;\\n\\n/// @title Provides insight into the cost of using the chain.\\n/// @notice These methods have been adjusted to account for Nitro's heavy use of calldata compression.\\n/// Of note to end-users, we no longer make a distinction between non-zero and zero-valued calldata bytes.\\n/// Precompiled contract that exists in every Arbitrum chain at 0x000000000000000000000000000000000000006c.\\ninterface ArbGasInfo {\\n    /// @notice Get gas prices for a provided aggregator\\n    /// @return return gas prices in wei\\n    ///        (\\n    ///            per L2 tx,\\n    ///            per L1 calldata byte\\n    ///            per storage allocation,\\n    ///            per ArbGas base,\\n    ///            per ArbGas congestion,\\n    ///            per ArbGas total\\n    ///        )\\n    function getPricesInWeiWithAggregator(address aggregator)\\n    external\\n    view\\n    returns (\\n        uint256,\\n        uint256,\\n        uint256,\\n        uint256,\\n        uint256,\\n        uint256\\n    );\\n\\n    /// @notice Get gas prices. Uses the caller's preferred aggregator, or the default if the caller doesn't have a preferred one.\\n    /// @return return gas prices in wei\\n    ///        (\\n    ///            per L2 tx,\\n    ///            per L1 calldata byte\\n    ///            per storage allocation,\\n    ///            per ArbGas base,\\n    ///            per ArbGas congestion,\\n    ///            per ArbGas total\\n    ///        )\\n    function getPricesInWei()\\n    external\\n    view\\n    returns (\\n        uint256,\\n        uint256,\\n        uint256,\\n        uint256,\\n        uint256,\\n        uint256\\n    );\\n\\n    /// @notice Get prices in ArbGas for the supplied aggregator\\n    /// @return (per L2 tx, per L1 calldata byte, per storage allocation)\\n    function getPricesInArbGasWithAggregator(address aggregator)\\n    external\\n    view\\n    returns (\\n        uint256,\\n        uint256,\\n        uint256\\n    );\\n\\n    /// @notice Get prices in ArbGas. Assumes the callers preferred validator, or the default if caller doesn't have a preferred one.\\n    /// @return (per L2 tx, per L1 calldata byte, per storage allocation)\\n    function getPricesInArbGas()\\n    external\\n    view\\n    returns (\\n        uint256,\\n        uint256,\\n        uint256\\n    );\\n\\n    /// @notice Get the gas accounting parameters. `gasPoolMax` is always zero, as the exponential pricing model has no such notion.\\n    /// @return (speedLimitPerSecond, gasPoolMax, maxTxGasLimit)\\n    function getGasAccountingParams()\\n    external\\n    view\\n    returns (\\n        uint256,\\n        uint256,\\n        uint256\\n    );\\n\\n    /// @notice Get the minimum gas price needed for a tx to succeed\\n    function getMinimumGasPrice() external view returns (uint256);\\n\\n    /// @notice Get ArbOS's estimate of the L1 basefee in wei\\n    function getL1BaseFeeEstimate() external view returns (uint256);\\n\\n    /// @notice Get how slowly ArbOS updates its estimate of the L1 basefee\\n    function getL1BaseFeeEstimateInertia() external view returns (uint64);\\n\\n    /// @notice Get the L1 pricer reward rate, in wei per unit\\n    /// Available in ArbOS version 11\\n    function getL1RewardRate() external view returns (uint64);\\n\\n    /// @notice Get the L1 pricer reward recipient\\n    /// Available in ArbOS version 11\\n    function getL1RewardRecipient() external view returns (address);\\n\\n    /// @notice Deprecated -- Same as getL1BaseFeeEstimate()\\n    function getL1GasPriceEstimate() external view returns (uint256);\\n\\n    /// @notice Get L1 gas fees paid by the current transaction\\n    function getCurrentTxL1GasFees() external view returns (uint256);\\n\\n    /// @notice Get the backlogged amount of gas burnt in excess of the speed limit\\n    function getGasBacklog() external view returns (uint64);\\n\\n    /// @notice Get how slowly ArbOS updates the L2 basefee in response to backlogged gas\\n    function getPricingInertia() external view returns (uint64);\\n\\n    /// @notice Get the forgivable amount of backlogged gas ArbOS will ignore when raising the basefee\\n    function getGasBacklogTolerance() external view returns (uint64);\\n\\n    /// @notice Returns the surplus of funds for L1 batch posting payments (may be negative).\\n    function getL1PricingSurplus() external view returns (int256);\\n\\n    /// @notice Returns the base charge (in L1 gas) attributed to each data batch in the calldata pricer\\n    function getPerBatchGasCharge() external view returns (int64);\\n\\n    /// @notice Returns the cost amortization cap in basis points\\n    function getAmortizedCostCapBips() external view returns (uint64);\\n\\n    /// @notice Returns the available funds from L1 fees\\n    function getL1FeesAvailable() external view returns (uint256);\\n\\n    /// @notice Returns the equilibration units parameter for L1 price adjustment algorithm\\n    /// Available in ArbOS version 20\\n    function getL1PricingEquilibrationUnits() external view returns (uint256);\\n\\n    /// @notice Returns the last time the L1 calldata pricer was updated.\\n    /// Available in ArbOS version 20\\n    function getLastL1PricingUpdateTime() external view returns (uint64);\\n\\n    /// @notice Returns the amount of L1 calldata payments due for rewards (per the L1 reward rate)\\n    /// Available in ArbOS version 20\\n    function getL1PricingFundsDueForRewards() external view returns (uint256);\\n\\n    /// @notice Returns the amount of L1 calldata posted since the last update.\\n    /// Available in ArbOS version 20\\n    function getL1PricingUnitsSinceUpdate() external view returns (uint64);\\n\\n    /// @notice Returns the L1 pricing surplus as of the last update (may be negative).\\n    /// Available in ArbOS version 20\\n    function getLastL1PricingSurplus() external view returns (int256);\\n}\",\"keccak256\":\"0x7c51d93494afd02b5336e88d8738341758340f2befe698b4458a916905691bd6\",\"license\":\"BUSL-1.1\"},\"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbSys.sol\":{\"content\":\"// Copyright 2021-2022, Offchain Labs, Inc.\\n// For license information, see https://github.com/nitro/blob/master/LICENSE\\n// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.4.21 <0.9.0;\\n\\n/**\\n * @title System level functionality\\n * @notice For use by contracts to interact with core L2-specific functionality.\\n * Precompiled contract that exists in every Arbitrum chain at address(100), 0x0000000000000000000000000000000000000064.\\n */\\ninterface ArbSys {\\n    /**\\n     * @notice Get Arbitrum block number (distinct from L1 block number; Arbitrum genesis block has block number 0)\\n     * @return block number as int\\n     */\\n    function arbBlockNumber() external view returns (uint256);\\n\\n    /**\\n     * @notice Get Arbitrum block hash (reverts unless currentBlockNum-256 <= arbBlockNum < currentBlockNum)\\n     * @return block hash\\n     */\\n    function arbBlockHash(uint256 arbBlockNum) external view returns (bytes32);\\n\\n    /**\\n     * @notice Gets the rollup's unique chain identifier\\n     * @return Chain identifier as int\\n     */\\n    function arbChainID() external view returns (uint256);\\n\\n    /**\\n     * @notice Get internal version number identifying an ArbOS build\\n     * @return version number as int\\n     */\\n    function arbOSVersion() external view returns (uint256);\\n\\n    /**\\n     * @notice Returns 0 since Nitro has no concept of storage gas\\n     * @return uint 0\\n     */\\n    function getStorageGasAvailable() external view returns (uint256);\\n\\n    /**\\n     * @notice (deprecated) check if current call is top level (meaning it was triggered by an EoA or a L1 contract)\\n     * @dev this call has been deprecated and may be removed in a future release\\n     * @return true if current execution frame is not a call by another L2 contract\\n     */\\n    function isTopLevelCall() external view returns (bool);\\n\\n    /**\\n     * @notice map L1 sender contract address to its L2 alias\\n     * @param sender sender address\\n     * @param unused argument no longer used\\n     * @return aliased sender address\\n     */\\n    function mapL1SenderContractAddressToL2Alias(address sender, address unused)\\n        external\\n        pure\\n        returns (address);\\n\\n    /**\\n     * @notice check if the caller (of this caller of this) is an aliased L1 contract address\\n     * @return true iff the caller's address is an alias for an L1 contract address\\n     */\\n    function wasMyCallersAddressAliased() external view returns (bool);\\n\\n    /**\\n     * @notice return the address of the caller (of this caller of this), without applying L1 contract address aliasing\\n     * @return address of the caller's caller, without applying L1 contract address aliasing\\n     */\\n    function myCallersAddressWithoutAliasing() external view returns (address);\\n\\n    /**\\n     * @notice Send given amount of Eth to dest from sender.\\n     * This is a convenience function, which is equivalent to calling sendTxToL1 with empty data.\\n     * @param destination recipient address on L1\\n     * @return unique identifier for this L2-to-L1 transaction.\\n     */\\n    function withdrawEth(address destination)\\n        external\\n        payable\\n        returns (uint256);\\n\\n    /**\\n     * @notice Send a transaction to L1\\n     * @dev it is not possible to execute on the L1 any L2-to-L1 transaction which contains data\\n     * to a contract address without any code (as enforced by the Bridge contract).\\n     * @param destination recipient address on L1\\n     * @param data (optional) calldata for L1 contract call\\n     * @return a unique identifier for this L2-to-L1 transaction.\\n     */\\n    function sendTxToL1(address destination, bytes calldata data)\\n        external\\n        payable\\n        returns (uint256);\\n\\n    /**\\n     * @notice Get send Merkle tree state\\n     * @return size number of sends in the history\\n     * @return root root hash of the send history\\n     * @return partials hashes of partial subtrees in the send history tree\\n     */\\n    function sendMerkleTreeState()\\n        external\\n        view\\n        returns (\\n            uint256 size,\\n            bytes32 root,\\n            bytes32[] memory partials\\n        );\\n\\n    /**\\n     * @notice creates a send txn from L2 to L1\\n     * @param position = (level << 192) + leaf = (0 << 192) + leaf = leaf\\n     */\\n    event L2ToL1Tx(\\n        address caller,\\n        address indexed destination,\\n        uint256 indexed hash,\\n        uint256 indexed position,\\n        uint256 arbBlockNum,\\n        uint256 ethBlockNum,\\n        uint256 timestamp,\\n        uint256 callvalue,\\n        bytes data\\n    );\\n\\n    /// @dev DEPRECATED in favour of the new L2ToL1Tx event above after the nitro upgrade\\n    event L2ToL1Transaction(\\n        address caller,\\n        address indexed destination,\\n        uint256 indexed uniqueId,\\n        uint256 indexed batchNumber,\\n        uint256 indexInBatch,\\n        uint256 arbBlockNum,\\n        uint256 ethBlockNum,\\n        uint256 timestamp,\\n        uint256 callvalue,\\n        bytes data\\n    );\\n\\n    /**\\n     * @notice logs a merkle branch for proof synthesis\\n     * @param reserved an index meant only to align the 4th index with L2ToL1Transaction's 4th event\\n     * @param hash the merkle hash\\n     * @param position = (level << 192) + leaf\\n     */\\n    event SendMerkleUpdate(\\n        uint256 indexed reserved,\\n        bytes32 indexed hash,\\n        uint256 indexed position\\n    );\\n}\\n\",\"keccak256\":\"0xa8461b373712cb0f4950ef9cad1d12fb38442da76cd57ff916baa7920f7b5077\",\"license\":\"BUSL-1.1\"},\"@chainlink/contracts/src/v0.8/vendor/@eth-optimism/contracts/v0.8.6/contracts/L2/predeploys/OVM_GasPriceOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\n/* External Imports */\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/**\\n * @title OVM_GasPriceOracle\\n * @dev This contract exposes the current l2 gas price, a measure of how congested the network\\n * currently is. This measure is used by the Sequencer to determine what fee to charge for\\n * transactions. When the system is more congested, the l2 gas price will increase and fees\\n * will also increase as a result.\\n *\\n * All public variables are set while generating the initial L2 state. The\\n * constructor doesn't run in practice as the L2 state generation script uses\\n * the deployed bytecode instead of running the initcode.\\n */\\ncontract OVM_GasPriceOracle is Ownable {\\n    /*************\\n     * Variables *\\n     *************/\\n\\n    // Current L2 gas price\\n    uint256 public gasPrice;\\n    // Current L1 base fee\\n    uint256 public l1BaseFee;\\n    // Amortized cost of batch submission per transaction\\n    uint256 public overhead;\\n    // Value to scale the fee up by\\n    uint256 public scalar;\\n    // Number of decimals of the scalar\\n    uint256 public decimals;\\n\\n    /***************\\n     * Constructor *\\n     ***************/\\n\\n    /**\\n     * @param _owner Address that will initially own this contract.\\n     */\\n    constructor(address _owner) Ownable() {\\n        transferOwnership(_owner);\\n    }\\n\\n    /**********\\n     * Events *\\n     **********/\\n\\n    event GasPriceUpdated(uint256);\\n    event L1BaseFeeUpdated(uint256);\\n    event OverheadUpdated(uint256);\\n    event ScalarUpdated(uint256);\\n    event DecimalsUpdated(uint256);\\n\\n    /********************\\n     * Public Functions *\\n     ********************/\\n\\n    /**\\n     * Allows the owner to modify the l2 gas price.\\n     * @param _gasPrice New l2 gas price.\\n     */\\n    // slither-disable-next-line external-function\\n    function setGasPrice(uint256 _gasPrice) public onlyOwner {\\n        gasPrice = _gasPrice;\\n        emit GasPriceUpdated(_gasPrice);\\n    }\\n\\n    /**\\n     * Allows the owner to modify the l1 base fee.\\n     * @param _baseFee New l1 base fee\\n     */\\n    // slither-disable-next-line external-function\\n    function setL1BaseFee(uint256 _baseFee) public onlyOwner {\\n        l1BaseFee = _baseFee;\\n        emit L1BaseFeeUpdated(_baseFee);\\n    }\\n\\n    /**\\n     * Allows the owner to modify the overhead.\\n     * @param _overhead New overhead\\n     */\\n    // slither-disable-next-line external-function\\n    function setOverhead(uint256 _overhead) public onlyOwner {\\n        overhead = _overhead;\\n        emit OverheadUpdated(_overhead);\\n    }\\n\\n    /**\\n     * Allows the owner to modify the scalar.\\n     * @param _scalar New scalar\\n     */\\n    // slither-disable-next-line external-function\\n    function setScalar(uint256 _scalar) public onlyOwner {\\n        scalar = _scalar;\\n        emit ScalarUpdated(_scalar);\\n    }\\n\\n    /**\\n     * Allows the owner to modify the decimals.\\n     * @param _decimals New decimals\\n     */\\n    // slither-disable-next-line external-function\\n    function setDecimals(uint256 _decimals) public onlyOwner {\\n        decimals = _decimals;\\n        emit DecimalsUpdated(_decimals);\\n    }\\n\\n    /**\\n     * Computes the L1 portion of the fee\\n     * based on the size of the RLP encoded tx\\n     * and the current l1BaseFee\\n     * @param _data Unsigned RLP encoded tx, 6 elements\\n     * @return L1 fee that should be paid for the tx\\n     */\\n    // slither-disable-next-line external-function\\n    function getL1Fee(bytes memory _data) public view returns (uint256) {\\n        uint256 l1GasUsed = getL1GasUsed(_data);\\n        uint256 l1Fee = l1GasUsed * l1BaseFee;\\n        uint256 divisor = 10**decimals;\\n        uint256 unscaled = l1Fee * scalar;\\n        uint256 scaled = unscaled / divisor;\\n        return scaled;\\n    }\\n\\n    // solhint-disable max-line-length\\n    /**\\n     * Computes the amount of L1 gas used for a transaction\\n     * The overhead represents the per batch gas overhead of\\n     * posting both transaction and state roots to L1 given larger\\n     * batch sizes.\\n     * 4 gas for 0 byte\\n     * https://github.com/ethereum/go-ethereum/blob/9ada4a2e2c415e6b0b51c50e901336872e028872/params/protocol_params.go#L33\\n     * 16 gas for non zero byte\\n     * https://github.com/ethereum/go-ethereum/blob/9ada4a2e2c415e6b0b51c50e901336872e028872/params/protocol_params.go#L87\\n     * This will need to be updated if calldata gas prices change\\n     * Account for the transaction being unsigned\\n     * Padding is added to account for lack of signature on transaction\\n     * 1 byte for RLP V prefix\\n     * 1 byte for V\\n     * 1 byte for RLP R prefix\\n     * 32 bytes for R\\n     * 1 byte for RLP S prefix\\n     * 32 bytes for S\\n     * Total: 68 bytes of padding\\n     * @param _data Unsigned RLP encoded tx, 6 elements\\n     * @return Amount of L1 gas used for a transaction\\n     */\\n    // solhint-enable max-line-length\\n    function getL1GasUsed(bytes memory _data) public view returns (uint256) {\\n        uint256 total = 0;\\n        for (uint256 i = 0; i < _data.length; i++) {\\n            if (_data[i] == 0) {\\n                total += 4;\\n            } else {\\n                total += 16;\\n            }\\n        }\\n        uint256 unsigned = total + overhead;\\n        return unsigned + (68 * 16);\\n    }\\n}\\n\",\"keccak256\":\"0x9c8c09504619b7da966921c82e9376f46ea7579ad9a764d674666f3e923fdd25\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol":{"TypeAndVersionInterface":{"abi":[{"inputs":[],"name":"typeAndVersion","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"typeAndVersion()":"181f5a77"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"typeAndVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol\":\"TypeAndVersionInterface\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nabstract contract TypeAndVersionInterface {\\n  function typeAndVersion() external pure virtual returns (string memory);\\n}\\n\",\"keccak256\":\"0x805cc9a91d54db1bea60cb19f38364f1eac2735bddb3476294fb803c2f6b7097\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol":{"ConfirmedOwner":{"abi":[{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"title":"The ConfirmedOwner contract","version":1},"evm":{"bytecode":{"functionDebugData":{"@_380":{"entryPoint":null,"id":380,"parameterSlots":1,"returnSlots":0},"@_438":{"entryPoint":null,"id":438,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_522":{"entryPoint":304,"id":522,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":605,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":626,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack":{"entryPoint":671,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":706,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":741,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":773,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":805,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":822,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":840,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":872,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2":{"entryPoint":877,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":918,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":959,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3327:19","statements":[{"body":{"nodeType":"YulBlock","src":"70:80:19","statements":[{"nodeType":"YulAssignment","src":"80:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"89:5:19"},"nodeType":"YulFunctionCall","src":"89:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"80:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"138:5:19"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"111:26:19"},"nodeType":"YulFunctionCall","src":"111:33:19"},"nodeType":"YulExpressionStatement","src":"111:33:19"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"48:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"56:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:19","type":""}],"src":"7:143:19"},{"body":{"nodeType":"YulBlock","src":"233:274:19","statements":[{"body":{"nodeType":"YulBlock","src":"279:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"281:77:19"},"nodeType":"YulFunctionCall","src":"281:79:19"},"nodeType":"YulExpressionStatement","src":"281:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"254:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"263:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"250:3:19"},"nodeType":"YulFunctionCall","src":"250:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"275:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"246:3:19"},"nodeType":"YulFunctionCall","src":"246:32:19"},"nodeType":"YulIf","src":"243:2:19"},{"nodeType":"YulBlock","src":"372:128:19","statements":[{"nodeType":"YulVariableDeclaration","src":"387:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"401:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"391:6:19","type":""}]},{"nodeType":"YulAssignment","src":"416:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"462:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"473:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"458:3:19"},"nodeType":"YulFunctionCall","src":"458:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"482:7:19"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"426:31:19"},"nodeType":"YulFunctionCall","src":"426:64:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"416:6:19"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"203:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"214:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"226:6:19","type":""}],"src":"156:351:19"},{"body":{"nodeType":"YulBlock","src":"659:220:19","statements":[{"nodeType":"YulAssignment","src":"669:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"735:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"740:2:19","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"676:58:19"},"nodeType":"YulFunctionCall","src":"676:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"669:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"841:3:19"}],"functionName":{"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulIdentifier","src":"752:88:19"},"nodeType":"YulFunctionCall","src":"752:93:19"},"nodeType":"YulExpressionStatement","src":"752:93:19"},{"nodeType":"YulAssignment","src":"854:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"865:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"870:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"861:3:19"},"nodeType":"YulFunctionCall","src":"861:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"854:3:19"}]}]},"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"647:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"655:3:19","type":""}],"src":"513:366:19"},{"body":{"nodeType":"YulBlock","src":"1031:220:19","statements":[{"nodeType":"YulAssignment","src":"1041:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1107:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"1112:2:19","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1048:58:19"},"nodeType":"YulFunctionCall","src":"1048:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1041:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1213:3:19"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"1124:88:19"},"nodeType":"YulFunctionCall","src":"1124:93:19"},"nodeType":"YulExpressionStatement","src":"1124:93:19"},{"nodeType":"YulAssignment","src":"1226:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1237:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"1242:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1233:3:19"},"nodeType":"YulFunctionCall","src":"1233:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1226:3:19"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1019:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1027:3:19","type":""}],"src":"885:366:19"},{"body":{"nodeType":"YulBlock","src":"1428:248:19","statements":[{"nodeType":"YulAssignment","src":"1438:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1450:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1461:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1446:3:19"},"nodeType":"YulFunctionCall","src":"1446:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1438:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1485:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1496:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1481:3:19"},"nodeType":"YulFunctionCall","src":"1481:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1504:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"1510:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1500:3:19"},"nodeType":"YulFunctionCall","src":"1500:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1474:6:19"},"nodeType":"YulFunctionCall","src":"1474:47:19"},"nodeType":"YulExpressionStatement","src":"1474:47:19"},{"nodeType":"YulAssignment","src":"1530:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1664:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1538:124:19"},"nodeType":"YulFunctionCall","src":"1538:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1530:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1408:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1423:4:19","type":""}],"src":"1257:419:19"},{"body":{"nodeType":"YulBlock","src":"1853:248:19","statements":[{"nodeType":"YulAssignment","src":"1863:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1875:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1886:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1871:3:19"},"nodeType":"YulFunctionCall","src":"1871:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1863:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1910:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1921:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1906:3:19"},"nodeType":"YulFunctionCall","src":"1906:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1929:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"1935:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1925:3:19"},"nodeType":"YulFunctionCall","src":"1925:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1899:6:19"},"nodeType":"YulFunctionCall","src":"1899:47:19"},"nodeType":"YulExpressionStatement","src":"1899:47:19"},{"nodeType":"YulAssignment","src":"1955:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2089:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1963:124:19"},"nodeType":"YulFunctionCall","src":"1963:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1955:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1833:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1848:4:19","type":""}],"src":"1682:419:19"},{"body":{"nodeType":"YulBlock","src":"2147:35:19","statements":[{"nodeType":"YulAssignment","src":"2157:19:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2173:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2167:5:19"},"nodeType":"YulFunctionCall","src":"2167:9:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2157:6:19"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2140:6:19","type":""}],"src":"2107:75:19"},{"body":{"nodeType":"YulBlock","src":"2284:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2301:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"2306:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2294:6:19"},"nodeType":"YulFunctionCall","src":"2294:19:19"},"nodeType":"YulExpressionStatement","src":"2294:19:19"},{"nodeType":"YulAssignment","src":"2322:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2341:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"2346:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2337:3:19"},"nodeType":"YulFunctionCall","src":"2337:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2322:11:19"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2256:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"2261:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2272:11:19","type":""}],"src":"2188:169:19"},{"body":{"nodeType":"YulBlock","src":"2408:51:19","statements":[{"nodeType":"YulAssignment","src":"2418:35:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2447:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2429:17:19"},"nodeType":"YulFunctionCall","src":"2429:24:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2418:7:19"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2390:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2400:7:19","type":""}],"src":"2363:96:19"},{"body":{"nodeType":"YulBlock","src":"2510:81:19","statements":[{"nodeType":"YulAssignment","src":"2520:65:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2535:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"2542:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2531:3:19"},"nodeType":"YulFunctionCall","src":"2531:54:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2520:7:19"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2492:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2502:7:19","type":""}],"src":"2465:126:19"},{"body":{"nodeType":"YulBlock","src":"2686:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2703:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2706:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2696:6:19"},"nodeType":"YulFunctionCall","src":"2696:12:19"},"nodeType":"YulExpressionStatement","src":"2696:12:19"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"2597:117:19"},{"body":{"nodeType":"YulBlock","src":"2809:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2826:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2829:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2819:6:19"},"nodeType":"YulFunctionCall","src":"2819:12:19"},"nodeType":"YulExpressionStatement","src":"2819:12:19"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"2720:117:19"},{"body":{"nodeType":"YulBlock","src":"2949:68:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2971:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"2979:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2967:3:19"},"nodeType":"YulFunctionCall","src":"2967:14:19"},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","kind":"string","nodeType":"YulLiteral","src":"2983:26:19","type":"","value":"Cannot set owner to zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2960:6:19"},"nodeType":"YulFunctionCall","src":"2960:50:19"},"nodeType":"YulExpressionStatement","src":"2960:50:19"}]},"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2941:6:19","type":""}],"src":"2843:174:19"},{"body":{"nodeType":"YulBlock","src":"3129:67:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3151:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"3159:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3147:3:19"},"nodeType":"YulFunctionCall","src":"3147:14:19"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"3163:25:19","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3140:6:19"},"nodeType":"YulFunctionCall","src":"3140:49:19"},"nodeType":"YulExpressionStatement","src":"3140:49:19"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3121:6:19","type":""}],"src":"3023:173:19"},{"body":{"nodeType":"YulBlock","src":"3245:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"3302:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3311:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3314:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3304:6:19"},"nodeType":"YulFunctionCall","src":"3304:12:19"},"nodeType":"YulExpressionStatement","src":"3304:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3268:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3293:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3275:17:19"},"nodeType":"YulFunctionCall","src":"3275:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3265:2:19"},"nodeType":"YulFunctionCall","src":"3265:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3258:6:19"},"nodeType":"YulFunctionCall","src":"3258:43:19"},"nodeType":"YulIf","src":"3255:2:19"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3238:5:19","type":""}],"src":"3202:122:19"}]},"contents":"{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot set owner to zero\")\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610a43380380610a4383398181016040528101906100329190610272565b8060008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156100a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009b906102e5565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610128576101278161013060201b60201c565b5b5050506103d6565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561019f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019690610305565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b60008151905061026c816103bf565b92915050565b60006020828403121561028857610287610368565b5b60006102968482850161025d565b91505092915050565b60006102ac601883610325565b91506102b78261036d565b602082019050919050565b60006102cf601783610325565b91506102da82610396565b602082019050919050565b600060208201905081810360008301526102fe8161029f565b9050919050565b6000602082019050818103600083015261031e816102c2565b9050919050565b600082825260208201905092915050565b600061034182610348565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000600082015250565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b6103c881610336565b81146103d357600080fd5b50565b61065e806103e56000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861021f565b60405161006591906104d3565b60405180910390f35b6100886004803603810190610083919061042e565b610248565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610111906104ee565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61025061025c565b610259816102ec565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e19061050e565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561035b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103529061052e565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b60008135905061042881610611565b92915050565b60006020828403121561044457610443610591565b5b600061045284828501610419565b91505092915050565b6104648161055f565b82525050565b600061047760168361054e565b915061048282610596565b602082019050919050565b600061049a60168361054e565b91506104a5826105bf565b602082019050919050565b60006104bd60178361054e565b91506104c8826105e8565b602082019050919050565b60006020820190506104e8600083018461045b565b92915050565b600060208201905081810360008301526105078161046a565b9050919050565b600060208201905081810360008301526105278161048d565b9050919050565b60006020820190508181036000830152610547816104b0565b9050919050565b600082825260208201905092915050565b600061056a82610571565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b61061a8161055f565b811461062557600080fd5b5056fea264697066735822122048726d59ffff8d4002fa3abfab5b402c915f2d2244d9ab5659ebe2bdf9c0497464736f6c63430008060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA43 CODESIZE SUB DUP1 PUSH2 0xA43 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x272 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B SWAP1 PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x128 JUMPI PUSH2 0x127 DUP2 PUSH2 0x130 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP POP PUSH2 0x3D6 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x19F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x196 SWAP1 PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x26C DUP2 PUSH2 0x3BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x288 JUMPI PUSH2 0x287 PUSH2 0x368 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x296 DUP5 DUP3 DUP6 ADD PUSH2 0x25D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AC PUSH1 0x18 DUP4 PUSH2 0x325 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B7 DUP3 PUSH2 0x36D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CF PUSH1 0x17 DUP4 PUSH2 0x325 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DA DUP3 PUSH2 0x396 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FE DUP2 PUSH2 0x29F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31E DUP2 PUSH2 0x2C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x341 DUP3 PUSH2 0x348 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x3C8 DUP2 PUSH2 0x336 JUMP JUMPDEST DUP2 EQ PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x65E DUP1 PUSH2 0x3E5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x42E JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111 SWAP1 PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x25C JUMP JUMPDEST PUSH2 0x259 DUP2 PUSH2 0x2EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP1 PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x35B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x352 SWAP1 PUSH2 0x52E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x428 DUP2 PUSH2 0x611 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x444 JUMPI PUSH2 0x443 PUSH2 0x591 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x452 DUP5 DUP3 DUP6 ADD PUSH2 0x419 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x464 DUP2 PUSH2 0x55F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x477 PUSH1 0x16 DUP4 PUSH2 0x54E JUMP JUMPDEST SWAP2 POP PUSH2 0x482 DUP3 PUSH2 0x596 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49A PUSH1 0x16 DUP4 PUSH2 0x54E JUMP JUMPDEST SWAP2 POP PUSH2 0x4A5 DUP3 PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BD PUSH1 0x17 DUP4 PUSH2 0x54E JUMP JUMPDEST SWAP2 POP PUSH2 0x4C8 DUP3 PUSH2 0x5E8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4E8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x45B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x507 DUP2 PUSH2 0x46A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x527 DUP2 PUSH2 0x48D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x547 DUP2 PUSH2 0x4B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56A DUP3 PUSH2 0x571 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x61A DUP2 PUSH2 0x55F JUMP JUMPDEST DUP2 EQ PUSH2 0x625 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x48 PUSH19 0x6D59FFFF8D4002FA3ABFAB5B402C915F2D2244 0xD9 0xAB JUMP MSIZE 0xEB 0xE2 0xBD 0xF9 0xC0 0x49 PUSH21 0x64736F6C6343000806003300000000000000000000 ","sourceMap":"240:141:2:-:0;;;298:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;355:8;373:1;614::3;594:22;;:8;:22;;;;586:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;662:8;652:7;;:18;;;;;;;;;;;;;;;;;;704:1;680:26;;:12;:26;;;676:79;;716:32;735:12;716:18;;;:32;;:::i;:::-;676:79;481:278;;298:81:2;240:141;;1528:235:3;1643:10;1637:16;;:2;:16;;;;1629:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1705:2;1688:14;;:19;;;;;;;;;;;;;;;;;;1755:2;1719:39;;1746:7;;;;;;;;;;1719:39;;;;;;;;;;;;1528:235;:::o;7:143:19:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:2;;;281:79;;:::i;:::-;243:2;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;233:274;;;;:::o;513:366::-;655:3;676:67;740:2;735:3;676:67;:::i;:::-;669:74;;752:93;841:3;752:93;:::i;:::-;870:2;865:3;861:12;854:19;;659:220;;;:::o;885:366::-;1027:3;1048:67;1112:2;1107:3;1048:67;:::i;:::-;1041:74;;1124:93;1213:3;1124:93;:::i;:::-;1242:2;1237:3;1233:12;1226:19;;1031:220;;;:::o;1257:419::-;1423:4;1461:2;1450:9;1446:18;1438:26;;1510:9;1504:4;1500:20;1496:1;1485:9;1481:17;1474:47;1538:131;1664:4;1538:131;:::i;:::-;1530:139;;1428:248;;;:::o;1682:419::-;1848:4;1886:2;1875:9;1871:18;1863:26;;1935:9;1929:4;1925:20;1921:1;1910:9;1906:17;1899:47;1963:131;2089:4;1963:131;:::i;:::-;1955:139;;1853:248;;;:::o;2188:169::-;2272:11;2306:6;2301:3;2294:19;2346:4;2341:3;2337:14;2322:29;;2284:73;;;;:::o;2363:96::-;2400:7;2429:24;2447:5;2429:24;:::i;:::-;2418:35;;2408:51;;;:::o;2465:126::-;2502:7;2542:42;2535:5;2531:54;2520:65;;2510:81;;;:::o;2720:117::-;2829:1;2826;2819:12;2843:174;2983:26;2979:1;2971:6;2967:14;2960:50;2949:68;:::o;3023:173::-;3163:25;3159:1;3151:6;3147:14;3140:49;3129:67;:::o;3202:122::-;3275:24;3293:5;3275:24;:::i;:::-;3268:5;3265:35;3255:2;;3314:1;3311;3304:12;3255:2;3245:79;:::o;240:141:2:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_transferOwnership_522":{"entryPoint":748,"id":522,"parameterSlots":1,"returnSlots":0},"@_validateOwnership_535":{"entryPoint":604,"id":535,"parameterSlots":0,"returnSlots":0},"@acceptOwnership_488":{"entryPoint":138,"id":488,"parameterSlots":0,"returnSlots":0},"@owner_498":{"entryPoint":543,"id":498,"parameterSlots":0,"returnSlots":1},"@transferOwnership_452":{"entryPoint":584,"id":452,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":1049,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1070,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1115,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack":{"entryPoint":1130,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack":{"entryPoint":1165,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":1200,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1235,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1262,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1294,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1326,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1358,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1375,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1393,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1425,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c":{"entryPoint":1430,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3":{"entryPoint":1471,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":1512,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1553,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4626:19","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:19","statements":[{"nodeType":"YulAssignment","src":"69:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:19"},"nodeType":"YulFunctionCall","src":"78:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:19"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:19"},"nodeType":"YulFunctionCall","src":"107:33:19"},"nodeType":"YulExpressionStatement","src":"107:33:19"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:19","type":""}],"src":"7:139:19"},{"body":{"nodeType":"YulBlock","src":"218:263:19","statements":[{"body":{"nodeType":"YulBlock","src":"264:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"266:77:19"},"nodeType":"YulFunctionCall","src":"266:79:19"},"nodeType":"YulExpressionStatement","src":"266:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"239:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"248:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:19"},"nodeType":"YulFunctionCall","src":"235:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"260:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"231:3:19"},"nodeType":"YulFunctionCall","src":"231:32:19"},"nodeType":"YulIf","src":"228:2:19"},{"nodeType":"YulBlock","src":"357:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"372:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"386:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"376:6:19","type":""}]},{"nodeType":"YulAssignment","src":"401:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"436:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"447:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"432:3:19"},"nodeType":"YulFunctionCall","src":"432:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"456:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"411:20:19"},"nodeType":"YulFunctionCall","src":"411:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"401:6:19"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"188:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"199:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"211:6:19","type":""}],"src":"152:329:19"},{"body":{"nodeType":"YulBlock","src":"552:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"569:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"592:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"574:17:19"},"nodeType":"YulFunctionCall","src":"574:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"562:6:19"},"nodeType":"YulFunctionCall","src":"562:37:19"},"nodeType":"YulExpressionStatement","src":"562:37:19"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"540:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"547:3:19","type":""}],"src":"487:118:19"},{"body":{"nodeType":"YulBlock","src":"757:220:19","statements":[{"nodeType":"YulAssignment","src":"767:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"833:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"838:2:19","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"774:58:19"},"nodeType":"YulFunctionCall","src":"774:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"767:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"939:3:19"}],"functionName":{"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulIdentifier","src":"850:88:19"},"nodeType":"YulFunctionCall","src":"850:93:19"},"nodeType":"YulExpressionStatement","src":"850:93:19"},{"nodeType":"YulAssignment","src":"952:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"963:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"968:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"959:3:19"},"nodeType":"YulFunctionCall","src":"959:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"952:3:19"}]}]},"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"745:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"753:3:19","type":""}],"src":"611:366:19"},{"body":{"nodeType":"YulBlock","src":"1129:220:19","statements":[{"nodeType":"YulAssignment","src":"1139:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1205:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"1210:2:19","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1146:58:19"},"nodeType":"YulFunctionCall","src":"1146:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1139:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1311:3:19"}],"functionName":{"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulIdentifier","src":"1222:88:19"},"nodeType":"YulFunctionCall","src":"1222:93:19"},"nodeType":"YulExpressionStatement","src":"1222:93:19"},{"nodeType":"YulAssignment","src":"1324:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1335:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"1340:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1331:3:19"},"nodeType":"YulFunctionCall","src":"1331:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1324:3:19"}]}]},"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1117:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1125:3:19","type":""}],"src":"983:366:19"},{"body":{"nodeType":"YulBlock","src":"1501:220:19","statements":[{"nodeType":"YulAssignment","src":"1511:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1577:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"1582:2:19","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1518:58:19"},"nodeType":"YulFunctionCall","src":"1518:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1511:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1683:3:19"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"1594:88:19"},"nodeType":"YulFunctionCall","src":"1594:93:19"},"nodeType":"YulExpressionStatement","src":"1594:93:19"},{"nodeType":"YulAssignment","src":"1696:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1707:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"1712:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1703:3:19"},"nodeType":"YulFunctionCall","src":"1703:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1696:3:19"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1489:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1497:3:19","type":""}],"src":"1355:366:19"},{"body":{"nodeType":"YulBlock","src":"1825:124:19","statements":[{"nodeType":"YulAssignment","src":"1835:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1847:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1858:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1843:3:19"},"nodeType":"YulFunctionCall","src":"1843:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1835:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1915:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1928:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1939:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1924:3:19"},"nodeType":"YulFunctionCall","src":"1924:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1871:43:19"},"nodeType":"YulFunctionCall","src":"1871:71:19"},"nodeType":"YulExpressionStatement","src":"1871:71:19"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1797:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1809:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1820:4:19","type":""}],"src":"1727:222:19"},{"body":{"nodeType":"YulBlock","src":"2126:248:19","statements":[{"nodeType":"YulAssignment","src":"2136:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2148:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2159:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2144:3:19"},"nodeType":"YulFunctionCall","src":"2144:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2136:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2183:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2194:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2179:3:19"},"nodeType":"YulFunctionCall","src":"2179:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2202:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"2208:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2198:3:19"},"nodeType":"YulFunctionCall","src":"2198:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2172:6:19"},"nodeType":"YulFunctionCall","src":"2172:47:19"},"nodeType":"YulExpressionStatement","src":"2172:47:19"},{"nodeType":"YulAssignment","src":"2228:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2362:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2236:124:19"},"nodeType":"YulFunctionCall","src":"2236:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2228:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2106:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2121:4:19","type":""}],"src":"1955:419:19"},{"body":{"nodeType":"YulBlock","src":"2551:248:19","statements":[{"nodeType":"YulAssignment","src":"2561:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2573:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2584:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2569:3:19"},"nodeType":"YulFunctionCall","src":"2569:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2561:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2608:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2619:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2604:3:19"},"nodeType":"YulFunctionCall","src":"2604:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2627:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"2633:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2623:3:19"},"nodeType":"YulFunctionCall","src":"2623:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2597:6:19"},"nodeType":"YulFunctionCall","src":"2597:47:19"},"nodeType":"YulExpressionStatement","src":"2597:47:19"},{"nodeType":"YulAssignment","src":"2653:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2787:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2661:124:19"},"nodeType":"YulFunctionCall","src":"2661:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2653:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2531:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2546:4:19","type":""}],"src":"2380:419:19"},{"body":{"nodeType":"YulBlock","src":"2976:248:19","statements":[{"nodeType":"YulAssignment","src":"2986:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2998:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3009:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2994:3:19"},"nodeType":"YulFunctionCall","src":"2994:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2986:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3033:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3044:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3029:3:19"},"nodeType":"YulFunctionCall","src":"3029:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3052:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"3058:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3048:3:19"},"nodeType":"YulFunctionCall","src":"3048:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3022:6:19"},"nodeType":"YulFunctionCall","src":"3022:47:19"},"nodeType":"YulExpressionStatement","src":"3022:47:19"},{"nodeType":"YulAssignment","src":"3078:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3212:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3086:124:19"},"nodeType":"YulFunctionCall","src":"3086:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3078:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2956:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2971:4:19","type":""}],"src":"2805:419:19"},{"body":{"nodeType":"YulBlock","src":"3270:35:19","statements":[{"nodeType":"YulAssignment","src":"3280:19:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3296:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3290:5:19"},"nodeType":"YulFunctionCall","src":"3290:9:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3280:6:19"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3263:6:19","type":""}],"src":"3230:75:19"},{"body":{"nodeType":"YulBlock","src":"3407:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3424:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"3429:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3417:6:19"},"nodeType":"YulFunctionCall","src":"3417:19:19"},"nodeType":"YulExpressionStatement","src":"3417:19:19"},{"nodeType":"YulAssignment","src":"3445:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3464:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"3469:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3460:3:19"},"nodeType":"YulFunctionCall","src":"3460:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3445:11:19"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3379:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"3384:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3395:11:19","type":""}],"src":"3311:169:19"},{"body":{"nodeType":"YulBlock","src":"3531:51:19","statements":[{"nodeType":"YulAssignment","src":"3541:35:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3570:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3552:17:19"},"nodeType":"YulFunctionCall","src":"3552:24:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3541:7:19"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3513:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3523:7:19","type":""}],"src":"3486:96:19"},{"body":{"nodeType":"YulBlock","src":"3633:81:19","statements":[{"nodeType":"YulAssignment","src":"3643:65:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3658:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"3665:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3654:3:19"},"nodeType":"YulFunctionCall","src":"3654:54:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3643:7:19"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3615:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3625:7:19","type":""}],"src":"3588:126:19"},{"body":{"nodeType":"YulBlock","src":"3809:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3826:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3829:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3819:6:19"},"nodeType":"YulFunctionCall","src":"3819:12:19"},"nodeType":"YulExpressionStatement","src":"3819:12:19"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"3720:117:19"},{"body":{"nodeType":"YulBlock","src":"3932:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3949:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3952:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3942:6:19"},"nodeType":"YulFunctionCall","src":"3942:12:19"},"nodeType":"YulExpressionStatement","src":"3942:12:19"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"3843:117:19"},{"body":{"nodeType":"YulBlock","src":"4072:66:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4094:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"4102:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4090:3:19"},"nodeType":"YulFunctionCall","src":"4090:14:19"},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","kind":"string","nodeType":"YulLiteral","src":"4106:24:19","type":"","value":"Must be proposed owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4083:6:19"},"nodeType":"YulFunctionCall","src":"4083:48:19"},"nodeType":"YulExpressionStatement","src":"4083:48:19"}]},"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4064:6:19","type":""}],"src":"3966:172:19"},{"body":{"nodeType":"YulBlock","src":"4250:66:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4272:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"4280:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4268:3:19"},"nodeType":"YulFunctionCall","src":"4268:14:19"},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","kind":"string","nodeType":"YulLiteral","src":"4284:24:19","type":"","value":"Only callable by owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4261:6:19"},"nodeType":"YulFunctionCall","src":"4261:48:19"},"nodeType":"YulExpressionStatement","src":"4261:48:19"}]},"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4242:6:19","type":""}],"src":"4144:172:19"},{"body":{"nodeType":"YulBlock","src":"4428:67:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4450:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"4458:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4446:3:19"},"nodeType":"YulFunctionCall","src":"4446:14:19"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"4462:25:19","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4439:6:19"},"nodeType":"YulFunctionCall","src":"4439:49:19"},"nodeType":"YulExpressionStatement","src":"4439:49:19"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4420:6:19","type":""}],"src":"4322:173:19"},{"body":{"nodeType":"YulBlock","src":"4544:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"4601:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4610:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4613:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4603:6:19"},"nodeType":"YulFunctionCall","src":"4603:12:19"},"nodeType":"YulExpressionStatement","src":"4603:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4567:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4592:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4574:17:19"},"nodeType":"YulFunctionCall","src":"4574:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4564:2:19"},"nodeType":"YulFunctionCall","src":"4564:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4557:6:19"},"nodeType":"YulFunctionCall","src":"4557:43:19"},"nodeType":"YulIf","src":"4554:2:19"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4537:5:19","type":""}],"src":"4501:122:19"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must be proposed owner\")\n\n    }\n\n    function store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only callable by owner\")\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861021f565b60405161006591906104d3565b60405180910390f35b6100886004803603810190610083919061042e565b610248565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610111906104ee565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61025061025c565b610259816102ec565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e19061050e565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561035b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103529061052e565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b60008135905061042881610611565b92915050565b60006020828403121561044457610443610591565b5b600061045284828501610419565b91505092915050565b6104648161055f565b82525050565b600061047760168361054e565b915061048282610596565b602082019050919050565b600061049a60168361054e565b91506104a5826105bf565b602082019050919050565b60006104bd60178361054e565b91506104c8826105e8565b602082019050919050565b60006020820190506104e8600083018461045b565b92915050565b600060208201905081810360008301526105078161046a565b9050919050565b600060208201905081810360008301526105278161048d565b9050919050565b60006020820190508181036000830152610547816104b0565b9050919050565b600082825260208201905092915050565b600061056a82610571565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b61061a8161055f565b811461062557600080fd5b5056fea264697066735822122048726d59ffff8d4002fa3abfab5b402c915f2d2244d9ab5659ebe2bdf9c0497464736f6c63430008060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x42E JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111 SWAP1 PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x25C JUMP JUMPDEST PUSH2 0x259 DUP2 PUSH2 0x2EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP1 PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x35B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x352 SWAP1 PUSH2 0x52E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x428 DUP2 PUSH2 0x611 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x444 JUMPI PUSH2 0x443 PUSH2 0x591 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x452 DUP5 DUP3 DUP6 ADD PUSH2 0x419 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x464 DUP2 PUSH2 0x55F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x477 PUSH1 0x16 DUP4 PUSH2 0x54E JUMP JUMPDEST SWAP2 POP PUSH2 0x482 DUP3 PUSH2 0x596 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49A PUSH1 0x16 DUP4 PUSH2 0x54E JUMP JUMPDEST SWAP2 POP PUSH2 0x4A5 DUP3 PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BD PUSH1 0x17 DUP4 PUSH2 0x54E JUMP JUMPDEST SWAP2 POP PUSH2 0x4C8 DUP3 PUSH2 0x5E8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4E8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x45B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x507 DUP2 PUSH2 0x46A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x527 DUP2 PUSH2 0x48D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x547 DUP2 PUSH2 0x4B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56A DUP3 PUSH2 0x571 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x61A DUP2 PUSH2 0x55F JUMP JUMPDEST DUP2 EQ PUSH2 0x625 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x48 PUSH19 0x6D59FFFF8D4002FA3ABFAB5B402C915F2D2244 0xD9 0xAB JUMP MSIZE 0xEB 0xE2 0xBD 0xF9 0xC0 0x49 PUSH21 0x64736F6C6343000806003300000000000000000000 ","sourceMap":"240:141:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1022:312:3;;;:::i;:::-;;1374:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;843:98;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1022:312;1142:14;;;;;;;;;;;1128:28;;:10;:28;;;1120:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1190:16;1209:7;;;;;;;;;;;1190:26;;1232:10;1222:7;;:20;;;;;;;;;;;;;;;;;;1273:1;1248:14;;:27;;;;;;;;;;;;;;;;;;1318:10;1287:42;;1308:8;1287:42;;;;;;;;;;;;1067:267;1022:312::o;1374:81::-;1421:7;1443;;;;;;;;;;;1436:14;;1374:81;:::o;843:98::-;2059:20;:18;:20::i;:::-;914:22:::1;933:2;914:18;:22::i;:::-;843:98:::0;:::o;1797:158::-;1916:7;;;;;;;;;;1902:21;;:10;:21;;;1894:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1797:158::o;1528:235::-;1643:10;1637:16;;:2;:16;;;;1629:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1705:2;1688:14;;:19;;;;;;;;;;;;;;;;;;1755:2;1719:39;;1746:7;;;;;;;;;;1719:39;;;;;;;;;;;;1528:235;:::o;7:139:19:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:2;;;266:79;;:::i;:::-;228:2;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;218:263;;;;:::o;487:118::-;574:24;592:5;574:24;:::i;:::-;569:3;562:37;552:53;;:::o;611:366::-;753:3;774:67;838:2;833:3;774:67;:::i;:::-;767:74;;850:93;939:3;850:93;:::i;:::-;968:2;963:3;959:12;952:19;;757:220;;;:::o;983:366::-;1125:3;1146:67;1210:2;1205:3;1146:67;:::i;:::-;1139:74;;1222:93;1311:3;1222:93;:::i;:::-;1340:2;1335:3;1331:12;1324:19;;1129:220;;;:::o;1355:366::-;1497:3;1518:67;1582:2;1577:3;1518:67;:::i;:::-;1511:74;;1594:93;1683:3;1594:93;:::i;:::-;1712:2;1707:3;1703:12;1696:19;;1501:220;;;:::o;1727:222::-;1820:4;1858:2;1847:9;1843:18;1835:26;;1871:71;1939:1;1928:9;1924:17;1915:6;1871:71;:::i;:::-;1825:124;;;;:::o;1955:419::-;2121:4;2159:2;2148:9;2144:18;2136:26;;2208:9;2202:4;2198:20;2194:1;2183:9;2179:17;2172:47;2236:131;2362:4;2236:131;:::i;:::-;2228:139;;2126:248;;;:::o;2380:419::-;2546:4;2584:2;2573:9;2569:18;2561:26;;2633:9;2627:4;2623:20;2619:1;2608:9;2604:17;2597:47;2661:131;2787:4;2661:131;:::i;:::-;2653:139;;2551:248;;;:::o;2805:419::-;2971:4;3009:2;2998:9;2994:18;2986:26;;3058:9;3052:4;3048:20;3044:1;3033:9;3029:17;3022:47;3086:131;3212:4;3086:131;:::i;:::-;3078:139;;2976:248;;;:::o;3311:169::-;3395:11;3429:6;3424:3;3417:19;3469:4;3464:3;3460:14;3445:29;;3407:73;;;;:::o;3486:96::-;3523:7;3552:24;3570:5;3552:24;:::i;:::-;3541:35;;3531:51;;;:::o;3588:126::-;3625:7;3665:42;3658:5;3654:54;3643:65;;3633:81;;;:::o;3843:117::-;3952:1;3949;3942:12;3966:172;4106:24;4102:1;4094:6;4090:14;4083:48;4072:66;:::o;4144:172::-;4284:24;4280:1;4272:6;4268:14;4261:48;4250:66;:::o;4322:173::-;4462:25;4458:1;4450:6;4446:14;4439:49;4428:67;:::o;4501:122::-;4574:24;4592:5;4574:24;:::i;:::-;4567:5;4564:35;4554:2;;4613:1;4610;4603:12;4554:2;4544:79;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"326000","executionCost":"infinite","totalCost":"infinite"},"external":{"acceptOwnership()":"54518","owner()":"2522","transferOwnership(address)":"30679"}},"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":\"ConfirmedOwner\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {ConfirmedOwnerWithProposal} from \\\"./ConfirmedOwnerWithProposal.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\\n}\\n\",\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IOwnable} from \\\"../interfaces/IOwnable.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    // solhint-disable-next-line custom-errors\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /// @notice Allows an owner to begin transferring ownership to a new address.\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /// @notice Allows an ownership transfer to be completed by the recipient.\\n  function acceptOwnership() external override {\\n    // solhint-disable-next-line custom-errors\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /// @notice Get the current owner\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /// @notice validate, transfer ownership, and emit relevant events\\n  function _transferOwnership(address to) private {\\n    // solhint-disable-next-line custom-errors\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /// @notice validate access\\n  function _validateOwnership() internal view {\\n    // solhint-disable-next-line custom-errors\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /// @notice Reverts if called by anyone other than the contract owner.\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x927e505bb87a58ea04d1a9efe945f4bf4093e88b618b6fede3b9c68e1e63d989\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":390,"contract":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol:ConfirmedOwner","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":392,"contract":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol:ConfirmedOwner","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"owner()":{"notice":"Get the current owner"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address."}},"notice":"A contract with helpers for basic contract ownership.","version":1}}},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol":{"ConfirmedOwnerWithProposal":{"abi":[{"inputs":[{"internalType":"address","name":"newOwner","type":"address"},{"internalType":"address","name":"pendingOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"title":"The ConfirmedOwner contract","version":1},"evm":{"bytecode":{"functionDebugData":{"@_438":{"entryPoint":null,"id":438,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_522":{"entryPoint":301,"id":522,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":602,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":623,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack":{"entryPoint":687,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":722,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":757,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":789,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":821,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":838,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":856,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":888,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2":{"entryPoint":893,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":934,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":975,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3483:19","statements":[{"body":{"nodeType":"YulBlock","src":"70:80:19","statements":[{"nodeType":"YulAssignment","src":"80:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"89:5:19"},"nodeType":"YulFunctionCall","src":"89:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"80:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"138:5:19"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"111:26:19"},"nodeType":"YulFunctionCall","src":"111:33:19"},"nodeType":"YulExpressionStatement","src":"111:33:19"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"48:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"56:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:19","type":""}],"src":"7:143:19"},{"body":{"nodeType":"YulBlock","src":"250:413:19","statements":[{"body":{"nodeType":"YulBlock","src":"296:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"298:77:19"},"nodeType":"YulFunctionCall","src":"298:79:19"},"nodeType":"YulExpressionStatement","src":"298:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"271:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"280:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"267:3:19"},"nodeType":"YulFunctionCall","src":"267:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"292:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"263:3:19"},"nodeType":"YulFunctionCall","src":"263:32:19"},"nodeType":"YulIf","src":"260:2:19"},{"nodeType":"YulBlock","src":"389:128:19","statements":[{"nodeType":"YulVariableDeclaration","src":"404:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"418:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"408:6:19","type":""}]},{"nodeType":"YulAssignment","src":"433:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"479:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"490:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"475:3:19"},"nodeType":"YulFunctionCall","src":"475:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"499:7:19"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"443:31:19"},"nodeType":"YulFunctionCall","src":"443:64:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"433:6:19"}]}]},{"nodeType":"YulBlock","src":"527:129:19","statements":[{"nodeType":"YulVariableDeclaration","src":"542:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"556:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"546:6:19","type":""}]},{"nodeType":"YulAssignment","src":"572:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"618:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"629:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"614:3:19"},"nodeType":"YulFunctionCall","src":"614:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"638:7:19"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"582:31:19"},"nodeType":"YulFunctionCall","src":"582:64:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"572:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"212:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"223:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"235:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"243:6:19","type":""}],"src":"156:507:19"},{"body":{"nodeType":"YulBlock","src":"815:220:19","statements":[{"nodeType":"YulAssignment","src":"825:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"891:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"896:2:19","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"832:58:19"},"nodeType":"YulFunctionCall","src":"832:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"825:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"997:3:19"}],"functionName":{"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulIdentifier","src":"908:88:19"},"nodeType":"YulFunctionCall","src":"908:93:19"},"nodeType":"YulExpressionStatement","src":"908:93:19"},{"nodeType":"YulAssignment","src":"1010:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1021:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"1026:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1017:3:19"},"nodeType":"YulFunctionCall","src":"1017:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1010:3:19"}]}]},"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"803:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"811:3:19","type":""}],"src":"669:366:19"},{"body":{"nodeType":"YulBlock","src":"1187:220:19","statements":[{"nodeType":"YulAssignment","src":"1197:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"1268:2:19","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1204:58:19"},"nodeType":"YulFunctionCall","src":"1204:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1197:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1369:3:19"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"1280:88:19"},"nodeType":"YulFunctionCall","src":"1280:93:19"},"nodeType":"YulExpressionStatement","src":"1280:93:19"},{"nodeType":"YulAssignment","src":"1382:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1393:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"1398:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1389:3:19"},"nodeType":"YulFunctionCall","src":"1389:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1382:3:19"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1175:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1183:3:19","type":""}],"src":"1041:366:19"},{"body":{"nodeType":"YulBlock","src":"1584:248:19","statements":[{"nodeType":"YulAssignment","src":"1594:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1606:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1617:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1602:3:19"},"nodeType":"YulFunctionCall","src":"1602:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1594:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1641:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1652:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1637:3:19"},"nodeType":"YulFunctionCall","src":"1637:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1660:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"1666:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1656:3:19"},"nodeType":"YulFunctionCall","src":"1656:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1630:6:19"},"nodeType":"YulFunctionCall","src":"1630:47:19"},"nodeType":"YulExpressionStatement","src":"1630:47:19"},{"nodeType":"YulAssignment","src":"1686:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1820:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1694:124:19"},"nodeType":"YulFunctionCall","src":"1694:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1686:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1564:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1579:4:19","type":""}],"src":"1413:419:19"},{"body":{"nodeType":"YulBlock","src":"2009:248:19","statements":[{"nodeType":"YulAssignment","src":"2019:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2031:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2042:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2027:3:19"},"nodeType":"YulFunctionCall","src":"2027:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2019:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2066:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2077:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2062:3:19"},"nodeType":"YulFunctionCall","src":"2062:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2085:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"2091:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2081:3:19"},"nodeType":"YulFunctionCall","src":"2081:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2055:6:19"},"nodeType":"YulFunctionCall","src":"2055:47:19"},"nodeType":"YulExpressionStatement","src":"2055:47:19"},{"nodeType":"YulAssignment","src":"2111:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2245:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2119:124:19"},"nodeType":"YulFunctionCall","src":"2119:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2111:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1989:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2004:4:19","type":""}],"src":"1838:419:19"},{"body":{"nodeType":"YulBlock","src":"2303:35:19","statements":[{"nodeType":"YulAssignment","src":"2313:19:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2329:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2323:5:19"},"nodeType":"YulFunctionCall","src":"2323:9:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2313:6:19"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2296:6:19","type":""}],"src":"2263:75:19"},{"body":{"nodeType":"YulBlock","src":"2440:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2457:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"2462:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2450:6:19"},"nodeType":"YulFunctionCall","src":"2450:19:19"},"nodeType":"YulExpressionStatement","src":"2450:19:19"},{"nodeType":"YulAssignment","src":"2478:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2497:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"2502:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2493:3:19"},"nodeType":"YulFunctionCall","src":"2493:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2478:11:19"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2412:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"2417:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2428:11:19","type":""}],"src":"2344:169:19"},{"body":{"nodeType":"YulBlock","src":"2564:51:19","statements":[{"nodeType":"YulAssignment","src":"2574:35:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2603:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2585:17:19"},"nodeType":"YulFunctionCall","src":"2585:24:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2574:7:19"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2546:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2556:7:19","type":""}],"src":"2519:96:19"},{"body":{"nodeType":"YulBlock","src":"2666:81:19","statements":[{"nodeType":"YulAssignment","src":"2676:65:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2691:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"2698:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2687:3:19"},"nodeType":"YulFunctionCall","src":"2687:54:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2676:7:19"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2648:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2658:7:19","type":""}],"src":"2621:126:19"},{"body":{"nodeType":"YulBlock","src":"2842:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2859:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2862:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2852:6:19"},"nodeType":"YulFunctionCall","src":"2852:12:19"},"nodeType":"YulExpressionStatement","src":"2852:12:19"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"2753:117:19"},{"body":{"nodeType":"YulBlock","src":"2965:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2982:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2985:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2975:6:19"},"nodeType":"YulFunctionCall","src":"2975:12:19"},"nodeType":"YulExpressionStatement","src":"2975:12:19"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"2876:117:19"},{"body":{"nodeType":"YulBlock","src":"3105:68:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3127:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"3135:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3123:3:19"},"nodeType":"YulFunctionCall","src":"3123:14:19"},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","kind":"string","nodeType":"YulLiteral","src":"3139:26:19","type":"","value":"Cannot set owner to zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3116:6:19"},"nodeType":"YulFunctionCall","src":"3116:50:19"},"nodeType":"YulExpressionStatement","src":"3116:50:19"}]},"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3097:6:19","type":""}],"src":"2999:174:19"},{"body":{"nodeType":"YulBlock","src":"3285:67:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3307:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"3315:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3303:3:19"},"nodeType":"YulFunctionCall","src":"3303:14:19"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"3319:25:19","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3296:6:19"},"nodeType":"YulFunctionCall","src":"3296:49:19"},"nodeType":"YulExpressionStatement","src":"3296:49:19"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3277:6:19","type":""}],"src":"3179:173:19"},{"body":{"nodeType":"YulBlock","src":"3401:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"3458:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3467:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3470:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3460:6:19"},"nodeType":"YulFunctionCall","src":"3460:12:19"},"nodeType":"YulExpressionStatement","src":"3460:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3424:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3449:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3431:17:19"},"nodeType":"YulFunctionCall","src":"3431:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3421:2:19"},"nodeType":"YulFunctionCall","src":"3421:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3414:6:19"},"nodeType":"YulFunctionCall","src":"3414:43:19"},"nodeType":"YulIf","src":"3411:2:19"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3394:5:19","type":""}],"src":"3358:122:19"}]},"contents":"{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot set owner to zero\")\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610a53380380610a538339818101604052810190610032919061026f565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156100a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610099906102f5565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610126576101258161012d60201b60201c565b5b50506103e6565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561019c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019390610315565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600081519050610269816103cf565b92915050565b6000806040838503121561028657610285610378565b5b60006102948582860161025a565b92505060206102a58582860161025a565b9150509250929050565b60006102bc601883610335565b91506102c78261037d565b602082019050919050565b60006102df601783610335565b91506102ea826103a6565b602082019050919050565b6000602082019050818103600083015261030e816102af565b9050919050565b6000602082019050818103600083015261032e816102d2565b9050919050565b600082825260208201905092915050565b600061035182610358565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000600082015250565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b6103d881610346565b81146103e357600080fd5b50565b61065e806103f56000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861021f565b60405161006591906104d3565b60405180910390f35b6100886004803603810190610083919061042e565b610248565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610111906104ee565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61025061025c565b610259816102ec565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e19061050e565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561035b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103529061052e565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b60008135905061042881610611565b92915050565b60006020828403121561044457610443610591565b5b600061045284828501610419565b91505092915050565b6104648161055f565b82525050565b600061047760168361054e565b915061048282610596565b602082019050919050565b600061049a60168361054e565b91506104a5826105bf565b602082019050919050565b60006104bd60178361054e565b91506104c8826105e8565b602082019050919050565b60006020820190506104e8600083018461045b565b92915050565b600060208201905081810360008301526105078161046a565b9050919050565b600060208201905081810360008301526105278161048d565b9050919050565b60006020820190508181036000830152610547816104b0565b9050919050565b600082825260208201905092915050565b600061056a82610571565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b61061a8161055f565b811461062557600080fd5b5056fea2646970667358221220def6cf749080b6c9f4b540771e29b42de232eb69557eeea458122106d8ba603264736f6c63430008060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA53 CODESIZE SUB DUP1 PUSH2 0xA53 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x26F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP1 PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x126 JUMPI PUSH2 0x125 DUP2 PUSH2 0x12D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP PUSH2 0x3E6 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x19C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x193 SWAP1 PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x269 DUP2 PUSH2 0x3CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x286 JUMPI PUSH2 0x285 PUSH2 0x378 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x294 DUP6 DUP3 DUP7 ADD PUSH2 0x25A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A5 DUP6 DUP3 DUP7 ADD PUSH2 0x25A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BC PUSH1 0x18 DUP4 PUSH2 0x335 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C7 DUP3 PUSH2 0x37D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DF PUSH1 0x17 DUP4 PUSH2 0x335 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EA DUP3 PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30E DUP2 PUSH2 0x2AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32E DUP2 PUSH2 0x2D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x351 DUP3 PUSH2 0x358 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x3D8 DUP2 PUSH2 0x346 JUMP JUMPDEST DUP2 EQ PUSH2 0x3E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x65E DUP1 PUSH2 0x3F5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x42E JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111 SWAP1 PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x25C JUMP JUMPDEST PUSH2 0x259 DUP2 PUSH2 0x2EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP1 PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x35B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x352 SWAP1 PUSH2 0x52E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x428 DUP2 PUSH2 0x611 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x444 JUMPI PUSH2 0x443 PUSH2 0x591 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x452 DUP5 DUP3 DUP6 ADD PUSH2 0x419 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x464 DUP2 PUSH2 0x55F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x477 PUSH1 0x16 DUP4 PUSH2 0x54E JUMP JUMPDEST SWAP2 POP PUSH2 0x482 DUP3 PUSH2 0x596 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49A PUSH1 0x16 DUP4 PUSH2 0x54E JUMP JUMPDEST SWAP2 POP PUSH2 0x4A5 DUP3 PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BD PUSH1 0x17 DUP4 PUSH2 0x54E JUMP JUMPDEST SWAP2 POP PUSH2 0x4C8 DUP3 PUSH2 0x5E8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4E8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x45B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x507 DUP2 PUSH2 0x46A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x527 DUP2 PUSH2 0x48D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x547 DUP2 PUSH2 0x4B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56A DUP3 PUSH2 0x571 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x61A DUP2 PUSH2 0x55F JUMP JUMPDEST DUP2 EQ PUSH2 0x625 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xF6 0xCF PUSH21 0x9080B6C9F4B540771E29B42DE232EB69557EEEA458 SLT 0x21 MOD 0xD8 0xBA PUSH1 0x32 PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"216:1877:3:-:0;;;481:278;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;614:1;594:22;;:8;:22;;;;586:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;662:8;652:7;;:18;;;;;;;;;;;;;;;;;;704:1;680:26;;:12;:26;;;676:79;;716:32;735:12;716:18;;;:32;;:::i;:::-;676:79;481:278;;216:1877;;1528:235;1643:10;1637:16;;:2;:16;;;;1629:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1705:2;1688:14;;:19;;;;;;;;;;;;;;;;;;1755:2;1719:39;;1746:7;;;;;;;;;;1719:39;;;;;;;;;;;;1528:235;:::o;7:143:19:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:507::-;235:6;243;292:2;280:9;271:7;267:23;263:32;260:2;;;298:79;;:::i;:::-;260:2;418:1;443:64;499:7;490:6;479:9;475:22;443:64;:::i;:::-;433:74;;389:128;556:2;582:64;638:7;629:6;618:9;614:22;582:64;:::i;:::-;572:74;;527:129;250:413;;;;;:::o;669:366::-;811:3;832:67;896:2;891:3;832:67;:::i;:::-;825:74;;908:93;997:3;908:93;:::i;:::-;1026:2;1021:3;1017:12;1010:19;;815:220;;;:::o;1041:366::-;1183:3;1204:67;1268:2;1263:3;1204:67;:::i;:::-;1197:74;;1280:93;1369:3;1280:93;:::i;:::-;1398:2;1393:3;1389:12;1382:19;;1187:220;;;:::o;1413:419::-;1579:4;1617:2;1606:9;1602:18;1594:26;;1666:9;1660:4;1656:20;1652:1;1641:9;1637:17;1630:47;1694:131;1820:4;1694:131;:::i;:::-;1686:139;;1584:248;;;:::o;1838:419::-;2004:4;2042:2;2031:9;2027:18;2019:26;;2091:9;2085:4;2081:20;2077:1;2066:9;2062:17;2055:47;2119:131;2245:4;2119:131;:::i;:::-;2111:139;;2009:248;;;:::o;2344:169::-;2428:11;2462:6;2457:3;2450:19;2502:4;2497:3;2493:14;2478:29;;2440:73;;;;:::o;2519:96::-;2556:7;2585:24;2603:5;2585:24;:::i;:::-;2574:35;;2564:51;;;:::o;2621:126::-;2658:7;2698:42;2691:5;2687:54;2676:65;;2666:81;;;:::o;2876:117::-;2985:1;2982;2975:12;2999:174;3139:26;3135:1;3127:6;3123:14;3116:50;3105:68;:::o;3179:173::-;3319:25;3315:1;3307:6;3303:14;3296:49;3285:67;:::o;3358:122::-;3431:24;3449:5;3431:24;:::i;:::-;3424:5;3421:35;3411:2;;3470:1;3467;3460:12;3411:2;3401:79;:::o;216:1877:3:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_transferOwnership_522":{"entryPoint":748,"id":522,"parameterSlots":1,"returnSlots":0},"@_validateOwnership_535":{"entryPoint":604,"id":535,"parameterSlots":0,"returnSlots":0},"@acceptOwnership_488":{"entryPoint":138,"id":488,"parameterSlots":0,"returnSlots":0},"@owner_498":{"entryPoint":543,"id":498,"parameterSlots":0,"returnSlots":1},"@transferOwnership_452":{"entryPoint":584,"id":452,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":1049,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1070,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1115,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack":{"entryPoint":1130,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack":{"entryPoint":1165,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":1200,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1235,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1262,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1294,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1326,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1358,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1375,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1393,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1425,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c":{"entryPoint":1430,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3":{"entryPoint":1471,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":1512,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1553,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4626:19","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:19","statements":[{"nodeType":"YulAssignment","src":"69:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:19"},"nodeType":"YulFunctionCall","src":"78:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:19"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:19"},"nodeType":"YulFunctionCall","src":"107:33:19"},"nodeType":"YulExpressionStatement","src":"107:33:19"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:19","type":""}],"src":"7:139:19"},{"body":{"nodeType":"YulBlock","src":"218:263:19","statements":[{"body":{"nodeType":"YulBlock","src":"264:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"266:77:19"},"nodeType":"YulFunctionCall","src":"266:79:19"},"nodeType":"YulExpressionStatement","src":"266:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"239:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"248:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:19"},"nodeType":"YulFunctionCall","src":"235:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"260:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"231:3:19"},"nodeType":"YulFunctionCall","src":"231:32:19"},"nodeType":"YulIf","src":"228:2:19"},{"nodeType":"YulBlock","src":"357:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"372:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"386:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"376:6:19","type":""}]},{"nodeType":"YulAssignment","src":"401:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"436:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"447:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"432:3:19"},"nodeType":"YulFunctionCall","src":"432:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"456:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"411:20:19"},"nodeType":"YulFunctionCall","src":"411:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"401:6:19"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"188:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"199:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"211:6:19","type":""}],"src":"152:329:19"},{"body":{"nodeType":"YulBlock","src":"552:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"569:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"592:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"574:17:19"},"nodeType":"YulFunctionCall","src":"574:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"562:6:19"},"nodeType":"YulFunctionCall","src":"562:37:19"},"nodeType":"YulExpressionStatement","src":"562:37:19"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"540:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"547:3:19","type":""}],"src":"487:118:19"},{"body":{"nodeType":"YulBlock","src":"757:220:19","statements":[{"nodeType":"YulAssignment","src":"767:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"833:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"838:2:19","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"774:58:19"},"nodeType":"YulFunctionCall","src":"774:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"767:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"939:3:19"}],"functionName":{"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulIdentifier","src":"850:88:19"},"nodeType":"YulFunctionCall","src":"850:93:19"},"nodeType":"YulExpressionStatement","src":"850:93:19"},{"nodeType":"YulAssignment","src":"952:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"963:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"968:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"959:3:19"},"nodeType":"YulFunctionCall","src":"959:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"952:3:19"}]}]},"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"745:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"753:3:19","type":""}],"src":"611:366:19"},{"body":{"nodeType":"YulBlock","src":"1129:220:19","statements":[{"nodeType":"YulAssignment","src":"1139:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1205:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"1210:2:19","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1146:58:19"},"nodeType":"YulFunctionCall","src":"1146:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1139:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1311:3:19"}],"functionName":{"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulIdentifier","src":"1222:88:19"},"nodeType":"YulFunctionCall","src":"1222:93:19"},"nodeType":"YulExpressionStatement","src":"1222:93:19"},{"nodeType":"YulAssignment","src":"1324:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1335:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"1340:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1331:3:19"},"nodeType":"YulFunctionCall","src":"1331:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1324:3:19"}]}]},"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1117:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1125:3:19","type":""}],"src":"983:366:19"},{"body":{"nodeType":"YulBlock","src":"1501:220:19","statements":[{"nodeType":"YulAssignment","src":"1511:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1577:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"1582:2:19","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1518:58:19"},"nodeType":"YulFunctionCall","src":"1518:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1511:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1683:3:19"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"1594:88:19"},"nodeType":"YulFunctionCall","src":"1594:93:19"},"nodeType":"YulExpressionStatement","src":"1594:93:19"},{"nodeType":"YulAssignment","src":"1696:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1707:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"1712:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1703:3:19"},"nodeType":"YulFunctionCall","src":"1703:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1696:3:19"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1489:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1497:3:19","type":""}],"src":"1355:366:19"},{"body":{"nodeType":"YulBlock","src":"1825:124:19","statements":[{"nodeType":"YulAssignment","src":"1835:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1847:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1858:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1843:3:19"},"nodeType":"YulFunctionCall","src":"1843:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1835:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1915:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1928:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1939:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1924:3:19"},"nodeType":"YulFunctionCall","src":"1924:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1871:43:19"},"nodeType":"YulFunctionCall","src":"1871:71:19"},"nodeType":"YulExpressionStatement","src":"1871:71:19"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1797:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1809:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1820:4:19","type":""}],"src":"1727:222:19"},{"body":{"nodeType":"YulBlock","src":"2126:248:19","statements":[{"nodeType":"YulAssignment","src":"2136:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2148:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2159:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2144:3:19"},"nodeType":"YulFunctionCall","src":"2144:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2136:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2183:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2194:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2179:3:19"},"nodeType":"YulFunctionCall","src":"2179:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2202:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"2208:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2198:3:19"},"nodeType":"YulFunctionCall","src":"2198:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2172:6:19"},"nodeType":"YulFunctionCall","src":"2172:47:19"},"nodeType":"YulExpressionStatement","src":"2172:47:19"},{"nodeType":"YulAssignment","src":"2228:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2362:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2236:124:19"},"nodeType":"YulFunctionCall","src":"2236:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2228:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2106:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2121:4:19","type":""}],"src":"1955:419:19"},{"body":{"nodeType":"YulBlock","src":"2551:248:19","statements":[{"nodeType":"YulAssignment","src":"2561:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2573:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2584:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2569:3:19"},"nodeType":"YulFunctionCall","src":"2569:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2561:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2608:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2619:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2604:3:19"},"nodeType":"YulFunctionCall","src":"2604:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2627:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"2633:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2623:3:19"},"nodeType":"YulFunctionCall","src":"2623:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2597:6:19"},"nodeType":"YulFunctionCall","src":"2597:47:19"},"nodeType":"YulExpressionStatement","src":"2597:47:19"},{"nodeType":"YulAssignment","src":"2653:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2787:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2661:124:19"},"nodeType":"YulFunctionCall","src":"2661:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2653:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2531:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2546:4:19","type":""}],"src":"2380:419:19"},{"body":{"nodeType":"YulBlock","src":"2976:248:19","statements":[{"nodeType":"YulAssignment","src":"2986:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2998:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3009:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2994:3:19"},"nodeType":"YulFunctionCall","src":"2994:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2986:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3033:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3044:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3029:3:19"},"nodeType":"YulFunctionCall","src":"3029:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3052:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"3058:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3048:3:19"},"nodeType":"YulFunctionCall","src":"3048:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3022:6:19"},"nodeType":"YulFunctionCall","src":"3022:47:19"},"nodeType":"YulExpressionStatement","src":"3022:47:19"},{"nodeType":"YulAssignment","src":"3078:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3212:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3086:124:19"},"nodeType":"YulFunctionCall","src":"3086:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3078:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2956:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2971:4:19","type":""}],"src":"2805:419:19"},{"body":{"nodeType":"YulBlock","src":"3270:35:19","statements":[{"nodeType":"YulAssignment","src":"3280:19:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3296:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3290:5:19"},"nodeType":"YulFunctionCall","src":"3290:9:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3280:6:19"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3263:6:19","type":""}],"src":"3230:75:19"},{"body":{"nodeType":"YulBlock","src":"3407:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3424:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"3429:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3417:6:19"},"nodeType":"YulFunctionCall","src":"3417:19:19"},"nodeType":"YulExpressionStatement","src":"3417:19:19"},{"nodeType":"YulAssignment","src":"3445:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3464:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"3469:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3460:3:19"},"nodeType":"YulFunctionCall","src":"3460:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3445:11:19"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3379:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"3384:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3395:11:19","type":""}],"src":"3311:169:19"},{"body":{"nodeType":"YulBlock","src":"3531:51:19","statements":[{"nodeType":"YulAssignment","src":"3541:35:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3570:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3552:17:19"},"nodeType":"YulFunctionCall","src":"3552:24:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3541:7:19"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3513:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3523:7:19","type":""}],"src":"3486:96:19"},{"body":{"nodeType":"YulBlock","src":"3633:81:19","statements":[{"nodeType":"YulAssignment","src":"3643:65:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3658:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"3665:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3654:3:19"},"nodeType":"YulFunctionCall","src":"3654:54:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3643:7:19"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3615:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3625:7:19","type":""}],"src":"3588:126:19"},{"body":{"nodeType":"YulBlock","src":"3809:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3826:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3829:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3819:6:19"},"nodeType":"YulFunctionCall","src":"3819:12:19"},"nodeType":"YulExpressionStatement","src":"3819:12:19"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"3720:117:19"},{"body":{"nodeType":"YulBlock","src":"3932:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3949:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3952:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3942:6:19"},"nodeType":"YulFunctionCall","src":"3942:12:19"},"nodeType":"YulExpressionStatement","src":"3942:12:19"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"3843:117:19"},{"body":{"nodeType":"YulBlock","src":"4072:66:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4094:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"4102:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4090:3:19"},"nodeType":"YulFunctionCall","src":"4090:14:19"},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","kind":"string","nodeType":"YulLiteral","src":"4106:24:19","type":"","value":"Must be proposed owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4083:6:19"},"nodeType":"YulFunctionCall","src":"4083:48:19"},"nodeType":"YulExpressionStatement","src":"4083:48:19"}]},"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4064:6:19","type":""}],"src":"3966:172:19"},{"body":{"nodeType":"YulBlock","src":"4250:66:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4272:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"4280:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4268:3:19"},"nodeType":"YulFunctionCall","src":"4268:14:19"},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","kind":"string","nodeType":"YulLiteral","src":"4284:24:19","type":"","value":"Only callable by owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4261:6:19"},"nodeType":"YulFunctionCall","src":"4261:48:19"},"nodeType":"YulExpressionStatement","src":"4261:48:19"}]},"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4242:6:19","type":""}],"src":"4144:172:19"},{"body":{"nodeType":"YulBlock","src":"4428:67:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4450:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"4458:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4446:3:19"},"nodeType":"YulFunctionCall","src":"4446:14:19"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"4462:25:19","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4439:6:19"},"nodeType":"YulFunctionCall","src":"4439:49:19"},"nodeType":"YulExpressionStatement","src":"4439:49:19"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4420:6:19","type":""}],"src":"4322:173:19"},{"body":{"nodeType":"YulBlock","src":"4544:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"4601:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4610:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4613:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4603:6:19"},"nodeType":"YulFunctionCall","src":"4603:12:19"},"nodeType":"YulExpressionStatement","src":"4603:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4567:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4592:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4574:17:19"},"nodeType":"YulFunctionCall","src":"4574:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4564:2:19"},"nodeType":"YulFunctionCall","src":"4564:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4557:6:19"},"nodeType":"YulFunctionCall","src":"4557:43:19"},"nodeType":"YulIf","src":"4554:2:19"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4537:5:19","type":""}],"src":"4501:122:19"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must be proposed owner\")\n\n    }\n\n    function store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only callable by owner\")\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861021f565b60405161006591906104d3565b60405180910390f35b6100886004803603810190610083919061042e565b610248565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610111906104ee565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61025061025c565b610259816102ec565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e19061050e565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561035b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103529061052e565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b60008135905061042881610611565b92915050565b60006020828403121561044457610443610591565b5b600061045284828501610419565b91505092915050565b6104648161055f565b82525050565b600061047760168361054e565b915061048282610596565b602082019050919050565b600061049a60168361054e565b91506104a5826105bf565b602082019050919050565b60006104bd60178361054e565b91506104c8826105e8565b602082019050919050565b60006020820190506104e8600083018461045b565b92915050565b600060208201905081810360008301526105078161046a565b9050919050565b600060208201905081810360008301526105278161048d565b9050919050565b60006020820190508181036000830152610547816104b0565b9050919050565b600082825260208201905092915050565b600061056a82610571565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b61061a8161055f565b811461062557600080fd5b5056fea2646970667358221220def6cf749080b6c9f4b540771e29b42de232eb69557eeea458122106d8ba603264736f6c63430008060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x42E JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111 SWAP1 PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x25C JUMP JUMPDEST PUSH2 0x259 DUP2 PUSH2 0x2EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP1 PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x35B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x352 SWAP1 PUSH2 0x52E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x428 DUP2 PUSH2 0x611 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x444 JUMPI PUSH2 0x443 PUSH2 0x591 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x452 DUP5 DUP3 DUP6 ADD PUSH2 0x419 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x464 DUP2 PUSH2 0x55F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x477 PUSH1 0x16 DUP4 PUSH2 0x54E JUMP JUMPDEST SWAP2 POP PUSH2 0x482 DUP3 PUSH2 0x596 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49A PUSH1 0x16 DUP4 PUSH2 0x54E JUMP JUMPDEST SWAP2 POP PUSH2 0x4A5 DUP3 PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BD PUSH1 0x17 DUP4 PUSH2 0x54E JUMP JUMPDEST SWAP2 POP PUSH2 0x4C8 DUP3 PUSH2 0x5E8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4E8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x45B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x507 DUP2 PUSH2 0x46A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x527 DUP2 PUSH2 0x48D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x547 DUP2 PUSH2 0x4B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56A DUP3 PUSH2 0x571 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x61A DUP2 PUSH2 0x55F JUMP JUMPDEST DUP2 EQ PUSH2 0x625 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xF6 0xCF PUSH21 0x9080B6C9F4B540771E29B42DE232EB69557EEEA458 SLT 0x21 MOD 0xD8 0xBA PUSH1 0x32 PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"216:1877:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1022:312;;;:::i;:::-;;1374:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;843:98;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1022:312;1142:14;;;;;;;;;;;1128:28;;:10;:28;;;1120:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1190:16;1209:7;;;;;;;;;;;1190:26;;1232:10;1222:7;;:20;;;;;;;;;;;;;;;;;;1273:1;1248:14;;:27;;;;;;;;;;;;;;;;;;1318:10;1287:42;;1308:8;1287:42;;;;;;;;;;;;1067:267;1022:312::o;1374:81::-;1421:7;1443;;;;;;;;;;;1436:14;;1374:81;:::o;843:98::-;2059:20;:18;:20::i;:::-;914:22:::1;933:2;914:18;:22::i;:::-;843:98:::0;:::o;1797:158::-;1916:7;;;;;;;;;;1902:21;;:10;:21;;;1894:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1797:158::o;1528:235::-;1643:10;1637:16;;:2;:16;;;;1629:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1705:2;1688:14;;:19;;;;;;;;;;;;;;;;;;1755:2;1719:39;;1746:7;;;;;;;;;;1719:39;;;;;;;;;;;;1528:235;:::o;7:139:19:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:2;;;266:79;;:::i;:::-;228:2;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;218:263;;;;:::o;487:118::-;574:24;592:5;574:24;:::i;:::-;569:3;562:37;552:53;;:::o;611:366::-;753:3;774:67;838:2;833:3;774:67;:::i;:::-;767:74;;850:93;939:3;850:93;:::i;:::-;968:2;963:3;959:12;952:19;;757:220;;;:::o;983:366::-;1125:3;1146:67;1210:2;1205:3;1146:67;:::i;:::-;1139:74;;1222:93;1311:3;1222:93;:::i;:::-;1340:2;1335:3;1331:12;1324:19;;1129:220;;;:::o;1355:366::-;1497:3;1518:67;1582:2;1577:3;1518:67;:::i;:::-;1511:74;;1594:93;1683:3;1594:93;:::i;:::-;1712:2;1707:3;1703:12;1696:19;;1501:220;;;:::o;1727:222::-;1820:4;1858:2;1847:9;1843:18;1835:26;;1871:71;1939:1;1928:9;1924:17;1915:6;1871:71;:::i;:::-;1825:124;;;;:::o;1955:419::-;2121:4;2159:2;2148:9;2144:18;2136:26;;2208:9;2202:4;2198:20;2194:1;2183:9;2179:17;2172:47;2236:131;2362:4;2236:131;:::i;:::-;2228:139;;2126:248;;;:::o;2380:419::-;2546:4;2584:2;2573:9;2569:18;2561:26;;2633:9;2627:4;2623:20;2619:1;2608:9;2604:17;2597:47;2661:131;2787:4;2661:131;:::i;:::-;2653:139;;2551:248;;;:::o;2805:419::-;2971:4;3009:2;2998:9;2994:18;2986:26;;3058:9;3052:4;3048:20;3044:1;3033:9;3029:17;3022:47;3086:131;3212:4;3086:131;:::i;:::-;3078:139;;2976:248;;;:::o;3311:169::-;3395:11;3429:6;3424:3;3417:19;3469:4;3464:3;3460:14;3445:29;;3407:73;;;;:::o;3486:96::-;3523:7;3552:24;3570:5;3552:24;:::i;:::-;3541:35;;3531:51;;;:::o;3588:126::-;3625:7;3665:42;3658:5;3654:54;3643:65;;3633:81;;;:::o;3843:117::-;3952:1;3949;3942:12;3966:172;4106:24;4102:1;4094:6;4090:14;4083:48;4072:66;:::o;4144:172::-;4284:24;4280:1;4272:6;4268:14;4261:48;4250:66;:::o;4322:173::-;4462:25;4458:1;4450:6;4446:14;4439:49;4428:67;:::o;4501:122::-;4574:24;4592:5;4574:24;:::i;:::-;4567:5;4564:35;4554:2;;4613:1;4610;4603:12;4554:2;4544:79;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"326000","executionCost":"infinite","totalCost":"infinite"},"external":{"acceptOwnership()":"54518","owner()":"2522","transferOwnership(address)":"30679"},"internal":{"_transferOwnership(address)":"infinite","_validateOwnership()":"infinite"}},"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":\"ConfirmedOwnerWithProposal\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IOwnable} from \\\"../interfaces/IOwnable.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    // solhint-disable-next-line custom-errors\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /// @notice Allows an owner to begin transferring ownership to a new address.\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /// @notice Allows an ownership transfer to be completed by the recipient.\\n  function acceptOwnership() external override {\\n    // solhint-disable-next-line custom-errors\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /// @notice Get the current owner\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /// @notice validate, transfer ownership, and emit relevant events\\n  function _transferOwnership(address to) private {\\n    // solhint-disable-next-line custom-errors\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /// @notice validate access\\n  function _validateOwnership() internal view {\\n    // solhint-disable-next-line custom-errors\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /// @notice Reverts if called by anyone other than the contract owner.\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x927e505bb87a58ea04d1a9efe945f4bf4093e88b618b6fede3b9c68e1e63d989\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":390,"contract":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":392,"contract":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"owner()":{"notice":"Get the current owner"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address."}},"notice":"A contract with helpers for basic contract ownership.","version":1}}},"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol":{"AggregatorV3Interface":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getRoundData(uint80)":"9a6fc8f5","latestRoundData()":"feaf968c","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol":{"IERC677Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onTokenTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onTokenTransfer(address,uint256,bytes)":"a4c0ed36"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol\":\"IERC677Receiver\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\ninterface IERC677Receiver {\\n  function onTokenTransfer(address sender, uint256 amount, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x5f9ee31598e2250815033c2f4e1e7e747f917815378938505063df1d4ae603ec\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol":{"IOwnable":{"abi":[{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":\"IOwnable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol":{"LinkTokenInterface":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"remaining","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"decimalPlaces","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"decreaseApproval","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"increaseApproval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"tokenName","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"tokenSymbol","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"totalTokensIssued","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseApproval(address,uint256)":"66188463","increaseApproval(address,uint256)":"d73dd623","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"decimalPlaces\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokensIssued\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":\"LinkTokenInterface\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool success);\\n\\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xac02fbc0c7d194e525a71f524d1f7c472df73e19c2b527d7b529badaeaf0ec51\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbGasInfo.sol":{"ArbGasInfo":{"abi":[{"inputs":[],"name":"getAmortizedCostCapBips","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentTxL1GasFees","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getGasAccountingParams","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getGasBacklog","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getGasBacklogTolerance","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getL1BaseFeeEstimate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getL1BaseFeeEstimateInertia","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getL1FeesAvailable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getL1GasPriceEstimate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getL1PricingEquilibrationUnits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getL1PricingFundsDueForRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getL1PricingSurplus","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getL1PricingUnitsSinceUpdate","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getL1RewardRate","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getL1RewardRecipient","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLastL1PricingSurplus","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLastL1PricingUpdateTime","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMinimumGasPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPerBatchGasCharge","outputs":[{"internalType":"int64","name":"","type":"int64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPricesInArbGas","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"aggregator","type":"address"}],"name":"getPricesInArbGasWithAggregator","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPricesInWei","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"aggregator","type":"address"}],"name":"getPricesInWeiWithAggregator","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPricingInertia","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"getGasAccountingParams()":{"returns":{"_0":"(speedLimitPerSecond, gasPoolMax, maxTxGasLimit)"}},"getPricesInArbGas()":{"returns":{"_0":"(per L2 tx, per L1 calldata byte, per storage allocation)"}},"getPricesInArbGasWithAggregator(address)":{"returns":{"_0":"(per L2 tx, per L1 calldata byte, per storage allocation)"}},"getPricesInWei()":{"returns":{"_0":"return gas prices in wei        (            per L2 tx,            per L1 calldata byte            per storage allocation,            per ArbGas base,            per ArbGas congestion,            per ArbGas total        )"}},"getPricesInWeiWithAggregator(address)":{"returns":{"_0":"return gas prices in wei        (            per L2 tx,            per L1 calldata byte            per storage allocation,            per ArbGas base,            per ArbGas congestion,            per ArbGas total        )"}}},"title":"Provides insight into the cost of using the chain.","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getAmortizedCostCapBips()":"7a7d6beb","getCurrentTxL1GasFees()":"c6f7de0e","getGasAccountingParams()":"612af178","getGasBacklog()":"1d5b5c20","getGasBacklogTolerance()":"25754f91","getL1BaseFeeEstimate()":"f5d6ded7","getL1BaseFeeEstimateInertia()":"29eb31ee","getL1FeesAvailable()":"5b39d23c","getL1GasPriceEstimate()":"055f362f","getL1PricingEquilibrationUnits()":"ad26ce90","getL1PricingFundsDueForRewards()":"963d6002","getL1PricingSurplus()":"520acdd7","getL1PricingUnitsSinceUpdate()":"eff01306","getL1RewardRate()":"8a5b1d28","getL1RewardRecipient()":"9e6d7e31","getLastL1PricingSurplus()":"2987d027","getLastL1PricingUpdateTime()":"138b47b4","getMinimumGasPrice()":"f918379a","getPerBatchGasCharge()":"6ecca45a","getPricesInArbGas()":"02199f34","getPricesInArbGasWithAggregator(address)":"7a1ea732","getPricesInWei()":"41b247a8","getPricesInWeiWithAggregator(address)":"ba9c916e","getPricingInertia()":"3dfb45b9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getAmortizedCostCapBips\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentTxL1GasFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGasAccountingParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGasBacklog\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGasBacklogTolerance\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getL1BaseFeeEstimate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getL1BaseFeeEstimateInertia\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getL1FeesAvailable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getL1GasPriceEstimate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getL1PricingEquilibrationUnits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getL1PricingFundsDueForRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getL1PricingSurplus\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getL1PricingUnitsSinceUpdate\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getL1RewardRate\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getL1RewardRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastL1PricingSurplus\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastL1PricingUpdateTime\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinimumGasPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPerBatchGasCharge\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPricesInArbGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"getPricesInArbGasWithAggregator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPricesInWei\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"getPricesInWeiWithAggregator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPricingInertia\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getGasAccountingParams()\":{\"returns\":{\"_0\":\"(speedLimitPerSecond, gasPoolMax, maxTxGasLimit)\"}},\"getPricesInArbGas()\":{\"returns\":{\"_0\":\"(per L2 tx, per L1 calldata byte, per storage allocation)\"}},\"getPricesInArbGasWithAggregator(address)\":{\"returns\":{\"_0\":\"(per L2 tx, per L1 calldata byte, per storage allocation)\"}},\"getPricesInWei()\":{\"returns\":{\"_0\":\"return gas prices in wei        (            per L2 tx,            per L1 calldata byte            per storage allocation,            per ArbGas base,            per ArbGas congestion,            per ArbGas total        )\"}},\"getPricesInWeiWithAggregator(address)\":{\"returns\":{\"_0\":\"return gas prices in wei        (            per L2 tx,            per L1 calldata byte            per storage allocation,            per ArbGas base,            per ArbGas congestion,            per ArbGas total        )\"}}},\"title\":\"Provides insight into the cost of using the chain.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getAmortizedCostCapBips()\":{\"notice\":\"Returns the cost amortization cap in basis points\"},\"getCurrentTxL1GasFees()\":{\"notice\":\"Get L1 gas fees paid by the current transaction\"},\"getGasAccountingParams()\":{\"notice\":\"Get the gas accounting parameters. `gasPoolMax` is always zero, as the exponential pricing model has no such notion.\"},\"getGasBacklog()\":{\"notice\":\"Get the backlogged amount of gas burnt in excess of the speed limit\"},\"getGasBacklogTolerance()\":{\"notice\":\"Get the forgivable amount of backlogged gas ArbOS will ignore when raising the basefee\"},\"getL1BaseFeeEstimate()\":{\"notice\":\"Get ArbOS's estimate of the L1 basefee in wei\"},\"getL1BaseFeeEstimateInertia()\":{\"notice\":\"Get how slowly ArbOS updates its estimate of the L1 basefee\"},\"getL1FeesAvailable()\":{\"notice\":\"Returns the available funds from L1 fees\"},\"getL1GasPriceEstimate()\":{\"notice\":\"Deprecated -- Same as getL1BaseFeeEstimate()\"},\"getL1PricingEquilibrationUnits()\":{\"notice\":\"Returns the equilibration units parameter for L1 price adjustment algorithm Available in ArbOS version 20\"},\"getL1PricingFundsDueForRewards()\":{\"notice\":\"Returns the amount of L1 calldata payments due for rewards (per the L1 reward rate) Available in ArbOS version 20\"},\"getL1PricingSurplus()\":{\"notice\":\"Returns the surplus of funds for L1 batch posting payments (may be negative).\"},\"getL1PricingUnitsSinceUpdate()\":{\"notice\":\"Returns the amount of L1 calldata posted since the last update. Available in ArbOS version 20\"},\"getL1RewardRate()\":{\"notice\":\"Get the L1 pricer reward rate, in wei per unit Available in ArbOS version 11\"},\"getL1RewardRecipient()\":{\"notice\":\"Get the L1 pricer reward recipient Available in ArbOS version 11\"},\"getLastL1PricingSurplus()\":{\"notice\":\"Returns the L1 pricing surplus as of the last update (may be negative). Available in ArbOS version 20\"},\"getLastL1PricingUpdateTime()\":{\"notice\":\"Returns the last time the L1 calldata pricer was updated. Available in ArbOS version 20\"},\"getMinimumGasPrice()\":{\"notice\":\"Get the minimum gas price needed for a tx to succeed\"},\"getPerBatchGasCharge()\":{\"notice\":\"Returns the base charge (in L1 gas) attributed to each data batch in the calldata pricer\"},\"getPricesInArbGas()\":{\"notice\":\"Get prices in ArbGas. Assumes the callers preferred validator, or the default if caller doesn't have a preferred one.\"},\"getPricesInArbGasWithAggregator(address)\":{\"notice\":\"Get prices in ArbGas for the supplied aggregator\"},\"getPricesInWei()\":{\"notice\":\"Get gas prices. Uses the caller's preferred aggregator, or the default if the caller doesn't have a preferred one.\"},\"getPricesInWeiWithAggregator(address)\":{\"notice\":\"Get gas prices for a provided aggregator\"},\"getPricingInertia()\":{\"notice\":\"Get how slowly ArbOS updates the L2 basefee in response to backlogged gas\"}},\"notice\":\"These methods have been adjusted to account for Nitro's heavy use of calldata compression. Of note to end-users, we no longer make a distinction between non-zero and zero-valued calldata bytes. Precompiled contract that exists in every Arbitrum chain at 0x000000000000000000000000000000000000006c.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbGasInfo.sol\":\"ArbGasInfo\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbGasInfo.sol\":{\"content\":\"// Copyright 2021-2022, Offchain Labs, Inc.\\n// For license information, see https://github.com/OffchainLabs/nitro-contracts/blob/main/LICENSE\\n// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.4.21 <0.9.0;\\n\\n/// @title Provides insight into the cost of using the chain.\\n/// @notice These methods have been adjusted to account for Nitro's heavy use of calldata compression.\\n/// Of note to end-users, we no longer make a distinction between non-zero and zero-valued calldata bytes.\\n/// Precompiled contract that exists in every Arbitrum chain at 0x000000000000000000000000000000000000006c.\\ninterface ArbGasInfo {\\n    /// @notice Get gas prices for a provided aggregator\\n    /// @return return gas prices in wei\\n    ///        (\\n    ///            per L2 tx,\\n    ///            per L1 calldata byte\\n    ///            per storage allocation,\\n    ///            per ArbGas base,\\n    ///            per ArbGas congestion,\\n    ///            per ArbGas total\\n    ///        )\\n    function getPricesInWeiWithAggregator(address aggregator)\\n    external\\n    view\\n    returns (\\n        uint256,\\n        uint256,\\n        uint256,\\n        uint256,\\n        uint256,\\n        uint256\\n    );\\n\\n    /// @notice Get gas prices. Uses the caller's preferred aggregator, or the default if the caller doesn't have a preferred one.\\n    /// @return return gas prices in wei\\n    ///        (\\n    ///            per L2 tx,\\n    ///            per L1 calldata byte\\n    ///            per storage allocation,\\n    ///            per ArbGas base,\\n    ///            per ArbGas congestion,\\n    ///            per ArbGas total\\n    ///        )\\n    function getPricesInWei()\\n    external\\n    view\\n    returns (\\n        uint256,\\n        uint256,\\n        uint256,\\n        uint256,\\n        uint256,\\n        uint256\\n    );\\n\\n    /// @notice Get prices in ArbGas for the supplied aggregator\\n    /// @return (per L2 tx, per L1 calldata byte, per storage allocation)\\n    function getPricesInArbGasWithAggregator(address aggregator)\\n    external\\n    view\\n    returns (\\n        uint256,\\n        uint256,\\n        uint256\\n    );\\n\\n    /// @notice Get prices in ArbGas. Assumes the callers preferred validator, or the default if caller doesn't have a preferred one.\\n    /// @return (per L2 tx, per L1 calldata byte, per storage allocation)\\n    function getPricesInArbGas()\\n    external\\n    view\\n    returns (\\n        uint256,\\n        uint256,\\n        uint256\\n    );\\n\\n    /// @notice Get the gas accounting parameters. `gasPoolMax` is always zero, as the exponential pricing model has no such notion.\\n    /// @return (speedLimitPerSecond, gasPoolMax, maxTxGasLimit)\\n    function getGasAccountingParams()\\n    external\\n    view\\n    returns (\\n        uint256,\\n        uint256,\\n        uint256\\n    );\\n\\n    /// @notice Get the minimum gas price needed for a tx to succeed\\n    function getMinimumGasPrice() external view returns (uint256);\\n\\n    /// @notice Get ArbOS's estimate of the L1 basefee in wei\\n    function getL1BaseFeeEstimate() external view returns (uint256);\\n\\n    /// @notice Get how slowly ArbOS updates its estimate of the L1 basefee\\n    function getL1BaseFeeEstimateInertia() external view returns (uint64);\\n\\n    /// @notice Get the L1 pricer reward rate, in wei per unit\\n    /// Available in ArbOS version 11\\n    function getL1RewardRate() external view returns (uint64);\\n\\n    /// @notice Get the L1 pricer reward recipient\\n    /// Available in ArbOS version 11\\n    function getL1RewardRecipient() external view returns (address);\\n\\n    /// @notice Deprecated -- Same as getL1BaseFeeEstimate()\\n    function getL1GasPriceEstimate() external view returns (uint256);\\n\\n    /// @notice Get L1 gas fees paid by the current transaction\\n    function getCurrentTxL1GasFees() external view returns (uint256);\\n\\n    /// @notice Get the backlogged amount of gas burnt in excess of the speed limit\\n    function getGasBacklog() external view returns (uint64);\\n\\n    /// @notice Get how slowly ArbOS updates the L2 basefee in response to backlogged gas\\n    function getPricingInertia() external view returns (uint64);\\n\\n    /// @notice Get the forgivable amount of backlogged gas ArbOS will ignore when raising the basefee\\n    function getGasBacklogTolerance() external view returns (uint64);\\n\\n    /// @notice Returns the surplus of funds for L1 batch posting payments (may be negative).\\n    function getL1PricingSurplus() external view returns (int256);\\n\\n    /// @notice Returns the base charge (in L1 gas) attributed to each data batch in the calldata pricer\\n    function getPerBatchGasCharge() external view returns (int64);\\n\\n    /// @notice Returns the cost amortization cap in basis points\\n    function getAmortizedCostCapBips() external view returns (uint64);\\n\\n    /// @notice Returns the available funds from L1 fees\\n    function getL1FeesAvailable() external view returns (uint256);\\n\\n    /// @notice Returns the equilibration units parameter for L1 price adjustment algorithm\\n    /// Available in ArbOS version 20\\n    function getL1PricingEquilibrationUnits() external view returns (uint256);\\n\\n    /// @notice Returns the last time the L1 calldata pricer was updated.\\n    /// Available in ArbOS version 20\\n    function getLastL1PricingUpdateTime() external view returns (uint64);\\n\\n    /// @notice Returns the amount of L1 calldata payments due for rewards (per the L1 reward rate)\\n    /// Available in ArbOS version 20\\n    function getL1PricingFundsDueForRewards() external view returns (uint256);\\n\\n    /// @notice Returns the amount of L1 calldata posted since the last update.\\n    /// Available in ArbOS version 20\\n    function getL1PricingUnitsSinceUpdate() external view returns (uint64);\\n\\n    /// @notice Returns the L1 pricing surplus as of the last update (may be negative).\\n    /// Available in ArbOS version 20\\n    function getLastL1PricingSurplus() external view returns (int256);\\n}\",\"keccak256\":\"0x7c51d93494afd02b5336e88d8738341758340f2befe698b4458a916905691bd6\",\"license\":\"BUSL-1.1\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"getAmortizedCostCapBips()":{"notice":"Returns the cost amortization cap in basis points"},"getCurrentTxL1GasFees()":{"notice":"Get L1 gas fees paid by the current transaction"},"getGasAccountingParams()":{"notice":"Get the gas accounting parameters. `gasPoolMax` is always zero, as the exponential pricing model has no such notion."},"getGasBacklog()":{"notice":"Get the backlogged amount of gas burnt in excess of the speed limit"},"getGasBacklogTolerance()":{"notice":"Get the forgivable amount of backlogged gas ArbOS will ignore when raising the basefee"},"getL1BaseFeeEstimate()":{"notice":"Get ArbOS's estimate of the L1 basefee in wei"},"getL1BaseFeeEstimateInertia()":{"notice":"Get how slowly ArbOS updates its estimate of the L1 basefee"},"getL1FeesAvailable()":{"notice":"Returns the available funds from L1 fees"},"getL1GasPriceEstimate()":{"notice":"Deprecated -- Same as getL1BaseFeeEstimate()"},"getL1PricingEquilibrationUnits()":{"notice":"Returns the equilibration units parameter for L1 price adjustment algorithm Available in ArbOS version 20"},"getL1PricingFundsDueForRewards()":{"notice":"Returns the amount of L1 calldata payments due for rewards (per the L1 reward rate) Available in ArbOS version 20"},"getL1PricingSurplus()":{"notice":"Returns the surplus of funds for L1 batch posting payments (may be negative)."},"getL1PricingUnitsSinceUpdate()":{"notice":"Returns the amount of L1 calldata posted since the last update. Available in ArbOS version 20"},"getL1RewardRate()":{"notice":"Get the L1 pricer reward rate, in wei per unit Available in ArbOS version 11"},"getL1RewardRecipient()":{"notice":"Get the L1 pricer reward recipient Available in ArbOS version 11"},"getLastL1PricingSurplus()":{"notice":"Returns the L1 pricing surplus as of the last update (may be negative). Available in ArbOS version 20"},"getLastL1PricingUpdateTime()":{"notice":"Returns the last time the L1 calldata pricer was updated. Available in ArbOS version 20"},"getMinimumGasPrice()":{"notice":"Get the minimum gas price needed for a tx to succeed"},"getPerBatchGasCharge()":{"notice":"Returns the base charge (in L1 gas) attributed to each data batch in the calldata pricer"},"getPricesInArbGas()":{"notice":"Get prices in ArbGas. Assumes the callers preferred validator, or the default if caller doesn't have a preferred one."},"getPricesInArbGasWithAggregator(address)":{"notice":"Get prices in ArbGas for the supplied aggregator"},"getPricesInWei()":{"notice":"Get gas prices. Uses the caller's preferred aggregator, or the default if the caller doesn't have a preferred one."},"getPricesInWeiWithAggregator(address)":{"notice":"Get gas prices for a provided aggregator"},"getPricingInertia()":{"notice":"Get how slowly ArbOS updates the L2 basefee in response to backlogged gas"}},"notice":"These methods have been adjusted to account for Nitro's heavy use of calldata compression. Of note to end-users, we no longer make a distinction between non-zero and zero-valued calldata bytes. Precompiled contract that exists in every Arbitrum chain at 0x000000000000000000000000000000000000006c.","version":1}}},"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbSys.sol":{"ArbSys":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"caller","type":"address"},{"indexed":true,"internalType":"address","name":"destination","type":"address"},{"indexed":true,"internalType":"uint256","name":"uniqueId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"batchNumber","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"indexInBatch","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"arbBlockNum","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"ethBlockNum","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"callvalue","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"L2ToL1Transaction","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"caller","type":"address"},{"indexed":true,"internalType":"address","name":"destination","type":"address"},{"indexed":true,"internalType":"uint256","name":"hash","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"position","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"arbBlockNum","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"ethBlockNum","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"callvalue","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"L2ToL1Tx","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"reserved","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"hash","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"position","type":"uint256"}],"name":"SendMerkleUpdate","type":"event"},{"inputs":[{"internalType":"uint256","name":"arbBlockNum","type":"uint256"}],"name":"arbBlockHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"arbBlockNumber","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"arbChainID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"arbOSVersion","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getStorageGasAvailable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isTopLevelCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"unused","type":"address"}],"name":"mapL1SenderContractAddressToL2Alias","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"myCallersAddressWithoutAliasing","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"sendMerkleTreeState","outputs":[{"internalType":"uint256","name":"size","type":"uint256"},{"internalType":"bytes32","name":"root","type":"bytes32"},{"internalType":"bytes32[]","name":"partials","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"destination","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"sendTxToL1","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"wasMyCallersAddressAliased","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"destination","type":"address"}],"name":"withdrawEth","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"}],"devdoc":{"events":{"L2ToL1Transaction(address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bytes)":{"details":"DEPRECATED in favour of the new L2ToL1Tx event above after the nitro upgrade"},"L2ToL1Tx(address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes)":{"params":{"position":"= (level << 192) + leaf = (0 << 192) + leaf = leaf"}},"SendMerkleUpdate(uint256,bytes32,uint256)":{"params":{"hash":"the merkle hash","position":"= (level << 192) + leaf","reserved":"an index meant only to align the 4th index with L2ToL1Transaction's 4th event"}}},"kind":"dev","methods":{"arbBlockHash(uint256)":{"returns":{"_0":"block hash"}},"arbBlockNumber()":{"returns":{"_0":"block number as int"}},"arbChainID()":{"returns":{"_0":"Chain identifier as int"}},"arbOSVersion()":{"returns":{"_0":"version number as int"}},"getStorageGasAvailable()":{"returns":{"_0":"uint 0"}},"isTopLevelCall()":{"details":"this call has been deprecated and may be removed in a future release","returns":{"_0":"true if current execution frame is not a call by another L2 contract"}},"mapL1SenderContractAddressToL2Alias(address,address)":{"params":{"sender":"sender address","unused":"argument no longer used"},"returns":{"_0":"aliased sender address"}},"myCallersAddressWithoutAliasing()":{"returns":{"_0":"address of the caller's caller, without applying L1 contract address aliasing"}},"sendMerkleTreeState()":{"returns":{"partials":"hashes of partial subtrees in the send history tree","root":"root hash of the send history","size":"number of sends in the history"}},"sendTxToL1(address,bytes)":{"details":"it is not possible to execute on the L1 any L2-to-L1 transaction which contains data to a contract address without any code (as enforced by the Bridge contract).","params":{"data":"(optional) calldata for L1 contract call","destination":"recipient address on L1"},"returns":{"_0":"a unique identifier for this L2-to-L1 transaction."}},"wasMyCallersAddressAliased()":{"returns":{"_0":"true iff the caller's address is an alias for an L1 contract address"}},"withdrawEth(address)":{"params":{"destination":"recipient address on L1"},"returns":{"_0":"unique identifier for this L2-to-L1 transaction."}}},"title":"System level functionality","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"arbBlockHash(uint256)":"2b407a82","arbBlockNumber()":"a3b1b31d","arbChainID()":"d127f54a","arbOSVersion()":"051038f2","getStorageGasAvailable()":"a94597ff","isTopLevelCall()":"08bd624c","mapL1SenderContractAddressToL2Alias(address,address)":"4dbbd506","myCallersAddressWithoutAliasing()":"d74523b3","sendMerkleTreeState()":"7aeecd2a","sendTxToL1(address,bytes)":"928c169a","wasMyCallersAddressAliased()":"175a260b","withdrawEth(address)":"25e16063"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"uniqueId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"batchNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"indexInBatch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"arbBlockNum\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethBlockNum\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"callvalue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"L2ToL1Transaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"hash\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"position\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"arbBlockNum\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethBlockNum\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"callvalue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"L2ToL1Tx\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"reserved\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"position\",\"type\":\"uint256\"}],\"name\":\"SendMerkleUpdate\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"arbBlockNum\",\"type\":\"uint256\"}],\"name\":\"arbBlockHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"arbBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"arbChainID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"arbOSVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStorageGasAvailable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isTopLevelCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"unused\",\"type\":\"address\"}],\"name\":\"mapL1SenderContractAddressToL2Alias\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myCallersAddressWithoutAliasing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sendMerkleTreeState\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"partials\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"sendTxToL1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wasMyCallersAddressAliased\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"withdrawEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"L2ToL1Transaction(address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bytes)\":{\"details\":\"DEPRECATED in favour of the new L2ToL1Tx event above after the nitro upgrade\"},\"L2ToL1Tx(address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes)\":{\"params\":{\"position\":\"= (level << 192) + leaf = (0 << 192) + leaf = leaf\"}},\"SendMerkleUpdate(uint256,bytes32,uint256)\":{\"params\":{\"hash\":\"the merkle hash\",\"position\":\"= (level << 192) + leaf\",\"reserved\":\"an index meant only to align the 4th index with L2ToL1Transaction's 4th event\"}}},\"kind\":\"dev\",\"methods\":{\"arbBlockHash(uint256)\":{\"returns\":{\"_0\":\"block hash\"}},\"arbBlockNumber()\":{\"returns\":{\"_0\":\"block number as int\"}},\"arbChainID()\":{\"returns\":{\"_0\":\"Chain identifier as int\"}},\"arbOSVersion()\":{\"returns\":{\"_0\":\"version number as int\"}},\"getStorageGasAvailable()\":{\"returns\":{\"_0\":\"uint 0\"}},\"isTopLevelCall()\":{\"details\":\"this call has been deprecated and may be removed in a future release\",\"returns\":{\"_0\":\"true if current execution frame is not a call by another L2 contract\"}},\"mapL1SenderContractAddressToL2Alias(address,address)\":{\"params\":{\"sender\":\"sender address\",\"unused\":\"argument no longer used\"},\"returns\":{\"_0\":\"aliased sender address\"}},\"myCallersAddressWithoutAliasing()\":{\"returns\":{\"_0\":\"address of the caller's caller, without applying L1 contract address aliasing\"}},\"sendMerkleTreeState()\":{\"returns\":{\"partials\":\"hashes of partial subtrees in the send history tree\",\"root\":\"root hash of the send history\",\"size\":\"number of sends in the history\"}},\"sendTxToL1(address,bytes)\":{\"details\":\"it is not possible to execute on the L1 any L2-to-L1 transaction which contains data to a contract address without any code (as enforced by the Bridge contract).\",\"params\":{\"data\":\"(optional) calldata for L1 contract call\",\"destination\":\"recipient address on L1\"},\"returns\":{\"_0\":\"a unique identifier for this L2-to-L1 transaction.\"}},\"wasMyCallersAddressAliased()\":{\"returns\":{\"_0\":\"true iff the caller's address is an alias for an L1 contract address\"}},\"withdrawEth(address)\":{\"params\":{\"destination\":\"recipient address on L1\"},\"returns\":{\"_0\":\"unique identifier for this L2-to-L1 transaction.\"}}},\"title\":\"System level functionality\",\"version\":1},\"userdoc\":{\"events\":{\"L2ToL1Tx(address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes)\":{\"notice\":\"creates a send txn from L2 to L1\"},\"SendMerkleUpdate(uint256,bytes32,uint256)\":{\"notice\":\"logs a merkle branch for proof synthesis\"}},\"kind\":\"user\",\"methods\":{\"arbBlockHash(uint256)\":{\"notice\":\"Get Arbitrum block hash (reverts unless currentBlockNum-256 <= arbBlockNum < currentBlockNum)\"},\"arbBlockNumber()\":{\"notice\":\"Get Arbitrum block number (distinct from L1 block number; Arbitrum genesis block has block number 0)\"},\"arbChainID()\":{\"notice\":\"Gets the rollup's unique chain identifier\"},\"arbOSVersion()\":{\"notice\":\"Get internal version number identifying an ArbOS build\"},\"getStorageGasAvailable()\":{\"notice\":\"Returns 0 since Nitro has no concept of storage gas\"},\"isTopLevelCall()\":{\"notice\":\"(deprecated) check if current call is top level (meaning it was triggered by an EoA or a L1 contract)\"},\"mapL1SenderContractAddressToL2Alias(address,address)\":{\"notice\":\"map L1 sender contract address to its L2 alias\"},\"myCallersAddressWithoutAliasing()\":{\"notice\":\"return the address of the caller (of this caller of this), without applying L1 contract address aliasing\"},\"sendMerkleTreeState()\":{\"notice\":\"Get send Merkle tree state\"},\"sendTxToL1(address,bytes)\":{\"notice\":\"Send a transaction to L1\"},\"wasMyCallersAddressAliased()\":{\"notice\":\"check if the caller (of this caller of this) is an aliased L1 contract address\"},\"withdrawEth(address)\":{\"notice\":\"Send given amount of Eth to dest from sender. This is a convenience function, which is equivalent to calling sendTxToL1 with empty data.\"}},\"notice\":\"For use by contracts to interact with core L2-specific functionality. Precompiled contract that exists in every Arbitrum chain at address(100), 0x0000000000000000000000000000000000000064.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbSys.sol\":\"ArbSys\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbSys.sol\":{\"content\":\"// Copyright 2021-2022, Offchain Labs, Inc.\\n// For license information, see https://github.com/nitro/blob/master/LICENSE\\n// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.4.21 <0.9.0;\\n\\n/**\\n * @title System level functionality\\n * @notice For use by contracts to interact with core L2-specific functionality.\\n * Precompiled contract that exists in every Arbitrum chain at address(100), 0x0000000000000000000000000000000000000064.\\n */\\ninterface ArbSys {\\n    /**\\n     * @notice Get Arbitrum block number (distinct from L1 block number; Arbitrum genesis block has block number 0)\\n     * @return block number as int\\n     */\\n    function arbBlockNumber() external view returns (uint256);\\n\\n    /**\\n     * @notice Get Arbitrum block hash (reverts unless currentBlockNum-256 <= arbBlockNum < currentBlockNum)\\n     * @return block hash\\n     */\\n    function arbBlockHash(uint256 arbBlockNum) external view returns (bytes32);\\n\\n    /**\\n     * @notice Gets the rollup's unique chain identifier\\n     * @return Chain identifier as int\\n     */\\n    function arbChainID() external view returns (uint256);\\n\\n    /**\\n     * @notice Get internal version number identifying an ArbOS build\\n     * @return version number as int\\n     */\\n    function arbOSVersion() external view returns (uint256);\\n\\n    /**\\n     * @notice Returns 0 since Nitro has no concept of storage gas\\n     * @return uint 0\\n     */\\n    function getStorageGasAvailable() external view returns (uint256);\\n\\n    /**\\n     * @notice (deprecated) check if current call is top level (meaning it was triggered by an EoA or a L1 contract)\\n     * @dev this call has been deprecated and may be removed in a future release\\n     * @return true if current execution frame is not a call by another L2 contract\\n     */\\n    function isTopLevelCall() external view returns (bool);\\n\\n    /**\\n     * @notice map L1 sender contract address to its L2 alias\\n     * @param sender sender address\\n     * @param unused argument no longer used\\n     * @return aliased sender address\\n     */\\n    function mapL1SenderContractAddressToL2Alias(address sender, address unused)\\n        external\\n        pure\\n        returns (address);\\n\\n    /**\\n     * @notice check if the caller (of this caller of this) is an aliased L1 contract address\\n     * @return true iff the caller's address is an alias for an L1 contract address\\n     */\\n    function wasMyCallersAddressAliased() external view returns (bool);\\n\\n    /**\\n     * @notice return the address of the caller (of this caller of this), without applying L1 contract address aliasing\\n     * @return address of the caller's caller, without applying L1 contract address aliasing\\n     */\\n    function myCallersAddressWithoutAliasing() external view returns (address);\\n\\n    /**\\n     * @notice Send given amount of Eth to dest from sender.\\n     * This is a convenience function, which is equivalent to calling sendTxToL1 with empty data.\\n     * @param destination recipient address on L1\\n     * @return unique identifier for this L2-to-L1 transaction.\\n     */\\n    function withdrawEth(address destination)\\n        external\\n        payable\\n        returns (uint256);\\n\\n    /**\\n     * @notice Send a transaction to L1\\n     * @dev it is not possible to execute on the L1 any L2-to-L1 transaction which contains data\\n     * to a contract address without any code (as enforced by the Bridge contract).\\n     * @param destination recipient address on L1\\n     * @param data (optional) calldata for L1 contract call\\n     * @return a unique identifier for this L2-to-L1 transaction.\\n     */\\n    function sendTxToL1(address destination, bytes calldata data)\\n        external\\n        payable\\n        returns (uint256);\\n\\n    /**\\n     * @notice Get send Merkle tree state\\n     * @return size number of sends in the history\\n     * @return root root hash of the send history\\n     * @return partials hashes of partial subtrees in the send history tree\\n     */\\n    function sendMerkleTreeState()\\n        external\\n        view\\n        returns (\\n            uint256 size,\\n            bytes32 root,\\n            bytes32[] memory partials\\n        );\\n\\n    /**\\n     * @notice creates a send txn from L2 to L1\\n     * @param position = (level << 192) + leaf = (0 << 192) + leaf = leaf\\n     */\\n    event L2ToL1Tx(\\n        address caller,\\n        address indexed destination,\\n        uint256 indexed hash,\\n        uint256 indexed position,\\n        uint256 arbBlockNum,\\n        uint256 ethBlockNum,\\n        uint256 timestamp,\\n        uint256 callvalue,\\n        bytes data\\n    );\\n\\n    /// @dev DEPRECATED in favour of the new L2ToL1Tx event above after the nitro upgrade\\n    event L2ToL1Transaction(\\n        address caller,\\n        address indexed destination,\\n        uint256 indexed uniqueId,\\n        uint256 indexed batchNumber,\\n        uint256 indexInBatch,\\n        uint256 arbBlockNum,\\n        uint256 ethBlockNum,\\n        uint256 timestamp,\\n        uint256 callvalue,\\n        bytes data\\n    );\\n\\n    /**\\n     * @notice logs a merkle branch for proof synthesis\\n     * @param reserved an index meant only to align the 4th index with L2ToL1Transaction's 4th event\\n     * @param hash the merkle hash\\n     * @param position = (level << 192) + leaf\\n     */\\n    event SendMerkleUpdate(\\n        uint256 indexed reserved,\\n        bytes32 indexed hash,\\n        uint256 indexed position\\n    );\\n}\\n\",\"keccak256\":\"0xa8461b373712cb0f4950ef9cad1d12fb38442da76cd57ff916baa7920f7b5077\",\"license\":\"BUSL-1.1\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"L2ToL1Tx(address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes)":{"notice":"creates a send txn from L2 to L1"},"SendMerkleUpdate(uint256,bytes32,uint256)":{"notice":"logs a merkle branch for proof synthesis"}},"kind":"user","methods":{"arbBlockHash(uint256)":{"notice":"Get Arbitrum block hash (reverts unless currentBlockNum-256 <= arbBlockNum < currentBlockNum)"},"arbBlockNumber()":{"notice":"Get Arbitrum block number (distinct from L1 block number; Arbitrum genesis block has block number 0)"},"arbChainID()":{"notice":"Gets the rollup's unique chain identifier"},"arbOSVersion()":{"notice":"Get internal version number identifying an ArbOS build"},"getStorageGasAvailable()":{"notice":"Returns 0 since Nitro has no concept of storage gas"},"isTopLevelCall()":{"notice":"(deprecated) check if current call is top level (meaning it was triggered by an EoA or a L1 contract)"},"mapL1SenderContractAddressToL2Alias(address,address)":{"notice":"map L1 sender contract address to its L2 alias"},"myCallersAddressWithoutAliasing()":{"notice":"return the address of the caller (of this caller of this), without applying L1 contract address aliasing"},"sendMerkleTreeState()":{"notice":"Get send Merkle tree state"},"sendTxToL1(address,bytes)":{"notice":"Send a transaction to L1"},"wasMyCallersAddressAliased()":{"notice":"check if the caller (of this caller of this) is an aliased L1 contract address"},"withdrawEth(address)":{"notice":"Send given amount of Eth to dest from sender. This is a convenience function, which is equivalent to calling sendTxToL1 with empty data."}},"notice":"For use by contracts to interact with core L2-specific functionality. Precompiled contract that exists in every Arbitrum chain at address(100), 0x0000000000000000000000000000000000000064.","version":1}}},"@chainlink/contracts/src/v0.8/vendor/@eth-optimism/contracts/v0.8.6/contracts/L2/predeploys/OVM_GasPriceOracle.sol":{"OVM_GasPriceOracle":{"abi":[{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"","type":"uint256"}],"name":"DecimalsUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"","type":"uint256"}],"name":"GasPriceUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"","type":"uint256"}],"name":"L1BaseFeeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"","type":"uint256"}],"name":"OverheadUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"","type":"uint256"}],"name":"ScalarUpdated","type":"event"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"gasPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"getL1Fee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"getL1GasUsed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"l1BaseFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"overhead","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"scalar","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_decimals","type":"uint256"}],"name":"setDecimals","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_gasPrice","type":"uint256"}],"name":"setGasPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_baseFee","type":"uint256"}],"name":"setL1BaseFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_overhead","type":"uint256"}],"name":"setOverhead","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_scalar","type":"uint256"}],"name":"setScalar","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"This contract exposes the current l2 gas price, a measure of how congested the network currently is. This measure is used by the Sequencer to determine what fee to charge for transactions. When the system is more congested, the l2 gas price will increase and fees will also increase as a result. All public variables are set while generating the initial L2 state. The constructor doesn't run in practice as the L2 state generation script uses the deployed bytecode instead of running the initcode.","kind":"dev","methods":{"constructor":{"params":{"_owner":"Address that will initially own this contract."}},"getL1Fee(bytes)":{"params":{"_data":"Unsigned RLP encoded tx, 6 elements"},"returns":{"_0":"L1 fee that should be paid for the tx"}},"getL1GasUsed(bytes)":{"params":{"_data":"Unsigned RLP encoded tx, 6 elements"},"returns":{"_0":"Amount of L1 gas used for a transaction"}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setDecimals(uint256)":{"params":{"_decimals":"New decimals"}},"setGasPrice(uint256)":{"params":{"_gasPrice":"New l2 gas price."}},"setL1BaseFee(uint256)":{"params":{"_baseFee":"New l1 base fee"}},"setOverhead(uint256)":{"params":{"_overhead":"New overhead"}},"setScalar(uint256)":{"params":{"_scalar":"New scalar"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"OVM_GasPriceOracle","version":1},"evm":{"bytecode":{"functionDebugData":{"@_1073":{"entryPoint":null,"id":1073,"parameterSlots":1,"returnSlots":0},"@_4906":{"entryPoint":null,"id":4906,"parameterSlots":0,"returnSlots":0},"@_checkOwner_4937":{"entryPoint":466,"id":4937,"parameterSlots":0,"returnSlots":0},"@_msgSender_5007":{"entryPoint":111,"id":5007,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_4994":{"entryPoint":119,"id":4994,"parameterSlots":1,"returnSlots":0},"@owner_4923":{"entryPoint":611,"id":4923,"parameterSlots":0,"returnSlots":1},"@transferOwnership_4974":{"entryPoint":315,"id":4974,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":652,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":675,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":725,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":764,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":803,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":837,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":871,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":888,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":908,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":940,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":945,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":1024,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1065,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3387:19","statements":[{"body":{"nodeType":"YulBlock","src":"70:80:19","statements":[{"nodeType":"YulAssignment","src":"80:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"89:5:19"},"nodeType":"YulFunctionCall","src":"89:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"80:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"138:5:19"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"111:26:19"},"nodeType":"YulFunctionCall","src":"111:33:19"},"nodeType":"YulExpressionStatement","src":"111:33:19"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"48:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"56:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:19","type":""}],"src":"7:143:19"},{"body":{"nodeType":"YulBlock","src":"233:274:19","statements":[{"body":{"nodeType":"YulBlock","src":"279:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"281:77:19"},"nodeType":"YulFunctionCall","src":"281:79:19"},"nodeType":"YulExpressionStatement","src":"281:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"254:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"263:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"250:3:19"},"nodeType":"YulFunctionCall","src":"250:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"275:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"246:3:19"},"nodeType":"YulFunctionCall","src":"246:32:19"},"nodeType":"YulIf","src":"243:2:19"},{"nodeType":"YulBlock","src":"372:128:19","statements":[{"nodeType":"YulVariableDeclaration","src":"387:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"401:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"391:6:19","type":""}]},{"nodeType":"YulAssignment","src":"416:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"462:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"473:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"458:3:19"},"nodeType":"YulFunctionCall","src":"458:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"482:7:19"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"426:31:19"},"nodeType":"YulFunctionCall","src":"426:64:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"416:6:19"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"203:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"214:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"226:6:19","type":""}],"src":"156:351:19"},{"body":{"nodeType":"YulBlock","src":"659:220:19","statements":[{"nodeType":"YulAssignment","src":"669:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"735:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"740:2:19","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"676:58:19"},"nodeType":"YulFunctionCall","src":"676:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"669:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"841:3:19"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"752:88:19"},"nodeType":"YulFunctionCall","src":"752:93:19"},"nodeType":"YulExpressionStatement","src":"752:93:19"},{"nodeType":"YulAssignment","src":"854:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"865:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"870:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"861:3:19"},"nodeType":"YulFunctionCall","src":"861:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"854:3:19"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"647:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"655:3:19","type":""}],"src":"513:366:19"},{"body":{"nodeType":"YulBlock","src":"1031:220:19","statements":[{"nodeType":"YulAssignment","src":"1041:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1107:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"1112:2:19","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1048:58:19"},"nodeType":"YulFunctionCall","src":"1048:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1041:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1213:3:19"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"1124:88:19"},"nodeType":"YulFunctionCall","src":"1124:93:19"},"nodeType":"YulExpressionStatement","src":"1124:93:19"},{"nodeType":"YulAssignment","src":"1226:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1237:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"1242:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1233:3:19"},"nodeType":"YulFunctionCall","src":"1233:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1226:3:19"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1019:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1027:3:19","type":""}],"src":"885:366:19"},{"body":{"nodeType":"YulBlock","src":"1428:248:19","statements":[{"nodeType":"YulAssignment","src":"1438:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1450:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1461:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1446:3:19"},"nodeType":"YulFunctionCall","src":"1446:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1438:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1485:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1496:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1481:3:19"},"nodeType":"YulFunctionCall","src":"1481:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1504:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"1510:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1500:3:19"},"nodeType":"YulFunctionCall","src":"1500:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1474:6:19"},"nodeType":"YulFunctionCall","src":"1474:47:19"},"nodeType":"YulExpressionStatement","src":"1474:47:19"},{"nodeType":"YulAssignment","src":"1530:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1664:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1538:124:19"},"nodeType":"YulFunctionCall","src":"1538:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1530:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1408:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1423:4:19","type":""}],"src":"1257:419:19"},{"body":{"nodeType":"YulBlock","src":"1853:248:19","statements":[{"nodeType":"YulAssignment","src":"1863:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1875:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1886:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1871:3:19"},"nodeType":"YulFunctionCall","src":"1871:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1863:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1910:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1921:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1906:3:19"},"nodeType":"YulFunctionCall","src":"1906:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1929:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"1935:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1925:3:19"},"nodeType":"YulFunctionCall","src":"1925:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1899:6:19"},"nodeType":"YulFunctionCall","src":"1899:47:19"},"nodeType":"YulExpressionStatement","src":"1899:47:19"},{"nodeType":"YulAssignment","src":"1955:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2089:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1963:124:19"},"nodeType":"YulFunctionCall","src":"1963:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1955:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1833:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1848:4:19","type":""}],"src":"1682:419:19"},{"body":{"nodeType":"YulBlock","src":"2147:35:19","statements":[{"nodeType":"YulAssignment","src":"2157:19:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2173:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2167:5:19"},"nodeType":"YulFunctionCall","src":"2167:9:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2157:6:19"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2140:6:19","type":""}],"src":"2107:75:19"},{"body":{"nodeType":"YulBlock","src":"2284:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2301:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"2306:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2294:6:19"},"nodeType":"YulFunctionCall","src":"2294:19:19"},"nodeType":"YulExpressionStatement","src":"2294:19:19"},{"nodeType":"YulAssignment","src":"2322:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2341:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"2346:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2337:3:19"},"nodeType":"YulFunctionCall","src":"2337:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2322:11:19"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2256:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"2261:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2272:11:19","type":""}],"src":"2188:169:19"},{"body":{"nodeType":"YulBlock","src":"2408:51:19","statements":[{"nodeType":"YulAssignment","src":"2418:35:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2447:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2429:17:19"},"nodeType":"YulFunctionCall","src":"2429:24:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2418:7:19"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2390:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2400:7:19","type":""}],"src":"2363:96:19"},{"body":{"nodeType":"YulBlock","src":"2510:81:19","statements":[{"nodeType":"YulAssignment","src":"2520:65:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2535:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"2542:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2531:3:19"},"nodeType":"YulFunctionCall","src":"2531:54:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2520:7:19"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2492:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2502:7:19","type":""}],"src":"2465:126:19"},{"body":{"nodeType":"YulBlock","src":"2686:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2703:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2706:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2696:6:19"},"nodeType":"YulFunctionCall","src":"2696:12:19"},"nodeType":"YulExpressionStatement","src":"2696:12:19"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"2597:117:19"},{"body":{"nodeType":"YulBlock","src":"2809:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2826:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2829:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2819:6:19"},"nodeType":"YulFunctionCall","src":"2819:12:19"},"nodeType":"YulExpressionStatement","src":"2819:12:19"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"2720:117:19"},{"body":{"nodeType":"YulBlock","src":"2949:119:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2971:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"2979:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2967:3:19"},"nodeType":"YulFunctionCall","src":"2967:14:19"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"2983:34:19","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2960:6:19"},"nodeType":"YulFunctionCall","src":"2960:58:19"},"nodeType":"YulExpressionStatement","src":"2960:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3039:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"3047:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3035:3:19"},"nodeType":"YulFunctionCall","src":"3035:15:19"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"3052:8:19","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3028:6:19"},"nodeType":"YulFunctionCall","src":"3028:33:19"},"nodeType":"YulExpressionStatement","src":"3028:33:19"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2941:6:19","type":""}],"src":"2843:225:19"},{"body":{"nodeType":"YulBlock","src":"3180:76:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3202:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"3210:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3198:3:19"},"nodeType":"YulFunctionCall","src":"3198:14:19"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"3214:34:19","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3191:6:19"},"nodeType":"YulFunctionCall","src":"3191:58:19"},"nodeType":"YulExpressionStatement","src":"3191:58:19"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3172:6:19","type":""}],"src":"3074:182:19"},{"body":{"nodeType":"YulBlock","src":"3305:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"3362:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3371:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3374:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3364:6:19"},"nodeType":"YulFunctionCall","src":"3364:12:19"},"nodeType":"YulExpressionStatement","src":"3364:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3328:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3353:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3335:17:19"},"nodeType":"YulFunctionCall","src":"3335:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3325:2:19"},"nodeType":"YulFunctionCall","src":"3325:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3318:6:19"},"nodeType":"YulFunctionCall","src":"3318:43:19"},"nodeType":"YulIf","src":"3315:2:19"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3298:5:19","type":""}],"src":"3262:122:19"}]},"contents":"{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162001329380380620013298339818101604052810190620000379190620002a3565b620000576200004b6200006f60201b60201c565b6200007760201b60201c565b62000068816200013b60201b60201c565b5062000443565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6200014b620001d260201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620001be576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001b59062000323565b60405180910390fd5b620001cf816200007760201b60201c565b50565b620001e26200006f60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620002086200026360201b60201c565b73ffffffffffffffffffffffffffffffffffffffff161462000261576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002589062000345565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000815190506200029d8162000429565b92915050565b600060208284031215620002bc57620002bb620003ac565b5b6000620002cc848285016200028c565b91505092915050565b6000620002e460268362000367565b9150620002f182620003b1565b604082019050919050565b60006200030b60208362000367565b9150620003188262000400565b602082019050919050565b600060208201905081810360008301526200033e81620002d5565b9050919050565b600060208201905081810360008301526200036081620002fc565b9050919050565b600082825260208201905092915050565b600062000385826200038c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b620004348162000378565b81146200044057600080fd5b50565b610ed680620004536000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638c8885c811610097578063de26c4a111610066578063de26c4a114610238578063f2fde38b14610268578063f45e65d814610284578063fe173b97146102a2576100f5565b80638c8885c8146101c65780638da5cb5b146101e2578063bede39b514610200578063bf1fe4201461021c576100f5565b806349948e0e116100d357806349948e0e14610152578063519b4bd31461018257806370465597146101a0578063715018a6146101bc576100f5565b80630c18c162146100fa578063313ce567146101185780633577afc514610136575b600080fd5b6101026102c0565b60405161010f9190610973565b60405180910390f35b6101206102c6565b60405161012d9190610973565b60405180910390f35b610150600480360381019061014b9190610887565b6102cc565b005b61016c6004803603810190610167919061083e565b610315565b6040516101799190610973565b60405180910390f35b61018a610377565b6040516101979190610973565b60405180910390f35b6101ba60048036038101906101b59190610887565b61037d565b005b6101c46103c6565b005b6101e060048036038101906101db9190610887565b6103da565b005b6101ea610423565b6040516101f79190610918565b60405180910390f35b61021a60048036038101906102159190610887565b61044c565b005b61023660048036038101906102319190610887565b610495565b005b610252600480360381019061024d919061083e565b6104de565b60405161025f9190610973565b60405180910390f35b610282600480360381019061027d9190610811565b61059d565b005b61028c610621565b6040516102999190610973565b60405180910390f35b6102aa610627565b6040516102b79190610973565b60405180910390f35b60035481565b60055481565b6102d461062d565b806003819055507f32740b35c0ea213650f60d44366b4fb211c9033b50714e4a1d34e65d5beb9bb48160405161030a9190610973565b60405180910390a150565b600080610321836104de565b90506000600254826103339190610bed565b90506000600554600a6103469190610acf565b90506000600454836103589190610bed565b9050600082826103689190610a4b565b90508095505050505050919050565b60025481565b61038561062d565b806004819055507f3336cd9708eaf2769a0f0dc0679f30e80f15dcd88d1921b5a16858e8b85c591a816040516103bb9190610973565b60405180910390a150565b6103ce61062d565b6103d860006106ab565b565b6103e261062d565b806005819055507fd68112a8707e326d08be3656b528c1bcc5bbbfc47f4177e2179b14d8640838c1816040516104189190610973565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61045461062d565b806002819055507f351fb23757bb5ea0546c85b7996ddd7155f96b939ebaa5ff7bc49c75f27f2c448160405161048a9190610973565b60405180910390a150565b61049d61062d565b806001819055507ffcdccc6074c6c42e4bd578aa9870c697dc976a270968452d2b8c8dc369fae396816040516104d39190610973565b60405180910390a150565b6000806000905060005b835181101561057357600060f81b84828151811061050957610508610d6a565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156105505760048261054991906109f5565b9150610560565b60108261055d91906109f5565b91505b808061056b90610cc3565b9150506104e8565b5060006003548261058491906109f5565b90506104408161059491906109f5565b92505050919050565b6105a561062d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610615576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060c90610933565b60405180910390fd5b61061e816106ab565b50565b60045481565b60015481565b61063561076f565b73ffffffffffffffffffffffffffffffffffffffff16610653610423565b73ffffffffffffffffffffffffffffffffffffffff16146106a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a090610953565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600061078a610785846109b3565b61098e565b9050828152602081018484840111156107a6576107a5610dcd565b5b6107b1848285610c83565b509392505050565b6000813590506107c881610e72565b92915050565b600082601f8301126107e3576107e2610dc8565b5b81356107f3848260208601610777565b91505092915050565b60008135905061080b81610e89565b92915050565b60006020828403121561082757610826610dd7565b5b6000610835848285016107b9565b91505092915050565b60006020828403121561085457610853610dd7565b5b600082013567ffffffffffffffff81111561087257610871610dd2565b5b61087e848285016107ce565b91505092915050565b60006020828403121561089d5761089c610dd7565b5b60006108ab848285016107fc565b91505092915050565b6108bd81610c47565b82525050565b60006108d06026836109e4565b91506108db82610dfa565b604082019050919050565b60006108f36020836109e4565b91506108fe82610e49565b602082019050919050565b61091281610c79565b82525050565b600060208201905061092d60008301846108b4565b92915050565b6000602082019050818103600083015261094c816108c3565b9050919050565b6000602082019050818103600083015261096c816108e6565b9050919050565b60006020820190506109886000830184610909565b92915050565b60006109986109a9565b90506109a48282610c92565b919050565b6000604051905090565b600067ffffffffffffffff8211156109ce576109cd610d99565b5b6109d782610ddc565b9050602081019050919050565b600082825260208201905092915050565b6000610a0082610c79565b9150610a0b83610c79565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a4057610a3f610d0c565b5b828201905092915050565b6000610a5682610c79565b9150610a6183610c79565b925082610a7157610a70610d3b565b5b828204905092915050565b6000808291508390505b6001851115610ac657808604811115610aa257610aa1610d0c565b5b6001851615610ab15780820291505b8081029050610abf85610ded565b9450610a86565b94509492505050565b6000610ada82610c79565b9150610ae583610c79565b9250610b127fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610b1a565b905092915050565b600082610b2a5760019050610be6565b81610b385760009050610be6565b8160018114610b4e5760028114610b5857610b87565b6001915050610be6565b60ff841115610b6a57610b69610d0c565b5b8360020a915084821115610b8157610b80610d0c565b5b50610be6565b5060208310610133831016604e8410600b8410161715610bbc5782820a905083811115610bb757610bb6610d0c565b5b610be6565b610bc98484846001610a7c565b92509050818404811115610be057610bdf610d0c565b5b81810290505b9392505050565b6000610bf882610c79565b9150610c0383610c79565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c3c57610c3b610d0c565b5b828202905092915050565b6000610c5282610c59565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b610c9b82610ddc565b810181811067ffffffffffffffff82111715610cba57610cb9610d99565b5b80604052505050565b6000610cce82610c79565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d0157610d00610d0c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610e7b81610c47565b8114610e8657600080fd5b50565b610e9281610c79565b8114610e9d57600080fd5b5056fea264697066735822122059b815e688e059bd10532178f265e9993e6731be76ea0985f75668cb163ff99364736f6c63430008060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1329 CODESIZE SUB DUP1 PUSH3 0x1329 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2A3 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0x6F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x77 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x68 DUP2 PUSH3 0x13B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x443 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x14B PUSH3 0x1D2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x1BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1B5 SWAP1 PUSH3 0x323 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1CF DUP2 PUSH3 0x77 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP JUMP JUMPDEST PUSH3 0x1E2 PUSH3 0x6F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x208 PUSH3 0x263 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x261 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x258 SWAP1 PUSH3 0x345 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x29D DUP2 PUSH3 0x429 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2BC JUMPI PUSH3 0x2BB PUSH3 0x3AC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2CC DUP5 DUP3 DUP6 ADD PUSH3 0x28C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2E4 PUSH1 0x26 DUP4 PUSH3 0x367 JUMP JUMPDEST SWAP2 POP PUSH3 0x2F1 DUP3 PUSH3 0x3B1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x30B PUSH1 0x20 DUP4 PUSH3 0x367 JUMP JUMPDEST SWAP2 POP PUSH3 0x318 DUP3 PUSH3 0x400 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x33E DUP2 PUSH3 0x2D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x360 DUP2 PUSH3 0x2FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x385 DUP3 PUSH3 0x38C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH3 0x434 DUP2 PUSH3 0x378 JUMP JUMPDEST DUP2 EQ PUSH3 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xED6 DUP1 PUSH3 0x453 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C8885C8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDE26C4A1 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xDE26C4A1 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0xF45E65D8 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xFE173B97 EQ PUSH2 0x2A2 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x8C8885C8 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0xBEDE39B5 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xBF1FE420 EQ PUSH2 0x21C JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x49948E0E GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x49948E0E EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x519B4BD3 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x70465597 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1BC JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0xC18C162 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x3577AFC5 EQ PUSH2 0x136 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x2C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x887 JUMP JUMPDEST PUSH2 0x2CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x83E JUMP JUMPDEST PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x377 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x887 JUMP JUMPDEST PUSH2 0x37D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH2 0x3C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x887 JUMP JUMPDEST PUSH2 0x3DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EA PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x918 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x887 JUMP JUMPDEST PUSH2 0x44C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x236 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x887 JUMP JUMPDEST PUSH2 0x495 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x83E JUMP JUMPDEST PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x282 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x811 JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28C PUSH2 0x621 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH2 0x627 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2D4 PUSH2 0x62D JUMP JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x32740B35C0EA213650F60D44366B4FB211C9033B50714E4A1D34E65D5BEB9BB4 DUP2 PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x321 DUP4 PUSH2 0x4DE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH2 0x333 SWAP2 SWAP1 PUSH2 0xBED JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 SLOAD PUSH1 0xA PUSH2 0x346 SWAP2 SWAP1 PUSH2 0xACF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x4 SLOAD DUP4 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0xBED JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH2 0x368 SWAP2 SWAP1 PUSH2 0xA4B JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x385 PUSH2 0x62D JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0x3336CD9708EAF2769A0F0DC0679F30E80F15DCD88D1921B5A16858E8B85C591A DUP2 PUSH1 0x40 MLOAD PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x3CE PUSH2 0x62D JUMP JUMPDEST PUSH2 0x3D8 PUSH1 0x0 PUSH2 0x6AB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3E2 PUSH2 0x62D JUMP JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH32 0xD68112A8707E326D08BE3656B528C1BCC5BBBFC47F4177E2179B14D8640838C1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x418 SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x454 PUSH2 0x62D JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x351FB23757BB5EA0546C85B7996DDD7155F96B939EBAA5FF7BC49C75F27F2C44 DUP2 PUSH1 0x40 MLOAD PUSH2 0x48A SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x49D PUSH2 0x62D JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0xFCDCCC6074C6C42E4BD578AA9870C697DC976A270968452D2B8C8DC369FAE396 DUP2 PUSH1 0x40 MLOAD PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x573 JUMPI PUSH1 0x0 PUSH1 0xF8 SHL DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x509 JUMPI PUSH2 0x508 PUSH2 0xD6A JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ ISZERO PUSH2 0x550 JUMPI PUSH1 0x4 DUP3 PUSH2 0x549 SWAP2 SWAP1 PUSH2 0x9F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x560 JUMP JUMPDEST PUSH1 0x10 DUP3 PUSH2 0x55D SWAP2 SWAP1 PUSH2 0x9F5 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x56B SWAP1 PUSH2 0xCC3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x3 SLOAD DUP3 PUSH2 0x584 SWAP2 SWAP1 PUSH2 0x9F5 JUMP JUMPDEST SWAP1 POP PUSH2 0x440 DUP2 PUSH2 0x594 SWAP2 SWAP1 PUSH2 0x9F5 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A5 PUSH2 0x62D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x615 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60C SWAP1 PUSH2 0x933 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x61E DUP2 PUSH2 0x6AB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x635 PUSH2 0x76F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x653 PUSH2 0x423 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A0 SWAP1 PUSH2 0x953 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78A PUSH2 0x785 DUP5 PUSH2 0x9B3 JUMP JUMPDEST PUSH2 0x98E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x7A6 JUMPI PUSH2 0x7A5 PUSH2 0xDCD JUMP JUMPDEST JUMPDEST PUSH2 0x7B1 DUP5 DUP3 DUP6 PUSH2 0xC83 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7C8 DUP2 PUSH2 0xE72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7E3 JUMPI PUSH2 0x7E2 PUSH2 0xDC8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7F3 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x777 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x80B DUP2 PUSH2 0xE89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x827 JUMPI PUSH2 0x826 PUSH2 0xDD7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x835 DUP5 DUP3 DUP6 ADD PUSH2 0x7B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x854 JUMPI PUSH2 0x853 PUSH2 0xDD7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x872 JUMPI PUSH2 0x871 PUSH2 0xDD2 JUMP JUMPDEST JUMPDEST PUSH2 0x87E DUP5 DUP3 DUP6 ADD PUSH2 0x7CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x89D JUMPI PUSH2 0x89C PUSH2 0xDD7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8AB DUP5 DUP3 DUP6 ADD PUSH2 0x7FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8BD DUP2 PUSH2 0xC47 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D0 PUSH1 0x26 DUP4 PUSH2 0x9E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x8DB DUP3 PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F3 PUSH1 0x20 DUP4 PUSH2 0x9E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x8FE DUP3 PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x912 DUP2 PUSH2 0xC79 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x92D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x94C DUP2 PUSH2 0x8C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x96C DUP2 PUSH2 0x8E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x988 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x909 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x998 PUSH2 0x9A9 JUMP JUMPDEST SWAP1 POP PUSH2 0x9A4 DUP3 DUP3 PUSH2 0xC92 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x9CE JUMPI PUSH2 0x9CD PUSH2 0xD99 JUMP JUMPDEST JUMPDEST PUSH2 0x9D7 DUP3 PUSH2 0xDDC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA00 DUP3 PUSH2 0xC79 JUMP JUMPDEST SWAP2 POP PUSH2 0xA0B DUP4 PUSH2 0xC79 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xA40 JUMPI PUSH2 0xA3F PUSH2 0xD0C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA56 DUP3 PUSH2 0xC79 JUMP JUMPDEST SWAP2 POP PUSH2 0xA61 DUP4 PUSH2 0xC79 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xA71 JUMPI PUSH2 0xA70 PUSH2 0xD3B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xAC6 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xAA2 JUMPI PUSH2 0xAA1 PUSH2 0xD0C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xAB1 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xABF DUP6 PUSH2 0xDED JUMP JUMPDEST SWAP5 POP PUSH2 0xA86 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADA DUP3 PUSH2 0xC79 JUMP JUMPDEST SWAP2 POP PUSH2 0xAE5 DUP4 PUSH2 0xC79 JUMP JUMPDEST SWAP3 POP PUSH2 0xB12 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xB1A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xB2A JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xBE6 JUMP JUMPDEST DUP2 PUSH2 0xB38 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xBE6 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xB4E JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xB58 JUMPI PUSH2 0xB87 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xB6A JUMPI PUSH2 0xB69 PUSH2 0xD0C JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xB81 JUMPI PUSH2 0xB80 PUSH2 0xD0C JUMP JUMPDEST JUMPDEST POP PUSH2 0xBE6 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xBBC JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xBB7 JUMPI PUSH2 0xBB6 PUSH2 0xD0C JUMP JUMPDEST JUMPDEST PUSH2 0xBE6 JUMP JUMPDEST PUSH2 0xBC9 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xA7C JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xBE0 JUMPI PUSH2 0xBDF PUSH2 0xD0C JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF8 DUP3 PUSH2 0xC79 JUMP JUMPDEST SWAP2 POP PUSH2 0xC03 DUP4 PUSH2 0xC79 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xC3C JUMPI PUSH2 0xC3B PUSH2 0xD0C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC52 DUP3 PUSH2 0xC59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0xC9B DUP3 PUSH2 0xDDC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xCBA JUMPI PUSH2 0xCB9 PUSH2 0xD99 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCCE DUP3 PUSH2 0xC79 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xD01 JUMPI PUSH2 0xD00 PUSH2 0xD0C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xE7B DUP2 PUSH2 0xC47 JUMP JUMPDEST DUP2 EQ PUSH2 0xE86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xE92 DUP2 PUSH2 0xC79 JUMP JUMPDEST DUP2 EQ PUSH2 0xE9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0xB8 ISZERO 0xE6 DUP9 0xE0 MSIZE 0xBD LT MSTORE8 0x21 PUSH25 0xF265E9993E6731BE76EA0985F75668CB163FF99364736F6C63 NUMBER STOP ADDMOD MOD STOP CALLER ","sourceMap":"714:4541:10:-:0;;;1301:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:16;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1349:25:10::1;1367:6;1349:17;;;:25;;:::i;:::-;1301:80:::0;714:4541;;640:96:17;693:7;719:10;712:17;;640:96;:::o;2426:187:16:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;2074:198::-;1094:13;:11;;;:13;;:::i;:::-;2182:1:::1;2162:22;;:8;:22;;;;2154:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;;;:28;;:::i;:::-;2074:198:::0;:::o;1359:130::-;1433:12;:10;;;:12;;:::i;:::-;1422:23;;:7;:5;;;:7;;:::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;7:143:19:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:2;;;281:79;;:::i;:::-;243:2;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;233:274;;;;:::o;513:366::-;655:3;676:67;740:2;735:3;676:67;:::i;:::-;669:74;;752:93;841:3;752:93;:::i;:::-;870:2;865:3;861:12;854:19;;659:220;;;:::o;885:366::-;1027:3;1048:67;1112:2;1107:3;1048:67;:::i;:::-;1041:74;;1124:93;1213:3;1124:93;:::i;:::-;1242:2;1237:3;1233:12;1226:19;;1031:220;;;:::o;1257:419::-;1423:4;1461:2;1450:9;1446:18;1438:26;;1510:9;1504:4;1500:20;1496:1;1485:9;1481:17;1474:47;1538:131;1664:4;1538:131;:::i;:::-;1530:139;;1428:248;;;:::o;1682:419::-;1848:4;1886:2;1875:9;1871:18;1863:26;;1935:9;1929:4;1925:20;1921:1;1910:9;1906:17;1899:47;1963:131;2089:4;1963:131;:::i;:::-;1955:139;;1853:248;;;:::o;2188:169::-;2272:11;2306:6;2301:3;2294:19;2346:4;2341:3;2337:14;2322:29;;2284:73;;;;:::o;2363:96::-;2400:7;2429:24;2447:5;2429:24;:::i;:::-;2418:35;;2408:51;;;:::o;2465:126::-;2502:7;2542:42;2535:5;2531:54;2520:65;;2510:81;;;:::o;2720:117::-;2829:1;2826;2819:12;2843:225;2983:34;2979:1;2971:6;2967:14;2960:58;3052:8;3047:2;3039:6;3035:15;3028:33;2949:119;:::o;3074:182::-;3214:34;3210:1;3202:6;3198:14;3191:58;3180:76;:::o;3262:122::-;3335:24;3353:5;3335:24;:::i;:::-;3328:5;3325:35;3315:2;;3374:1;3371;3364:12;3315:2;3305:79;:::o;714:4541:10:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_4937":{"entryPoint":1581,"id":4937,"parameterSlots":0,"returnSlots":0},"@_msgSender_5007":{"entryPoint":1903,"id":5007,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_4994":{"entryPoint":1707,"id":4994,"parameterSlots":1,"returnSlots":0},"@decimals_1060":{"entryPoint":710,"id":1060,"parameterSlots":0,"returnSlots":0},"@gasPrice_1052":{"entryPoint":1575,"id":1052,"parameterSlots":0,"returnSlots":0},"@getL1Fee_1219":{"entryPoint":789,"id":1219,"parameterSlots":1,"returnSlots":1},"@getL1GasUsed_1274":{"entryPoint":1246,"id":1274,"parameterSlots":1,"returnSlots":1},"@l1BaseFee_1054":{"entryPoint":887,"id":1054,"parameterSlots":0,"returnSlots":0},"@overhead_1056":{"entryPoint":704,"id":1056,"parameterSlots":0,"returnSlots":0},"@owner_4923":{"entryPoint":1059,"id":4923,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_4951":{"entryPoint":966,"id":4951,"parameterSlots":0,"returnSlots":0},"@scalar_1058":{"entryPoint":1569,"id":1058,"parameterSlots":0,"returnSlots":0},"@setDecimals_1178":{"entryPoint":986,"id":1178,"parameterSlots":1,"returnSlots":0},"@setGasPrice_1110":{"entryPoint":1173,"id":1110,"parameterSlots":1,"returnSlots":0},"@setL1BaseFee_1127":{"entryPoint":1100,"id":1127,"parameterSlots":1,"returnSlots":0},"@setOverhead_1144":{"entryPoint":716,"id":1144,"parameterSlots":1,"returnSlots":0},"@setScalar_1161":{"entryPoint":893,"id":1161,"parameterSlots":1,"returnSlots":0},"@transferOwnership_4974":{"entryPoint":1437,"id":4974,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":1911,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":1977,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":1998,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2044,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2065,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_memory_ptr":{"entryPoint":2110,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":2183,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2228,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":2243,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":2278,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2313,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2328,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2355,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2387,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2419,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":2446,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":2473,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":2483,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2532,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2549,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":2635,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":2684,"id":null,"parameterSlots":4,"returnSlots":2},"checked_exp_t_uint256_t_uint256":{"entryPoint":2767,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":2842,"id":null,"parameterSlots":3,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":3053,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3143,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3161,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3193,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":3203,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":3218,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":3267,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3340,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":3387,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":3434,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3481,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":3528,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":3533,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":3538,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3543,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3548,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_1_unsigned":{"entryPoint":3565,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":3578,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":3657,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3698,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3721,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11462:19","statements":[{"body":{"nodeType":"YulBlock","src":"90:327:19","statements":[{"nodeType":"YulAssignment","src":"100:74:19","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"166:6:19"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"125:40:19"},"nodeType":"YulFunctionCall","src":"125:48:19"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"109:15:19"},"nodeType":"YulFunctionCall","src":"109:65:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"100:5:19"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"190:5:19"},{"name":"length","nodeType":"YulIdentifier","src":"197:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"183:6:19"},"nodeType":"YulFunctionCall","src":"183:21:19"},"nodeType":"YulExpressionStatement","src":"183:21:19"},{"nodeType":"YulVariableDeclaration","src":"213:27:19","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"228:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"235:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"224:3:19"},"nodeType":"YulFunctionCall","src":"224:16:19"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"217:3:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"278:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"280:77:19"},"nodeType":"YulFunctionCall","src":"280:79:19"},"nodeType":"YulExpressionStatement","src":"280:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"259:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"264:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"255:3:19"},"nodeType":"YulFunctionCall","src":"255:16:19"},{"name":"end","nodeType":"YulIdentifier","src":"273:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"252:2:19"},"nodeType":"YulFunctionCall","src":"252:25:19"},"nodeType":"YulIf","src":"249:2:19"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"394:3:19"},{"name":"dst","nodeType":"YulIdentifier","src":"399:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"404:6:19"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"370:23:19"},"nodeType":"YulFunctionCall","src":"370:41:19"},"nodeType":"YulExpressionStatement","src":"370:41:19"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"63:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"68:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"76:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"84:5:19","type":""}],"src":"7:410:19"},{"body":{"nodeType":"YulBlock","src":"475:87:19","statements":[{"nodeType":"YulAssignment","src":"485:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"507:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"494:12:19"},"nodeType":"YulFunctionCall","src":"494:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"485:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:19"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"523:26:19"},"nodeType":"YulFunctionCall","src":"523:33:19"},"nodeType":"YulExpressionStatement","src":"523:33:19"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"453:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"461:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"469:5:19","type":""}],"src":"423:139:19"},{"body":{"nodeType":"YulBlock","src":"642:277:19","statements":[{"body":{"nodeType":"YulBlock","src":"691:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"693:77:19"},"nodeType":"YulFunctionCall","src":"693:79:19"},"nodeType":"YulExpressionStatement","src":"693:79:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"670:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"678:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"666:3:19"},"nodeType":"YulFunctionCall","src":"666:17:19"},{"name":"end","nodeType":"YulIdentifier","src":"685:3:19"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"662:3:19"},"nodeType":"YulFunctionCall","src":"662:27:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"655:6:19"},"nodeType":"YulFunctionCall","src":"655:35:19"},"nodeType":"YulIf","src":"652:2:19"},{"nodeType":"YulVariableDeclaration","src":"783:34:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"810:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"797:12:19"},"nodeType":"YulFunctionCall","src":"797:20:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"787:6:19","type":""}]},{"nodeType":"YulAssignment","src":"826:87:19","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"886:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"894:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"882:3:19"},"nodeType":"YulFunctionCall","src":"882:17:19"},{"name":"length","nodeType":"YulIdentifier","src":"901:6:19"},{"name":"end","nodeType":"YulIdentifier","src":"909:3:19"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"835:46:19"},"nodeType":"YulFunctionCall","src":"835:78:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"826:5:19"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"620:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"628:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"636:5:19","type":""}],"src":"581:338:19"},{"body":{"nodeType":"YulBlock","src":"977:87:19","statements":[{"nodeType":"YulAssignment","src":"987:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1009:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"996:12:19"},"nodeType":"YulFunctionCall","src":"996:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"987:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1052:5:19"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1025:26:19"},"nodeType":"YulFunctionCall","src":"1025:33:19"},"nodeType":"YulExpressionStatement","src":"1025:33:19"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"955:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"963:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"971:5:19","type":""}],"src":"925:139:19"},{"body":{"nodeType":"YulBlock","src":"1136:263:19","statements":[{"body":{"nodeType":"YulBlock","src":"1182:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1184:77:19"},"nodeType":"YulFunctionCall","src":"1184:79:19"},"nodeType":"YulExpressionStatement","src":"1184:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1157:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"1166:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1153:3:19"},"nodeType":"YulFunctionCall","src":"1153:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"1178:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1149:3:19"},"nodeType":"YulFunctionCall","src":"1149:32:19"},"nodeType":"YulIf","src":"1146:2:19"},{"nodeType":"YulBlock","src":"1275:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1290:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1304:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1294:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1319:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1354:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1365:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1350:3:19"},"nodeType":"YulFunctionCall","src":"1350:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1374:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1329:20:19"},"nodeType":"YulFunctionCall","src":"1329:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1319:6:19"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1106:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1117:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1129:6:19","type":""}],"src":"1070:329:19"},{"body":{"nodeType":"YulBlock","src":"1480:432:19","statements":[{"body":{"nodeType":"YulBlock","src":"1526:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1528:77:19"},"nodeType":"YulFunctionCall","src":"1528:79:19"},"nodeType":"YulExpressionStatement","src":"1528:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1501:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"1510:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1497:3:19"},"nodeType":"YulFunctionCall","src":"1497:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"1522:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1493:3:19"},"nodeType":"YulFunctionCall","src":"1493:32:19"},"nodeType":"YulIf","src":"1490:2:19"},{"nodeType":"YulBlock","src":"1619:286:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1634:45:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1665:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1676:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1661:3:19"},"nodeType":"YulFunctionCall","src":"1661:17:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1648:12:19"},"nodeType":"YulFunctionCall","src":"1648:31:19"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1638:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"1726:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"1728:77:19"},"nodeType":"YulFunctionCall","src":"1728:79:19"},"nodeType":"YulExpressionStatement","src":"1728:79:19"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1698:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"1706:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1695:2:19"},"nodeType":"YulFunctionCall","src":"1695:30:19"},"nodeType":"YulIf","src":"1692:2:19"},{"nodeType":"YulAssignment","src":"1823:72:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1867:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1878:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1863:3:19"},"nodeType":"YulFunctionCall","src":"1863:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1887:7:19"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"1833:29:19"},"nodeType":"YulFunctionCall","src":"1833:62:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1823:6:19"}]}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1450:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1461:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1473:6:19","type":""}],"src":"1405:507:19"},{"body":{"nodeType":"YulBlock","src":"1984:263:19","statements":[{"body":{"nodeType":"YulBlock","src":"2030:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2032:77:19"},"nodeType":"YulFunctionCall","src":"2032:79:19"},"nodeType":"YulExpressionStatement","src":"2032:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2005:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"2014:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2001:3:19"},"nodeType":"YulFunctionCall","src":"2001:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"2026:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1997:3:19"},"nodeType":"YulFunctionCall","src":"1997:32:19"},"nodeType":"YulIf","src":"1994:2:19"},{"nodeType":"YulBlock","src":"2123:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2138:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"2152:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2142:6:19","type":""}]},{"nodeType":"YulAssignment","src":"2167:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2202:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"2213:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2198:3:19"},"nodeType":"YulFunctionCall","src":"2198:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2222:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2177:20:19"},"nodeType":"YulFunctionCall","src":"2177:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2167:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1954:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1965:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1977:6:19","type":""}],"src":"1918:329:19"},{"body":{"nodeType":"YulBlock","src":"2318:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2335:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2358:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2340:17:19"},"nodeType":"YulFunctionCall","src":"2340:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2328:6:19"},"nodeType":"YulFunctionCall","src":"2328:37:19"},"nodeType":"YulExpressionStatement","src":"2328:37:19"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2306:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2313:3:19","type":""}],"src":"2253:118:19"},{"body":{"nodeType":"YulBlock","src":"2523:220:19","statements":[{"nodeType":"YulAssignment","src":"2533:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2599:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"2604:2:19","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2540:58:19"},"nodeType":"YulFunctionCall","src":"2540:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2533:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2705:3:19"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"2616:88:19"},"nodeType":"YulFunctionCall","src":"2616:93:19"},"nodeType":"YulExpressionStatement","src":"2616:93:19"},{"nodeType":"YulAssignment","src":"2718:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2729:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"2734:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2725:3:19"},"nodeType":"YulFunctionCall","src":"2725:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2718:3:19"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2511:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2519:3:19","type":""}],"src":"2377:366:19"},{"body":{"nodeType":"YulBlock","src":"2895:220:19","statements":[{"nodeType":"YulAssignment","src":"2905:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2971:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"2976:2:19","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2912:58:19"},"nodeType":"YulFunctionCall","src":"2912:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2905:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3077:3:19"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"2988:88:19"},"nodeType":"YulFunctionCall","src":"2988:93:19"},"nodeType":"YulExpressionStatement","src":"2988:93:19"},{"nodeType":"YulAssignment","src":"3090:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3101:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"3106:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3097:3:19"},"nodeType":"YulFunctionCall","src":"3097:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3090:3:19"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2883:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2891:3:19","type":""}],"src":"2749:366:19"},{"body":{"nodeType":"YulBlock","src":"3186:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3203:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3226:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3208:17:19"},"nodeType":"YulFunctionCall","src":"3208:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3196:6:19"},"nodeType":"YulFunctionCall","src":"3196:37:19"},"nodeType":"YulExpressionStatement","src":"3196:37:19"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3174:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3181:3:19","type":""}],"src":"3121:118:19"},{"body":{"nodeType":"YulBlock","src":"3343:124:19","statements":[{"nodeType":"YulAssignment","src":"3353:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3365:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3376:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3361:3:19"},"nodeType":"YulFunctionCall","src":"3361:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3353:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3433:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3446:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3457:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3442:3:19"},"nodeType":"YulFunctionCall","src":"3442:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"3389:43:19"},"nodeType":"YulFunctionCall","src":"3389:71:19"},"nodeType":"YulExpressionStatement","src":"3389:71:19"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3315:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3327:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3338:4:19","type":""}],"src":"3245:222:19"},{"body":{"nodeType":"YulBlock","src":"3644:248:19","statements":[{"nodeType":"YulAssignment","src":"3654:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3666:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3677:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3662:3:19"},"nodeType":"YulFunctionCall","src":"3662:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3654:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3701:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3712:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3697:3:19"},"nodeType":"YulFunctionCall","src":"3697:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3720:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"3726:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3716:3:19"},"nodeType":"YulFunctionCall","src":"3716:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3690:6:19"},"nodeType":"YulFunctionCall","src":"3690:47:19"},"nodeType":"YulExpressionStatement","src":"3690:47:19"},{"nodeType":"YulAssignment","src":"3746:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3880:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3754:124:19"},"nodeType":"YulFunctionCall","src":"3754:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3746:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3624:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3639:4:19","type":""}],"src":"3473:419:19"},{"body":{"nodeType":"YulBlock","src":"4069:248:19","statements":[{"nodeType":"YulAssignment","src":"4079:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4091:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4102:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4087:3:19"},"nodeType":"YulFunctionCall","src":"4087:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4079:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4126:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4137:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4122:3:19"},"nodeType":"YulFunctionCall","src":"4122:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4145:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"4151:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4141:3:19"},"nodeType":"YulFunctionCall","src":"4141:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4115:6:19"},"nodeType":"YulFunctionCall","src":"4115:47:19"},"nodeType":"YulExpressionStatement","src":"4115:47:19"},{"nodeType":"YulAssignment","src":"4171:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4305:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4179:124:19"},"nodeType":"YulFunctionCall","src":"4179:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4171:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4049:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4064:4:19","type":""}],"src":"3898:419:19"},{"body":{"nodeType":"YulBlock","src":"4421:124:19","statements":[{"nodeType":"YulAssignment","src":"4431:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4443:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4454:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4439:3:19"},"nodeType":"YulFunctionCall","src":"4439:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4431:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4511:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4524:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4535:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4520:3:19"},"nodeType":"YulFunctionCall","src":"4520:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4467:43:19"},"nodeType":"YulFunctionCall","src":"4467:71:19"},"nodeType":"YulExpressionStatement","src":"4467:71:19"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4393:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4405:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4416:4:19","type":""}],"src":"4323:222:19"},{"body":{"nodeType":"YulBlock","src":"4592:88:19","statements":[{"nodeType":"YulAssignment","src":"4602:30:19","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"4612:18:19"},"nodeType":"YulFunctionCall","src":"4612:20:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4602:6:19"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4661:6:19"},{"name":"size","nodeType":"YulIdentifier","src":"4669:4:19"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"4641:19:19"},"nodeType":"YulFunctionCall","src":"4641:33:19"},"nodeType":"YulExpressionStatement","src":"4641:33:19"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"4576:4:19","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4585:6:19","type":""}],"src":"4551:129:19"},{"body":{"nodeType":"YulBlock","src":"4726:35:19","statements":[{"nodeType":"YulAssignment","src":"4736:19:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4752:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4746:5:19"},"nodeType":"YulFunctionCall","src":"4746:9:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4736:6:19"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4719:6:19","type":""}],"src":"4686:75:19"},{"body":{"nodeType":"YulBlock","src":"4833:241:19","statements":[{"body":{"nodeType":"YulBlock","src":"4938:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4940:16:19"},"nodeType":"YulFunctionCall","src":"4940:18:19"},"nodeType":"YulExpressionStatement","src":"4940:18:19"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4910:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"4918:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4907:2:19"},"nodeType":"YulFunctionCall","src":"4907:30:19"},"nodeType":"YulIf","src":"4904:2:19"},{"nodeType":"YulAssignment","src":"4970:37:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5000:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4978:21:19"},"nodeType":"YulFunctionCall","src":"4978:29:19"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4970:4:19"}]},{"nodeType":"YulAssignment","src":"5044:23:19","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5056:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"5062:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5052:3:19"},"nodeType":"YulFunctionCall","src":"5052:15:19"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5044:4:19"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"4817:6:19","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"4828:4:19","type":""}],"src":"4767:307:19"},{"body":{"nodeType":"YulBlock","src":"5176:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5193:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"5198:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5186:6:19"},"nodeType":"YulFunctionCall","src":"5186:19:19"},"nodeType":"YulExpressionStatement","src":"5186:19:19"},{"nodeType":"YulAssignment","src":"5214:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5233:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"5238:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5229:3:19"},"nodeType":"YulFunctionCall","src":"5229:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5214:11:19"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5148:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"5153:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5164:11:19","type":""}],"src":"5080:169:19"},{"body":{"nodeType":"YulBlock","src":"5299:261:19","statements":[{"nodeType":"YulAssignment","src":"5309:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5332:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5314:17:19"},"nodeType":"YulFunctionCall","src":"5314:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"5309:1:19"}]},{"nodeType":"YulAssignment","src":"5343:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5366:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5348:17:19"},"nodeType":"YulFunctionCall","src":"5348:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"5343:1:19"}]},{"body":{"nodeType":"YulBlock","src":"5506:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5508:16:19"},"nodeType":"YulFunctionCall","src":"5508:18:19"},"nodeType":"YulExpressionStatement","src":"5508:18:19"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5427:1:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5434:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"5502:1:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5430:3:19"},"nodeType":"YulFunctionCall","src":"5430:74:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5424:2:19"},"nodeType":"YulFunctionCall","src":"5424:81:19"},"nodeType":"YulIf","src":"5421:2:19"},{"nodeType":"YulAssignment","src":"5538:16:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5549:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"5552:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5545:3:19"},"nodeType":"YulFunctionCall","src":"5545:9:19"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"5538:3:19"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5286:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"5289:1:19","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"5295:3:19","type":""}],"src":"5255:305:19"},{"body":{"nodeType":"YulBlock","src":"5608:143:19","statements":[{"nodeType":"YulAssignment","src":"5618:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5641:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5623:17:19"},"nodeType":"YulFunctionCall","src":"5623:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"5618:1:19"}]},{"nodeType":"YulAssignment","src":"5652:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5675:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5657:17:19"},"nodeType":"YulFunctionCall","src":"5657:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"5652:1:19"}]},{"body":{"nodeType":"YulBlock","src":"5699:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"5701:16:19"},"nodeType":"YulFunctionCall","src":"5701:18:19"},"nodeType":"YulExpressionStatement","src":"5701:18:19"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5696:1:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5689:6:19"},"nodeType":"YulFunctionCall","src":"5689:9:19"},"nodeType":"YulIf","src":"5686:2:19"},{"nodeType":"YulAssignment","src":"5731:14:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5740:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"5743:1:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5736:3:19"},"nodeType":"YulFunctionCall","src":"5736:9:19"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"5731:1:19"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5597:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"5600:1:19","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"5606:1:19","type":""}],"src":"5566:185:19"},{"body":{"nodeType":"YulBlock","src":"5830:775:19","statements":[{"nodeType":"YulAssignment","src":"5840:15:19","value":{"name":"_power","nodeType":"YulIdentifier","src":"5849:6:19"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"5840:5:19"}]},{"nodeType":"YulAssignment","src":"5864:14:19","value":{"name":"_base","nodeType":"YulIdentifier","src":"5873:5:19"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"5864:4:19"}]},{"body":{"nodeType":"YulBlock","src":"5922:677:19","statements":[{"body":{"nodeType":"YulBlock","src":"6010:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6012:16:19"},"nodeType":"YulFunctionCall","src":"6012:18:19"},"nodeType":"YulExpressionStatement","src":"6012:18:19"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"5988:4:19"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"5998:3:19"},{"name":"base","nodeType":"YulIdentifier","src":"6003:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5994:3:19"},"nodeType":"YulFunctionCall","src":"5994:14:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5985:2:19"},"nodeType":"YulFunctionCall","src":"5985:24:19"},"nodeType":"YulIf","src":"5982:2:19"},{"body":{"nodeType":"YulBlock","src":"6077:419:19","statements":[{"nodeType":"YulAssignment","src":"6457:25:19","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"6470:5:19"},{"name":"base","nodeType":"YulIdentifier","src":"6477:4:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6466:3:19"},"nodeType":"YulFunctionCall","src":"6466:16:19"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"6457:5:19"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"6052:8:19"},{"kind":"number","nodeType":"YulLiteral","src":"6062:1:19","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6048:3:19"},"nodeType":"YulFunctionCall","src":"6048:16:19"},"nodeType":"YulIf","src":"6045:2:19"},{"nodeType":"YulAssignment","src":"6509:23:19","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"6521:4:19"},{"name":"base","nodeType":"YulIdentifier","src":"6527:4:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6517:3:19"},"nodeType":"YulFunctionCall","src":"6517:15:19"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"6509:4:19"}]},{"nodeType":"YulAssignment","src":"6545:44:19","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"6580:8:19"}],"functionName":{"name":"shift_right_1_unsigned","nodeType":"YulIdentifier","src":"6557:22:19"},"nodeType":"YulFunctionCall","src":"6557:32:19"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"6545:8:19"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"5898:8:19"},{"kind":"number","nodeType":"YulLiteral","src":"5908:1:19","type":"","value":"1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5895:2:19"},"nodeType":"YulFunctionCall","src":"5895:15:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5911:2:19","statements":[]},"pre":{"nodeType":"YulBlock","src":"5891:3:19","statements":[]},"src":"5887:712:19"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nodeType":"YulTypedName","src":"5785:6:19","type":""},{"name":"_base","nodeType":"YulTypedName","src":"5793:5:19","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"5800:8:19","type":""},{"name":"max","nodeType":"YulTypedName","src":"5810:3:19","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"5818:5:19","type":""},{"name":"base","nodeType":"YulTypedName","src":"5825:4:19","type":""}],"src":"5757:848:19"},{"body":{"nodeType":"YulBlock","src":"6677:219:19","statements":[{"nodeType":"YulAssignment","src":"6687:31:19","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"6713:4:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6695:17:19"},"nodeType":"YulFunctionCall","src":"6695:23:19"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"6687:4:19"}]},{"nodeType":"YulAssignment","src":"6727:39:19","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"6757:8:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6739:17:19"},"nodeType":"YulFunctionCall","src":"6739:27:19"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"6727:8:19"}]},{"nodeType":"YulAssignment","src":"6776:113:19","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"6806:4:19"},{"name":"exponent","nodeType":"YulIdentifier","src":"6812:8:19"},{"kind":"number","nodeType":"YulLiteral","src":"6822:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"6785:20:19"},"nodeType":"YulFunctionCall","src":"6785:104:19"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"6776:5:19"}]}]},"name":"checked_exp_t_uint256_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"6652:4:19","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"6658:8:19","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"6671:5:19","type":""}],"src":"6611:285:19"},{"body":{"nodeType":"YulBlock","src":"6962:1013:19","statements":[{"body":{"nodeType":"YulBlock","src":"7157:20:19","statements":[{"nodeType":"YulAssignment","src":"7159:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"7168:1:19","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"7159:5:19"}]},{"nodeType":"YulLeave","src":"7170:5:19"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"7147:8:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7140:6:19"},"nodeType":"YulFunctionCall","src":"7140:16:19"},"nodeType":"YulIf","src":"7137:2:19"},{"body":{"nodeType":"YulBlock","src":"7202:20:19","statements":[{"nodeType":"YulAssignment","src":"7204:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"7213:1:19","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"7204:5:19"}]},{"nodeType":"YulLeave","src":"7215:5:19"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"7196:4:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7189:6:19"},"nodeType":"YulFunctionCall","src":"7189:12:19"},"nodeType":"YulIf","src":"7186:2:19"},{"cases":[{"body":{"nodeType":"YulBlock","src":"7332:20:19","statements":[{"nodeType":"YulAssignment","src":"7334:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"7343:1:19","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"7334:5:19"}]},{"nodeType":"YulLeave","src":"7345:5:19"}]},"nodeType":"YulCase","src":"7325:27:19","value":{"kind":"number","nodeType":"YulLiteral","src":"7330:1:19","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"7376:176:19","statements":[{"body":{"nodeType":"YulBlock","src":"7411:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7413:16:19"},"nodeType":"YulFunctionCall","src":"7413:18:19"},"nodeType":"YulExpressionStatement","src":"7413:18:19"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"7396:8:19"},{"kind":"number","nodeType":"YulLiteral","src":"7406:3:19","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7393:2:19"},"nodeType":"YulFunctionCall","src":"7393:17:19"},"nodeType":"YulIf","src":"7390:2:19"},{"nodeType":"YulAssignment","src":"7446:25:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7459:1:19","type":"","value":"2"},{"name":"exponent","nodeType":"YulIdentifier","src":"7462:8:19"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"7455:3:19"},"nodeType":"YulFunctionCall","src":"7455:16:19"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"7446:5:19"}]},{"body":{"nodeType":"YulBlock","src":"7502:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7504:16:19"},"nodeType":"YulFunctionCall","src":"7504:18:19"},"nodeType":"YulExpressionStatement","src":"7504:18:19"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"7490:5:19"},{"name":"max","nodeType":"YulIdentifier","src":"7497:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7487:2:19"},"nodeType":"YulFunctionCall","src":"7487:14:19"},"nodeType":"YulIf","src":"7484:2:19"},{"nodeType":"YulLeave","src":"7537:5:19"}]},"nodeType":"YulCase","src":"7361:191:19","value":{"kind":"number","nodeType":"YulLiteral","src":"7366:1:19","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"7282:4:19"},"nodeType":"YulSwitch","src":"7275:277:19"},{"body":{"nodeType":"YulBlock","src":"7684:123:19","statements":[{"nodeType":"YulAssignment","src":"7698:28:19","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"7711:4:19"},{"name":"exponent","nodeType":"YulIdentifier","src":"7717:8:19"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"7707:3:19"},"nodeType":"YulFunctionCall","src":"7707:19:19"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"7698:5:19"}]},{"body":{"nodeType":"YulBlock","src":"7757:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7759:16:19"},"nodeType":"YulFunctionCall","src":"7759:18:19"},"nodeType":"YulExpressionStatement","src":"7759:18:19"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"7745:5:19"},{"name":"max","nodeType":"YulIdentifier","src":"7752:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7742:2:19"},"nodeType":"YulFunctionCall","src":"7742:14:19"},"nodeType":"YulIf","src":"7739:2:19"},{"nodeType":"YulLeave","src":"7792:5:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"7587:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"7593:2:19","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7584:2:19"},"nodeType":"YulFunctionCall","src":"7584:12:19"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"7601:8:19"},{"kind":"number","nodeType":"YulLiteral","src":"7611:2:19","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7598:2:19"},"nodeType":"YulFunctionCall","src":"7598:16:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7580:3:19"},"nodeType":"YulFunctionCall","src":"7580:35:19"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"7636:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"7642:3:19","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7633:2:19"},"nodeType":"YulFunctionCall","src":"7633:13:19"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"7651:8:19"},{"kind":"number","nodeType":"YulLiteral","src":"7661:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7648:2:19"},"nodeType":"YulFunctionCall","src":"7648:16:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7629:3:19"},"nodeType":"YulFunctionCall","src":"7629:36:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7564:2:19"},"nodeType":"YulFunctionCall","src":"7564:111:19"},"nodeType":"YulIf","src":"7561:2:19"},{"nodeType":"YulAssignment","src":"7817:57:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7851:1:19","type":"","value":"1"},{"name":"base","nodeType":"YulIdentifier","src":"7854:4:19"},{"name":"exponent","nodeType":"YulIdentifier","src":"7860:8:19"},{"name":"max","nodeType":"YulIdentifier","src":"7870:3:19"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"7832:18:19"},"nodeType":"YulFunctionCall","src":"7832:42:19"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"7817:5:19"},{"name":"base","nodeType":"YulIdentifier","src":"7824:4:19"}]},{"body":{"nodeType":"YulBlock","src":"7913:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7915:16:19"},"nodeType":"YulFunctionCall","src":"7915:18:19"},"nodeType":"YulExpressionStatement","src":"7915:18:19"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"7890:5:19"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"7901:3:19"},{"name":"base","nodeType":"YulIdentifier","src":"7906:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7897:3:19"},"nodeType":"YulFunctionCall","src":"7897:14:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7887:2:19"},"nodeType":"YulFunctionCall","src":"7887:25:19"},"nodeType":"YulIf","src":"7884:2:19"},{"nodeType":"YulAssignment","src":"7944:25:19","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"7957:5:19"},{"name":"base","nodeType":"YulIdentifier","src":"7964:4:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7953:3:19"},"nodeType":"YulFunctionCall","src":"7953:16:19"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"7944:5:19"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"6932:4:19","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"6938:8:19","type":""},{"name":"max","nodeType":"YulTypedName","src":"6948:3:19","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"6956:5:19","type":""}],"src":"6902:1073:19"},{"body":{"nodeType":"YulBlock","src":"8029:300:19","statements":[{"nodeType":"YulAssignment","src":"8039:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8062:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8044:17:19"},"nodeType":"YulFunctionCall","src":"8044:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"8039:1:19"}]},{"nodeType":"YulAssignment","src":"8073:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8096:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8078:17:19"},"nodeType":"YulFunctionCall","src":"8078:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"8073:1:19"}]},{"body":{"nodeType":"YulBlock","src":"8271:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8273:16:19"},"nodeType":"YulFunctionCall","src":"8273:18:19"},"nodeType":"YulExpressionStatement","src":"8273:18:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8183:1:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8176:6:19"},"nodeType":"YulFunctionCall","src":"8176:9:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8169:6:19"},"nodeType":"YulFunctionCall","src":"8169:17:19"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8191:1:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8198:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"8266:1:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8194:3:19"},"nodeType":"YulFunctionCall","src":"8194:74:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8188:2:19"},"nodeType":"YulFunctionCall","src":"8188:81:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8165:3:19"},"nodeType":"YulFunctionCall","src":"8165:105:19"},"nodeType":"YulIf","src":"8162:2:19"},{"nodeType":"YulAssignment","src":"8303:20:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8318:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"8321:1:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8314:3:19"},"nodeType":"YulFunctionCall","src":"8314:9:19"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"8303:7:19"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8012:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"8015:1:19","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"8021:7:19","type":""}],"src":"7981:348:19"},{"body":{"nodeType":"YulBlock","src":"8380:51:19","statements":[{"nodeType":"YulAssignment","src":"8390:35:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8419:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"8401:17:19"},"nodeType":"YulFunctionCall","src":"8401:24:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8390:7:19"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8362:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8372:7:19","type":""}],"src":"8335:96:19"},{"body":{"nodeType":"YulBlock","src":"8482:81:19","statements":[{"nodeType":"YulAssignment","src":"8492:65:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8507:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"8514:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8503:3:19"},"nodeType":"YulFunctionCall","src":"8503:54:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8492:7:19"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8464:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8474:7:19","type":""}],"src":"8437:126:19"},{"body":{"nodeType":"YulBlock","src":"8614:32:19","statements":[{"nodeType":"YulAssignment","src":"8624:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"8635:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8624:7:19"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8596:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8606:7:19","type":""}],"src":"8569:77:19"},{"body":{"nodeType":"YulBlock","src":"8703:103:19","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8726:3:19"},{"name":"src","nodeType":"YulIdentifier","src":"8731:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"8736:6:19"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8713:12:19"},"nodeType":"YulFunctionCall","src":"8713:30:19"},"nodeType":"YulExpressionStatement","src":"8713:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8784:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"8789:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8780:3:19"},"nodeType":"YulFunctionCall","src":"8780:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"8798:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8773:6:19"},"nodeType":"YulFunctionCall","src":"8773:27:19"},"nodeType":"YulExpressionStatement","src":"8773:27:19"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8685:3:19","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8690:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"8695:6:19","type":""}],"src":"8652:154:19"},{"body":{"nodeType":"YulBlock","src":"8855:238:19","statements":[{"nodeType":"YulVariableDeclaration","src":"8865:58:19","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8887:6:19"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8917:4:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8895:21:19"},"nodeType":"YulFunctionCall","src":"8895:27:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8883:3:19"},"nodeType":"YulFunctionCall","src":"8883:40:19"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"8869:10:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"9034:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"9036:16:19"},"nodeType":"YulFunctionCall","src":"9036:18:19"},"nodeType":"YulExpressionStatement","src":"9036:18:19"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8977:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"8989:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8974:2:19"},"nodeType":"YulFunctionCall","src":"8974:34:19"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"9013:10:19"},{"name":"memPtr","nodeType":"YulIdentifier","src":"9025:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9010:2:19"},"nodeType":"YulFunctionCall","src":"9010:22:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8971:2:19"},"nodeType":"YulFunctionCall","src":"8971:62:19"},"nodeType":"YulIf","src":"8968:2:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9072:2:19","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"9076:10:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9065:6:19"},"nodeType":"YulFunctionCall","src":"9065:22:19"},"nodeType":"YulExpressionStatement","src":"9065:22:19"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8841:6:19","type":""},{"name":"size","nodeType":"YulTypedName","src":"8849:4:19","type":""}],"src":"8812:281:19"},{"body":{"nodeType":"YulBlock","src":"9142:190:19","statements":[{"nodeType":"YulAssignment","src":"9152:33:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9179:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9161:17:19"},"nodeType":"YulFunctionCall","src":"9161:24:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9152:5:19"}]},{"body":{"nodeType":"YulBlock","src":"9275:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9277:16:19"},"nodeType":"YulFunctionCall","src":"9277:18:19"},"nodeType":"YulExpressionStatement","src":"9277:18:19"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9200:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"9207:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9197:2:19"},"nodeType":"YulFunctionCall","src":"9197:77:19"},"nodeType":"YulIf","src":"9194:2:19"},{"nodeType":"YulAssignment","src":"9306:20:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9317:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"9324:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9313:3:19"},"nodeType":"YulFunctionCall","src":"9313:13:19"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"9306:3:19"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9128:5:19","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9138:3:19","type":""}],"src":"9099:233:19"},{"body":{"nodeType":"YulBlock","src":"9366:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9383:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9386:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9376:6:19"},"nodeType":"YulFunctionCall","src":"9376:88:19"},"nodeType":"YulExpressionStatement","src":"9376:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9480:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9483:4:19","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9473:6:19"},"nodeType":"YulFunctionCall","src":"9473:15:19"},"nodeType":"YulExpressionStatement","src":"9473:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9504:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9507:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9497:6:19"},"nodeType":"YulFunctionCall","src":"9497:15:19"},"nodeType":"YulExpressionStatement","src":"9497:15:19"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"9338:180:19"},{"body":{"nodeType":"YulBlock","src":"9552:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9569:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9572:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9562:6:19"},"nodeType":"YulFunctionCall","src":"9562:88:19"},"nodeType":"YulExpressionStatement","src":"9562:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9666:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9669:4:19","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9659:6:19"},"nodeType":"YulFunctionCall","src":"9659:15:19"},"nodeType":"YulExpressionStatement","src":"9659:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9690:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9693:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9683:6:19"},"nodeType":"YulFunctionCall","src":"9683:15:19"},"nodeType":"YulExpressionStatement","src":"9683:15:19"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"9524:180:19"},{"body":{"nodeType":"YulBlock","src":"9738:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9755:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9758:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9748:6:19"},"nodeType":"YulFunctionCall","src":"9748:88:19"},"nodeType":"YulExpressionStatement","src":"9748:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9852:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9855:4:19","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9845:6:19"},"nodeType":"YulFunctionCall","src":"9845:15:19"},"nodeType":"YulExpressionStatement","src":"9845:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9876:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9879:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9869:6:19"},"nodeType":"YulFunctionCall","src":"9869:15:19"},"nodeType":"YulExpressionStatement","src":"9869:15:19"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"9710:180:19"},{"body":{"nodeType":"YulBlock","src":"9924:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9941:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9944:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9934:6:19"},"nodeType":"YulFunctionCall","src":"9934:88:19"},"nodeType":"YulExpressionStatement","src":"9934:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10038:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10041:4:19","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10031:6:19"},"nodeType":"YulFunctionCall","src":"10031:15:19"},"nodeType":"YulExpressionStatement","src":"10031:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10062:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10065:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10055:6:19"},"nodeType":"YulFunctionCall","src":"10055:15:19"},"nodeType":"YulExpressionStatement","src":"10055:15:19"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"9896:180:19"},{"body":{"nodeType":"YulBlock","src":"10171:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10188:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10191:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10181:6:19"},"nodeType":"YulFunctionCall","src":"10181:12:19"},"nodeType":"YulExpressionStatement","src":"10181:12:19"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"10082:117:19"},{"body":{"nodeType":"YulBlock","src":"10294:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10311:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10314:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10304:6:19"},"nodeType":"YulFunctionCall","src":"10304:12:19"},"nodeType":"YulExpressionStatement","src":"10304:12:19"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"10205:117:19"},{"body":{"nodeType":"YulBlock","src":"10417:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10434:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10437:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10427:6:19"},"nodeType":"YulFunctionCall","src":"10427:12:19"},"nodeType":"YulExpressionStatement","src":"10427:12:19"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"10328:117:19"},{"body":{"nodeType":"YulBlock","src":"10540:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10557:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10560:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10550:6:19"},"nodeType":"YulFunctionCall","src":"10550:12:19"},"nodeType":"YulExpressionStatement","src":"10550:12:19"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"10451:117:19"},{"body":{"nodeType":"YulBlock","src":"10622:54:19","statements":[{"nodeType":"YulAssignment","src":"10632:38:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10650:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"10657:2:19","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10646:3:19"},"nodeType":"YulFunctionCall","src":"10646:14:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10666:2:19","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10662:3:19"},"nodeType":"YulFunctionCall","src":"10662:7:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10642:3:19"},"nodeType":"YulFunctionCall","src":"10642:28:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10632:6:19"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10605:5:19","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"10615:6:19","type":""}],"src":"10574:102:19"},{"body":{"nodeType":"YulBlock","src":"10733:51:19","statements":[{"nodeType":"YulAssignment","src":"10743:34:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10768:1:19","type":"","value":"1"},{"name":"value","nodeType":"YulIdentifier","src":"10771:5:19"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"10764:3:19"},"nodeType":"YulFunctionCall","src":"10764:13:19"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"10743:8:19"}]}]},"name":"shift_right_1_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10714:5:19","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"10724:8:19","type":""}],"src":"10682:102:19"},{"body":{"nodeType":"YulBlock","src":"10896:119:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10918:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"10926:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10914:3:19"},"nodeType":"YulFunctionCall","src":"10914:14:19"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"10930:34:19","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10907:6:19"},"nodeType":"YulFunctionCall","src":"10907:58:19"},"nodeType":"YulExpressionStatement","src":"10907:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10986:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"10994:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10982:3:19"},"nodeType":"YulFunctionCall","src":"10982:15:19"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"10999:8:19","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10975:6:19"},"nodeType":"YulFunctionCall","src":"10975:33:19"},"nodeType":"YulExpressionStatement","src":"10975:33:19"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10888:6:19","type":""}],"src":"10790:225:19"},{"body":{"nodeType":"YulBlock","src":"11127:76:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11149:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"11157:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11145:3:19"},"nodeType":"YulFunctionCall","src":"11145:14:19"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"11161:34:19","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11138:6:19"},"nodeType":"YulFunctionCall","src":"11138:58:19"},"nodeType":"YulExpressionStatement","src":"11138:58:19"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11119:6:19","type":""}],"src":"11021:182:19"},{"body":{"nodeType":"YulBlock","src":"11252:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"11309:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11318:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11321:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11311:6:19"},"nodeType":"YulFunctionCall","src":"11311:12:19"},"nodeType":"YulExpressionStatement","src":"11311:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11275:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11300:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"11282:17:19"},"nodeType":"YulFunctionCall","src":"11282:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11272:2:19"},"nodeType":"YulFunctionCall","src":"11272:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11265:6:19"},"nodeType":"YulFunctionCall","src":"11265:43:19"},"nodeType":"YulIf","src":"11262:2:19"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11245:5:19","type":""}],"src":"11209:122:19"},{"body":{"nodeType":"YulBlock","src":"11380:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"11437:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11446:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11449:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11439:6:19"},"nodeType":"YulFunctionCall","src":"11439:12:19"},"nodeType":"YulExpressionStatement","src":"11439:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11403:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11428:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11410:17:19"},"nodeType":"YulFunctionCall","src":"11410:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11400:2:19"},"nodeType":"YulFunctionCall","src":"11400:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11393:6:19"},"nodeType":"YulFunctionCall","src":"11393:43:19"},"nodeType":"YulIf","src":"11390:2:19"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11373:5:19","type":""}],"src":"11337:122:19"}]},"contents":"{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100f55760003560e01c80638c8885c811610097578063de26c4a111610066578063de26c4a114610238578063f2fde38b14610268578063f45e65d814610284578063fe173b97146102a2576100f5565b80638c8885c8146101c65780638da5cb5b146101e2578063bede39b514610200578063bf1fe4201461021c576100f5565b806349948e0e116100d357806349948e0e14610152578063519b4bd31461018257806370465597146101a0578063715018a6146101bc576100f5565b80630c18c162146100fa578063313ce567146101185780633577afc514610136575b600080fd5b6101026102c0565b60405161010f9190610973565b60405180910390f35b6101206102c6565b60405161012d9190610973565b60405180910390f35b610150600480360381019061014b9190610887565b6102cc565b005b61016c6004803603810190610167919061083e565b610315565b6040516101799190610973565b60405180910390f35b61018a610377565b6040516101979190610973565b60405180910390f35b6101ba60048036038101906101b59190610887565b61037d565b005b6101c46103c6565b005b6101e060048036038101906101db9190610887565b6103da565b005b6101ea610423565b6040516101f79190610918565b60405180910390f35b61021a60048036038101906102159190610887565b61044c565b005b61023660048036038101906102319190610887565b610495565b005b610252600480360381019061024d919061083e565b6104de565b60405161025f9190610973565b60405180910390f35b610282600480360381019061027d9190610811565b61059d565b005b61028c610621565b6040516102999190610973565b60405180910390f35b6102aa610627565b6040516102b79190610973565b60405180910390f35b60035481565b60055481565b6102d461062d565b806003819055507f32740b35c0ea213650f60d44366b4fb211c9033b50714e4a1d34e65d5beb9bb48160405161030a9190610973565b60405180910390a150565b600080610321836104de565b90506000600254826103339190610bed565b90506000600554600a6103469190610acf565b90506000600454836103589190610bed565b9050600082826103689190610a4b565b90508095505050505050919050565b60025481565b61038561062d565b806004819055507f3336cd9708eaf2769a0f0dc0679f30e80f15dcd88d1921b5a16858e8b85c591a816040516103bb9190610973565b60405180910390a150565b6103ce61062d565b6103d860006106ab565b565b6103e261062d565b806005819055507fd68112a8707e326d08be3656b528c1bcc5bbbfc47f4177e2179b14d8640838c1816040516104189190610973565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61045461062d565b806002819055507f351fb23757bb5ea0546c85b7996ddd7155f96b939ebaa5ff7bc49c75f27f2c448160405161048a9190610973565b60405180910390a150565b61049d61062d565b806001819055507ffcdccc6074c6c42e4bd578aa9870c697dc976a270968452d2b8c8dc369fae396816040516104d39190610973565b60405180910390a150565b6000806000905060005b835181101561057357600060f81b84828151811061050957610508610d6a565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156105505760048261054991906109f5565b9150610560565b60108261055d91906109f5565b91505b808061056b90610cc3565b9150506104e8565b5060006003548261058491906109f5565b90506104408161059491906109f5565b92505050919050565b6105a561062d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610615576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060c90610933565b60405180910390fd5b61061e816106ab565b50565b60045481565b60015481565b61063561076f565b73ffffffffffffffffffffffffffffffffffffffff16610653610423565b73ffffffffffffffffffffffffffffffffffffffff16146106a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a090610953565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600061078a610785846109b3565b61098e565b9050828152602081018484840111156107a6576107a5610dcd565b5b6107b1848285610c83565b509392505050565b6000813590506107c881610e72565b92915050565b600082601f8301126107e3576107e2610dc8565b5b81356107f3848260208601610777565b91505092915050565b60008135905061080b81610e89565b92915050565b60006020828403121561082757610826610dd7565b5b6000610835848285016107b9565b91505092915050565b60006020828403121561085457610853610dd7565b5b600082013567ffffffffffffffff81111561087257610871610dd2565b5b61087e848285016107ce565b91505092915050565b60006020828403121561089d5761089c610dd7565b5b60006108ab848285016107fc565b91505092915050565b6108bd81610c47565b82525050565b60006108d06026836109e4565b91506108db82610dfa565b604082019050919050565b60006108f36020836109e4565b91506108fe82610e49565b602082019050919050565b61091281610c79565b82525050565b600060208201905061092d60008301846108b4565b92915050565b6000602082019050818103600083015261094c816108c3565b9050919050565b6000602082019050818103600083015261096c816108e6565b9050919050565b60006020820190506109886000830184610909565b92915050565b60006109986109a9565b90506109a48282610c92565b919050565b6000604051905090565b600067ffffffffffffffff8211156109ce576109cd610d99565b5b6109d782610ddc565b9050602081019050919050565b600082825260208201905092915050565b6000610a0082610c79565b9150610a0b83610c79565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a4057610a3f610d0c565b5b828201905092915050565b6000610a5682610c79565b9150610a6183610c79565b925082610a7157610a70610d3b565b5b828204905092915050565b6000808291508390505b6001851115610ac657808604811115610aa257610aa1610d0c565b5b6001851615610ab15780820291505b8081029050610abf85610ded565b9450610a86565b94509492505050565b6000610ada82610c79565b9150610ae583610c79565b9250610b127fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610b1a565b905092915050565b600082610b2a5760019050610be6565b81610b385760009050610be6565b8160018114610b4e5760028114610b5857610b87565b6001915050610be6565b60ff841115610b6a57610b69610d0c565b5b8360020a915084821115610b8157610b80610d0c565b5b50610be6565b5060208310610133831016604e8410600b8410161715610bbc5782820a905083811115610bb757610bb6610d0c565b5b610be6565b610bc98484846001610a7c565b92509050818404811115610be057610bdf610d0c565b5b81810290505b9392505050565b6000610bf882610c79565b9150610c0383610c79565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c3c57610c3b610d0c565b5b828202905092915050565b6000610c5282610c59565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b610c9b82610ddc565b810181811067ffffffffffffffff82111715610cba57610cb9610d99565b5b80604052505050565b6000610cce82610c79565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d0157610d00610d0c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610e7b81610c47565b8114610e8657600080fd5b50565b610e9281610c79565b8114610e9d57600080fd5b5056fea264697066735822122059b815e688e059bd10532178f265e9993e6731be76ea0985f75668cb163ff99364736f6c63430008060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C8885C8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDE26C4A1 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xDE26C4A1 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0xF45E65D8 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xFE173B97 EQ PUSH2 0x2A2 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x8C8885C8 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0xBEDE39B5 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xBF1FE420 EQ PUSH2 0x21C JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x49948E0E GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x49948E0E EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x519B4BD3 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x70465597 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1BC JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0xC18C162 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x3577AFC5 EQ PUSH2 0x136 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x2C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x887 JUMP JUMPDEST PUSH2 0x2CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x83E JUMP JUMPDEST PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x377 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x887 JUMP JUMPDEST PUSH2 0x37D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH2 0x3C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x887 JUMP JUMPDEST PUSH2 0x3DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EA PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x918 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x887 JUMP JUMPDEST PUSH2 0x44C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x236 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x887 JUMP JUMPDEST PUSH2 0x495 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x83E JUMP JUMPDEST PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x282 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x811 JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28C PUSH2 0x621 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH2 0x627 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2D4 PUSH2 0x62D JUMP JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x32740B35C0EA213650F60D44366B4FB211C9033B50714E4A1D34E65D5BEB9BB4 DUP2 PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x321 DUP4 PUSH2 0x4DE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH2 0x333 SWAP2 SWAP1 PUSH2 0xBED JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 SLOAD PUSH1 0xA PUSH2 0x346 SWAP2 SWAP1 PUSH2 0xACF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x4 SLOAD DUP4 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0xBED JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 DUP3 PUSH2 0x368 SWAP2 SWAP1 PUSH2 0xA4B JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x385 PUSH2 0x62D JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0x3336CD9708EAF2769A0F0DC0679F30E80F15DCD88D1921B5A16858E8B85C591A DUP2 PUSH1 0x40 MLOAD PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x3CE PUSH2 0x62D JUMP JUMPDEST PUSH2 0x3D8 PUSH1 0x0 PUSH2 0x6AB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3E2 PUSH2 0x62D JUMP JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH32 0xD68112A8707E326D08BE3656B528C1BCC5BBBFC47F4177E2179B14D8640838C1 DUP2 PUSH1 0x40 MLOAD PUSH2 0x418 SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x454 PUSH2 0x62D JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x351FB23757BB5EA0546C85B7996DDD7155F96B939EBAA5FF7BC49C75F27F2C44 DUP2 PUSH1 0x40 MLOAD PUSH2 0x48A SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x49D PUSH2 0x62D JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0xFCDCCC6074C6C42E4BD578AA9870C697DC976A270968452D2B8C8DC369FAE396 DUP2 PUSH1 0x40 MLOAD PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x573 JUMPI PUSH1 0x0 PUSH1 0xF8 SHL DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x509 JUMPI PUSH2 0x508 PUSH2 0xD6A JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ ISZERO PUSH2 0x550 JUMPI PUSH1 0x4 DUP3 PUSH2 0x549 SWAP2 SWAP1 PUSH2 0x9F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x560 JUMP JUMPDEST PUSH1 0x10 DUP3 PUSH2 0x55D SWAP2 SWAP1 PUSH2 0x9F5 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x56B SWAP1 PUSH2 0xCC3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x3 SLOAD DUP3 PUSH2 0x584 SWAP2 SWAP1 PUSH2 0x9F5 JUMP JUMPDEST SWAP1 POP PUSH2 0x440 DUP2 PUSH2 0x594 SWAP2 SWAP1 PUSH2 0x9F5 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A5 PUSH2 0x62D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x615 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60C SWAP1 PUSH2 0x933 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x61E DUP2 PUSH2 0x6AB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x635 PUSH2 0x76F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x653 PUSH2 0x423 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A0 SWAP1 PUSH2 0x953 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78A PUSH2 0x785 DUP5 PUSH2 0x9B3 JUMP JUMPDEST PUSH2 0x98E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x7A6 JUMPI PUSH2 0x7A5 PUSH2 0xDCD JUMP JUMPDEST JUMPDEST PUSH2 0x7B1 DUP5 DUP3 DUP6 PUSH2 0xC83 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7C8 DUP2 PUSH2 0xE72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7E3 JUMPI PUSH2 0x7E2 PUSH2 0xDC8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7F3 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x777 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x80B DUP2 PUSH2 0xE89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x827 JUMPI PUSH2 0x826 PUSH2 0xDD7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x835 DUP5 DUP3 DUP6 ADD PUSH2 0x7B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x854 JUMPI PUSH2 0x853 PUSH2 0xDD7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x872 JUMPI PUSH2 0x871 PUSH2 0xDD2 JUMP JUMPDEST JUMPDEST PUSH2 0x87E DUP5 DUP3 DUP6 ADD PUSH2 0x7CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x89D JUMPI PUSH2 0x89C PUSH2 0xDD7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8AB DUP5 DUP3 DUP6 ADD PUSH2 0x7FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8BD DUP2 PUSH2 0xC47 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D0 PUSH1 0x26 DUP4 PUSH2 0x9E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x8DB DUP3 PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F3 PUSH1 0x20 DUP4 PUSH2 0x9E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x8FE DUP3 PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x912 DUP2 PUSH2 0xC79 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x92D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x94C DUP2 PUSH2 0x8C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x96C DUP2 PUSH2 0x8E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x988 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x909 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x998 PUSH2 0x9A9 JUMP JUMPDEST SWAP1 POP PUSH2 0x9A4 DUP3 DUP3 PUSH2 0xC92 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x9CE JUMPI PUSH2 0x9CD PUSH2 0xD99 JUMP JUMPDEST JUMPDEST PUSH2 0x9D7 DUP3 PUSH2 0xDDC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA00 DUP3 PUSH2 0xC79 JUMP JUMPDEST SWAP2 POP PUSH2 0xA0B DUP4 PUSH2 0xC79 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xA40 JUMPI PUSH2 0xA3F PUSH2 0xD0C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA56 DUP3 PUSH2 0xC79 JUMP JUMPDEST SWAP2 POP PUSH2 0xA61 DUP4 PUSH2 0xC79 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xA71 JUMPI PUSH2 0xA70 PUSH2 0xD3B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xAC6 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xAA2 JUMPI PUSH2 0xAA1 PUSH2 0xD0C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xAB1 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xABF DUP6 PUSH2 0xDED JUMP JUMPDEST SWAP5 POP PUSH2 0xA86 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADA DUP3 PUSH2 0xC79 JUMP JUMPDEST SWAP2 POP PUSH2 0xAE5 DUP4 PUSH2 0xC79 JUMP JUMPDEST SWAP3 POP PUSH2 0xB12 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xB1A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xB2A JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xBE6 JUMP JUMPDEST DUP2 PUSH2 0xB38 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xBE6 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xB4E JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xB58 JUMPI PUSH2 0xB87 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xB6A JUMPI PUSH2 0xB69 PUSH2 0xD0C JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xB81 JUMPI PUSH2 0xB80 PUSH2 0xD0C JUMP JUMPDEST JUMPDEST POP PUSH2 0xBE6 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xBBC JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xBB7 JUMPI PUSH2 0xBB6 PUSH2 0xD0C JUMP JUMPDEST JUMPDEST PUSH2 0xBE6 JUMP JUMPDEST PUSH2 0xBC9 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xA7C JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xBE0 JUMPI PUSH2 0xBDF PUSH2 0xD0C JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF8 DUP3 PUSH2 0xC79 JUMP JUMPDEST SWAP2 POP PUSH2 0xC03 DUP4 PUSH2 0xC79 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xC3C JUMPI PUSH2 0xC3B PUSH2 0xD0C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC52 DUP3 PUSH2 0xC59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0xC9B DUP3 PUSH2 0xDDC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xCBA JUMPI PUSH2 0xCB9 PUSH2 0xD99 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCCE DUP3 PUSH2 0xC79 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xD01 JUMPI PUSH2 0xD00 PUSH2 0xD0C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xE7B DUP2 PUSH2 0xC47 JUMP JUMPDEST DUP2 EQ PUSH2 0xE86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xE92 DUP2 PUSH2 0xC79 JUMP JUMPDEST DUP2 EQ PUSH2 0xE9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0xB8 ISZERO 0xE6 DUP9 0xE0 MSIZE 0xBD LT MSTORE8 0x21 PUSH25 0xF265E9993E6731BE76EA0985F75668CB163FF99364736F6C63 NUMBER STOP ADDMOD MOD STOP CALLER ","sourceMap":"714:4541:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;990:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1122;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2449:135;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3456:322;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;902:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2736:123;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1824:101:16;;;:::i;:::-;;3017:135:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1201:85:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2156:135:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1858;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4877:376;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:198:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1055:21:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;846:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;990;;;;:::o;1122:::-;;;;:::o;2449:135::-;1094:13:16;:11;:13::i;:::-;2527:9:10::1;2516:8;:20;;;;2551:26;2567:9;2551:26;;;;;;:::i;:::-;;;;;;;;2449:135:::0;:::o;3456:322::-;3515:7;3534:17;3554:19;3567:5;3554:12;:19::i;:::-;3534:39;;3583:13;3611:9;;3599;:21;;;;:::i;:::-;3583:37;;3630:15;3652:8;;3648:2;:12;;;;:::i;:::-;3630:30;;3670:16;3697:6;;3689:5;:14;;;;:::i;:::-;3670:33;;3713:14;3741:7;3730:8;:18;;;;:::i;:::-;3713:35;;3765:6;3758:13;;;;;;;3456:322;;;:::o;902:24::-;;;;:::o;2736:123::-;1094:13:16;:11;:13::i;:::-;2808:7:10::1;2799:6;:16;;;;2830:22;2844:7;2830:22;;;;;;:::i;:::-;;;;;;;;2736:123:::0;:::o;1824:101:16:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;3017:135:10:-;1094:13:16;:11;:13::i;:::-;3095:9:10::1;3084:8;:20;;;;3119:26;3135:9;3119:26;;;;;;:::i;:::-;;;;;;;;3017:135:::0;:::o;1201:85:16:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2156:135:10:-;1094:13:16;:11;:13::i;:::-;2235:8:10::1;2223:9;:20;;;;2258:26;2275:8;2258:26;;;;;;:::i;:::-;;;;;;;;2156:135:::0;:::o;1858:::-;1094:13:16;:11;:13::i;:::-;1936:9:10::1;1925:8;:20;;;;1960:26;1976:9;1960:26;;;;;;:::i;:::-;;;;;;;;1858:135:::0;:::o;4877:376::-;4940:7;4959:13;4975:1;4959:17;;4991:9;4986:179;5010:5;:12;5006:1;:16;4986:179;;;5059:1;5047:13;;:5;5053:1;5047:8;;;;;;;;:::i;:::-;;;;;;;;;;:13;;;;5043:112;;;5089:1;5080:10;;;;;:::i;:::-;;;5043:112;;;5138:2;5129:11;;;;;:::i;:::-;;;5043:112;5024:3;;;;;:::i;:::-;;;;4986:179;;;;5174:16;5201:8;;5193:5;:16;;;;:::i;:::-;5174:35;;5238:7;5226:8;:20;;;;:::i;:::-;5219:27;;;;4877:376;;;:::o;2074:198:16:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;;;2154:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1055:21:10:-;;;;:::o;846:23::-;;;;:::o;1359:130:16:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2426:187::-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;640:96:17:-;693:7;719:10;712:17;;640:96;:::o;7:410:19:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:2;;;280:79;;:::i;:::-;249:2;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;475:87;;;;:::o;581:338::-;636:5;685:3;678:4;670:6;666:17;662:27;652:2;;693:79;;:::i;:::-;652:2;810:6;797:20;835:78;909:3;901:6;894:4;886:6;882:17;835:78;:::i;:::-;826:87;;642:277;;;;;:::o;925:139::-;971:5;1009:6;996:20;987:29;;1025:33;1052:5;1025:33;:::i;:::-;977:87;;;;:::o;1070:329::-;1129:6;1178:2;1166:9;1157:7;1153:23;1149:32;1146:2;;;1184:79;;:::i;:::-;1146:2;1304:1;1329:53;1374:7;1365:6;1354:9;1350:22;1329:53;:::i;:::-;1319:63;;1275:117;1136:263;;;;:::o;1405:507::-;1473:6;1522:2;1510:9;1501:7;1497:23;1493:32;1490:2;;;1528:79;;:::i;:::-;1490:2;1676:1;1665:9;1661:17;1648:31;1706:18;1698:6;1695:30;1692:2;;;1728:79;;:::i;:::-;1692:2;1833:62;1887:7;1878:6;1867:9;1863:22;1833:62;:::i;:::-;1823:72;;1619:286;1480:432;;;;:::o;1918:329::-;1977:6;2026:2;2014:9;2005:7;2001:23;1997:32;1994:2;;;2032:79;;:::i;:::-;1994:2;2152:1;2177:53;2222:7;2213:6;2202:9;2198:22;2177:53;:::i;:::-;2167:63;;2123:117;1984:263;;;;:::o;2253:118::-;2340:24;2358:5;2340:24;:::i;:::-;2335:3;2328:37;2318:53;;:::o;2377:366::-;2519:3;2540:67;2604:2;2599:3;2540:67;:::i;:::-;2533:74;;2616:93;2705:3;2616:93;:::i;:::-;2734:2;2729:3;2725:12;2718:19;;2523:220;;;:::o;2749:366::-;2891:3;2912:67;2976:2;2971:3;2912:67;:::i;:::-;2905:74;;2988:93;3077:3;2988:93;:::i;:::-;3106:2;3101:3;3097:12;3090:19;;2895:220;;;:::o;3121:118::-;3208:24;3226:5;3208:24;:::i;:::-;3203:3;3196:37;3186:53;;:::o;3245:222::-;3338:4;3376:2;3365:9;3361:18;3353:26;;3389:71;3457:1;3446:9;3442:17;3433:6;3389:71;:::i;:::-;3343:124;;;;:::o;3473:419::-;3639:4;3677:2;3666:9;3662:18;3654:26;;3726:9;3720:4;3716:20;3712:1;3701:9;3697:17;3690:47;3754:131;3880:4;3754:131;:::i;:::-;3746:139;;3644:248;;;:::o;3898:419::-;4064:4;4102:2;4091:9;4087:18;4079:26;;4151:9;4145:4;4141:20;4137:1;4126:9;4122:17;4115:47;4179:131;4305:4;4179:131;:::i;:::-;4171:139;;4069:248;;;:::o;4323:222::-;4416:4;4454:2;4443:9;4439:18;4431:26;;4467:71;4535:1;4524:9;4520:17;4511:6;4467:71;:::i;:::-;4421:124;;;;:::o;4551:129::-;4585:6;4612:20;;:::i;:::-;4602:30;;4641:33;4669:4;4661:6;4641:33;:::i;:::-;4592:88;;;:::o;4686:75::-;4719:6;4752:2;4746:9;4736:19;;4726:35;:::o;4767:307::-;4828:4;4918:18;4910:6;4907:30;4904:2;;;4940:18;;:::i;:::-;4904:2;4978:29;5000:6;4978:29;:::i;:::-;4970:37;;5062:4;5056;5052:15;5044:23;;4833:241;;;:::o;5080:169::-;5164:11;5198:6;5193:3;5186:19;5238:4;5233:3;5229:14;5214:29;;5176:73;;;;:::o;5255:305::-;5295:3;5314:20;5332:1;5314:20;:::i;:::-;5309:25;;5348:20;5366:1;5348:20;:::i;:::-;5343:25;;5502:1;5434:66;5430:74;5427:1;5424:81;5421:2;;;5508:18;;:::i;:::-;5421:2;5552:1;5549;5545:9;5538:16;;5299:261;;;;:::o;5566:185::-;5606:1;5623:20;5641:1;5623:20;:::i;:::-;5618:25;;5657:20;5675:1;5657:20;:::i;:::-;5652:25;;5696:1;5686:2;;5701:18;;:::i;:::-;5686:2;5743:1;5740;5736:9;5731:14;;5608:143;;;;:::o;5757:848::-;5818:5;5825:4;5849:6;5840:15;;5873:5;5864:14;;5887:712;5908:1;5898:8;5895:15;5887:712;;;6003:4;5998:3;5994:14;5988:4;5985:24;5982:2;;;6012:18;;:::i;:::-;5982:2;6062:1;6052:8;6048:16;6045:2;;;6477:4;6470:5;6466:16;6457:25;;6045:2;6527:4;6521;6517:15;6509:23;;6557:32;6580:8;6557:32;:::i;:::-;6545:44;;5887:712;;;5830:775;;;;;;;:::o;6611:285::-;6671:5;6695:23;6713:4;6695:23;:::i;:::-;6687:31;;6739:27;6757:8;6739:27;:::i;:::-;6727:39;;6785:104;6822:66;6812:8;6806:4;6785:104;:::i;:::-;6776:113;;6677:219;;;;:::o;6902:1073::-;6956:5;7147:8;7137:2;;7168:1;7159:10;;7170:5;;7137:2;7196:4;7186:2;;7213:1;7204:10;;7215:5;;7186:2;7282:4;7330:1;7325:27;;;;7366:1;7361:191;;;;7275:277;;7325:27;7343:1;7334:10;;7345:5;;;7361:191;7406:3;7396:8;7393:17;7390:2;;;7413:18;;:::i;:::-;7390:2;7462:8;7459:1;7455:16;7446:25;;7497:3;7490:5;7487:14;7484:2;;;7504:18;;:::i;:::-;7484:2;7537:5;;;7275:277;;7661:2;7651:8;7648:16;7642:3;7636:4;7633:13;7629:36;7611:2;7601:8;7598:16;7593:2;7587:4;7584:12;7580:35;7564:111;7561:2;;;7717:8;7711:4;7707:19;7698:28;;7752:3;7745:5;7742:14;7739:2;;;7759:18;;:::i;:::-;7739:2;7792:5;;7561:2;7832:42;7870:3;7860:8;7854:4;7851:1;7832:42;:::i;:::-;7817:57;;;;7906:4;7901:3;7897:14;7890:5;7887:25;7884:2;;;7915:18;;:::i;:::-;7884:2;7964:4;7957:5;7953:16;7944:25;;6962:1013;;;;;;:::o;7981:348::-;8021:7;8044:20;8062:1;8044:20;:::i;:::-;8039:25;;8078:20;8096:1;8078:20;:::i;:::-;8073:25;;8266:1;8198:66;8194:74;8191:1;8188:81;8183:1;8176:9;8169:17;8165:105;8162:2;;;8273:18;;:::i;:::-;8162:2;8321:1;8318;8314:9;8303:20;;8029:300;;;;:::o;8335:96::-;8372:7;8401:24;8419:5;8401:24;:::i;:::-;8390:35;;8380:51;;;:::o;8437:126::-;8474:7;8514:42;8507:5;8503:54;8492:65;;8482:81;;;:::o;8569:77::-;8606:7;8635:5;8624:16;;8614:32;;;:::o;8652:154::-;8736:6;8731:3;8726;8713:30;8798:1;8789:6;8784:3;8780:16;8773:27;8703:103;;;:::o;8812:281::-;8895:27;8917:4;8895:27;:::i;:::-;8887:6;8883:40;9025:6;9013:10;9010:22;8989:18;8977:10;8974:34;8971:62;8968:2;;;9036:18;;:::i;:::-;8968:2;9076:10;9072:2;9065:22;8855:238;;;:::o;9099:233::-;9138:3;9161:24;9179:5;9161:24;:::i;:::-;9152:33;;9207:66;9200:5;9197:77;9194:2;;;9277:18;;:::i;:::-;9194:2;9324:1;9317:5;9313:13;9306:20;;9142:190;;;:::o;9338:180::-;9386:77;9383:1;9376:88;9483:4;9480:1;9473:15;9507:4;9504:1;9497:15;9524:180;9572:77;9569:1;9562:88;9669:4;9666:1;9659:15;9693:4;9690:1;9683:15;9710:180;9758:77;9755:1;9748:88;9855:4;9852:1;9845:15;9879:4;9876:1;9869:15;9896:180;9944:77;9941:1;9934:88;10041:4;10038:1;10031:15;10065:4;10062:1;10055:15;10082:117;10191:1;10188;10181:12;10205:117;10314:1;10311;10304:12;10328:117;10437:1;10434;10427:12;10451:117;10560:1;10557;10550:12;10574:102;10615:6;10666:2;10662:7;10657:2;10650:5;10646:14;10642:28;10632:38;;10622:54;;;:::o;10682:102::-;10724:8;10771:5;10768:1;10764:13;10743:34;;10733:51;;;:::o;10790:225::-;10930:34;10926:1;10918:6;10914:14;10907:58;10999:8;10994:2;10986:6;10982:15;10975:33;10896:119;:::o;11021:182::-;11161:34;11157:1;11149:6;11145:14;11138:58;11127:76;:::o;11209:122::-;11282:24;11300:5;11282:24;:::i;:::-;11275:5;11272:35;11262:2;;11321:1;11318;11311:12;11262:2;11252:79;:::o;11337:122::-;11410:24;11428:5;11410:24;:::i;:::-;11403:5;11400:35;11390:2;;11449:1;11446;11439:12;11390:2;11380:79;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"759600","executionCost":"infinite","totalCost":"infinite"},"external":{"decimals()":"2475","gasPrice()":"2517","getL1Fee(bytes)":"infinite","getL1GasUsed(bytes)":"infinite","l1BaseFee()":"2474","overhead()":"2453","owner()":"2567","renounceOwnership()":"30487","scalar()":"2495","setDecimals(uint256)":"infinite","setGasPrice(uint256)":"infinite","setL1BaseFee(uint256)":"infinite","setOverhead(uint256)":"infinite","setScalar(uint256)":"infinite","transferOwnership(address)":"30791"}},"methodIdentifiers":{"decimals()":"313ce567","gasPrice()":"fe173b97","getL1Fee(bytes)":"49948e0e","getL1GasUsed(bytes)":"de26c4a1","l1BaseFee()":"519b4bd3","overhead()":"0c18c162","owner()":"8da5cb5b","renounceOwnership()":"715018a6","scalar()":"f45e65d8","setDecimals(uint256)":"8c8885c8","setGasPrice(uint256)":"bf1fe420","setL1BaseFee(uint256)":"bede39b5","setOverhead(uint256)":"3577afc5","setScalar(uint256)":"70465597","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"DecimalsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"GasPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"L1BaseFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"OverheadUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ScalarUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"getL1Fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"getL1GasUsed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l1BaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"overhead\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scalar\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"setDecimals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gasPrice\",\"type\":\"uint256\"}],\"name\":\"setGasPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_baseFee\",\"type\":\"uint256\"}],\"name\":\"setL1BaseFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_overhead\",\"type\":\"uint256\"}],\"name\":\"setOverhead\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_scalar\",\"type\":\"uint256\"}],\"name\":\"setScalar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract exposes the current l2 gas price, a measure of how congested the network currently is. This measure is used by the Sequencer to determine what fee to charge for transactions. When the system is more congested, the l2 gas price will increase and fees will also increase as a result. All public variables are set while generating the initial L2 state. The constructor doesn't run in practice as the L2 state generation script uses the deployed bytecode instead of running the initcode.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_owner\":\"Address that will initially own this contract.\"}},\"getL1Fee(bytes)\":{\"params\":{\"_data\":\"Unsigned RLP encoded tx, 6 elements\"},\"returns\":{\"_0\":\"L1 fee that should be paid for the tx\"}},\"getL1GasUsed(bytes)\":{\"params\":{\"_data\":\"Unsigned RLP encoded tx, 6 elements\"},\"returns\":{\"_0\":\"Amount of L1 gas used for a transaction\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setDecimals(uint256)\":{\"params\":{\"_decimals\":\"New decimals\"}},\"setGasPrice(uint256)\":{\"params\":{\"_gasPrice\":\"New l2 gas price.\"}},\"setL1BaseFee(uint256)\":{\"params\":{\"_baseFee\":\"New l1 base fee\"}},\"setOverhead(uint256)\":{\"params\":{\"_overhead\":\"New overhead\"}},\"setScalar(uint256)\":{\"params\":{\"_scalar\":\"New scalar\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"OVM_GasPriceOracle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getL1Fee(bytes)\":{\"notice\":\"Computes the L1 portion of the fee based on the size of the RLP encoded tx and the current l1BaseFee\"},\"getL1GasUsed(bytes)\":{\"notice\":\"Computes the amount of L1 gas used for a transaction The overhead represents the per batch gas overhead of posting both transaction and state roots to L1 given larger batch sizes. 4 gas for 0 byte https://github.com/ethereum/go-ethereum/blob/9ada4a2e2c415e6b0b51c50e901336872e028872/params/protocol_params.go#L33 16 gas for non zero byte https://github.com/ethereum/go-ethereum/blob/9ada4a2e2c415e6b0b51c50e901336872e028872/params/protocol_params.go#L87 This will need to be updated if calldata gas prices change Account for the transaction being unsigned Padding is added to account for lack of signature on transaction 1 byte for RLP V prefix 1 byte for V 1 byte for RLP R prefix 32 bytes for R 1 byte for RLP S prefix 32 bytes for S Total: 68 bytes of padding\"},\"setDecimals(uint256)\":{\"notice\":\"Allows the owner to modify the decimals.\"},\"setGasPrice(uint256)\":{\"notice\":\"Allows the owner to modify the l2 gas price.\"},\"setL1BaseFee(uint256)\":{\"notice\":\"Allows the owner to modify the l1 base fee.\"},\"setOverhead(uint256)\":{\"notice\":\"Allows the owner to modify the overhead.\"},\"setScalar(uint256)\":{\"notice\":\"Allows the owner to modify the scalar.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vendor/@eth-optimism/contracts/v0.8.6/contracts/L2/predeploys/OVM_GasPriceOracle.sol\":\"OVM_GasPriceOracle\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vendor/@eth-optimism/contracts/v0.8.6/contracts/L2/predeploys/OVM_GasPriceOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\n/* External Imports */\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/**\\n * @title OVM_GasPriceOracle\\n * @dev This contract exposes the current l2 gas price, a measure of how congested the network\\n * currently is. This measure is used by the Sequencer to determine what fee to charge for\\n * transactions. When the system is more congested, the l2 gas price will increase and fees\\n * will also increase as a result.\\n *\\n * All public variables are set while generating the initial L2 state. The\\n * constructor doesn't run in practice as the L2 state generation script uses\\n * the deployed bytecode instead of running the initcode.\\n */\\ncontract OVM_GasPriceOracle is Ownable {\\n    /*************\\n     * Variables *\\n     *************/\\n\\n    // Current L2 gas price\\n    uint256 public gasPrice;\\n    // Current L1 base fee\\n    uint256 public l1BaseFee;\\n    // Amortized cost of batch submission per transaction\\n    uint256 public overhead;\\n    // Value to scale the fee up by\\n    uint256 public scalar;\\n    // Number of decimals of the scalar\\n    uint256 public decimals;\\n\\n    /***************\\n     * Constructor *\\n     ***************/\\n\\n    /**\\n     * @param _owner Address that will initially own this contract.\\n     */\\n    constructor(address _owner) Ownable() {\\n        transferOwnership(_owner);\\n    }\\n\\n    /**********\\n     * Events *\\n     **********/\\n\\n    event GasPriceUpdated(uint256);\\n    event L1BaseFeeUpdated(uint256);\\n    event OverheadUpdated(uint256);\\n    event ScalarUpdated(uint256);\\n    event DecimalsUpdated(uint256);\\n\\n    /********************\\n     * Public Functions *\\n     ********************/\\n\\n    /**\\n     * Allows the owner to modify the l2 gas price.\\n     * @param _gasPrice New l2 gas price.\\n     */\\n    // slither-disable-next-line external-function\\n    function setGasPrice(uint256 _gasPrice) public onlyOwner {\\n        gasPrice = _gasPrice;\\n        emit GasPriceUpdated(_gasPrice);\\n    }\\n\\n    /**\\n     * Allows the owner to modify the l1 base fee.\\n     * @param _baseFee New l1 base fee\\n     */\\n    // slither-disable-next-line external-function\\n    function setL1BaseFee(uint256 _baseFee) public onlyOwner {\\n        l1BaseFee = _baseFee;\\n        emit L1BaseFeeUpdated(_baseFee);\\n    }\\n\\n    /**\\n     * Allows the owner to modify the overhead.\\n     * @param _overhead New overhead\\n     */\\n    // slither-disable-next-line external-function\\n    function setOverhead(uint256 _overhead) public onlyOwner {\\n        overhead = _overhead;\\n        emit OverheadUpdated(_overhead);\\n    }\\n\\n    /**\\n     * Allows the owner to modify the scalar.\\n     * @param _scalar New scalar\\n     */\\n    // slither-disable-next-line external-function\\n    function setScalar(uint256 _scalar) public onlyOwner {\\n        scalar = _scalar;\\n        emit ScalarUpdated(_scalar);\\n    }\\n\\n    /**\\n     * Allows the owner to modify the decimals.\\n     * @param _decimals New decimals\\n     */\\n    // slither-disable-next-line external-function\\n    function setDecimals(uint256 _decimals) public onlyOwner {\\n        decimals = _decimals;\\n        emit DecimalsUpdated(_decimals);\\n    }\\n\\n    /**\\n     * Computes the L1 portion of the fee\\n     * based on the size of the RLP encoded tx\\n     * and the current l1BaseFee\\n     * @param _data Unsigned RLP encoded tx, 6 elements\\n     * @return L1 fee that should be paid for the tx\\n     */\\n    // slither-disable-next-line external-function\\n    function getL1Fee(bytes memory _data) public view returns (uint256) {\\n        uint256 l1GasUsed = getL1GasUsed(_data);\\n        uint256 l1Fee = l1GasUsed * l1BaseFee;\\n        uint256 divisor = 10**decimals;\\n        uint256 unscaled = l1Fee * scalar;\\n        uint256 scaled = unscaled / divisor;\\n        return scaled;\\n    }\\n\\n    // solhint-disable max-line-length\\n    /**\\n     * Computes the amount of L1 gas used for a transaction\\n     * The overhead represents the per batch gas overhead of\\n     * posting both transaction and state roots to L1 given larger\\n     * batch sizes.\\n     * 4 gas for 0 byte\\n     * https://github.com/ethereum/go-ethereum/blob/9ada4a2e2c415e6b0b51c50e901336872e028872/params/protocol_params.go#L33\\n     * 16 gas for non zero byte\\n     * https://github.com/ethereum/go-ethereum/blob/9ada4a2e2c415e6b0b51c50e901336872e028872/params/protocol_params.go#L87\\n     * This will need to be updated if calldata gas prices change\\n     * Account for the transaction being unsigned\\n     * Padding is added to account for lack of signature on transaction\\n     * 1 byte for RLP V prefix\\n     * 1 byte for V\\n     * 1 byte for RLP R prefix\\n     * 32 bytes for R\\n     * 1 byte for RLP S prefix\\n     * 32 bytes for S\\n     * Total: 68 bytes of padding\\n     * @param _data Unsigned RLP encoded tx, 6 elements\\n     * @return Amount of L1 gas used for a transaction\\n     */\\n    // solhint-enable max-line-length\\n    function getL1GasUsed(bytes memory _data) public view returns (uint256) {\\n        uint256 total = 0;\\n        for (uint256 i = 0; i < _data.length; i++) {\\n            if (_data[i] == 0) {\\n                total += 4;\\n            } else {\\n                total += 16;\\n            }\\n        }\\n        uint256 unsigned = total + overhead;\\n        return unsigned + (68 * 16);\\n    }\\n}\\n\",\"keccak256\":\"0x9c8c09504619b7da966921c82e9376f46ea7579ad9a764d674666f3e923fdd25\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":4890,"contract":"@chainlink/contracts/src/v0.8/vendor/@eth-optimism/contracts/v0.8.6/contracts/L2/predeploys/OVM_GasPriceOracle.sol:OVM_GasPriceOracle","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":1052,"contract":"@chainlink/contracts/src/v0.8/vendor/@eth-optimism/contracts/v0.8.6/contracts/L2/predeploys/OVM_GasPriceOracle.sol:OVM_GasPriceOracle","label":"gasPrice","offset":0,"slot":"1","type":"t_uint256"},{"astId":1054,"contract":"@chainlink/contracts/src/v0.8/vendor/@eth-optimism/contracts/v0.8.6/contracts/L2/predeploys/OVM_GasPriceOracle.sol:OVM_GasPriceOracle","label":"l1BaseFee","offset":0,"slot":"2","type":"t_uint256"},{"astId":1056,"contract":"@chainlink/contracts/src/v0.8/vendor/@eth-optimism/contracts/v0.8.6/contracts/L2/predeploys/OVM_GasPriceOracle.sol:OVM_GasPriceOracle","label":"overhead","offset":0,"slot":"3","type":"t_uint256"},{"astId":1058,"contract":"@chainlink/contracts/src/v0.8/vendor/@eth-optimism/contracts/v0.8.6/contracts/L2/predeploys/OVM_GasPriceOracle.sol:OVM_GasPriceOracle","label":"scalar","offset":0,"slot":"4","type":"t_uint256"},{"astId":1060,"contract":"@chainlink/contracts/src/v0.8/vendor/@eth-optimism/contracts/v0.8.6/contracts/L2/predeploys/OVM_GasPriceOracle.sol:OVM_GasPriceOracle","label":"decimals","offset":0,"slot":"5","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"getL1Fee(bytes)":{"notice":"Computes the L1 portion of the fee based on the size of the RLP encoded tx and the current l1BaseFee"},"getL1GasUsed(bytes)":{"notice":"Computes the amount of L1 gas used for a transaction The overhead represents the per batch gas overhead of posting both transaction and state roots to L1 given larger batch sizes. 4 gas for 0 byte https://github.com/ethereum/go-ethereum/blob/9ada4a2e2c415e6b0b51c50e901336872e028872/params/protocol_params.go#L33 16 gas for non zero byte https://github.com/ethereum/go-ethereum/blob/9ada4a2e2c415e6b0b51c50e901336872e028872/params/protocol_params.go#L87 This will need to be updated if calldata gas prices change Account for the transaction being unsigned Padding is added to account for lack of signature on transaction 1 byte for RLP V prefix 1 byte for V 1 byte for RLP R prefix 32 bytes for R 1 byte for RLP S prefix 32 bytes for S Total: 68 bytes of padding"},"setDecimals(uint256)":{"notice":"Allows the owner to modify the decimals."},"setGasPrice(uint256)":{"notice":"Allows the owner to modify the l2 gas price."},"setL1BaseFee(uint256)":{"notice":"Allows the owner to modify the l1 base fee."},"setOverhead(uint256)":{"notice":"Allows the owner to modify the overhead."},"setScalar(uint256)":{"notice":"Allows the owner to modify the scalar."}},"version":1}}},"@chainlink/contracts/src/v0.8/vrf/VRF.sol":{"VRF":{"abi":[],"devdoc":{"details":"Bibliographic references:Goldberg, et al., \"Verifiable Random Functions (VRFs)\", Internet Draftdraft-irtf-cfrg-vrf-05, IETF, Aug 11 2019,https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05Papadopoulos, et al., \"Making NSEC5 Practical for DNSSEC\", CryptologyePrint Archive, Report 2017/099, https://eprint.iacr.org/2017/099.pdf ****************************************************************************USAGEThe main entry point is _randomValueFromVRFProof. See its docstring. ****************************************************************************PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is computationally indistinguishable to her from a uniformrandom sample from the output space.The purpose of this contract is to perform that verification. ****************************************************************************DESIGN NOTESThe VRF algorithm verified here satisfies the full uniqueness, fullcollision resistance, and full pseudo-randomness security properties.See \"SECURITY PROPERTIES\" below, andhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-3An elliptic curve point is generally represented in the solidity codeas a uint256[2], corresponding to its affine coordinates inGF(FIELD_SIZE).For the sake of efficiency, this implementation deviates from the specin some minor ways:- Keccak hash rather than the SHA256 hash recommended inhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5Keccak costs much less gas on the EVM, and provides similar security.- Secp256k1 curve instead of the P-256 or ED25519 curves recommended inhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5For curve-point multiplication, it's much cheaper to abuse ECRECOVER- _hashToCurve recursively hashes until it finds a curve x-ordinate. Onthe EVM, this is slightly more efficient than the recommendation inhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.1.1step 5, to concatenate with a nonce then hash, and rehash with thenonce updated until a valid x-ordinate is found.- _hashToCurve does not include a cipher version string or the byte 0x1in the hash message, as recommended in step 5.B of the draftstandard. They are unnecessary here because no variation in thecipher suite is allowed.- Similarly, the hash input in _scalarFromCurvePoints does not include acommitment to the cipher suite, either, which differs from step 2 ofhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.3. Also, the hash input is the concatenation of the uncompressedpoints, not the compressed points as recommended in step 3.- In the calculation of the challenge value \"c\", the \"u\" value (i.e.the value computed by Reggie as the nonce times the secp256k1generator point, see steps 5 and 7 ofhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3) is replaced by its ethereum address, i.e. the lower 160 bits of thekeccak hash of the original u. This is because we only verify thecalculation of u up to its address, by abusing ECRECOVER. ****************************************************************************SECURITY PROPERTIESHere are the security properties for this VRF:Full uniqueness: For any seed and valid VRF public key, there isexactly one VRF output which can be proved to come from that seed, inthe sense that the proof will pass _verifyVRFProof.Full collision resistance: It's cryptographically infeasible to findtwo seeds with same VRF output from a fixed, valid VRF keyFull pseudorandomness: Absent the proofs that the VRF outputs arederived from a given seed, the outputs are computationallyindistinguishable from randomness.https://eprint.iacr.org/2017/099.pdf, Appendix B contains the proofsfor these properties.For secp256k1, the key validation described in sectionhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.6is unnecessary, because secp256k1 has cofactor 1, and therepresentation of the public key used here (affine x- and y-ordinatesof the secp256k1 point on the standard y^2=x^3+7 curve) cannot refer tothe point at infinity. ****************************************************************************OTHER SECURITY CONSIDERATIONSThe seed input to the VRF could in principle force an arbitrary amountof work in _hashToCurve, by requiring extra rounds of hashing andchecking whether that's yielded the x ordinate of a secp256k1 point.However, under the Random Oracle Model the probability of choosing apoint which forces n extra rounds in _hashToCurve is 2⁻ⁿ. The base costfor calling _hashToCurve is about 25,000 gas, and each round of checkingfor a valid x ordinate costs about 15,555 gas, so to find a seed forwhich _hashToCurve would cost more than 2,017,000 gas, one would have totry, in expectation, about 2¹²⁸ seeds, which is infeasible for anyforeseeable computational resources. (25,000 + 128 * 15,555 < 2,017,000.)Since the gas block limit for the Ethereum main net is 10,000,000 gas,this means it is infeasible for an adversary to prevent correctoperation of this contract by choosing an adverse seed.(See TestMeasureHashToCurveGasCost for verification of the gas cost for_hashToCurve.)It may be possible to make a secure constant-time _hashToCurve function.See notes in _hashToCurve docstring.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212208efbc6671f16dcb6bbdb4eff716dafe18b9c34cf9bd07ad85344418dc270524664736f6c63430008060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 0xFB 0xC6 PUSH8 0x1F16DCB6BBDB4EFF PUSH18 0x6DAFE18B9C34CF9BD07AD85344418DC27052 CHAINID PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"7182:20011:11:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea26469706673582212208efbc6671f16dcb6bbdb4eff716dafe18b9c34cf9bd07ad85344418dc270524664736f6c63430008060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 0xFB 0xC6 PUSH8 0x1F16DCB6BBDB4EFF PUSH18 0x6DAFE18B9C34CF9BD07AD85344418DC27052 CHAINID PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"7182:20011:11:-:0;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"12600","executionCost":"66","totalCost":"12666"},"internal":{"_affineECAdd(uint256[2] memory,uint256[2] memory,uint256)":"infinite","_bigModExp(uint256,uint256)":"infinite","_ecmulVerify(uint256[2] memory,uint256,uint256[2] memory)":"infinite","_fieldHash(bytes memory)":"infinite","_hashToCurve(uint256[2] memory,uint256)":"infinite","_isOnCurve(uint256[2] memory)":"infinite","_linearCombination(uint256,uint256[2] memory,uint256[2] memory,uint256,uint256[2] memory,uint256[2] memory,uint256)":"infinite","_newCandidateSecp256k1Point(bytes memory)":"infinite","_projectiveECAdd(uint256,uint256,uint256,uint256)":"infinite","_projectiveMul(uint256,uint256,uint256,uint256)":"infinite","_projectiveSub(uint256,uint256,uint256,uint256)":"infinite","_randomValueFromVRFProof(struct VRF.Proof memory,uint256)":"infinite","_scalarFromCurvePoints(uint256[2] memory,uint256[2] memory,uint256[2] memory,address,uint256[2] memory)":"infinite","_squareRoot(uint256)":"infinite","_verifyLinearCombinationWithGenerator(uint256,uint256[2] memory,uint256,address)":"infinite","_verifyVRFProof(uint256[2] memory,uint256[2] memory,uint256,uint256,uint256,address,uint256[2] memory,uint256[2] memory,uint256)":"infinite","_ySquared(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Bibliographic references:Goldberg, et al., \\\"Verifiable Random Functions (VRFs)\\\", Internet Draftdraft-irtf-cfrg-vrf-05, IETF, Aug 11 2019,https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05Papadopoulos, et al., \\\"Making NSEC5 Practical for DNSSEC\\\", CryptologyePrint Archive, Report 2017/099, https://eprint.iacr.org/2017/099.pdf ****************************************************************************USAGEThe main entry point is _randomValueFromVRFProof. See its docstring. ****************************************************************************PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is computationally indistinguishable to her from a uniformrandom sample from the output space.The purpose of this contract is to perform that verification. ****************************************************************************DESIGN NOTESThe VRF algorithm verified here satisfies the full uniqueness, fullcollision resistance, and full pseudo-randomness security properties.See \\\"SECURITY PROPERTIES\\\" below, andhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-3An elliptic curve point is generally represented in the solidity codeas a uint256[2], corresponding to its affine coordinates inGF(FIELD_SIZE).For the sake of efficiency, this implementation deviates from the specin some minor ways:- Keccak hash rather than the SHA256 hash recommended inhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5Keccak costs much less gas on the EVM, and provides similar security.- Secp256k1 curve instead of the P-256 or ED25519 curves recommended inhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5For curve-point multiplication, it's much cheaper to abuse ECRECOVER- _hashToCurve recursively hashes until it finds a curve x-ordinate. Onthe EVM, this is slightly more efficient than the recommendation inhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.1.1step 5, to concatenate with a nonce then hash, and rehash with thenonce updated until a valid x-ordinate is found.- _hashToCurve does not include a cipher version string or the byte 0x1in the hash message, as recommended in step 5.B of the draftstandard. They are unnecessary here because no variation in thecipher suite is allowed.- Similarly, the hash input in _scalarFromCurvePoints does not include acommitment to the cipher suite, either, which differs from step 2 ofhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.3. Also, the hash input is the concatenation of the uncompressedpoints, not the compressed points as recommended in step 3.- In the calculation of the challenge value \\\"c\\\", the \\\"u\\\" value (i.e.the value computed by Reggie as the nonce times the secp256k1generator point, see steps 5 and 7 ofhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3) is replaced by its ethereum address, i.e. the lower 160 bits of thekeccak hash of the original u. This is because we only verify thecalculation of u up to its address, by abusing ECRECOVER. ****************************************************************************SECURITY PROPERTIESHere are the security properties for this VRF:Full uniqueness: For any seed and valid VRF public key, there isexactly one VRF output which can be proved to come from that seed, inthe sense that the proof will pass _verifyVRFProof.Full collision resistance: It's cryptographically infeasible to findtwo seeds with same VRF output from a fixed, valid VRF keyFull pseudorandomness: Absent the proofs that the VRF outputs arederived from a given seed, the outputs are computationallyindistinguishable from randomness.https://eprint.iacr.org/2017/099.pdf, Appendix B contains the proofsfor these properties.For secp256k1, the key validation described in sectionhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.6is unnecessary, because secp256k1 has cofactor 1, and therepresentation of the public key used here (affine x- and y-ordinatesof the secp256k1 point on the standard y^2=x^3+7 curve) cannot refer tothe point at infinity. ****************************************************************************OTHER SECURITY CONSIDERATIONSThe seed input to the VRF could in principle force an arbitrary amountof work in _hashToCurve, by requiring extra rounds of hashing andchecking whether that's yielded the x ordinate of a secp256k1 point.However, under the Random Oracle Model the probability of choosing apoint which forces n extra rounds in _hashToCurve is 2\\u207b\\u207f. The base costfor calling _hashToCurve is about 25,000 gas, and each round of checkingfor a valid x ordinate costs about 15,555 gas, so to find a seed forwhich _hashToCurve would cost more than 2,017,000 gas, one would have totry, in expectation, about 2\\u00b9\\u00b2\\u2078 seeds, which is infeasible for anyforeseeable computational resources. (25,000 + 128 * 15,555 < 2,017,000.)Since the gas block limit for the Ethereum main net is 10,000,000 gas,this means it is infeasible for an adversary to prevent correctoperation of this contract by choosing an adverse seed.(See TestMeasureHashToCurveGasCost for verification of the gas cost for_hashToCurve.)It may be possible to make a secure constant-time _hashToCurve function.See notes in _hashToCurve docstring.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Verification of verifiable-random-function (VRF) proofs, followinghttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3See https://eprint.iacr.org/2017/099.pdf for security proofs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/VRF.sol\":\"VRF\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/VRF.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/** ****************************************************************************\\n  * @notice Verification of verifiable-random-function (VRF) proofs, following\\n  * @notice https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3\\n  * @notice See https://eprint.iacr.org/2017/099.pdf for security proofs.\\n\\n  * @dev Bibliographic references:\\n\\n  * @dev Goldberg, et al., \\\"Verifiable Random Functions (VRFs)\\\", Internet Draft\\n  * @dev draft-irtf-cfrg-vrf-05, IETF, Aug 11 2019,\\n  * @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05\\n\\n  * @dev Papadopoulos, et al., \\\"Making NSEC5 Practical for DNSSEC\\\", Cryptology\\n  * @dev ePrint Archive, Report 2017/099, https://eprint.iacr.org/2017/099.pdf\\n  * ****************************************************************************\\n  * @dev USAGE\\n\\n  * @dev The main entry point is _randomValueFromVRFProof. See its docstring.\\n  * ****************************************************************************\\n  * @dev PURPOSE\\n\\n  * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n  * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n  * @dev making his output up to suit himself. Reggie provides Vera a public key\\n  * @dev to which he knows the secret key. Each time Vera provides a seed to\\n  * @dev Reggie, he gives back a value which is computed completely\\n  * @dev deterministically from the seed and the secret key.\\n\\n  * @dev Reggie provides a proof by which Vera can verify that the output was\\n  * @dev correctly computed once Reggie tells it to her, but without that proof,\\n  * @dev the output is computationally indistinguishable to her from a uniform\\n  * @dev random sample from the output space.\\n\\n  * @dev The purpose of this contract is to perform that verification.\\n  * ****************************************************************************\\n  * @dev DESIGN NOTES\\n\\n  * @dev The VRF algorithm verified here satisfies the full uniqueness, full\\n  * @dev collision resistance, and full pseudo-randomness security properties.\\n  * @dev See \\\"SECURITY PROPERTIES\\\" below, and\\n  * @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-3\\n\\n  * @dev An elliptic curve point is generally represented in the solidity code\\n  * @dev as a uint256[2], corresponding to its affine coordinates in\\n  * @dev GF(FIELD_SIZE).\\n\\n  * @dev For the sake of efficiency, this implementation deviates from the spec\\n  * @dev in some minor ways:\\n\\n  * @dev - Keccak hash rather than the SHA256 hash recommended in\\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5\\n  * @dev   Keccak costs much less gas on the EVM, and provides similar security.\\n\\n  * @dev - Secp256k1 curve instead of the P-256 or ED25519 curves recommended in\\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5\\n  * @dev   For curve-point multiplication, it's much cheaper to abuse ECRECOVER\\n\\n  * @dev - _hashToCurve recursively hashes until it finds a curve x-ordinate. On\\n  * @dev   the EVM, this is slightly more efficient than the recommendation in\\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.1.1\\n  * @dev   step 5, to concatenate with a nonce then hash, and rehash with the\\n  * @dev   nonce updated until a valid x-ordinate is found.\\n\\n  * @dev - _hashToCurve does not include a cipher version string or the byte 0x1\\n  * @dev   in the hash message, as recommended in step 5.B of the draft\\n  * @dev   standard. They are unnecessary here because no variation in the\\n  * @dev   cipher suite is allowed.\\n\\n  * @dev - Similarly, the hash input in _scalarFromCurvePoints does not include a\\n  * @dev   commitment to the cipher suite, either, which differs from step 2 of\\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.3\\n  * @dev   . Also, the hash input is the concatenation of the uncompressed\\n  * @dev   points, not the compressed points as recommended in step 3.\\n\\n  * @dev - In the calculation of the challenge value \\\"c\\\", the \\\"u\\\" value (i.e.\\n  * @dev   the value computed by Reggie as the nonce times the secp256k1\\n  * @dev   generator point, see steps 5 and 7 of\\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3\\n  * @dev   ) is replaced by its ethereum address, i.e. the lower 160 bits of the\\n  * @dev   keccak hash of the original u. This is because we only verify the\\n  * @dev   calculation of u up to its address, by abusing ECRECOVER.\\n  * ****************************************************************************\\n  * @dev   SECURITY PROPERTIES\\n\\n  * @dev Here are the security properties for this VRF:\\n\\n  * @dev Full uniqueness: For any seed and valid VRF public key, there is\\n  * @dev   exactly one VRF output which can be proved to come from that seed, in\\n  * @dev   the sense that the proof will pass _verifyVRFProof.\\n\\n  * @dev Full collision resistance: It's cryptographically infeasible to find\\n  * @dev   two seeds with same VRF output from a fixed, valid VRF key\\n\\n  * @dev Full pseudorandomness: Absent the proofs that the VRF outputs are\\n  * @dev   derived from a given seed, the outputs are computationally\\n  * @dev   indistinguishable from randomness.\\n\\n  * @dev https://eprint.iacr.org/2017/099.pdf, Appendix B contains the proofs\\n  * @dev for these properties.\\n\\n  * @dev For secp256k1, the key validation described in section\\n  * @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.6\\n  * @dev is unnecessary, because secp256k1 has cofactor 1, and the\\n  * @dev representation of the public key used here (affine x- and y-ordinates\\n  * @dev of the secp256k1 point on the standard y^2=x^3+7 curve) cannot refer to\\n  * @dev the point at infinity.\\n  * ****************************************************************************\\n  * @dev OTHER SECURITY CONSIDERATIONS\\n  *\\n  * @dev The seed input to the VRF could in principle force an arbitrary amount\\n  * @dev of work in _hashToCurve, by requiring extra rounds of hashing and\\n  * @dev checking whether that's yielded the x ordinate of a secp256k1 point.\\n  * @dev However, under the Random Oracle Model the probability of choosing a\\n  * @dev point which forces n extra rounds in _hashToCurve is 2\\u207b\\u207f. The base cost\\n  * @dev for calling _hashToCurve is about 25,000 gas, and each round of checking\\n  * @dev for a valid x ordinate costs about 15,555 gas, so to find a seed for\\n  * @dev which _hashToCurve would cost more than 2,017,000 gas, one would have to\\n  * @dev try, in expectation, about 2\\u00b9\\u00b2\\u2078 seeds, which is infeasible for any\\n  * @dev foreseeable computational resources. (25,000 + 128 * 15,555 < 2,017,000.)\\n\\n  * @dev Since the gas block limit for the Ethereum main net is 10,000,000 gas,\\n  * @dev this means it is infeasible for an adversary to prevent correct\\n  * @dev operation of this contract by choosing an adverse seed.\\n\\n  * @dev (See TestMeasureHashToCurveGasCost for verification of the gas cost for\\n  * @dev _hashToCurve.)\\n\\n  * @dev It may be possible to make a secure constant-time _hashToCurve function.\\n  * @dev See notes in _hashToCurve docstring.\\n*/\\ncontract VRF {\\n  // See https://www.secg.org/sec2-v2.pdf, section 2.4.1, for these constants.\\n  // Number of points in Secp256k1\\n  uint256 private constant GROUP_ORDER = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141;\\n  // Prime characteristic of the galois field over which Secp256k1 is defined\\n  uint256 private constant FIELD_SIZE =\\n    // solium-disable-next-line indentation\\n    0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F;\\n  uint256 private constant WORD_LENGTH_BYTES = 0x20;\\n\\n  // (base^exponent) % FIELD_SIZE\\n  // Cribbed from https://medium.com/@rbkhmrcr/precompiles-solidity-e5d29bd428c4\\n  function _bigModExp(uint256 base, uint256 exponent) internal view returns (uint256 exponentiation) {\\n    uint256 callResult;\\n    uint256[6] memory bigModExpContractInputs;\\n    bigModExpContractInputs[0] = WORD_LENGTH_BYTES; // Length of base\\n    bigModExpContractInputs[1] = WORD_LENGTH_BYTES; // Length of exponent\\n    bigModExpContractInputs[2] = WORD_LENGTH_BYTES; // Length of modulus\\n    bigModExpContractInputs[3] = base;\\n    bigModExpContractInputs[4] = exponent;\\n    bigModExpContractInputs[5] = FIELD_SIZE;\\n    uint256[1] memory output;\\n    assembly {\\n      callResult := staticcall(\\n        not(0), // Gas cost: no limit\\n        0x05, // Bigmodexp contract address\\n        bigModExpContractInputs,\\n        0xc0, // Length of input segment: 6*0x20-bytes\\n        output,\\n        0x20 // Length of output segment\\n      )\\n    }\\n    if (callResult == 0) {\\n      // solhint-disable-next-line custom-errors\\n      revert(\\\"bigModExp failure!\\\");\\n    }\\n    return output[0];\\n  }\\n\\n  // Let q=FIELD_SIZE. q % 4 = 3, \\u2234 x\\u2261r^2 mod q \\u21d2 x^SQRT_POWER\\u2261\\u00b1r mod q.  See\\n  // https://en.wikipedia.org/wiki/Modular_square_root#Prime_or_prime_power_modulus\\n  uint256 private constant SQRT_POWER = (FIELD_SIZE + 1) >> 2;\\n\\n  // Computes a s.t. a^2 = x in the field. Assumes a exists\\n  function _squareRoot(uint256 x) internal view returns (uint256) {\\n    return _bigModExp(x, SQRT_POWER);\\n  }\\n\\n  // The value of y^2 given that (x,y) is on secp256k1.\\n  function _ySquared(uint256 x) internal pure returns (uint256) {\\n    // Curve is y^2=x^3+7. See section 2.4.1 of https://www.secg.org/sec2-v2.pdf\\n    uint256 xCubed = mulmod(x, mulmod(x, x, FIELD_SIZE), FIELD_SIZE);\\n    return addmod(xCubed, 7, FIELD_SIZE);\\n  }\\n\\n  // True iff p is on secp256k1\\n  function _isOnCurve(uint256[2] memory p) internal pure returns (bool) {\\n    // Section 2.3.6. in https://www.secg.org/sec1-v2.pdf\\n    // requires each ordinate to be in [0, ..., FIELD_SIZE-1]\\n    // solhint-disable-next-line custom-errors\\n    require(p[0] < FIELD_SIZE, \\\"invalid x-ordinate\\\");\\n    // solhint-disable-next-line custom-errors\\n    require(p[1] < FIELD_SIZE, \\\"invalid y-ordinate\\\");\\n    return _ySquared(p[0]) == mulmod(p[1], p[1], FIELD_SIZE);\\n  }\\n\\n  // Hash x uniformly into {0, ..., FIELD_SIZE-1}.\\n  function _fieldHash(bytes memory b) internal pure returns (uint256 x_) {\\n    x_ = uint256(keccak256(b));\\n    // Rejecting if x >= FIELD_SIZE corresponds to step 2.1 in section 2.3.4 of\\n    // http://www.secg.org/sec1-v2.pdf , which is part of the definition of\\n    // string_to_point in the IETF draft\\n    while (x_ >= FIELD_SIZE) {\\n      x_ = uint256(keccak256(abi.encodePacked(x_)));\\n    }\\n    return x_;\\n  }\\n\\n  // Hash b to a random point which hopefully lies on secp256k1. The y ordinate\\n  // is always even, due to\\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.1.1\\n  // step 5.C, which references arbitrary_string_to_point, defined in\\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5 as\\n  // returning the point with given x ordinate, and even y ordinate.\\n  function _newCandidateSecp256k1Point(bytes memory b) internal view returns (uint256[2] memory p) {\\n    unchecked {\\n      p[0] = _fieldHash(b);\\n      p[1] = _squareRoot(_ySquared(p[0]));\\n      if (p[1] % 2 == 1) {\\n        // Note that 0 <= p[1] < FIELD_SIZE\\n        // so this cannot wrap, we use unchecked to save gas.\\n        p[1] = FIELD_SIZE - p[1];\\n      }\\n    }\\n    return p;\\n  }\\n\\n  // Domain-separation tag for initial hash in _hashToCurve. Corresponds to\\n  // vrf.go/hashToCurveHashPrefix\\n  uint256 internal constant HASH_TO_CURVE_HASH_PREFIX = 1;\\n\\n  // Cryptographic hash function onto the curve.\\n  //\\n  // Corresponds to algorithm in section 5.4.1.1 of the draft standard. (But see\\n  // DESIGN NOTES above for slight differences.)\\n  //\\n  // TODO(alx): Implement a bounded-computation hash-to-curve, as described in\\n  // \\\"Construction of Rational Points on Elliptic Curves over Finite Fields\\\"\\n  // http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.831.5299&rep=rep1&type=pdf\\n  // and suggested by\\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-01#section-5.2.2\\n  // (Though we can't used exactly that because secp256k1's j-invariant is 0.)\\n  //\\n  // This would greatly simplify the analysis in \\\"OTHER SECURITY CONSIDERATIONS\\\"\\n  // https://www.pivotaltracker.com/story/show/171120900\\n  function _hashToCurve(uint256[2] memory pk, uint256 input) internal view returns (uint256[2] memory rv) {\\n    rv = _newCandidateSecp256k1Point(abi.encodePacked(HASH_TO_CURVE_HASH_PREFIX, pk, input));\\n    while (!_isOnCurve(rv)) {\\n      rv = _newCandidateSecp256k1Point(abi.encodePacked(rv[0]));\\n    }\\n    return rv;\\n  }\\n\\n  /** *********************************************************************\\n   * @notice Check that product==scalar*multiplicand\\n   *\\n   * @dev Based on Vitalik Buterin's idea in ethresear.ch post cited below.\\n   *\\n   * @param multiplicand: secp256k1 point\\n   * @param scalar: non-zero GF(GROUP_ORDER) scalar\\n   * @param product: secp256k1 expected to be multiplier * multiplicand\\n   * @return verifies true iff product==scalar*multiplicand, with cryptographically high probability\\n   */\\n  function _ecmulVerify(\\n    uint256[2] memory multiplicand,\\n    uint256 scalar,\\n    uint256[2] memory product\\n  ) internal pure returns (bool verifies) {\\n    // solhint-disable-next-line custom-errors\\n    require(scalar != 0, \\\"zero scalar\\\"); // Rules out an ecrecover failure case\\n    uint256 x = multiplicand[0]; // x ordinate of multiplicand\\n    uint8 v = multiplicand[1] % 2 == 0 ? 27 : 28; // parity of y ordinate\\n    // https://ethresear.ch/t/you-can-kinda-abuse-ecrecover-to-do-ecmul-in-secp256k1-today/2384/9\\n    // Point corresponding to address ecrecover(0, v, x, s=scalar*x) is\\n    // (x\\u207b\\u00b9 mod GROUP_ORDER) * (scalar * x * multiplicand - 0 * g), i.e.\\n    // scalar*multiplicand. See https://crypto.stackexchange.com/a/18106\\n    bytes32 scalarTimesX = bytes32(mulmod(scalar, x, GROUP_ORDER));\\n    address actual = ecrecover(bytes32(0), v, bytes32(x), scalarTimesX);\\n    // Explicit conversion to address takes bottom 160 bits\\n    address expected = address(uint160(uint256(keccak256(abi.encodePacked(product)))));\\n    return (actual == expected);\\n  }\\n\\n  // Returns x1/z1-x2/z2=(x1z2-x2z1)/(z1z2) in projective coordinates on P\\u00b9(\\ud835\\udd3d\\u2099)\\n  function _projectiveSub(\\n    uint256 x1,\\n    uint256 z1,\\n    uint256 x2,\\n    uint256 z2\\n  ) internal pure returns (uint256 x3, uint256 z3) {\\n    unchecked {\\n      uint256 num1 = mulmod(z2, x1, FIELD_SIZE);\\n      // Note this cannot wrap since x2 is a point in [0, FIELD_SIZE-1]\\n      // we use unchecked to save gas.\\n      uint256 num2 = mulmod(FIELD_SIZE - x2, z1, FIELD_SIZE);\\n      (x3, z3) = (addmod(num1, num2, FIELD_SIZE), mulmod(z1, z2, FIELD_SIZE));\\n    }\\n    return (x3, z3);\\n  }\\n\\n  // Returns x1/z1*x2/z2=(x1x2)/(z1z2), in projective coordinates on P\\u00b9(\\ud835\\udd3d\\u2099)\\n  function _projectiveMul(\\n    uint256 x1,\\n    uint256 z1,\\n    uint256 x2,\\n    uint256 z2\\n  ) internal pure returns (uint256 x3, uint256 z3) {\\n    (x3, z3) = (mulmod(x1, x2, FIELD_SIZE), mulmod(z1, z2, FIELD_SIZE));\\n    return (x3, z3);\\n  }\\n\\n  /** **************************************************************************\\n        @notice Computes elliptic-curve sum, in projective co-ordinates\\n\\n        @dev Using projective coordinates avoids costly divisions\\n\\n        @dev To use this with p and q in affine coordinates, call\\n        @dev _projectiveECAdd(px, py, qx, qy). This will return\\n        @dev the addition of (px, py, 1) and (qx, qy, 1), in the\\n        @dev secp256k1 group.\\n\\n        @dev This can be used to calculate the z which is the inverse to zInv\\n        @dev in isValidVRFOutput. But consider using a faster\\n        @dev re-implementation such as ProjectiveECAdd in the golang vrf package.\\n\\n        @dev This function assumes [px,py,1],[qx,qy,1] are valid projective\\n             coordinates of secp256k1 points. That is safe in this contract,\\n             because this method is only used by _linearCombination, which checks\\n             points are on the curve via ecrecover.\\n        **************************************************************************\\n        @param px The first affine coordinate of the first summand\\n        @param py The second affine coordinate of the first summand\\n        @param qx The first affine coordinate of the second summand\\n        @param qy The second affine coordinate of the second summand\\n\\n        (px,py) and (qx,qy) must be distinct, valid secp256k1 points.\\n        **************************************************************************\\n        Return values are projective coordinates of [px,py,1]+[qx,qy,1] as points\\n        on secp256k1, in P\\u00b2(\\ud835\\udd3d\\u2099)\\n        @return sx\\n        @return sy\\n        @return sz\\n    */\\n  function _projectiveECAdd(\\n    uint256 px,\\n    uint256 py,\\n    uint256 qx,\\n    uint256 qy\\n  ) internal pure returns (uint256 sx, uint256 sy, uint256 sz) {\\n    unchecked {\\n      // See \\\"Group law for E/K : y^2 = x^3 + ax + b\\\", in section 3.1.2, p. 80,\\n      // \\\"Guide to Elliptic Curve Cryptography\\\" by Hankerson, Menezes and Vanstone\\n      // We take the equations there for (sx,sy), and homogenize them to\\n      // projective coordinates. That way, no inverses are required, here, and we\\n      // only need the one inverse in _affineECAdd.\\n\\n      // We only need the \\\"point addition\\\" equations from Hankerson et al. Can\\n      // skip the \\\"point doubling\\\" equations because p1 == p2 is cryptographically\\n      // impossible, and required not to be the case in _linearCombination.\\n\\n      // Add extra \\\"projective coordinate\\\" to the two points\\n      (uint256 z1, uint256 z2) = (1, 1);\\n\\n      // (lx, lz) = (qy-py)/(qx-px), i.e., gradient of secant line.\\n      // Cannot wrap since px and py are in [0, FIELD_SIZE-1]\\n      uint256 lx = addmod(qy, FIELD_SIZE - py, FIELD_SIZE);\\n      uint256 lz = addmod(qx, FIELD_SIZE - px, FIELD_SIZE);\\n\\n      uint256 dx; // Accumulates denominator from sx calculation\\n      // sx=((qy-py)/(qx-px))^2-px-qx\\n      (sx, dx) = _projectiveMul(lx, lz, lx, lz); // ((qy-py)/(qx-px))^2\\n      (sx, dx) = _projectiveSub(sx, dx, px, z1); // ((qy-py)/(qx-px))^2-px\\n      (sx, dx) = _projectiveSub(sx, dx, qx, z2); // ((qy-py)/(qx-px))^2-px-qx\\n\\n      uint256 dy; // Accumulates denominator from sy calculation\\n      // sy=((qy-py)/(qx-px))(px-sx)-py\\n      (sy, dy) = _projectiveSub(px, z1, sx, dx); // px-sx\\n      (sy, dy) = _projectiveMul(sy, dy, lx, lz); // ((qy-py)/(qx-px))(px-sx)\\n      (sy, dy) = _projectiveSub(sy, dy, py, z1); // ((qy-py)/(qx-px))(px-sx)-py\\n\\n      if (dx != dy) {\\n        // Cross-multiply to put everything over a common denominator\\n        sx = mulmod(sx, dy, FIELD_SIZE);\\n        sy = mulmod(sy, dx, FIELD_SIZE);\\n        sz = mulmod(dx, dy, FIELD_SIZE);\\n      } else {\\n        // Already over a common denominator, use that for z ordinate\\n        sz = dx;\\n      }\\n    }\\n    return (sx, sy, sz);\\n  }\\n\\n  // p1+p2, as affine points on secp256k1.\\n  //\\n  // invZ must be the inverse of the z returned by _projectiveECAdd(p1, p2).\\n  // It is computed off-chain to save gas.\\n  //\\n  // p1 and p2 must be distinct, because _projectiveECAdd doesn't handle\\n  // point doubling.\\n  function _affineECAdd(\\n    uint256[2] memory p1,\\n    uint256[2] memory p2,\\n    uint256 invZ\\n  ) internal pure returns (uint256[2] memory) {\\n    uint256 x;\\n    uint256 y;\\n    uint256 z;\\n    (x, y, z) = _projectiveECAdd(p1[0], p1[1], p2[0], p2[1]);\\n    // solhint-disable-next-line custom-errors\\n    require(mulmod(z, invZ, FIELD_SIZE) == 1, \\\"invZ must be inverse of z\\\");\\n    // Clear the z ordinate of the projective representation by dividing through\\n    // by it, to obtain the affine representation\\n    return [mulmod(x, invZ, FIELD_SIZE), mulmod(y, invZ, FIELD_SIZE)];\\n  }\\n\\n  // True iff address(c*p+s*g) == lcWitness, where g is generator. (With\\n  // cryptographically high probability.)\\n  function _verifyLinearCombinationWithGenerator(\\n    uint256 c,\\n    uint256[2] memory p,\\n    uint256 s,\\n    address lcWitness\\n  ) internal pure returns (bool) {\\n    // Rule out ecrecover failure modes which return address 0.\\n    unchecked {\\n      // solhint-disable-next-line custom-errors\\n      require(lcWitness != address(0), \\\"bad witness\\\");\\n      uint8 v = (p[1] % 2 == 0) ? 27 : 28; // parity of y-ordinate of p\\n      // Note this cannot wrap (X - Y % X), but we use unchecked to save\\n      // gas.\\n      bytes32 pseudoHash = bytes32(GROUP_ORDER - mulmod(p[0], s, GROUP_ORDER)); // -s*p[0]\\n      bytes32 pseudoSignature = bytes32(mulmod(c, p[0], GROUP_ORDER)); // c*p[0]\\n      // https://ethresear.ch/t/you-can-kinda-abuse-ecrecover-to-do-ecmul-in-secp256k1-today/2384/9\\n      // The point corresponding to the address returned by\\n      // ecrecover(-s*p[0],v,p[0],c*p[0]) is\\n      // (p[0]\\u207b\\u00b9 mod GROUP_ORDER)*(c*p[0]-(-s)*p[0]*g)=c*p+s*g.\\n      // See https://crypto.stackexchange.com/a/18106\\n      // https://bitcoin.stackexchange.com/questions/38351/ecdsa-v-r-s-what-is-v\\n      address computed = ecrecover(pseudoHash, v, bytes32(p[0]), pseudoSignature);\\n      return computed == lcWitness;\\n    }\\n  }\\n\\n  // c*p1 + s*p2. Requires cp1Witness=c*p1 and sp2Witness=s*p2. Also\\n  // requires cp1Witness != sp2Witness (which is fine for this application,\\n  // since it is cryptographically impossible for them to be equal. In the\\n  // (cryptographically impossible) case that a prover accidentally derives\\n  // a proof with equal c*p1 and s*p2, they should retry with a different\\n  // proof nonce.) Assumes that all points are on secp256k1\\n  // (which is checked in _verifyVRFProof below.)\\n  function _linearCombination(\\n    uint256 c,\\n    uint256[2] memory p1,\\n    uint256[2] memory cp1Witness,\\n    uint256 s,\\n    uint256[2] memory p2,\\n    uint256[2] memory sp2Witness,\\n    uint256 zInv\\n  ) internal pure returns (uint256[2] memory) {\\n    unchecked {\\n      // Note we are relying on the wrap around here\\n      // solhint-disable-next-line custom-errors\\n      require((cp1Witness[0] % FIELD_SIZE) != (sp2Witness[0] % FIELD_SIZE), \\\"points in sum must be distinct\\\");\\n      // solhint-disable-next-line custom-errors\\n      require(_ecmulVerify(p1, c, cp1Witness), \\\"First mul check failed\\\");\\n      // solhint-disable-next-line custom-errors\\n      require(_ecmulVerify(p2, s, sp2Witness), \\\"Second mul check failed\\\");\\n      return _affineECAdd(cp1Witness, sp2Witness, zInv);\\n    }\\n  }\\n\\n  // Domain-separation tag for the hash taken in _scalarFromCurvePoints.\\n  // Corresponds to scalarFromCurveHashPrefix in vrf.go\\n  uint256 internal constant SCALAR_FROM_CURVE_POINTS_HASH_PREFIX = 2;\\n\\n  // Pseudo-random number from inputs. Matches vrf.go/_scalarFromCurvePoints, and\\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.3\\n  // The draft calls (in step 7, via the definition of string_to_int, in\\n  // https://datatracker.ietf.org/doc/html/rfc8017#section-4.2 ) for taking the\\n  // first hash without checking that it corresponds to a number less than the\\n  // group order, which will lead to a slight bias in the sample.\\n  //\\n  // TODO(alx): We could save a bit of gas by following the standard here and\\n  // using the compressed representation of the points, if we collated the y\\n  // parities into a single bytes32.\\n  // https://www.pivotaltracker.com/story/show/171120588\\n  function _scalarFromCurvePoints(\\n    uint256[2] memory hash,\\n    uint256[2] memory pk,\\n    uint256[2] memory gamma,\\n    address uWitness,\\n    uint256[2] memory v\\n  ) internal pure returns (uint256 s) {\\n    return uint256(keccak256(abi.encodePacked(SCALAR_FROM_CURVE_POINTS_HASH_PREFIX, hash, pk, gamma, v, uWitness)));\\n  }\\n\\n  // True if (gamma, c, s) is a correctly constructed randomness proof from pk\\n  // and seed. zInv must be the inverse of the third ordinate from\\n  // _projectiveECAdd applied to cGammaWitness and sHashWitness. Corresponds to\\n  // section 5.3 of the IETF draft.\\n  //\\n  // TODO(alx): Since I'm only using pk in the ecrecover call, I could only pass\\n  // the x ordinate, and the parity of the y ordinate in the top bit of uWitness\\n  // (which I could make a uint256 without using any extra space.) Would save\\n  // about 2000 gas. https://www.pivotaltracker.com/story/show/170828567\\n  function _verifyVRFProof(\\n    uint256[2] memory pk,\\n    uint256[2] memory gamma,\\n    uint256 c,\\n    uint256 s,\\n    uint256 seed,\\n    address uWitness,\\n    uint256[2] memory cGammaWitness,\\n    uint256[2] memory sHashWitness,\\n    uint256 zInv\\n  ) internal view {\\n    unchecked {\\n      // solhint-disable-next-line custom-errors\\n      require(_isOnCurve(pk), \\\"public key is not on curve\\\");\\n      // solhint-disable-next-line custom-errors\\n      require(_isOnCurve(gamma), \\\"gamma is not on curve\\\");\\n      // solhint-disable-next-line custom-errors\\n      require(_isOnCurve(cGammaWitness), \\\"cGammaWitness is not on curve\\\");\\n      // solhint-disable-next-line custom-errors\\n      require(_isOnCurve(sHashWitness), \\\"sHashWitness is not on curve\\\");\\n      // Step 5. of IETF draft section 5.3 (pk corresponds to 5.3's Y, and here\\n      // we use the address of u instead of u itself. Also, here we add the\\n      // terms instead of taking the difference, and in the proof construction in\\n      // vrf.GenerateProof, we correspondingly take the difference instead of\\n      // taking the sum as they do in step 7 of section 5.1.)\\n      // solhint-disable-next-line custom-errors\\n      require(_verifyLinearCombinationWithGenerator(c, pk, s, uWitness), \\\"addr(c*pk+s*g)!=_uWitness\\\");\\n      // Step 4. of IETF draft section 5.3 (pk corresponds to Y, seed to alpha_string)\\n      uint256[2] memory hash = _hashToCurve(pk, seed);\\n      // Step 6. of IETF draft section 5.3, but see note for step 5 about +/- terms\\n      uint256[2] memory v = _linearCombination(c, gamma, cGammaWitness, s, hash, sHashWitness, zInv);\\n      // Steps 7. and 8. of IETF draft section 5.3\\n      uint256 derivedC = _scalarFromCurvePoints(hash, pk, gamma, uWitness, v);\\n      // solhint-disable-next-line custom-errors\\n      require(c == derivedC, \\\"invalid proof\\\");\\n    }\\n  }\\n\\n  // Domain-separation tag for the hash used as the final VRF output.\\n  // Corresponds to vrfRandomOutputHashPrefix in vrf.go\\n  uint256 internal constant VRF_RANDOM_OUTPUT_HASH_PREFIX = 3;\\n\\n  struct Proof {\\n    uint256[2] pk;\\n    uint256[2] gamma;\\n    uint256 c;\\n    uint256 s;\\n    uint256 seed;\\n    address uWitness;\\n    uint256[2] cGammaWitness;\\n    uint256[2] sHashWitness;\\n    uint256 zInv;\\n  }\\n\\n  /* ***************************************************************************\\n     * @notice Returns proof's output, if proof is valid. Otherwise reverts\\n\\n     * @param proof vrf proof components\\n     * @param seed  seed used to generate the vrf output\\n     *\\n     * Throws if proof is invalid, otherwise:\\n     * @return output i.e., the random output implied by the proof\\n     * ***************************************************************************\\n     */\\n  function _randomValueFromVRFProof(Proof memory proof, uint256 seed) internal view returns (uint256 output) {\\n    _verifyVRFProof(\\n      proof.pk,\\n      proof.gamma,\\n      proof.c,\\n      proof.s,\\n      seed,\\n      proof.uWitness,\\n      proof.cGammaWitness,\\n      proof.sHashWitness,\\n      proof.zInv\\n    );\\n    output = uint256(keccak256(abi.encode(VRF_RANDOM_OUTPUT_HASH_PREFIX, proof.gamma)));\\n    return output;\\n  }\\n}\\n\",\"keccak256\":\"0xef481c806ec0cfbe6498690789590887df3324f8c62f26d1022b9ad74193ee7e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"****************************************************************************Verification of verifiable-random-function (VRF) proofs, followinghttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3See https://eprint.iacr.org/2017/099.pdf for security proofs.","version":1}}},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"VRFConsumerBaseV2":{"abi":[{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).","kind":"dev","methods":{"constructor":{"params":{"_vrfCoordinator":"address of VRFCoordinator contract"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"rawFulfillRandomWords(uint256,uint256[])":"1fe543e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":\"VRFConsumerBaseV2\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  // solhint-disable-next-line chainlink-solidity/prefix-immutable-variables-with-i\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x5a502a5ce16796565815b295bb2d18a0d26d6f23621f733918c971047c6091d7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************","version":1}}},"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol":{"VRFCoordinatorV2":{"abi":[{"inputs":[{"internalType":"address","name":"link","type":"address"},{"internalType":"address","name":"blockhashStore","type":"address"},{"internalType":"address","name":"linkEthFeed","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"internalBalance","type":"uint256"},{"internalType":"uint256","name":"externalBalance","type":"uint256"}],"name":"BalanceInvariantViolated","type":"error"},{"inputs":[{"internalType":"uint256","name":"blockNum","type":"uint256"}],"name":"BlockhashNotInStore","type":"error"},{"inputs":[{"internalType":"uint32","name":"have","type":"uint32"},{"internalType":"uint32","name":"want","type":"uint32"}],"name":"GasLimitTooBig","type":"error"},{"inputs":[],"name":"IncorrectCommitment","type":"error"},{"inputs":[],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"uint256","name":"have","type":"uint256"},{"internalType":"uint256","name":"want","type":"uint256"}],"name":"InsufficientGasForConsumer","type":"error"},{"inputs":[],"name":"InvalidCalldata","type":"error"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"InvalidConsumer","type":"error"},{"inputs":[{"internalType":"int256","name":"linkWei","type":"int256"}],"name":"InvalidLinkWeiPrice","type":"error"},{"inputs":[{"internalType":"uint16","name":"have","type":"uint16"},{"internalType":"uint16","name":"min","type":"uint16"},{"internalType":"uint16","name":"max","type":"uint16"}],"name":"InvalidRequestConfirmations","type":"error"},{"inputs":[],"name":"InvalidSubscription","type":"error"},{"inputs":[{"internalType":"address","name":"proposedOwner","type":"address"}],"name":"MustBeRequestedOwner","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"MustBeSubOwner","type":"error"},{"inputs":[],"name":"NoCorrespondingRequest","type":"error"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"}],"name":"NoSuchProvingKey","type":"error"},{"inputs":[{"internalType":"uint32","name":"have","type":"uint32"},{"internalType":"uint32","name":"want","type":"uint32"}],"name":"NumWordsTooBig","type":"error"},{"inputs":[],"name":"OnlyCallableFromLink","type":"error"},{"inputs":[],"name":"PaymentTooLarge","type":"error"},{"inputs":[],"name":"PendingRequestExists","type":"error"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"}],"name":"ProvingKeyAlreadyRegistered","type":"error"},{"inputs":[],"name":"Reentrant","type":"error"},{"inputs":[],"name":"TooManyConsumers","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"indexed":false,"internalType":"uint32","name":"maxGasLimit","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"stalenessSeconds","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"gasAfterPaymentCalculation","type":"uint32"},{"indexed":false,"internalType":"int256","name":"fallbackWeiPerUnitLink","type":"int256"},{"components":[{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier1","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier2","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier3","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier4","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier5","type":"uint32"},{"internalType":"uint24","name":"reqsForTier2","type":"uint24"},{"internalType":"uint24","name":"reqsForTier3","type":"uint24"},{"internalType":"uint24","name":"reqsForTier4","type":"uint24"},{"internalType":"uint24","name":"reqsForTier5","type":"uint24"}],"indexed":false,"internalType":"struct VRFCoordinatorV2.FeeConfig","name":"feeConfig","type":"tuple"}],"name":"ConfigSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FundsRecovered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"oracle","type":"address"}],"name":"ProvingKeyDeregistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"oracle","type":"address"}],"name":"ProvingKeyRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outputSeed","type":"uint256"},{"indexed":false,"internalType":"uint96","name":"payment","type":"uint96"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"}],"name":"RandomWordsFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"preSeed","type":"uint256"},{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"indexed":false,"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"numWords","type":"uint32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RandomWordsRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"SubscriptionCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"address","name":"consumer","type":"address"}],"name":"SubscriptionConsumerAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"address","name":"consumer","type":"address"}],"name":"SubscriptionConsumerRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"SubscriptionCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"uint256","name":"oldBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"SubscriptionFunded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"}],"name":"SubscriptionOwnerTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"}],"name":"SubscriptionOwnerTransferred","type":"event"},{"inputs":[],"name":"BLOCKHASH_STORE","outputs":[{"internalType":"contract BlockhashStoreInterface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LINK","outputs":[{"internalType":"contract LinkTokenInterface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LINK_ETH_FEED","outputs":[{"internalType":"contract AggregatorV3Interface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_CONSUMERS","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_NUM_WORDS","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_REQUEST_CONFIRMATIONS","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[2]","name":"publicProvingKey","type":"uint256[2]"}],"name":"deregisterProvingKey","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256[2]","name":"pk","type":"uint256[2]"},{"internalType":"uint256[2]","name":"gamma","type":"uint256[2]"},{"internalType":"uint256","name":"c","type":"uint256"},{"internalType":"uint256","name":"s","type":"uint256"},{"internalType":"uint256","name":"seed","type":"uint256"},{"internalType":"address","name":"uWitness","type":"address"},{"internalType":"uint256[2]","name":"cGammaWitness","type":"uint256[2]"},{"internalType":"uint256[2]","name":"sHashWitness","type":"uint256[2]"},{"internalType":"uint256","name":"zInv","type":"uint256"}],"internalType":"struct VRF.Proof","name":"proof","type":"tuple"},{"components":[{"internalType":"uint64","name":"blockNum","type":"uint64"},{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"},{"internalType":"address","name":"sender","type":"address"}],"internalType":"struct VRFCoordinatorV2.RequestCommitment","name":"rc","type":"tuple"}],"name":"fulfillRandomWords","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"name":"getCommitment","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getConfig","outputs":[{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"maxGasLimit","type":"uint32"},{"internalType":"uint32","name":"stalenessSeconds","type":"uint32"},{"internalType":"uint32","name":"gasAfterPaymentCalculation","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentSubId","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFallbackWeiPerUnitLink","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFeeConfig","outputs":[{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier1","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier2","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier3","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier4","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier5","type":"uint32"},{"internalType":"uint24","name":"reqsForTier2","type":"uint24"},{"internalType":"uint24","name":"reqsForTier3","type":"uint24"},{"internalType":"uint24","name":"reqsForTier4","type":"uint24"},{"internalType":"uint24","name":"reqsForTier5","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"reqCount","type":"uint64"}],"name":"getFeeTier","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[2]","name":"publicKey","type":"uint256[2]"}],"name":"hashOfKey","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onTokenTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint96","name":"amount","type":"uint96"}],"name":"oracleWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"ownerCancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"recoverFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"oracle","type":"address"},{"internalType":"uint256[2]","name":"publicProvingKey","type":"uint256[2]"}],"name":"registerProvingKey","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"uint16","name":"requestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"maxGasLimit","type":"uint32"},{"internalType":"uint32","name":"stalenessSeconds","type":"uint32"},{"internalType":"uint32","name":"gasAfterPaymentCalculation","type":"uint32"},{"internalType":"int256","name":"fallbackWeiPerUnitLink","type":"int256"},{"components":[{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier1","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier2","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier3","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier4","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier5","type":"uint32"},{"internalType":"uint24","name":"reqsForTier2","type":"uint24"},{"internalType":"uint24","name":"reqsForTier3","type":"uint24"},{"internalType":"uint24","name":"reqsForTier4","type":"uint24"},{"internalType":"uint24","name":"reqsForTier5","type":"uint24"}],"internalType":"struct VRFCoordinatorV2.FeeConfig","name":"feeConfig","type":"tuple"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"typeAndVersion","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint64,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint64,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));","returns":{"_0":"- A unique subscription id."}},"deregisterProvingKey(uint256[2])":{"params":{"publicProvingKey":"key that oracle can use to submit vrf fulfillments"}},"getCommitment(uint256)":{"details":"used to determine if a request is fulfilled or not","params":{"requestId":"id of request"}},"getRequestConfig()":{"returns":{"_0":"minimumRequestConfirmations global min for request confirmations","_1":"maxGasLimit global max for request gas limit","_2":"s_provingKeyHashes list of registered key hashes"}},"getSubscription(uint64)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","owner":"- owner of the subscription.","reqCount":"- number of requests for this subscription, determines fee tier."}},"hashOfKey(uint256[2])":{"params":{"publicKey":"the key to return the hash of"}},"ownerCancelSubscription(uint64)":{"details":"notably can be called even if there are pending requests, outstanding ones may fail onchain","params":{"subId":"subscription id"}},"pendingRequestExists(uint64)":{"details":"Looping is bounded to MAX_CONSUMERS*(number of keyhashes).Used to disable subscription canceling while outstanding request are present."},"recoverFunds(address)":{"params":{"to":"address to send link to"}},"registerProvingKey(address,uint256[2])":{"params":{"oracle":"address of the oracle","publicProvingKey":"key that oracle can use to submit vrf fulfillments"}},"removeConsumer(uint64,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"params":{"callbackGasLimit":"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]","keyHash":"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.","minimumRequestConfirmations":"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].","numWords":"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.","subId":"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash."},"returns":{"_0":"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."}},"requestSubscriptionOwnerTransfer(uint64,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}},"setConfig(uint16,uint32,uint32,uint32,int256,(uint32,uint32,uint32,uint32,uint32,uint24,uint24,uint24,uint24))":{"params":{"fallbackWeiPerUnitLink":"fallback eth/link price in the case of a stale feed","feeConfig":"fee tier configuration","gasAfterPaymentCalculation":"gas used in doing accounting after completing the gas measurement","maxGasLimit":"global max for request gas limit","minimumRequestConfirmations":"global min for request confirmations","stalenessSeconds":"if the eth/link feed is more stale then this, use the fallback price"}},"typeAndVersion()":{"returns":{"_0":"Type and version string"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2827":{"entryPoint":null,"id":2827,"parameterSlots":3,"returnSlots":0},"@_380":{"entryPoint":null,"id":380,"parameterSlots":1,"returnSlots":0},"@_438":{"entryPoint":null,"id":438,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_522":{"entryPoint":485,"id":522,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":789,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_address_fromMemory":{"entryPoint":812,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack":{"entryPoint":904,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":943,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":982,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1016,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1050,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1067,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1087,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1119,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2":{"entryPoint":1124,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":1165,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1206,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3639:19","statements":[{"body":{"nodeType":"YulBlock","src":"70:80:19","statements":[{"nodeType":"YulAssignment","src":"80:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"89:5:19"},"nodeType":"YulFunctionCall","src":"89:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"80:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"138:5:19"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"111:26:19"},"nodeType":"YulFunctionCall","src":"111:33:19"},"nodeType":"YulExpressionStatement","src":"111:33:19"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"48:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"56:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:19","type":""}],"src":"7:143:19"},{"body":{"nodeType":"YulBlock","src":"267:552:19","statements":[{"body":{"nodeType":"YulBlock","src":"313:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"315:77:19"},"nodeType":"YulFunctionCall","src":"315:79:19"},"nodeType":"YulExpressionStatement","src":"315:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"288:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"297:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"284:3:19"},"nodeType":"YulFunctionCall","src":"284:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"309:2:19","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"280:3:19"},"nodeType":"YulFunctionCall","src":"280:32:19"},"nodeType":"YulIf","src":"277:2:19"},{"nodeType":"YulBlock","src":"406:128:19","statements":[{"nodeType":"YulVariableDeclaration","src":"421:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"435:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"425:6:19","type":""}]},{"nodeType":"YulAssignment","src":"450:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"496:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"507:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"492:3:19"},"nodeType":"YulFunctionCall","src":"492:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"516:7:19"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"460:31:19"},"nodeType":"YulFunctionCall","src":"460:64:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"450:6:19"}]}]},{"nodeType":"YulBlock","src":"544:129:19","statements":[{"nodeType":"YulVariableDeclaration","src":"559:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"573:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"563:6:19","type":""}]},{"nodeType":"YulAssignment","src":"589:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"635:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"646:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"631:3:19"},"nodeType":"YulFunctionCall","src":"631:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"655:7:19"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"599:31:19"},"nodeType":"YulFunctionCall","src":"599:64:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"589:6:19"}]}]},{"nodeType":"YulBlock","src":"683:129:19","statements":[{"nodeType":"YulVariableDeclaration","src":"698:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"712:2:19","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"702:6:19","type":""}]},{"nodeType":"YulAssignment","src":"728:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"774:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"785:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"770:3:19"},"nodeType":"YulFunctionCall","src":"770:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"794:7:19"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"738:31:19"},"nodeType":"YulFunctionCall","src":"738:64:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"728:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"221:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"232:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"244:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"252:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"260:6:19","type":""}],"src":"156:663:19"},{"body":{"nodeType":"YulBlock","src":"971:220:19","statements":[{"nodeType":"YulAssignment","src":"981:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1047:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"1052:2:19","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"988:58:19"},"nodeType":"YulFunctionCall","src":"988:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"981:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1153:3:19"}],"functionName":{"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulIdentifier","src":"1064:88:19"},"nodeType":"YulFunctionCall","src":"1064:93:19"},"nodeType":"YulExpressionStatement","src":"1064:93:19"},{"nodeType":"YulAssignment","src":"1166:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1177:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"1182:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1173:3:19"},"nodeType":"YulFunctionCall","src":"1173:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1166:3:19"}]}]},"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"959:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"967:3:19","type":""}],"src":"825:366:19"},{"body":{"nodeType":"YulBlock","src":"1343:220:19","statements":[{"nodeType":"YulAssignment","src":"1353:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1419:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"1424:2:19","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1360:58:19"},"nodeType":"YulFunctionCall","src":"1360:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1353:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1525:3:19"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"1436:88:19"},"nodeType":"YulFunctionCall","src":"1436:93:19"},"nodeType":"YulExpressionStatement","src":"1436:93:19"},{"nodeType":"YulAssignment","src":"1538:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1549:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"1554:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1545:3:19"},"nodeType":"YulFunctionCall","src":"1545:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1538:3:19"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1331:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1339:3:19","type":""}],"src":"1197:366:19"},{"body":{"nodeType":"YulBlock","src":"1740:248:19","statements":[{"nodeType":"YulAssignment","src":"1750:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1762:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1773:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1758:3:19"},"nodeType":"YulFunctionCall","src":"1758:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1750:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1797:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"1808:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1793:3:19"},"nodeType":"YulFunctionCall","src":"1793:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1816:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"1822:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1812:3:19"},"nodeType":"YulFunctionCall","src":"1812:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1786:6:19"},"nodeType":"YulFunctionCall","src":"1786:47:19"},"nodeType":"YulExpressionStatement","src":"1786:47:19"},{"nodeType":"YulAssignment","src":"1842:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1976:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1850:124:19"},"nodeType":"YulFunctionCall","src":"1850:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1842:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1720:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1735:4:19","type":""}],"src":"1569:419:19"},{"body":{"nodeType":"YulBlock","src":"2165:248:19","statements":[{"nodeType":"YulAssignment","src":"2175:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2187:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2198:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2183:3:19"},"nodeType":"YulFunctionCall","src":"2183:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2175:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2222:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2233:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2218:3:19"},"nodeType":"YulFunctionCall","src":"2218:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2241:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"2247:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2237:3:19"},"nodeType":"YulFunctionCall","src":"2237:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2211:6:19"},"nodeType":"YulFunctionCall","src":"2211:47:19"},"nodeType":"YulExpressionStatement","src":"2211:47:19"},{"nodeType":"YulAssignment","src":"2267:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2401:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2275:124:19"},"nodeType":"YulFunctionCall","src":"2275:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2267:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2145:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2160:4:19","type":""}],"src":"1994:419:19"},{"body":{"nodeType":"YulBlock","src":"2459:35:19","statements":[{"nodeType":"YulAssignment","src":"2469:19:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2485:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2479:5:19"},"nodeType":"YulFunctionCall","src":"2479:9:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2469:6:19"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2452:6:19","type":""}],"src":"2419:75:19"},{"body":{"nodeType":"YulBlock","src":"2596:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2613:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"2618:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2606:6:19"},"nodeType":"YulFunctionCall","src":"2606:19:19"},"nodeType":"YulExpressionStatement","src":"2606:19:19"},{"nodeType":"YulAssignment","src":"2634:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2653:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"2658:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2649:3:19"},"nodeType":"YulFunctionCall","src":"2649:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2634:11:19"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2568:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"2573:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2584:11:19","type":""}],"src":"2500:169:19"},{"body":{"nodeType":"YulBlock","src":"2720:51:19","statements":[{"nodeType":"YulAssignment","src":"2730:35:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2759:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2741:17:19"},"nodeType":"YulFunctionCall","src":"2741:24:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2730:7:19"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2702:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2712:7:19","type":""}],"src":"2675:96:19"},{"body":{"nodeType":"YulBlock","src":"2822:81:19","statements":[{"nodeType":"YulAssignment","src":"2832:65:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2847:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"2854:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2843:3:19"},"nodeType":"YulFunctionCall","src":"2843:54:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2832:7:19"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2804:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2814:7:19","type":""}],"src":"2777:126:19"},{"body":{"nodeType":"YulBlock","src":"2998:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3015:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3018:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3008:6:19"},"nodeType":"YulFunctionCall","src":"3008:12:19"},"nodeType":"YulExpressionStatement","src":"3008:12:19"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"2909:117:19"},{"body":{"nodeType":"YulBlock","src":"3121:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3138:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3141:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3131:6:19"},"nodeType":"YulFunctionCall","src":"3131:12:19"},"nodeType":"YulExpressionStatement","src":"3131:12:19"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"3032:117:19"},{"body":{"nodeType":"YulBlock","src":"3261:68:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3283:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"3291:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3279:3:19"},"nodeType":"YulFunctionCall","src":"3279:14:19"},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","kind":"string","nodeType":"YulLiteral","src":"3295:26:19","type":"","value":"Cannot set owner to zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3272:6:19"},"nodeType":"YulFunctionCall","src":"3272:50:19"},"nodeType":"YulExpressionStatement","src":"3272:50:19"}]},"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3253:6:19","type":""}],"src":"3155:174:19"},{"body":{"nodeType":"YulBlock","src":"3441:67:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3463:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"3471:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3459:3:19"},"nodeType":"YulFunctionCall","src":"3459:14:19"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"3475:25:19","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3452:6:19"},"nodeType":"YulFunctionCall","src":"3452:49:19"},"nodeType":"YulExpressionStatement","src":"3452:49:19"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3433:6:19","type":""}],"src":"3335:173:19"},{"body":{"nodeType":"YulBlock","src":"3557:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"3614:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3623:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3626:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3616:6:19"},"nodeType":"YulFunctionCall","src":"3616:12:19"},"nodeType":"YulExpressionStatement","src":"3616:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3580:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3605:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3587:17:19"},"nodeType":"YulFunctionCall","src":"3587:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3577:2:19"},"nodeType":"YulFunctionCall","src":"3577:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3570:6:19"},"nodeType":"YulFunctionCall","src":"3570:43:19"},"nodeType":"YulIf","src":"3567:2:19"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3550:5:19","type":""}],"src":"3514:122:19"}]},"contents":"{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot set owner to zero\")\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x949D CODESIZE SUB DUP1 PUSH3 0x949D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x32C JUMP JUMPDEST CALLER DUP1 PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0xAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA4 SWAP1 PUSH3 0x3D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x134 JUMPI PUSH3 0x133 DUP2 PUSH3 0x1E5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP POP POP PUSH3 0x4D0 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x257 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x24E SWAP1 PUSH3 0x3F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x326 DUP2 PUSH3 0x4B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x348 JUMPI PUSH3 0x347 PUSH3 0x45F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x358 DUP7 DUP3 DUP8 ADD PUSH3 0x315 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x36B DUP7 DUP3 DUP8 ADD PUSH3 0x315 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x37E DUP7 DUP3 DUP8 ADD PUSH3 0x315 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x397 PUSH1 0x18 DUP4 PUSH3 0x41A JUMP JUMPDEST SWAP2 POP PUSH3 0x3A4 DUP3 PUSH3 0x464 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3BE PUSH1 0x17 DUP4 PUSH3 0x41A JUMP JUMPDEST SWAP2 POP PUSH3 0x3CB DUP3 PUSH3 0x48D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x3F1 DUP2 PUSH3 0x388 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x413 DUP2 PUSH3 0x3AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x438 DUP3 PUSH3 0x43F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH3 0x4C1 DUP2 PUSH3 0x42B JUMP JUMPDEST DUP2 EQ PUSH3 0x4CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH2 0x8F63 PUSH3 0x53A PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x19AA ADD MSTORE PUSH2 0x4B69 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x32E7 ADD MSTORE PUSH2 0x516A ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0xDD4 ADD MSTORE DUP2 DUP2 PUSH2 0x18C3 ADD MSTORE DUP2 DUP2 PUSH2 0x2FDF ADD MSTORE DUP2 DUP2 PUSH2 0x3D36 ADD MSTORE DUP2 DUP2 PUSH2 0x3E6D ADD MSTORE PUSH2 0x473A ADD MSTORE PUSH2 0x8F63 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F64F03F GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xAD178361 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD2F9F9A7 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD2F9F9A7 EQ PUSH2 0x604 JUMPI DUP1 PUSH4 0xD7AE1D30 EQ PUSH2 0x634 JUMPI DUP1 PUSH4 0xE72F6E30 EQ PUSH2 0x650 JUMPI DUP1 PUSH4 0xE82AD7D4 EQ PUSH2 0x66C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x69C JUMPI PUSH2 0x21B JUMP JUMPDEST DUP1 PUSH4 0xAD178361 EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0xAF198B97 EQ PUSH2 0x583 JUMPI DUP1 PUSH4 0xC3F909D4 EQ PUSH2 0x5B3 JUMPI DUP1 PUSH4 0xCAF70C4A EQ PUSH2 0x5D4 JUMPI PUSH2 0x21B JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4BE JUMPI DUP1 PUSH4 0x9F87FAD7 EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0xA21A23E4 EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0xA47C7696 EQ PUSH2 0x516 JUMPI DUP1 PUSH4 0xA4C0ED36 EQ PUSH2 0x549 JUMPI PUSH2 0x21B JUMP JUMPDEST DUP1 PUSH4 0x6F64F03F EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0x7341C10C EQ PUSH2 0x47C JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x498 JUMPI DUP1 PUSH4 0x82359740 EQ PUSH2 0x4A2 JUMPI PUSH2 0x21B JUMP JUMPDEST DUP1 PUSH4 0x356DAC71 GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x5FBBC0D2 GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x5FBBC0D2 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x64D51A2A EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x66316D8D EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0x689C4517 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0x69BCDB7D EQ PUSH2 0x430 JUMPI PUSH2 0x21B JUMP JUMPDEST DUP1 PUSH4 0x356DAC71 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0x40D6BB82 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x4CB48A54 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x5D3B1D30 EQ PUSH2 0x382 JUMPI PUSH2 0x21B JUMP JUMPDEST DUP1 PUSH4 0x8821D58 GT PUSH2 0x1EF JUMPI DUP1 PUSH4 0x8821D58 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x12B58349 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x15C48B84 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x181F5A77 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x1B6B6D23 EQ PUSH2 0x30C JUMPI PUSH2 0x21B JUMP JUMPDEST DUP1 PUSH3 0x12291 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x2BCC5B6 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x4C357CB EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x6BFA637 EQ PUSH2 0x278 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x228 PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x237 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7E13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x6F69 JUMP JUMPDEST PUSH2 0x746 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x6F96 JUMP JUMPDEST PUSH2 0x856 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x280 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x81CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x6D10 JUMP JUMPDEST PUSH2 0xB16 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BA PUSH2 0xD60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x7EF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D8 PUSH2 0xD90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x7DC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F6 PUSH2 0xD95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x7B5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x314 PUSH2 0xDD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x7B29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x332 PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x7B44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x350 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x80E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x380 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x6E81 JUMP JUMPDEST PUSH2 0xE06 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x6DC4 JUMP JUMPDEST PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x7EF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BA PUSH2 0x15ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CF SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8125 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E0 PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x7DC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x410 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x6CD0 JUMP JUMPDEST PUSH2 0x16DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41A PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x427 SWAP2 SWAP1 PUSH2 0x7B0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x6F0F JUMP JUMPDEST PUSH2 0x19CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x7A03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x475 SWAP2 SWAP1 PUSH2 0x6C1C JUMP JUMPDEST PUSH2 0x19E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x496 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x491 SWAP2 SWAP1 PUSH2 0x6F96 JUMP JUMPDEST PUSH2 0x1BA7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A0 PUSH2 0x1F73 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B7 SWAP2 SWAP1 PUSH2 0x6F69 JUMP JUMPDEST PUSH2 0x2108 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4C6 PUSH2 0x2471 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0x7937 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F1 SWAP2 SWAP1 PUSH2 0x6F96 JUMP JUMPDEST PUSH2 0x249A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x500 PUSH2 0x2A26 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x81CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x530 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52B SWAP2 SWAP1 PUSH2 0x6F69 JUMP JUMPDEST PUSH2 0x2D4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x540 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x822C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x563 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x55E SWAP2 SWAP1 PUSH2 0x6C5C JUMP JUMPDEST PUSH2 0x2F93 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x56D PUSH2 0x32E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57A SWAP2 SWAP1 PUSH2 0x7AF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x598 SWAP2 SWAP1 PUSH2 0x6E3F JUMP JUMPDEST PUSH2 0x3309 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AA SWAP2 SWAP1 PUSH2 0x8211 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5BB PUSH2 0x384E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0x6D3D JUMP JUMPDEST PUSH2 0x38B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5FB SWAP2 SWAP1 PUSH2 0x7A03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x619 SWAP2 SWAP1 PUSH2 0x6F69 JUMP JUMPDEST PUSH2 0x38E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62B SWAP2 SWAP1 PUSH2 0x80E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x649 SWAP2 SWAP1 PUSH2 0x6F96 JUMP JUMPDEST PUSH2 0x3B69 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x66A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x665 SWAP2 SWAP1 PUSH2 0x6BEF JUMP JUMPDEST PUSH2 0x3D2A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x686 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x681 SWAP2 SWAP1 PUSH2 0x6F69 JUMP JUMPDEST PUSH2 0x3F59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x693 SWAP2 SWAP1 PUSH2 0x79E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B1 SWAP2 SWAP1 PUSH2 0x6BEF JUMP JUMPDEST PUSH2 0x422B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x7 DUP1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x734 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x720 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH2 0x74E PUSH2 0x423F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x853 DUP2 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x42CF JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x90D JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x97D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x974 SWAP2 SWAP1 PUSH2 0x7937 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x9C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAF2 JUMPI DUP3 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x69436EA6DF009049404F564EFF6622CD00522B0BD6A89EFD9E52A355C4A879BE CALLER DUP6 PUSH1 0x40 MLOAD PUSH2 0xAE9 SWAP3 SWAP2 SWAP1 PUSH2 0x7952 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB1E PUSH2 0x423F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB60 DUP3 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP PUSH2 0x38B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC0C JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x77F5B84C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC03 SWAP2 SWAP1 PUSH2 0x7A03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xD0C JUMPI DUP3 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC67 JUMPI PUSH2 0xC66 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ ISZERO PUSH2 0xCF9 JUMPI PUSH1 0x0 PUSH1 0x7 PUSH1 0x1 PUSH1 0x7 DUP1 SLOAD SWAP1 POP PUSH2 0xC8E SWAP2 SWAP1 PUSH2 0x854A JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xC9F JUMPI PUSH2 0xC9E PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xCC1 JUMPI PUSH2 0xCC0 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x7 DUP1 SLOAD DUP1 PUSH2 0xCE1 JUMPI PUSH2 0xCE0 PUSH2 0x89C8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP JUMPDEST DUP1 DUP1 PUSH2 0xD04 SWAP1 PUSH2 0x8887 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC45 JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x72BE339577868F868798BAC2C93E52D6F034FEF4689A9848996C14EBB7416C0D DUP4 PUSH1 0x40 MLOAD PUSH2 0xD53 SWAP2 SWAP1 PUSH2 0x7A03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC8 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x565246436F6F7264696E61746F72563220312E302E3000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1F4 DUP2 JUMP JUMPDEST PUSH2 0xE0E PUSH2 0x423F JUMP JUMPDEST PUSH1 0xC8 PUSH2 0xFFFF AND DUP7 PUSH2 0xFFFF AND GT ISZERO PUSH2 0xE61 JUMPI DUP6 DUP7 PUSH1 0xC8 PUSH1 0x40 MLOAD PUSH32 0xA738697600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE58 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7DDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 SGT PUSH2 0xEA6 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x43D4CF6600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9D SWAP2 SWAP1 PUSH2 0x7B44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP PUSH1 0xB PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xB PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 PUSH1 0xC PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x17 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x1A PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x1D PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP2 PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH32 0xC21E3BD2E0B339D2848F0DD956947A88966C242C0C0C582A33137A5C1CEB5CB2 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH1 0xC PUSH1 0x40 MLOAD PUSH2 0x1142 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7E96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x119E JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x124F JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x131E JUMPI DUP6 CALLER PUSH1 0x40 MLOAD PUSH32 0xF0019FE600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1315 SWAP3 SWAP2 SWAP1 PUSH2 0x81E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP6 PUSH2 0xFFFF AND LT DUP1 PUSH2 0x134F JUMPI POP PUSH1 0xC8 PUSH2 0xFFFF AND DUP6 PUSH2 0xFFFF AND GT JUMPDEST ISZERO PUSH2 0x13A9 JUMPI DUP5 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH1 0xC8 PUSH1 0x40 MLOAD PUSH32 0xA738697600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7DDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP5 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1426 JUMPI DUP4 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x40 MLOAD PUSH32 0xF5D7E01E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x141D SWAP3 SWAP2 SWAP1 PUSH2 0x80FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F4 PUSH4 0xFFFFFFFF AND DUP4 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x147D JUMPI DUP3 PUSH2 0x1F4 PUSH1 0x40 MLOAD PUSH32 0x47386BEC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1474 SWAP3 SWAP2 SWAP1 PUSH2 0x80FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x148C SWAP2 SWAP1 PUSH2 0x843F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x149D DUP11 CALLER DUP12 DUP7 PUSH2 0x4874 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x14AA PUSH2 0x48E6 JUMP JUMPDEST DUP11 DUP10 DUP10 CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x14C3 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7FE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP12 PUSH32 0x63373D1C4696214B898952999C9AAEC57DAC1EE2723CEC59BEA6888F489A9772 DUP6 DUP6 DUP14 DUP14 DUP14 PUSH1 0x40 MLOAD PUSH2 0x154A SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7F95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP3 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 SWAP5 POP POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xC PUSH1 0x0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x17 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x1D SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1729 JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x17D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x183C SWAP2 SWAP1 PUSH2 0x857E JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH1 0x8 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1893 SWAP2 SWAP1 PUSH2 0x857E JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191C SWAP3 SWAP2 SWAP1 PUSH2 0x79A4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1936 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x194A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x196E SWAP2 SWAP1 PUSH2 0x6D6A JUMP JUMPDEST PUSH2 0x19A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19F1 PUSH2 0x423F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A33 DUP3 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP PUSH2 0x38B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AD9 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4A0B8FA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AD0 SWAP2 SWAP1 PUSH2 0x7A03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x7 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE729AE16526293F74ADE739043022254F1489F616295A25BF72DFB4511ED73B8 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1B9A SWAP2 SWAP1 PUSH2 0x7A03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1C5E JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CCE JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CC5 SWAP2 SWAP1 PUSH2 0x7937 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1D18 JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH2 0xFFFF AND PUSH1 0x3 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD SWAP1 POP EQ ISZERO PUSH2 0x1D84 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5A48E0F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E13 JUMPI PUSH2 0x1F6D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x43DC749A04AC8FB825CBD514F7C0E13F13BC6F2EE66043B76629D51776CFF8E0 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1F64 SWAP2 SWAP1 PUSH2 0x7937 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2003 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FFA SWAP1 PUSH2 0x7B81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2152 JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2203 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2307 JUMPI PUSH1 0x3 PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH32 0xD084E97500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22FE SWAP2 SWAP1 PUSH2 0x7937 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x6F1DC65165FFFFEDFD8E507B4A0F1FCFDADA045ED11F6C26BA27CEDFE87802F0 DUP3 CALLER PUSH1 0x40 MLOAD PUSH2 0x2465 SWAP3 SWAP2 SWAP1 PUSH2 0x7952 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2551 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x25C1 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25B8 SWAP2 SWAP1 PUSH2 0x7937 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x260B JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2614 DUP5 PUSH2 0x3F59 JUMP JUMPDEST ISZERO PUSH2 0x264B JUMPI PUSH1 0x40 MLOAD PUSH32 0xB42F66E800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2715 JUMPI DUP4 DUP4 PUSH1 0x40 MLOAD PUSH32 0xF0019FE600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x270C SWAP3 SWAP2 SWAP1 PUSH2 0x81E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x27C1 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2777 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 MLOAD PUSH2 0x27D8 SWAP2 SWAP1 PUSH2 0x854A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2960 JUMPI DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2810 JUMPI PUSH2 0x280F PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x294D JUMPI PUSH1 0x0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2849 JUMPI PUSH2 0x2848 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP11 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2890 JUMPI PUSH2 0x288F PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP10 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP1 PUSH2 0x2912 JUMPI PUSH2 0x2911 PUSH2 0x89C8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE POP PUSH2 0x2960 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2958 SWAP1 PUSH2 0x8887 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x27DD JUMP JUMPDEST POP PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x182BFF9831466789164CA77075FFFD84916D35A8180BA73C27E45634549B445B DUP7 PUSH1 0x40 MLOAD PUSH2 0x2A16 SWAP2 SWAP1 PUSH2 0x7937 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2A72 JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2A98 SWAP1 PUSH2 0x88D0 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2AF6 JUMPI PUSH2 0x2AF5 PUSH2 0x8A26 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2B24 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2CFF SWAP3 SWAP2 SWAP1 PUSH2 0x6643 JUMP JUMPDEST POP SWAP1 POP POP DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x464722B4166576D3DCBBA877B999BC35CF911F4EAF434B7EBA68FA113951D0BF CALLER PUSH1 0x40 MLOAD PUSH2 0x2D3D SWAP2 SWAP1 PUSH2 0x7937 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP2 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2E05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP10 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2F7D JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2F33 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2FDD JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3062 JUMPI PUSH1 0x40 MLOAD PUSH32 0x44B0E3C300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 DUP3 SWAP1 POP EQ PUSH2 0x309F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8129BBCD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP2 ADD SWAP1 PUSH2 0x30B0 SWAP2 SWAP1 PUSH2 0x6F69 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3163 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP5 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3209 SWAP2 SWAP1 PUSH2 0x847D JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x5 PUSH1 0x8 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3260 SWAP2 SWAP1 PUSH2 0x847D JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xD39EC07F4E209F627A4C427971473820DC129761BA28DE8906BD56F57101D4F8 DUP3 DUP8 DUP5 PUSH2 0x32C7 SWAP2 SWAP1 PUSH2 0x83E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32D5 SWAP3 SWAP2 SWAP1 PUSH2 0x7F6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3355 JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 GAS SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3369 DUP8 DUP8 PUSH2 0x4989 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP7 PUSH1 0x60 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3395 JUMPI PUSH2 0x3394 PUSH2 0x8A26 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x33C3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP8 PUSH1 0x60 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP2 LT ISZERO PUSH2 0x3439 JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x33EE SWAP3 SWAP2 SWAP1 PUSH2 0x7F6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x341A JUMPI PUSH2 0x3419 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x3431 SWAP1 PUSH2 0x8887 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x33C9 JUMP JUMPDEST POP PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x0 DUP1 PUSH4 0x1FE543E3 PUSH1 0xE0 SHL DUP6 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x346F SWAP3 SWAP2 SWAP1 PUSH2 0x7F3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x1 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x3507 DUP11 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP12 PUSH1 0x80 ADD MLOAD DUP5 PUSH2 0x4CAE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP13 PUSH1 0x20 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP14 PUSH1 0x20 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xC DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x35C0 SWAP2 SWAP1 PUSH2 0x843F JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x3617 DUP11 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0xB SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH2 0x3611 DUP6 PUSH2 0x38E8 JUMP JUMPDEST GASPRICE PUSH2 0x4CFB JUMP JUMPDEST SWAP1 POP DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP15 PUSH1 0x20 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x36B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP15 PUSH1 0x20 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x370A SWAP2 SWAP1 PUSH2 0x857E JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP14 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x37D1 SWAP2 SWAP1 PUSH2 0x847D JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP8 PUSH32 0x7DFFC5AE5EE4E2E4DF1651CF6AD329A73CEBDB728F37EA0187B9B17E036756E4 DUP9 DUP4 DUP7 PUSH1 0x40 MLOAD PUSH2 0x3833 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x80AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 SWAP11 POP POP POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x7 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xB PUSH1 0x0 ADD PUSH1 0xB SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x38CB SWAP2 SWAP1 PUSH2 0x79CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x17 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1D SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 GT ISZERO DUP1 ISZERO PUSH2 0x3A73 JUMPI POP DUP1 PUSH1 0xA0 ADD MLOAD PUSH3 0xFFFFFF AND DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x3A85 JUMPI DUP1 PUSH1 0x0 ADD MLOAD SWAP2 POP POP PUSH2 0x3B64 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0xA0 ADD MLOAD PUSH3 0xFFFFFF AND LT DUP1 ISZERO PUSH2 0x3ABA JUMPI POP DUP1 PUSH1 0xC0 ADD MLOAD PUSH3 0xFFFFFF AND DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x3ACC JUMPI DUP1 PUSH1 0x20 ADD MLOAD SWAP2 POP POP PUSH2 0x3B64 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0xC0 ADD MLOAD PUSH3 0xFFFFFF AND LT DUP1 ISZERO PUSH2 0x3B01 JUMPI POP DUP1 PUSH1 0xE0 ADD MLOAD PUSH3 0xFFFFFF AND DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x3B13 JUMPI DUP1 PUSH1 0x40 ADD MLOAD SWAP2 POP POP PUSH2 0x3B64 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0xE0 ADD MLOAD PUSH3 0xFFFFFF AND LT DUP1 ISZERO PUSH2 0x3B49 JUMPI POP DUP1 PUSH2 0x100 ADD MLOAD PUSH3 0xFFFFFF AND DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x3B5B JUMPI DUP1 PUSH1 0x60 ADD MLOAD SWAP2 POP POP PUSH2 0x3B64 JUMP JUMPDEST DUP1 PUSH1 0x80 ADD MLOAD SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3C20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3C90 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C87 SWAP2 SWAP1 PUSH2 0x7937 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3CDA JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3CE3 DUP5 PUSH2 0x3F59 JUMP JUMPDEST ISZERO PUSH2 0x3D1A JUMPI PUSH1 0x40 MLOAD PUSH32 0xB42F66E800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3D24 DUP5 DUP5 PUSH2 0x42CF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3D32 PUSH2 0x423F JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D8D SWAP2 SWAP1 PUSH2 0x7937 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3DA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3DB9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3DDD SWAP2 SWAP1 PUSH2 0x6F3C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3E53 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA99DA30200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E4A SWAP3 SWAP2 SWAP1 PUSH2 0x7F6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3F54 JUMPI PUSH1 0x0 DUP2 DUP4 PUSH2 0x3E69 SWAP2 SWAP1 PUSH2 0x854A JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EC6 SWAP3 SWAP2 SWAP1 PUSH2 0x797B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3EE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3EF4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F18 SWAP2 SWAP1 PUSH2 0x6D6A JUMP JUMPDEST POP PUSH32 0x59BFC682B673F8CBF945F1E454DF9334834ABF7DFE7F92237CA29ECB9B436600 DUP5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3F4A SWAP3 SWAP2 SWAP1 PUSH2 0x797B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x40BF JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x4075 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x421F JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x420B JUMPI PUSH1 0x0 PUSH2 0x41CA PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x4103 JUMPI PUSH2 0x4102 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP6 PUSH1 0x40 ADD MLOAD DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x4125 JUMPI PUSH2 0x4124 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 PUSH1 0x2 PUSH1 0x0 DUP10 PUSH1 0x40 ADD MLOAD DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x4149 JUMPI PUSH2 0x4148 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x4874 JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 SHL PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x41F7 JUMPI PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x4226 JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x4203 SWAP1 PUSH2 0x8887 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x40DD JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x4217 SWAP1 PUSH2 0x8887 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x40CD JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4233 PUSH2 0x423F JUMP JUMPDEST PUSH2 0x423C DUP2 PUSH2 0x4E74 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x42CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42C4 SWAP1 PUSH2 0x7BE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4319 JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x447E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x4434 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x45F4 JUMPI PUSH1 0x2 PUSH1 0x0 DUP6 PUSH1 0x40 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x4563 JUMPI PUSH2 0x4562 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE DUP1 DUP1 PUSH2 0x45EC SWAP1 PUSH2 0x8887 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x453B JUMP JUMPDEST POP PUSH1 0x3 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x467B SWAP2 SWAP1 PUSH2 0x66CD JUMP JUMPDEST POP POP PUSH1 0x4 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP DUP1 PUSH1 0x5 PUSH1 0x8 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x470A SWAP2 SWAP1 PUSH2 0x857E JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47A1 SWAP3 SWAP2 SWAP1 PUSH2 0x797B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x47BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x47CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x47F3 SWAP2 SWAP1 PUSH2 0x6D6A JUMP JUMPDEST PUSH2 0x4829 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xE8ED5B475A5B5987AA9165E8731BB78043F39EEE32EC5A1169A89E27FCD49815 DUP6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x4865 SWAP3 SWAP2 SWAP1 PUSH2 0x79A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4890 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7A1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP DUP7 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x48BE SWAP3 SWAP2 SWAP1 PUSH2 0x7A63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR DUP2 SWAP3 POP SWAP3 POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CHAINID SWAP1 POP PUSH2 0x48F5 DUP2 PUSH2 0x4FA1 JUMP JUMPDEST ISZERO PUSH2 0x4981 JUMPI PUSH1 0x64 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA3B1B31D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4941 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4955 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4979 SWAP2 SWAP1 PUSH2 0x6F3C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4986 JUMP JUMPDEST NUMBER SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x499B DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x38B8 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4A47 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x77F5B84C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A3E SWAP2 SWAP1 PUSH2 0x7A03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP7 PUSH1 0x80 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4A5E SWAP3 SWAP2 SWAP1 PUSH2 0x7A63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP3 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 EQ ISZERO PUSH2 0x4ACE JUMPI PUSH1 0x40 MLOAD PUSH32 0x3688124A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP7 PUSH1 0x0 ADD MLOAD DUP8 PUSH1 0x20 ADD MLOAD DUP9 PUSH1 0x40 ADD MLOAD DUP10 PUSH1 0x60 ADD MLOAD DUP11 PUSH1 0x80 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4AFD SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8049 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 EQ PUSH2 0x4B4B JUMPI PUSH1 0x40 MLOAD PUSH32 0xD529142C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4B5A DUP8 PUSH1 0x0 ADD MLOAD PUSH2 0x4FC9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 EQ ISZERO PUSH2 0x4C63 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE9413D38 DUP9 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BC4 SWAP2 SWAP1 PUSH2 0x81B2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4BDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4BF0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4C14 SWAP2 SWAP1 PUSH2 0x6D97 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 EQ ISZERO PUSH2 0x4C62 JUMPI DUP7 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x175DADAD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C59 SWAP2 SWAP1 PUSH2 0x81B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 DUP9 PUSH1 0x80 ADD MLOAD DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4C7C SWAP3 SWAP2 SWAP1 PUSH2 0x790B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP PUSH2 0x4CA1 DUP10 DUP3 PUSH2 0x50D0 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 GAS PUSH2 0x1388 DUP2 LT ISZERO PUSH2 0x4CC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1388 DUP2 SUB SWAP1 POP DUP5 PUSH1 0x40 DUP3 DIV DUP3 SUB GT PUSH2 0x4CD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 EXTCODESIZE PUSH2 0x4CE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 DUP11 CALL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4D06 PUSH2 0x513D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT PUSH2 0x4D4D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x43D4CF6600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D44 SWAP2 SWAP1 PUSH2 0x7B44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4D9D PUSH1 0x0 CALLDATASIZE DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x5249 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 DUP3 GAS DUP11 DUP11 PUSH2 0x4DB0 SWAP2 SWAP1 PUSH2 0x83E9 JUMP JUMPDEST PUSH2 0x4DBA SWAP2 SWAP1 PUSH2 0x854A JUMP JUMPDEST DUP8 PUSH2 0x4DC5 SWAP2 SWAP1 PUSH2 0x84F0 JUMP JUMPDEST PUSH2 0x4DCF SWAP2 SWAP1 PUSH2 0x83E9 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x4DE2 SWAP2 SWAP1 PUSH2 0x84F0 JUMP JUMPDEST PUSH2 0x4DEC SWAP2 SWAP1 PUSH2 0x84BF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH4 0xFFFFFFFF AND PUSH5 0xE8D4A51000 PUSH2 0x4E07 SWAP2 SWAP1 PUSH2 0x84F0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x4E21 SWAP2 SWAP1 PUSH2 0x854A JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x4E5A JUMPI PUSH1 0x40 MLOAD PUSH32 0xE80FA38100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP3 PUSH2 0x4E66 SWAP2 SWAP1 PUSH2 0x83E9 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4EE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4EDA SWAP1 PUSH2 0x7D21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA4B1 DUP3 EQ DUP1 PUSH2 0x4FB5 JUMPI POP PUSH3 0x66EED DUP3 EQ JUMPDEST DUP1 PUSH2 0x4FC2 JUMPI POP PUSH3 0x66EEE DUP3 EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 CHAINID SWAP1 POP PUSH2 0x4FD8 DUP2 PUSH2 0x4FA1 JUMP JUMPDEST ISZERO PUSH2 0x50BB JUMPI PUSH2 0x100 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x4FF3 PUSH2 0x48E6 JUMP JUMPDEST PUSH2 0x4FFD SWAP2 SWAP1 PUSH2 0x854A JUMP JUMPDEST GT DUP1 PUSH2 0x501A JUMPI POP PUSH2 0x500C PUSH2 0x48E6 JUMP JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x5029 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x50CB JUMP JUMPDEST PUSH1 0x64 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2B407A82 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5063 SWAP2 SWAP1 PUSH2 0x81B2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x507B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x508F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x50B3 SWAP2 SWAP1 PUSH2 0x6D97 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x50CB JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND BLOCKHASH SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5104 DUP4 PUSH1 0x0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD DUP7 PUSH1 0x60 ADD MLOAD DUP7 DUP9 PUSH1 0xA0 ADD MLOAD DUP10 PUSH1 0xC0 ADD MLOAD DUP11 PUSH1 0xE0 ADD MLOAD DUP12 PUSH2 0x100 ADD MLOAD PUSH2 0x53DB JUMP JUMPDEST PUSH1 0x3 DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x511C SWAP3 SWAP2 SWAP1 PUSH2 0x7F13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x7 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND GT SWAP1 POP PUSH1 0x0 DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x51CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x51E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5206 SWAP2 SWAP1 PUSH2 0x6FD6 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP SWAP1 SWAP2 POP POP DUP1 SWAP4 POP DUP2 SWAP3 POP POP POP DUP3 DUP1 ISZERO PUSH2 0x5234 JUMPI POP DUP2 TIMESTAMP PUSH2 0x522B SWAP2 SWAP1 PUSH2 0x854A JUMP JUMPDEST DUP5 PUSH4 0xFFFFFFFF AND LT JUMPDEST ISZERO PUSH2 0x523F JUMPI PUSH1 0xA SLOAD SWAP1 POP JUMPDEST DUP1 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 CHAINID SWAP1 POP PUSH2 0x5258 DUP2 PUSH2 0x4FA1 JUMP JUMPDEST ISZERO PUSH2 0x52E4 JUMPI PUSH1 0x6C PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC6F7DE0E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x52A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x52B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x52DC SWAP2 SWAP1 PUSH2 0x6F3C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x53D6 JUMP JUMPDEST PUSH2 0x52ED DUP2 PUSH2 0x55C8 JUMP JUMPDEST ISZERO PUSH2 0x53D0 JUMPI PUSH20 0x420000000000000000000000000000000000000F PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x49948E0E DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x48 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8EE6 PUSH1 0x48 SWAP2 CODECOPY PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x534D SWAP3 SWAP2 SWAP1 PUSH2 0x781F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5378 SWAP2 SWAP1 PUSH2 0x7AD1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x53A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x53C8 SWAP2 SWAP1 PUSH2 0x6F3C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x53D6 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x53E4 DUP10 PUSH2 0x5607 JUMP JUMPDEST PUSH2 0x5423 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x541A SWAP1 PUSH2 0x7CC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x542C DUP9 PUSH2 0x5607 JUMP JUMPDEST PUSH2 0x546B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5462 SWAP1 PUSH2 0x7CE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5474 DUP4 PUSH2 0x5607 JUMP JUMPDEST PUSH2 0x54B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54AA SWAP1 PUSH2 0x7CA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x54BC DUP3 PUSH2 0x5607 JUMP JUMPDEST PUSH2 0x54FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F2 SWAP1 PUSH2 0x7DA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5507 DUP8 DUP11 DUP9 DUP8 PUSH2 0x5788 JUMP JUMPDEST PUSH2 0x5546 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x553D SWAP1 PUSH2 0x7C61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5552 DUP11 DUP8 PUSH2 0x59A6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5565 DUP10 DUP12 DUP8 DUP12 DUP7 DUP10 DUP10 PUSH2 0x5A38 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5576 DUP4 DUP14 DUP14 DUP11 DUP7 PUSH2 0x5BBF JUMP JUMPDEST SWAP1 POP DUP1 DUP11 EQ PUSH2 0x55BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55B1 SWAP1 PUSH2 0x7D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA DUP3 EQ DUP1 PUSH2 0x55DA JUMPI POP PUSH2 0x1A4 DUP3 EQ JUMPDEST DUP1 PUSH2 0x55E7 JUMPI POP PUSH3 0xAA37DC DUP3 EQ JUMPDEST DUP1 PUSH2 0x55F3 JUMPI POP PUSH2 0x2105 DUP3 EQ JUMPDEST DUP1 PUSH2 0x5600 JUMPI POP PUSH3 0x14A33 DUP3 EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP3 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x563E JUMPI PUSH2 0x563D PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD LT PUSH2 0x5683 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x567A SWAP1 PUSH2 0x7C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP3 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x56B8 JUMPI PUSH2 0x56B7 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD LT PUSH2 0x56FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56F4 SWAP1 PUSH2 0x7D81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x572C JUMPI PUSH2 0x572B PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5740 JUMPI PUSH2 0x573F PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5759 JUMPI PUSH2 0x5758 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD MULMOD PUSH2 0x5780 DUP4 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5776 JUMPI PUSH2 0x5775 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x5C01 JUMP JUMPDEST EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x57F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57F0 SWAP1 PUSH2 0x7C41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 DUP7 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5812 JUMPI PUSH2 0x5811 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH2 0x5825 JUMPI PUSH2 0x5824 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST MOD EQ PUSH2 0x5832 JUMPI PUSH1 0x1C PUSH2 0x5835 JUMP JUMPDEST PUSH1 0x1B JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP1 PUSH2 0x5868 JUMPI PUSH2 0x5867 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP6 DUP8 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x587D JUMPI PUSH2 0x587C PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD MULMOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 SUB PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP1 PUSH2 0x58DB JUMPI PUSH2 0x58DA PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP8 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x58EF JUMPI PUSH2 0x58EE PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP10 MULMOD PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 DUP6 DUP11 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5915 JUMPI PUSH2 0x5914 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x0 SHL DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x593B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7A8C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x595D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP5 POP POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x59AE PUSH2 0x66EE JUMP JUMPDEST PUSH2 0x59DB PUSH1 0x1 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x59C7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x78CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x5CA4 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x59E7 DUP2 PUSH2 0x5607 JUMP JUMPDEST PUSH2 0x5A32 JUMPI PUSH2 0x5A2B DUP2 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5A02 JUMPI PUSH2 0x5A01 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5A17 SWAP2 SWAP1 PUSH2 0x7843 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x5CA4 JUMP JUMPDEST SWAP1 POP PUSH2 0x59DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5A40 PUSH2 0x66EE JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP4 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5A75 JUMPI PUSH2 0x5A74 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH2 0x5A88 JUMPI PUSH2 0x5A87 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST MOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP8 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5ABE JUMPI PUSH2 0x5ABD PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH2 0x5AD1 JUMPI PUSH2 0x5AD0 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST MOD EQ ISZERO PUSH2 0x5B13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B0A SWAP1 PUSH2 0x7BC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5B1E DUP8 DUP10 DUP9 PUSH2 0x5DA8 JUMP JUMPDEST PUSH2 0x5B5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B54 SWAP1 PUSH2 0x7D41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5B68 DUP5 DUP7 DUP6 PUSH2 0x5DA8 JUMP JUMPDEST PUSH2 0x5BA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B9E SWAP1 PUSH2 0x7BA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5BB2 DUP7 DUP5 DUP5 PUSH2 0x5F40 JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP7 DUP7 DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5BDD SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x785E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x5C33 JUMPI PUSH2 0x5C32 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x5C62 JUMPI PUSH2 0x5C61 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP5 DUP6 MULMOD DUP5 MULMOD SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x5C98 JUMPI PUSH2 0x5C97 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST PUSH1 0x7 DUP3 ADDMOD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5CAC PUSH2 0x66EE JUMP JUMPDEST PUSH2 0x5CB5 DUP3 PUSH2 0x60BC JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5CC9 JUMPI PUSH2 0x5CC8 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x5CFB PUSH2 0x5CF6 DUP3 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5CEC JUMPI PUSH2 0x5CEB PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x5C01 JUMP JUMPDEST PUSH2 0x6129 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5D0F JUMPI PUSH2 0x5D0E PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 PUSH1 0x2 DUP3 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5D30 JUMPI PUSH2 0x5D2F PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH2 0x5D43 JUMPI PUSH2 0x5D42 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST MOD EQ ISZERO PUSH2 0x5DA3 JUMPI DUP1 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5D5E JUMPI PUSH2 0x5D5D PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB DUP2 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5D99 JUMPI PUSH2 0x5D98 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x5DED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DE4 SWAP1 PUSH2 0x7D61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5E03 JUMPI PUSH2 0x5E02 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x2 DUP8 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5E23 JUMPI PUSH2 0x5E22 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x5E32 SWAP2 SWAP1 PUSH2 0x8939 JUMP JUMPDEST EQ PUSH2 0x5E3E JUMPI PUSH1 0x1C PUSH2 0x5E41 JUMP JUMPDEST PUSH1 0x1B JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP1 PUSH2 0x5E74 JUMPI PUSH2 0x5E73 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP4 DUP8 MULMOD PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL DUP5 DUP7 PUSH1 0x0 SHL DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x5EA7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7A8C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5EC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5EE8 SWAP2 SWAP1 PUSH2 0x7804 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP6 POP POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x5F48 PUSH2 0x66EE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x5FB9 DUP8 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5F64 JUMPI PUSH2 0x5F63 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5F7D JUMPI PUSH2 0x5F7C PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5F96 JUMPI PUSH2 0x5F95 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP10 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5FAF JUMPI PUSH2 0x5FAE PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x616C JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP DUP3 SWAP6 POP POP POP POP PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x5FF6 JUMPI PUSH2 0x5FF5 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP7 DUP4 MULMOD EQ PUSH2 0x6039 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6030 SWAP1 PUSH2 0x7C81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x6073 JUMPI PUSH2 0x6072 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP8 DUP7 MULMOD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x60AA JUMPI PUSH2 0x60A9 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP8 DUP6 MULMOD DUP2 MSTORE POP SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP2 LT PUSH2 0x6124 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6104 SWAP2 SWAP1 PUSH2 0x7843 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP PUSH2 0x60CC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6165 DUP3 PUSH1 0x2 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F PUSH2 0x615E SWAP2 SWAP1 PUSH2 0x83E9 JUMP JUMPDEST SWAP1 SHR PUSH2 0x6363 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 DUP1 SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x61AC JUMPI PUSH2 0x61AB PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP10 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB DUP9 ADDMOD SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x6204 JUMPI PUSH2 0x6203 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP12 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB DUP11 ADDMOD SWAP1 POP PUSH1 0x0 PUSH2 0x6239 DUP4 DUP4 DUP6 DUP6 PUSH2 0x64C3 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x624D DUP9 DUP3 DUP15 DUP9 PUSH2 0x653B JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x6261 DUP9 DUP3 DUP13 DUP8 PUSH2 0x653B JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH1 0x0 PUSH2 0x6277 DUP14 DUP8 DUP12 DUP6 PUSH2 0x653B JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x628B DUP9 DUP3 DUP7 DUP7 PUSH2 0x64C3 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x629F DUP9 DUP3 DUP15 DUP10 PUSH2 0x653B JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP DUP1 DUP3 EQ PUSH2 0x634F JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x62DD JUMPI PUSH2 0x62DC PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP2 DUP11 MULMOD SWAP9 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x6311 JUMPI PUSH2 0x6310 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP3 DUP10 MULMOD SWAP8 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x6345 JUMPI PUSH2 0x6344 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP2 DUP4 MULMOD SWAP7 POP PUSH2 0x6353 JUMP JUMPDEST DUP2 SWAP7 POP JUMPDEST POP POP POP POP POP POP SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x636E PUSH2 0x6710 JUMP JUMPDEST PUSH1 0x20 DUP2 PUSH1 0x0 PUSH1 0x6 DUP2 LT PUSH2 0x6384 JUMPI PUSH2 0x6383 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x20 DUP2 PUSH1 0x1 PUSH1 0x6 DUP2 LT PUSH2 0x63A3 JUMPI PUSH2 0x63A2 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x20 DUP2 PUSH1 0x2 PUSH1 0x6 DUP2 LT PUSH2 0x63C2 JUMPI PUSH2 0x63C1 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x3 PUSH1 0x6 DUP2 LT PUSH2 0x63E0 JUMPI PUSH2 0x63DF PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x4 PUSH1 0x6 DUP2 LT PUSH2 0x63FE JUMPI PUSH2 0x63FD PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP2 PUSH1 0x5 PUSH1 0x6 DUP2 LT PUSH2 0x643C JUMPI PUSH2 0x643B PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x644D PUSH2 0x6732 JUMP JUMPDEST PUSH1 0x20 DUP2 PUSH1 0xC0 DUP5 PUSH1 0x5 PUSH1 0x0 NOT STATICCALL SWAP3 POP PUSH1 0x0 DUP4 EQ ISZERO PUSH2 0x649F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6496 SWAP1 PUSH2 0x7C01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x1 DUP2 LT PUSH2 0x64B3 JUMPI PUSH2 0x64B2 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x64F5 JUMPI PUSH2 0x64F4 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP5 DUP8 MULMOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x6527 JUMPI PUSH2 0x6526 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP5 DUP8 MULMOD DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x656F JUMPI PUSH2 0x656E PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP8 DUP6 MULMOD SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x65A5 JUMPI PUSH2 0x65A4 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP8 DUP8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB MULMOD SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x65FB JUMPI PUSH2 0x65FA PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP2 DUP4 ADDMOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x662D JUMPI PUSH2 0x662C PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP7 DUP10 MULMOD DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x66BC JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x66BB JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x6663 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x66C9 SWAP2 SWAP1 PUSH2 0x6754 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x66EB SWAP2 SWAP1 PUSH2 0x6754 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x676D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x6755 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6784 PUSH2 0x677F DUP5 PUSH2 0x829D JUMP JUMPDEST PUSH2 0x8278 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x679E JUMPI PUSH2 0x679D PUSH2 0x8A64 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x67CE JUMPI DUP2 PUSH2 0x67B4 DUP9 DUP3 PUSH2 0x6B71 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x67A1 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x67E7 DUP2 PUSH2 0x8DE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP3 PUSH1 0x20 PUSH1 0x2 MUL DUP3 ADD GT ISZERO PUSH2 0x6809 JUMPI PUSH2 0x6808 PUSH2 0x8A64 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6824 JUMPI PUSH2 0x6823 PUSH2 0x8A5A JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH2 0x6831 DUP5 DUP3 DUP6 PUSH2 0x6771 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6849 DUP2 PUSH2 0x8DFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x685E DUP2 PUSH2 0x8E16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6873 DUP2 PUSH2 0x8E16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x688F JUMPI PUSH2 0x688E PUSH2 0x8A5A JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x68AC JUMPI PUSH2 0x68AB PUSH2 0x8A55 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x68C8 JUMPI PUSH2 0x68C7 PUSH2 0x8A64 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x68DE DUP2 PUSH2 0x8E2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x68F3 DUP2 PUSH2 0x8E2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6910 JUMPI PUSH2 0x690F PUSH2 0x8A5F JUMP JUMPDEST JUMPDEST PUSH2 0x691B PUSH2 0x120 PUSH2 0x8278 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x692B DUP5 DUP3 DUP6 ADD PUSH2 0x6B9B JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x693F DUP5 DUP3 DUP6 ADD PUSH2 0x6B9B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x6953 DUP5 DUP3 DUP6 ADD PUSH2 0x6B9B JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x6967 DUP5 DUP3 DUP6 ADD PUSH2 0x6B9B JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x697B DUP5 DUP3 DUP6 ADD PUSH2 0x6B9B JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x698F DUP5 DUP3 DUP6 ADD PUSH2 0x6B5C JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x69A3 DUP5 DUP3 DUP6 ADD PUSH2 0x6B5C JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x69B7 DUP5 DUP3 DUP6 ADD PUSH2 0x6B5C JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x100 PUSH2 0x69CC DUP5 DUP3 DUP6 ADD PUSH2 0x6B5C JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x69F0 JUMPI PUSH2 0x69EF PUSH2 0x8A5F JUMP JUMPDEST JUMPDEST PUSH2 0x69FB PUSH2 0x120 PUSH2 0x8278 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6A0B DUP5 DUP3 DUP6 ADD PUSH2 0x680F JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x6A1F DUP5 DUP3 DUP6 ADD PUSH2 0x680F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x6A33 DUP5 DUP3 DUP6 ADD PUSH2 0x6B71 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x6A47 DUP5 DUP3 DUP6 ADD PUSH2 0x6B71 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x6A5B DUP5 DUP3 DUP6 ADD PUSH2 0x6B71 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x6A6F DUP5 DUP3 DUP6 ADD PUSH2 0x67D8 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH2 0x100 PUSH2 0x6A84 DUP5 DUP3 DUP6 ADD PUSH2 0x680F JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH2 0x140 PUSH2 0x6A99 DUP5 DUP3 DUP6 ADD PUSH2 0x680F JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x180 PUSH2 0x6AAE DUP5 DUP3 DUP6 ADD PUSH2 0x6B71 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6AD1 JUMPI PUSH2 0x6AD0 PUSH2 0x8A5F JUMP JUMPDEST JUMPDEST PUSH2 0x6ADB PUSH1 0xA0 PUSH2 0x8278 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6AEB DUP5 DUP3 DUP6 ADD PUSH2 0x6BB0 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x6AFF DUP5 DUP3 DUP6 ADD PUSH2 0x6BB0 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x6B13 DUP5 DUP3 DUP6 ADD PUSH2 0x6B9B JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x6B27 DUP5 DUP3 DUP6 ADD PUSH2 0x6B9B JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x6B3B DUP5 DUP3 DUP6 ADD PUSH2 0x67D8 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6B56 DUP2 PUSH2 0x8E44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6B6B DUP2 PUSH2 0x8E5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6B80 DUP2 PUSH2 0x8E72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6B95 DUP2 PUSH2 0x8E72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6BAA DUP2 PUSH2 0x8E89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6BBF DUP2 PUSH2 0x8EA0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6BD4 DUP2 PUSH2 0x8EB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6BE9 DUP2 PUSH2 0x8ECE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6C05 JUMPI PUSH2 0x6C04 PUSH2 0x8A6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6C13 DUP5 DUP3 DUP6 ADD PUSH2 0x67D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6C33 JUMPI PUSH2 0x6C32 PUSH2 0x8A6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6C41 DUP6 DUP3 DUP7 ADD PUSH2 0x67D8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x6C52 DUP6 DUP3 DUP7 ADD PUSH2 0x67ED JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x6C76 JUMPI PUSH2 0x6C75 PUSH2 0x8A6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6C84 DUP8 DUP3 DUP9 ADD PUSH2 0x67D8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x6C95 DUP8 DUP3 DUP9 ADD PUSH2 0x6B71 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CB6 JUMPI PUSH2 0x6CB5 PUSH2 0x8A69 JUMP JUMPDEST JUMPDEST PUSH2 0x6CC2 DUP8 DUP3 DUP9 ADD PUSH2 0x6879 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6CE7 JUMPI PUSH2 0x6CE6 PUSH2 0x8A6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6CF5 DUP6 DUP3 DUP7 ADD PUSH2 0x67D8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x6D06 DUP6 DUP3 DUP7 ADD PUSH2 0x6BDA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6D26 JUMPI PUSH2 0x6D25 PUSH2 0x8A6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6D34 DUP5 DUP3 DUP6 ADD PUSH2 0x67ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6D53 JUMPI PUSH2 0x6D52 PUSH2 0x8A6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6D61 DUP5 DUP3 DUP6 ADD PUSH2 0x680F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6D80 JUMPI PUSH2 0x6D7F PUSH2 0x8A6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6D8E DUP5 DUP3 DUP6 ADD PUSH2 0x683A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6DAD JUMPI PUSH2 0x6DAC PUSH2 0x8A6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6DBB DUP5 DUP3 DUP6 ADD PUSH2 0x6864 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x6DE0 JUMPI PUSH2 0x6DDF PUSH2 0x8A6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6DEE DUP9 DUP3 DUP10 ADD PUSH2 0x684F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x6DFF DUP9 DUP3 DUP10 ADD PUSH2 0x6BB0 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x6E10 DUP9 DUP3 DUP10 ADD PUSH2 0x6B47 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x6E21 DUP9 DUP3 DUP10 ADD PUSH2 0x6B9B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x6E32 DUP9 DUP3 DUP10 ADD PUSH2 0x6B9B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x240 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6E57 JUMPI PUSH2 0x6E56 PUSH2 0x8A6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6E65 DUP6 DUP3 DUP7 ADD PUSH2 0x69D9 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1A0 PUSH2 0x6E77 DUP6 DUP3 DUP7 ADD PUSH2 0x6ABB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1C0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x6E9F JUMPI PUSH2 0x6E9E PUSH2 0x8A6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6EAD DUP10 DUP3 DUP11 ADD PUSH2 0x6B47 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x6EBE DUP10 DUP3 DUP11 ADD PUSH2 0x6B9B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x6ECF DUP10 DUP3 DUP11 ADD PUSH2 0x6B9B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x6EE0 DUP10 DUP3 DUP11 ADD PUSH2 0x6B9B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x6EF1 DUP10 DUP3 DUP11 ADD PUSH2 0x68CF JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x6F02 DUP10 DUP3 DUP11 ADD PUSH2 0x68F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F25 JUMPI PUSH2 0x6F24 PUSH2 0x8A6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6F33 DUP5 DUP3 DUP6 ADD PUSH2 0x6B71 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F52 JUMPI PUSH2 0x6F51 PUSH2 0x8A6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6F60 DUP5 DUP3 DUP6 ADD PUSH2 0x6B86 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F7F JUMPI PUSH2 0x6F7E PUSH2 0x8A6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6F8D DUP5 DUP3 DUP6 ADD PUSH2 0x6BB0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6FAD JUMPI PUSH2 0x6FAC PUSH2 0x8A6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6FBB DUP6 DUP3 DUP7 ADD PUSH2 0x6BB0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x6FCC DUP6 DUP3 DUP7 ADD PUSH2 0x67D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x6FF2 JUMPI PUSH2 0x6FF1 PUSH2 0x8A6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7000 DUP9 DUP3 DUP10 ADD PUSH2 0x6BC5 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x7011 DUP9 DUP3 DUP10 ADD PUSH2 0x68E4 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x7022 DUP9 DUP3 DUP10 ADD PUSH2 0x6B86 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x7033 DUP9 DUP3 DUP10 ADD PUSH2 0x6B86 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x7044 DUP9 DUP3 DUP10 ADD PUSH2 0x6BC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x705D DUP4 DUP4 PUSH2 0x70B1 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7075 DUP4 DUP4 PUSH2 0x72BD JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x708D DUP4 DUP4 PUSH2 0x7757 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x70A5 DUP4 DUP4 PUSH2 0x7775 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x70BA DUP2 PUSH2 0x85D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x70C9 DUP2 PUSH2 0x85D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x70E0 PUSH2 0x70DB DUP3 PUSH2 0x85D1 JUMP JUMPDEST PUSH2 0x8901 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x70F1 DUP3 PUSH2 0x82FD JUMP JUMPDEST PUSH2 0x70FB DUP2 DUP6 PUSH2 0x8373 JUMP JUMPDEST SWAP4 POP PUSH2 0x7106 DUP4 PUSH2 0x82C3 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7137 JUMPI DUP2 MLOAD PUSH2 0x711E DUP9 DUP3 PUSH2 0x7051 JUMP JUMPDEST SWAP8 POP PUSH2 0x7129 DUP4 PUSH2 0x833F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x710A JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x714F DUP3 PUSH2 0x8308 JUMP JUMPDEST PUSH2 0x7159 DUP2 DUP6 PUSH2 0x8384 JUMP JUMPDEST SWAP4 POP PUSH2 0x7164 DUP4 PUSH2 0x82D3 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7195 JUMPI DUP2 MLOAD PUSH2 0x717C DUP9 DUP3 PUSH2 0x7069 JUMP JUMPDEST SWAP8 POP PUSH2 0x7187 DUP4 PUSH2 0x834C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x7168 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x71AB DUP2 PUSH2 0x8313 JUMP JUMPDEST PUSH2 0x71B5 DUP2 DUP5 PUSH2 0x8395 JUMP JUMPDEST SWAP3 POP PUSH2 0x71C0 DUP3 PUSH2 0x82E3 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x71F1 JUMPI DUP2 MLOAD PUSH2 0x71D8 DUP8 DUP3 PUSH2 0x7081 JUMP JUMPDEST SWAP7 POP PUSH2 0x71E3 DUP4 PUSH2 0x8359 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x71C4 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7202 DUP2 PUSH2 0x8313 JUMP JUMPDEST PUSH2 0x720C DUP2 DUP5 PUSH2 0x83A0 JUMP JUMPDEST SWAP3 POP PUSH2 0x7217 DUP3 PUSH2 0x82E3 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7248 JUMPI DUP2 MLOAD PUSH2 0x722F DUP8 DUP3 PUSH2 0x7099 JUMP JUMPDEST SWAP7 POP PUSH2 0x723A DUP4 PUSH2 0x8359 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x721B JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x725B DUP3 PUSH2 0x831E JUMP JUMPDEST PUSH2 0x7265 DUP2 DUP6 PUSH2 0x83AB JUMP JUMPDEST SWAP4 POP PUSH2 0x7270 DUP4 PUSH2 0x82ED JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x72A1 JUMPI DUP2 MLOAD PUSH2 0x7288 DUP9 DUP3 PUSH2 0x7081 JUMP JUMPDEST SWAP8 POP PUSH2 0x7293 DUP4 PUSH2 0x8366 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x7274 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x72B7 DUP2 PUSH2 0x85E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x72C6 DUP2 PUSH2 0x85EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x72D5 DUP2 PUSH2 0x85EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x72EC PUSH2 0x72E7 DUP3 PUSH2 0x85EF JUMP JUMPDEST PUSH2 0x8913 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x72FD DUP3 PUSH2 0x8329 JUMP JUMPDEST PUSH2 0x7307 DUP2 DUP6 PUSH2 0x83BC JUMP JUMPDEST SWAP4 POP PUSH2 0x7317 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x8739 JUMP JUMPDEST PUSH2 0x7320 DUP2 PUSH2 0x8A73 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7336 DUP3 PUSH2 0x8329 JUMP JUMPDEST PUSH2 0x7340 DUP2 DUP6 PUSH2 0x83CD JUMP JUMPDEST SWAP4 POP PUSH2 0x7350 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x8739 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7365 DUP2 PUSH2 0x86A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7374 DUP2 PUSH2 0x86CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7383 DUP2 PUSH2 0x86F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7392 DUP2 PUSH2 0x85F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A3 DUP3 PUSH2 0x8334 JUMP JUMPDEST PUSH2 0x73AD DUP2 DUP6 PUSH2 0x83D8 JUMP JUMPDEST SWAP4 POP PUSH2 0x73BD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x8739 JUMP JUMPDEST PUSH2 0x73C6 DUP2 PUSH2 0x8A73 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73DE PUSH1 0x16 DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x73E9 DUP3 PUSH2 0x8B06 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7401 PUSH1 0x17 DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x740C DUP3 PUSH2 0x8B2F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7424 PUSH1 0x1E DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x742F DUP3 PUSH2 0x8B58 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7447 PUSH1 0x16 DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x7452 DUP3 PUSH2 0x8B81 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x746A PUSH1 0x12 DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x7475 DUP3 PUSH2 0x8BAA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x748D PUSH1 0x12 DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x7498 DUP3 PUSH2 0x8BD3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74B0 PUSH1 0xB DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x74BB DUP3 PUSH2 0x8BFC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74D3 PUSH1 0x19 DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x74DE DUP3 PUSH2 0x8C25 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74F6 PUSH1 0x19 DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x7501 DUP3 PUSH2 0x8C4E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7519 PUSH1 0x1D DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x7524 DUP3 PUSH2 0x8C77 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x753C PUSH1 0x1A DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x7547 DUP3 PUSH2 0x8CA0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x755F PUSH1 0x15 DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x756A DUP3 PUSH2 0x8CC9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7582 PUSH1 0xD DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x758D DUP3 PUSH2 0x8CF2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75A5 PUSH1 0x17 DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x75B0 DUP3 PUSH2 0x8D1B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75C8 PUSH1 0x16 DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x75D3 DUP3 PUSH2 0x8D44 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75EB PUSH1 0xB DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x75F6 DUP3 PUSH2 0x8D6D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x760E PUSH1 0x12 DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x7619 DUP3 PUSH2 0x8D96 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7631 PUSH1 0x1C DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x763C DUP3 PUSH2 0x8DBF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x120 DUP3 ADD PUSH1 0x0 DUP1 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x765D DUP2 PUSH2 0x876C JUMP JUMPDEST PUSH2 0x766A PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x779B JUMP JUMPDEST POP PUSH2 0x7674 DUP2 PUSH2 0x8822 JUMP JUMPDEST PUSH2 0x7681 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x779B JUMP JUMPDEST POP PUSH2 0x768B DUP2 PUSH2 0x883C JUMP JUMPDEST PUSH2 0x7698 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x779B JUMP JUMPDEST POP PUSH2 0x76A2 DUP2 PUSH2 0x8786 JUMP JUMPDEST PUSH2 0x76AF PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x779B JUMP JUMPDEST POP PUSH2 0x76B9 DUP2 PUSH2 0x87A0 JUMP JUMPDEST PUSH2 0x76C6 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x779B JUMP JUMPDEST POP PUSH2 0x76D0 DUP2 PUSH2 0x87BA JUMP JUMPDEST PUSH2 0x76DD PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x7739 JUMP JUMPDEST POP PUSH2 0x76E7 DUP2 PUSH2 0x87D4 JUMP JUMPDEST PUSH2 0x76F4 PUSH1 0xC0 DUP7 ADD DUP3 PUSH2 0x7739 JUMP JUMPDEST POP PUSH2 0x76FE DUP2 PUSH2 0x87EE JUMP JUMPDEST PUSH2 0x770B PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0x7739 JUMP JUMPDEST POP PUSH2 0x7715 DUP2 PUSH2 0x8808 JUMP JUMPDEST PUSH2 0x7723 PUSH2 0x100 DUP7 ADD DUP3 PUSH2 0x7739 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7733 DUP2 PUSH2 0x8603 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7742 DUP2 PUSH2 0x8631 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7751 DUP2 PUSH2 0x8631 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7760 DUP2 PUSH2 0x8640 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x776F DUP2 PUSH2 0x8640 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x777E DUP2 PUSH2 0x8640 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7795 PUSH2 0x7790 DUP3 PUSH2 0x8640 JUMP JUMPDEST PUSH2 0x892F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x77A4 DUP2 PUSH2 0x864A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x77B3 DUP2 PUSH2 0x864A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x77C2 DUP2 PUSH2 0x8715 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x77D1 DUP2 PUSH2 0x865A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x77E0 DUP2 PUSH2 0x866E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x77EF DUP2 PUSH2 0x8727 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x77FE DUP2 PUSH2 0x8691 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7810 DUP3 DUP5 PUSH2 0x71F9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x782B DUP3 DUP6 PUSH2 0x732B JUMP JUMPDEST SWAP2 POP PUSH2 0x7837 DUP3 DUP5 PUSH2 0x732B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x784F DUP3 DUP5 PUSH2 0x7784 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x786A DUP3 DUP10 PUSH2 0x7784 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x787A DUP3 DUP9 PUSH2 0x71F9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP2 POP PUSH2 0x788A DUP3 DUP8 PUSH2 0x71F9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP2 POP PUSH2 0x789A DUP3 DUP7 PUSH2 0x71F9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP2 POP PUSH2 0x78AA DUP3 DUP6 PUSH2 0x71F9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP2 POP PUSH2 0x78BA DUP3 DUP5 PUSH2 0x70CF JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78DA DUP3 DUP7 PUSH2 0x7784 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x78EA DUP3 DUP6 PUSH2 0x71F9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP2 POP PUSH2 0x78FA DUP3 DUP5 PUSH2 0x7784 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7917 DUP3 DUP6 PUSH2 0x7784 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x7927 DUP3 DUP5 PUSH2 0x72DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x794C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x70C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7967 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x70C0 JUMP JUMPDEST PUSH2 0x7974 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x70C0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7990 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x70C0 JUMP JUMPDEST PUSH2 0x799D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7766 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x79B9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x70C0 JUMP JUMPDEST PUSH2 0x79C6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x77E6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x79E2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x71A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x79FD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x72AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7A18 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x72CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x7A33 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x72CC JUMP JUMPDEST PUSH2 0x7A40 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x70C0 JUMP JUMPDEST PUSH2 0x7A4D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x77C8 JUMP JUMPDEST PUSH2 0x7A5A PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x77C8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7A78 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x72CC JUMP JUMPDEST PUSH2 0x7A85 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7766 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x7AA1 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x72CC JUMP JUMPDEST PUSH2 0x7AAE PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x77D7 JUMP JUMPDEST PUSH2 0x7ABB PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x72CC JUMP JUMPDEST PUSH2 0x7AC8 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x72CC JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7AEB DUP2 DUP5 PUSH2 0x72F2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7B08 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x735C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7B23 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x736B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7B3E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x737A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7B59 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7389 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7B79 DUP2 DUP5 PUSH2 0x7398 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7B9A DUP2 PUSH2 0x73D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7BBA DUP2 PUSH2 0x73F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7BDA DUP2 PUSH2 0x7417 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7BFA DUP2 PUSH2 0x743A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7C1A DUP2 PUSH2 0x745D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7C3A DUP2 PUSH2 0x7480 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7C5A DUP2 PUSH2 0x74A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7C7A DUP2 PUSH2 0x74C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7C9A DUP2 PUSH2 0x74E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7CBA DUP2 PUSH2 0x750C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7CDA DUP2 PUSH2 0x752F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7CFA DUP2 PUSH2 0x7552 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7D1A DUP2 PUSH2 0x7575 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7D3A DUP2 PUSH2 0x7598 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7D5A DUP2 PUSH2 0x75BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7D7A DUP2 PUSH2 0x75DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7D9A DUP2 PUSH2 0x7601 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7DBA DUP2 PUSH2 0x7624 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7DD6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x772A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x7DF1 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x772A JUMP JUMPDEST PUSH2 0x7DFE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x772A JUMP JUMPDEST PUSH2 0x7E0B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x772A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x7E28 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x772A JUMP JUMPDEST PUSH2 0x7E35 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x77AA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x7E47 DUP2 DUP5 PUSH2 0x7144 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x7E66 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x772A JUMP JUMPDEST PUSH2 0x7E73 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x77AA JUMP JUMPDEST PUSH2 0x7E80 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x77AA JUMP JUMPDEST PUSH2 0x7E8D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x77AA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 DUP3 ADD SWAP1 POP PUSH2 0x7EAC PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x772A JUMP JUMPDEST PUSH2 0x7EB9 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x77AA JUMP JUMPDEST PUSH2 0x7EC6 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x77AA JUMP JUMPDEST PUSH2 0x7ED3 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x77AA JUMP JUMPDEST PUSH2 0x7EE0 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x7389 JUMP JUMPDEST PUSH2 0x7EED PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x7647 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7F0D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7766 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x7F28 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x7766 JUMP JUMPDEST PUSH2 0x7F35 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x71A2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7F51 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x7766 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x7F63 DUP2 DUP5 PUSH2 0x7250 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7F81 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x7766 JUMP JUMPDEST PUSH2 0x7F8E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7766 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x7FAA PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x7766 JUMP JUMPDEST PUSH2 0x7FB7 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x7766 JUMP JUMPDEST PUSH2 0x7FC4 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x772A JUMP JUMPDEST PUSH2 0x7FD1 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x77AA JUMP JUMPDEST PUSH2 0x7FDE PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x77AA JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x7FFD PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x7766 JUMP JUMPDEST PUSH2 0x800A PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x7766 JUMP JUMPDEST PUSH2 0x8017 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x77C8 JUMP JUMPDEST PUSH2 0x8024 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x77AA JUMP JUMPDEST PUSH2 0x8031 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x77AA JUMP JUMPDEST PUSH2 0x803E PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x70C0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x805E PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x7766 JUMP JUMPDEST PUSH2 0x806B PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x77C8 JUMP JUMPDEST PUSH2 0x8078 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x77C8 JUMP JUMPDEST PUSH2 0x8085 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x77AA JUMP JUMPDEST PUSH2 0x8092 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x77AA JUMP JUMPDEST PUSH2 0x809F PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x70C0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x80BF PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x7766 JUMP JUMPDEST PUSH2 0x80CC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x77F5 JUMP JUMPDEST PUSH2 0x80D9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x72AE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x80F6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x77AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x8111 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x77AA JUMP JUMPDEST PUSH2 0x811E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x77AA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x813B PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x77AA JUMP JUMPDEST PUSH2 0x8148 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x77AA JUMP JUMPDEST PUSH2 0x8155 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x77AA JUMP JUMPDEST PUSH2 0x8162 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x77AA JUMP JUMPDEST PUSH2 0x816F PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x77AA JUMP JUMPDEST PUSH2 0x817C PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x7748 JUMP JUMPDEST PUSH2 0x8189 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x7748 JUMP JUMPDEST PUSH2 0x8196 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x7748 JUMP JUMPDEST PUSH2 0x81A4 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x7748 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x81C7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x77B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x81E2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x77C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x81FD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x77C8 JUMP JUMPDEST PUSH2 0x820A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x70C0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8226 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x77F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x8241 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x77F5 JUMP JUMPDEST PUSH2 0x824E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x77C8 JUMP JUMPDEST PUSH2 0x825B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x70C0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x826D DUP2 DUP5 PUSH2 0x70E6 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8282 PUSH2 0x8293 JUMP JUMPDEST SWAP1 POP PUSH2 0x828E DUP3 DUP3 PUSH2 0x8856 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x82B8 JUMPI PUSH2 0x82B7 PUSH2 0x8A26 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83F4 DUP3 PUSH2 0x8640 JUMP JUMPDEST SWAP2 POP PUSH2 0x83FF DUP4 PUSH2 0x8640 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x8434 JUMPI PUSH2 0x8433 PUSH2 0x896A JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x844A DUP3 PUSH2 0x865A JUMP JUMPDEST SWAP2 POP PUSH2 0x8455 DUP4 PUSH2 0x865A JUMP JUMPDEST SWAP3 POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x8472 JUMPI PUSH2 0x8471 PUSH2 0x896A JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8488 DUP3 PUSH2 0x8691 JUMP JUMPDEST SWAP2 POP PUSH2 0x8493 DUP4 PUSH2 0x8691 JUMP JUMPDEST SWAP3 POP DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x84B4 JUMPI PUSH2 0x84B3 PUSH2 0x896A JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x84CA DUP3 PUSH2 0x8640 JUMP JUMPDEST SWAP2 POP PUSH2 0x84D5 DUP4 PUSH2 0x8640 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x84E5 JUMPI PUSH2 0x84E4 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x84FB DUP3 PUSH2 0x8640 JUMP JUMPDEST SWAP2 POP PUSH2 0x8506 DUP4 PUSH2 0x8640 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x853F JUMPI PUSH2 0x853E PUSH2 0x896A JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8555 DUP3 PUSH2 0x8640 JUMP JUMPDEST SWAP2 POP PUSH2 0x8560 DUP4 PUSH2 0x8640 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x8573 JUMPI PUSH2 0x8572 PUSH2 0x896A JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8589 DUP3 PUSH2 0x8691 JUMP JUMPDEST SWAP2 POP PUSH2 0x8594 DUP4 PUSH2 0x8691 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x85A7 JUMPI PUSH2 0x85A6 PUSH2 0x896A JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x85DC DUP3 PUSH2 0x8611 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86B4 DUP3 PUSH2 0x86BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86C6 DUP3 PUSH2 0x8611 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86D8 DUP3 PUSH2 0x86DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86EA DUP3 PUSH2 0x8611 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86FC DUP3 PUSH2 0x8703 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x870E DUP3 PUSH2 0x8611 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8720 DUP3 PUSH2 0x865A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8732 DUP3 PUSH2 0x8691 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8757 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x873C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x8766 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x877F PUSH2 0x877A DUP4 PUSH2 0x8A91 JUMP JUMPDEST PUSH2 0x85C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8799 PUSH2 0x8794 DUP4 PUSH2 0x8AF9 JUMP JUMPDEST PUSH2 0x85C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87B3 PUSH2 0x87AE DUP4 PUSH2 0x8A9E JUMP JUMPDEST PUSH2 0x85C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87CD PUSH2 0x87C8 DUP4 PUSH2 0x8AAB JUMP JUMPDEST PUSH2 0x85B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87E7 PUSH2 0x87E2 DUP4 PUSH2 0x8AB8 JUMP JUMPDEST PUSH2 0x85B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8801 PUSH2 0x87FC DUP4 PUSH2 0x8AC5 JUMP JUMPDEST PUSH2 0x85B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x881B PUSH2 0x8816 DUP4 PUSH2 0x8AD2 JUMP JUMPDEST PUSH2 0x85B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8835 PUSH2 0x8830 DUP4 PUSH2 0x8ADF JUMP JUMPDEST PUSH2 0x85C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x884F PUSH2 0x884A DUP4 PUSH2 0x8AEC JUMP JUMPDEST PUSH2 0x85C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x885F DUP3 PUSH2 0x8A73 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x887E JUMPI PUSH2 0x887D PUSH2 0x8A26 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8892 DUP3 PUSH2 0x8640 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x88C5 JUMPI PUSH2 0x88C4 PUSH2 0x896A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x88DB DUP3 PUSH2 0x865A JUMP JUMPDEST SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x88F6 JUMPI PUSH2 0x88F5 PUSH2 0x896A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x890C DUP3 PUSH2 0x891D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8928 DUP3 PUSH2 0x8A84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8944 DUP3 PUSH2 0x8640 JUMP JUMPDEST SWAP2 POP PUSH2 0x894F DUP4 PUSH2 0x8640 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x895F JUMPI PUSH2 0x895E PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x80 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xA0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xB8 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xD0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE8 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5365636F6E64206D756C20636865636B206661696C6564000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x706F696E747320696E2073756D206D7573742062652064697374696E63740000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6269674D6F64457870206661696C757265210000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x696E76616C696420782D6F7264696E6174650000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x626164207769746E657373000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6164647228632A706B2B732A6729213D5F755769746E65737300000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x696E765A206D75737420626520696E7665727365206F66207A00000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6347616D6D615769746E657373206973206E6F74206F6E206375727665000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x7075626C6963206B6579206973206E6F74206F6E206375727665000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x67616D6D61206973206E6F74206F6E2063757276650000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x696E76616C69642070726F6F6600000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4669727374206D756C20636865636B206661696C656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x7A65726F207363616C6172000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x696E76616C696420792D6F7264696E6174650000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x73486173685769746E657373206973206E6F74206F6E20637572766500000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x8DF1 DUP2 PUSH2 0x85D1 JUMP JUMPDEST DUP2 EQ PUSH2 0x8DFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8E08 DUP2 PUSH2 0x85E3 JUMP JUMPDEST DUP2 EQ PUSH2 0x8E13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8E1F DUP2 PUSH2 0x85EF JUMP JUMPDEST DUP2 EQ PUSH2 0x8E2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8E36 DUP2 PUSH2 0x85F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x8E41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8E4D DUP2 PUSH2 0x8603 JUMP JUMPDEST DUP2 EQ PUSH2 0x8E58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8E64 DUP2 PUSH2 0x8631 JUMP JUMPDEST DUP2 EQ PUSH2 0x8E6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8E7B DUP2 PUSH2 0x8640 JUMP JUMPDEST DUP2 EQ PUSH2 0x8E86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8E92 DUP2 PUSH2 0x864A JUMP JUMPDEST DUP2 EQ PUSH2 0x8E9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8EA9 DUP2 PUSH2 0x865A JUMP JUMPDEST DUP2 EQ PUSH2 0x8EB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8EC0 DUP2 PUSH2 0x867B JUMP JUMPDEST DUP2 EQ PUSH2 0x8ECB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8ED7 DUP2 PUSH2 0x8691 JUMP JUMPDEST DUP2 EQ PUSH2 0x8EE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID ADDRESS PUSH25 0x66666666666666666666666666666666666666666666666666 PUSH7 0x66666666666666 PUSH7 0x66666666666666 PUSH7 0x66666666666666 PUSH7 0x66666666666666 PUSH7 0x66666666666666 PUSH7 0x66666666A26469 PUSH17 0x667358221220E864CDC4BE1FA0737B53AB PUSH18 0xDE666A40AED9395310D61B4B4BEEA341BDE1 0xEA SMOD PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"767:31459:13:-:0;;;7533:259;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7619:10;355:8:2;373:1;614::3;594:22;;:8;:22;;;;586:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;662:8;652:7;;:18;;;;;;;;;;;;;;;;;;704:1;680:26;;:12;:26;;;676:79;;716:32;735:12;716:18;;;:32;;:::i;:::-;676:79;481:278;;298:81:2;7663:4:13::1;7637:31;;;;;;;;;;::::0;::::1;7712:11;7674:50;;;;;;;;;;::::0;::::1;7772:14;7730:57;;;;;;;;;;::::0;::::1;7533:259:::0;;;767:31459;;1528:235:3;1643:10;1637:16;;:2;:16;;;;1629:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1705:2;1688:14;;:19;;;;;;;;;;;;;;;;;;1755:2;1719:39;;1746:7;;;;;;;;;;1719:39;;;;;;;;;;;;1528:235;:::o;7:143:19:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:663::-;244:6;252;260;309:2;297:9;288:7;284:23;280:32;277:2;;;315:79;;:::i;:::-;277:2;435:1;460:64;516:7;507:6;496:9;492:22;460:64;:::i;:::-;450:74;;406:128;573:2;599:64;655:7;646:6;635:9;631:22;599:64;:::i;:::-;589:74;;544:129;712:2;738:64;794:7;785:6;774:9;770:22;738:64;:::i;:::-;728:74;;683:129;267:552;;;;;:::o;825:366::-;967:3;988:67;1052:2;1047:3;988:67;:::i;:::-;981:74;;1064:93;1153:3;1064:93;:::i;:::-;1182:2;1177:3;1173:12;1166:19;;971:220;;;:::o;1197:366::-;1339:3;1360:67;1424:2;1419:3;1360:67;:::i;:::-;1353:74;;1436:93;1525:3;1436:93;:::i;:::-;1554:2;1549:3;1545:12;1538:19;;1343:220;;;:::o;1569:419::-;1735:4;1773:2;1762:9;1758:18;1750:26;;1822:9;1816:4;1812:20;1808:1;1797:9;1793:17;1786:47;1850:131;1976:4;1850:131;:::i;:::-;1842:139;;1740:248;;;:::o;1994:419::-;2160:4;2198:2;2187:9;2183:18;2175:26;;2247:9;2241:4;2237:20;2233:1;2222:9;2218:17;2211:47;2275:131;2401:4;2275:131;:::i;:::-;2267:139;;2165:248;;;:::o;2500:169::-;2584:11;2618:6;2613:3;2606:19;2658:4;2653:3;2649:14;2634:29;;2596:73;;;;:::o;2675:96::-;2712:7;2741:24;2759:5;2741:24;:::i;:::-;2730:35;;2720:51;;;:::o;2777:126::-;2814:7;2854:42;2847:5;2843:54;2832:65;;2822:81;;;:::o;3032:117::-;3141:1;3138;3131:12;3155:174;3295:26;3291:1;3283:6;3279:14;3272:50;3261:68;:::o;3335:173::-;3475:25;3471:1;3463:6;3459:14;3452:49;3441:67;:::o;3514:122::-;3587:24;3605:5;3587:24;:::i;:::-;3580:5;3577:35;3567:2;;3626:1;3623;3616:12;3567:2;3557:79;:::o;767:31459:13:-;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@BLOCKHASH_STORE_2493":{"entryPoint":6568,"id":2493,"parameterSlots":0,"returnSlots":0},"@LINK_2487":{"entryPoint":3538,"id":2487,"parameterSlots":0,"returnSlots":0},"@LINK_ETH_FEED_2490":{"entryPoint":13029,"id":2490,"parameterSlots":0,"returnSlots":0},"@MAX_CONSUMERS_2496":{"entryPoint":5850,"id":2496,"parameterSlots":0,"returnSlots":0},"@MAX_NUM_WORDS_2623":{"entryPoint":3584,"id":2623,"parameterSlots":0,"returnSlots":0},"@MAX_REQUEST_CONFIRMATIONS_2620":{"entryPoint":3472,"id":2620,"parameterSlots":0,"returnSlots":0},"@_affineECAdd_2002":{"entryPoint":24384,"id":2002,"parameterSlots":3,"returnSlots":1},"@_bigModExp_1364":{"entryPoint":25443,"id":1364,"parameterSlots":2,"returnSlots":1},"@_calculatePaymentAmount_3957":{"entryPoint":19707,"id":3957,"parameterSlots":4,"returnSlots":1},"@_callWithExactGas_3463":{"entryPoint":19630,"id":3463,"parameterSlots":3,"returnSlots":1},"@_cancelSubscriptionHelper_4644":{"entryPoint":17103,"id":4644,"parameterSlots":2,"returnSlots":0},"@_computeRequestId_3447":{"entryPoint":18548,"id":3447,"parameterSlots":4,"returnSlots":2},"@_ecmulVerify_1682":{"entryPoint":23976,"id":1682,"parameterSlots":3,"returnSlots":1},"@_fieldHash_1491":{"entryPoint":24764,"id":1491,"parameterSlots":1,"returnSlots":1},"@_getBlockNumber_144":{"entryPoint":18662,"id":144,"parameterSlots":0,"returnSlots":1},"@_getBlockhash_120":{"entryPoint":20425,"id":120,"parameterSlots":1,"returnSlots":1},"@_getCurrentTxL1GasFees_184":{"entryPoint":21065,"id":184,"parameterSlots":1,"returnSlots":1},"@_getFeedData_4004":{"entryPoint":20797,"id":4004,"parameterSlots":0,"returnSlots":1},"@_getRandomnessFromProof_3619":{"entryPoint":18825,"id":3619,"parameterSlots":2,"returnSlots":3},"@_hashToCurve_1590":{"entryPoint":22950,"id":1590,"parameterSlots":2,"returnSlots":1},"@_isArbitrumChainId_248":{"entryPoint":20385,"id":248,"parameterSlots":1,"returnSlots":1},"@_isOnCurve_1455":{"entryPoint":22023,"id":1455,"parameterSlots":1,"returnSlots":1},"@_isOptimismChainId_277":{"entryPoint":21960,"id":277,"parameterSlots":1,"returnSlots":1},"@_linearCombination_2161":{"entryPoint":23096,"id":2161,"parameterSlots":7,"returnSlots":1},"@_newCandidateSecp256k1Point_1543":{"entryPoint":23716,"id":1543,"parameterSlots":1,"returnSlots":1},"@_projectiveECAdd_1932":{"entryPoint":24940,"id":1932,"parameterSlots":4,"returnSlots":3},"@_projectiveMul_1773":{"entryPoint":25795,"id":1773,"parameterSlots":4,"returnSlots":2},"@_projectiveSub_1737":{"entryPoint":25915,"id":1737,"parameterSlots":4,"returnSlots":2},"@_randomValueFromVRFProof_2393":{"entryPoint":20688,"id":2393,"parameterSlots":2,"returnSlots":1},"@_scalarFromCurvePoints_2203":{"entryPoint":23487,"id":2203,"parameterSlots":5,"returnSlots":1},"@_squareRoot_1385":{"entryPoint":24873,"id":1385,"parameterSlots":1,"returnSlots":1},"@_transferOwnership_522":{"entryPoint":20084,"id":522,"parameterSlots":1,"returnSlots":0},"@_validateOwnership_535":{"entryPoint":16959,"id":535,"parameterSlots":0,"returnSlots":0},"@_verifyLinearCombinationWithGenerator_2089":{"entryPoint":22408,"id":2089,"parameterSlots":4,"returnSlots":1},"@_verifyVRFProof_2316":{"entryPoint":21467,"id":2316,"parameterSlots":9,"returnSlots":0},"@_ySquared_1411":{"entryPoint":23553,"id":1411,"parameterSlots":1,"returnSlots":1},"@acceptOwnership_488":{"entryPoint":8051,"id":488,"parameterSlots":0,"returnSlots":0},"@acceptSubscriptionOwnerTransfer_4362":{"entryPoint":8456,"id":4362,"parameterSlots":1,"returnSlots":0},"@addConsumer_4529":{"entryPoint":7079,"id":4529,"parameterSlots":2,"returnSlots":0},"@cancelSubscription_4557":{"entryPoint":15209,"id":4557,"parameterSlots":2,"returnSlots":0},"@createSubscription_4253":{"entryPoint":10790,"id":4253,"parameterSlots":0,"returnSlots":1},"@deregisterProvingKey_2962":{"entryPoint":2838,"id":2962,"parameterSlots":1,"returnSlots":0},"@fulfillRandomWords_3868":{"entryPoint":13065,"id":3868,"parameterSlots":2,"returnSlots":1},"@getCommitment_3403":{"entryPoint":6604,"id":3403,"parameterSlots":1,"returnSlots":1},"@getConfig_3069":{"entryPoint":14414,"id":3069,"parameterSlots":0,"returnSlots":4},"@getCurrentSubId_4145":{"entryPoint":2808,"id":4145,"parameterSlots":0,"returnSlots":1},"@getFallbackWeiPerUnitLink_3127":{"entryPoint":3574,"id":3127,"parameterSlots":0,"returnSlots":1},"@getFeeConfig_3111":{"entryPoint":5613,"id":3111,"parameterSlots":0,"returnSlots":9},"@getFeeTier_3690":{"entryPoint":14568,"id":3690,"parameterSlots":1,"returnSlots":1},"@getRequestConfig_3237":{"entryPoint":1720,"id":3237,"parameterSlots":0,"returnSlots":3},"@getSubscription_4194":{"entryPoint":11597,"id":4194,"parameterSlots":1,"returnSlots":4},"@getTotalBalance_3119":{"entryPoint":3424,"id":3119,"parameterSlots":0,"returnSlots":1},"@hashOfKey_2980":{"entryPoint":14520,"id":2980,"parameterSlots":1,"returnSlots":1},"@onTokenTransfer_4137":{"entryPoint":12179,"id":4137,"parameterSlots":4,"returnSlots":0},"@oracleWithdraw_4047":{"entryPoint":5855,"id":4047,"parameterSlots":2,"returnSlots":0},"@ownerCancelSubscription_3158":{"entryPoint":1862,"id":3158,"parameterSlots":1,"returnSlots":0},"@owner_498":{"entryPoint":9329,"id":498,"parameterSlots":0,"returnSlots":1},"@pendingRequestExists_4720":{"entryPoint":16217,"id":4720,"parameterSlots":1,"returnSlots":1},"@recoverFunds_3217":{"entryPoint":15658,"id":3217,"parameterSlots":1,"returnSlots":0},"@registerProvingKey_2877":{"entryPoint":6633,"id":2877,"parameterSlots":2,"returnSlots":0},"@removeConsumer_4471":{"entryPoint":9370,"id":4471,"parameterSlots":2,"returnSlots":0},"@requestRandomWords_3390":{"entryPoint":4434,"id":3390,"parameterSlots":5,"returnSlots":1},"@requestSubscriptionOwnerTransfer_4290":{"entryPoint":2134,"id":4290,"parameterSlots":2,"returnSlots":0},"@setConfig_3047":{"entryPoint":3590,"id":3047,"parameterSlots":6,"returnSlots":0},"@transferOwnership_452":{"entryPoint":16939,"id":452,"parameterSlots":1,"returnSlots":0},"@typeAndVersion_4775":{"entryPoint":3477,"id":4775,"parameterSlots":0,"returnSlots":1},"abi_decode_available_length_t_array$_t_uint256_$2_memory_ptr":{"entryPoint":26481,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":26584,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$2_calldata_ptr":{"entryPoint":26605,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$2_memory_ptr":{"entryPoint":26639,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":26682,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":26703,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":26724,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":26745,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_int256":{"entryPoint":26831,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_int256_fromMemory":{"entryPoint":26852,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_FeeConfig_$2780_memory_ptr":{"entryPoint":26873,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_Proof_$2346_memory_ptr":{"entryPoint":27097,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_RequestCommitment_$2687_memory_ptr":{"entryPoint":27323,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint16":{"entryPoint":27463,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint24":{"entryPoint":27484,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":27505,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":27526,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":27547,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64":{"entryPoint":27568,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint80_fromMemory":{"entryPoint":27589,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint96":{"entryPoint":27610,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":27631,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_array$_t_uint256_$2_calldata_ptr":{"entryPoint":27676,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":27740,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_uint96":{"entryPoint":27856,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_uint256_$2_calldata_ptr":{"entryPoint":27920,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_uint256_$2_memory_ptr":{"entryPoint":27965,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":28010,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":28055,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_uint64t_uint16t_uint32t_uint32":{"entryPoint":28100,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_struct$_Proof_$2346_memory_ptrt_struct$_RequestCommitment_$2687_memory_ptr":{"entryPoint":28223,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint16t_uint32t_uint32t_uint32t_int256t_struct$_FeeConfig_$2780_memory_ptr":{"entryPoint":28289,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_uint256":{"entryPoint":28431,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":28476,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint64":{"entryPoint":28521,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint64t_address":{"entryPoint":28566,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory":{"entryPoint":28630,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encodeUpdatedPos_t_address_to_t_address":{"entryPoint":28753,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32":{"entryPoint":28777,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":28801,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256_inplace":{"entryPoint":28825,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":28849,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":28864,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack":{"entryPoint":28879,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":28902,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack":{"entryPoint":28996,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_fromStack":{"entryPoint":29090,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":29177,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":29264,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":29358,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32":{"entryPoint":29373,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":29388,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack":{"entryPoint":29403,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":29426,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":29483,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_AggregatorV3Interface_$590_to_t_address_fromStack":{"entryPoint":29532,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_BlockhashStoreInterface_$4786_to_t_address_fromStack":{"entryPoint":29547,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_LinkTokenInterface_$713_to_t_address_fromStack":{"entryPoint":29562,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_int256_to_t_int256_fromStack":{"entryPoint":29577,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":29592,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack":{"entryPoint":29649,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_13447e9fa8630e4bb2fa50f1493aa790167933f55263568ac4ad74cb4d138234_to_t_string_memory_ptr_fromStack":{"entryPoint":29684,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2ce93c410880bb13bca91831655ee36bc7ab052e7c8cb24dd914165b1030eeca_to_t_string_memory_ptr_fromStack":{"entryPoint":29719,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack":{"entryPoint":29754,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4bd695d9be776d24ba6aaa6ea48a189f388adfd8a5e6a1df7bd6471290ea4e5f_to_t_string_memory_ptr_fromStack":{"entryPoint":29789,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_787cf99fb194dba922561b5b1fd0b18a6a49c57eaa01d9c5279f2b2a5bdc1a86_to_t_string_memory_ptr_fromStack":{"entryPoint":29824,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7fcbfa9df9f83be5218dd62480bcb5cdae56a970e549b88ff2403f5fcded9211_to_t_string_memory_ptr_fromStack":{"entryPoint":29859,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_897d9ab785e875f3b83c51a39f09c2f6a852e06c26e3faf90359e5ad589f8cf1_to_t_string_memory_ptr_fromStack":{"entryPoint":29894,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_95046d93d9b2e6ba778cd180e8c682e7d907547386cb54bf80bca322c50144ca_to_t_string_memory_ptr_fromStack":{"entryPoint":29929,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9f90959a5b25997fe56cdafc2f72d300e298468f5ac5e847db7890be22108d2b_to_t_string_memory_ptr_fromStack":{"entryPoint":29964,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ae4825d6ed8aab0513e68c27d2710aa68bcf110761c187d047951a5ec2580d8c_to_t_string_memory_ptr_fromStack":{"entryPoint":29999,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6038a70864418dbffbd772a49c391c3536f6b633b3f2ccbcd6a6e15dbadd34c_to_t_string_memory_ptr_fromStack":{"entryPoint":30034,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624_to_t_string_memory_ptr_fromStack":{"entryPoint":30069,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":30104,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d9cf4c09fcc6ead19e539ee3210816df98f1219b8b47e830620ffd543bfea51f_to_t_string_memory_ptr_fromStack":{"entryPoint":30139,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e71e9381bf8fff7d9eeee436d182c3c8b982b1d416953f4ca9ccf572989baeca_to_t_string_memory_ptr_fromStack":{"entryPoint":30174,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ecc598139057476f7e46578e2e254b173afe0910225980583669989d2a737f84_to_t_string_memory_ptr_fromStack":{"entryPoint":30209,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ff425c3ce65530e49c0c35a5fdd7a61b00545f1fcc6482c28903cdcf48ac624f_to_t_string_memory_ptr_fromStack":{"entryPoint":30244,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_FeeConfig_$2780_storage_to_t_struct$_FeeConfig_$2780_memory_ptr_fromStack":{"entryPoint":30279,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":30506,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint24_to_t_uint24":{"entryPoint":30521,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint24_to_t_uint24_fromStack":{"entryPoint":30536,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":30551,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":30566,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_inplace":{"entryPoint":30581,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack":{"entryPoint":30596,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32":{"entryPoint":30619,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":30634,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint256_fromStack":{"entryPoint":30649,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":30664,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":30679,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint256_fromStack":{"entryPoint":30694,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint96_fromStack":{"entryPoint":30709,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_array$_t_uint256_$2_memory_ptr__to_t_array$_t_uint256_$2_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":30724,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":30751,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_uint256__to_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":30787,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_uint256_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_address__to_t_uint256_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":30814,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_packed_t_uint256_t_array$_t_uint256_$2_memory_ptr_t_uint256__to_t_uint256_t_array$_t_uint256_$2_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":30926,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_packed_t_uint256_t_bytes32__to_t_uint256_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":30987,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":31031,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":31058,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":31099,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":31140,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$2_memory_ptr__to_t_array$_t_uint256_$2_memory_ptr__fromStack_reversed":{"entryPoint":31181,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":31208,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":31235,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_uint64_t_uint64__to_t_bytes32_t_address_t_uint64_t_uint64__fromStack_reversed":{"entryPoint":31262,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed":{"entryPoint":31331,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":31372,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":31441,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_AggregatorV3Interface_$590__to_t_address__fromStack_reversed":{"entryPoint":31475,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_BlockhashStoreInterface_$4786__to_t_address__fromStack_reversed":{"entryPoint":31502,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_LinkTokenInterface_$713__to_t_address__fromStack_reversed":{"entryPoint":31529,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed":{"entryPoint":31556,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":31583,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":31617,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_13447e9fa8630e4bb2fa50f1493aa790167933f55263568ac4ad74cb4d138234__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":31649,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2ce93c410880bb13bca91831655ee36bc7ab052e7c8cb24dd914165b1030eeca__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":31681,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":31713,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4bd695d9be776d24ba6aaa6ea48a189f388adfd8a5e6a1df7bd6471290ea4e5f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":31745,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_787cf99fb194dba922561b5b1fd0b18a6a49c57eaa01d9c5279f2b2a5bdc1a86__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":31777,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7fcbfa9df9f83be5218dd62480bcb5cdae56a970e549b88ff2403f5fcded9211__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":31809,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_897d9ab785e875f3b83c51a39f09c2f6a852e06c26e3faf90359e5ad589f8cf1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":31841,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_95046d93d9b2e6ba778cd180e8c682e7d907547386cb54bf80bca322c50144ca__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":31873,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9f90959a5b25997fe56cdafc2f72d300e298468f5ac5e847db7890be22108d2b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":31905,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ae4825d6ed8aab0513e68c27d2710aa68bcf110761c187d047951a5ec2580d8c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":31937,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6038a70864418dbffbd772a49c391c3536f6b633b3f2ccbcd6a6e15dbadd34c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":31969,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":32001,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":32033,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d9cf4c09fcc6ead19e539ee3210816df98f1219b8b47e830620ffd543bfea51f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":32065,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e71e9381bf8fff7d9eeee436d182c3c8b982b1d416953f4ca9ccf572989baeca__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":32097,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ecc598139057476f7e46578e2e254b173afe0910225980583669989d2a737f84__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":32129,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ff425c3ce65530e49c0c35a5fdd7a61b00545f1fcc6482c28903cdcf48ac624f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":32161,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed":{"entryPoint":32193,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint16_t_uint16__to_t_uint16_t_uint16_t_uint16__fromStack_reversed":{"entryPoint":32220,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__to_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":32275,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint32_t_uint32_t_uint32__to_t_uint16_t_uint32_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":32337,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint32_t_uint32_t_uint32_t_int256_t_struct$_FeeConfig_$2780_storage__to_t_uint16_t_uint32_t_uint32_t_uint32_t_int256_t_struct$_FeeConfig_$2780_memory_ptr__fromStack_reversed":{"entryPoint":32406,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":32504,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_array$_t_uint256_$2_memory_ptr__to_t_uint256_t_array$_t_uint256_$2_memory_ptr__fromStack_reversed":{"entryPoint":32531,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":32572,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":32620,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":32661,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint64_t_uint32_t_uint32_t_address__to_t_uint256_t_uint256_t_uint64_t_uint32_t_uint32_t_address__fromStack_reversed":{"entryPoint":32744,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint64_t_uint64_t_uint32_t_uint32_t_address__to_t_uint256_t_uint64_t_uint64_t_uint32_t_uint32_t_address__fromStack_reversed":{"entryPoint":32841,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint96_t_bool__to_t_uint256_t_uint96_t_bool__fromStack_reversed":{"entryPoint":32938,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":32993,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint32_t_uint32__to_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":33020,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint32_t_uint32_t_uint32_t_uint32_t_uint32_t_uint24_t_uint24_t_uint24_t_uint24__to_t_uint32_t_uint32_t_uint32_t_uint32_t_uint32_t_uint24_t_uint24_t_uint24_t_uint24__fromStack_reversed":{"entryPoint":33061,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint256__fromStack_reversed":{"entryPoint":33202,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":33229,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64_t_address__to_t_uint64_t_address__fromStack_reversed":{"entryPoint":33256,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed":{"entryPoint":33297,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":33324,"id":null,"parameterSlots":5,"returnSlots":1},"allocate_memory":{"entryPoint":33400,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":33427,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$2_memory_ptr":{"entryPoint":33437,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":33475,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":33491,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$2_memory_ptr":{"entryPoint":33507,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":33517,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":33533,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":33544,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$2_memory_ptr":{"entryPoint":33555,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":33566,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":33577,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":33588,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":33599,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":33612,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$2_memory_ptr":{"entryPoint":33625,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":33638,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":33651,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack":{"entryPoint":33668,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$2_memory_ptr_fromStack":{"entryPoint":33685,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":33696,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":33707,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":33724,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":33741,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":33752,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":33769,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint64":{"entryPoint":33855,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint96":{"entryPoint":33917,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":33983,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":34032,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":34122,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint96":{"entryPoint":34174,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_from_storage_t_uint24":{"entryPoint":34226,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_t_uint32":{"entryPoint":34241,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address":{"entryPoint":34257,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":34275,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":34287,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_int256":{"entryPoint":34297,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":34307,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":34321,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint24":{"entryPoint":34353,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":34368,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":34378,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":34394,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":34414,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint80":{"entryPoint":34427,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint96":{"entryPoint":34449,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_AggregatorV3Interface_$590_to_t_address":{"entryPoint":34473,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_AggregatorV3Interface_$590_to_t_uint160":{"entryPoint":34491,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_BlockhashStoreInterface_$4786_to_t_address":{"entryPoint":34509,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_BlockhashStoreInterface_$4786_to_t_uint160":{"entryPoint":34527,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_LinkTokenInterface_$713_to_t_address":{"entryPoint":34545,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_LinkTokenInterface_$713_to_t_uint160":{"entryPoint":34563,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint64_to_t_uint256":{"entryPoint":34581,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint96_to_t_uint256":{"entryPoint":34599,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":34617,"id":null,"parameterSlots":3,"returnSlots":0},"extract_from_storage_value_offset_0t_uint32":{"entryPoint":34668,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_12t_uint32":{"entryPoint":34694,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_16t_uint32":{"entryPoint":34720,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_20t_uint24":{"entryPoint":34746,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_23t_uint24":{"entryPoint":34772,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_26t_uint24":{"entryPoint":34798,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_29t_uint24":{"entryPoint":34824,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_4t_uint32":{"entryPoint":34850,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_8t_uint32":{"entryPoint":34876,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":34902,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":34951,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint64":{"entryPoint":35024,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_address":{"entryPoint":35073,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes32":{"entryPoint":35091,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint160":{"entryPoint":35101,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint256":{"entryPoint":35119,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":35129,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":35178,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":35225,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":35272,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":35319,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":35366,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":35413,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":35418,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f":{"entryPoint":35423,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":35428,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":35433,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":35438,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":35443,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":35460,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":35473,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_128_unsigned":{"entryPoint":35486,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_160_unsigned":{"entryPoint":35499,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_184_unsigned":{"entryPoint":35512,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_208_unsigned":{"entryPoint":35525,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_232_unsigned":{"entryPoint":35538,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_32_unsigned":{"entryPoint":35551,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_64_unsigned":{"entryPoint":35564,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_96_unsigned":{"entryPoint":35577,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c":{"entryPoint":35590,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_13447e9fa8630e4bb2fa50f1493aa790167933f55263568ac4ad74cb4d138234":{"entryPoint":35631,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2ce93c410880bb13bca91831655ee36bc7ab052e7c8cb24dd914165b1030eeca":{"entryPoint":35672,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3":{"entryPoint":35713,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4bd695d9be776d24ba6aaa6ea48a189f388adfd8a5e6a1df7bd6471290ea4e5f":{"entryPoint":35754,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_787cf99fb194dba922561b5b1fd0b18a6a49c57eaa01d9c5279f2b2a5bdc1a86":{"entryPoint":35795,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7fcbfa9df9f83be5218dd62480bcb5cdae56a970e549b88ff2403f5fcded9211":{"entryPoint":35836,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_897d9ab785e875f3b83c51a39f09c2f6a852e06c26e3faf90359e5ad589f8cf1":{"entryPoint":35877,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_95046d93d9b2e6ba778cd180e8c682e7d907547386cb54bf80bca322c50144ca":{"entryPoint":35918,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9f90959a5b25997fe56cdafc2f72d300e298468f5ac5e847db7890be22108d2b":{"entryPoint":35959,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ae4825d6ed8aab0513e68c27d2710aa68bcf110761c187d047951a5ec2580d8c":{"entryPoint":36000,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6038a70864418dbffbd772a49c391c3536f6b633b3f2ccbcd6a6e15dbadd34c":{"entryPoint":36041,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624":{"entryPoint":36082,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":36123,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d9cf4c09fcc6ead19e539ee3210816df98f1219b8b47e830620ffd543bfea51f":{"entryPoint":36164,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e71e9381bf8fff7d9eeee436d182c3c8b982b1d416953f4ca9ccf572989baeca":{"entryPoint":36205,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ecc598139057476f7e46578e2e254b173afe0910225980583669989d2a737f84":{"entryPoint":36246,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ff425c3ce65530e49c0c35a5fdd7a61b00545f1fcc6482c28903cdcf48ac624f":{"entryPoint":36287,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":36328,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":36351,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":36374,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_int256":{"entryPoint":36397,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint16":{"entryPoint":36420,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint24":{"entryPoint":36443,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":36466,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":36489,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":36512,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint80":{"entryPoint":36535,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint96":{"entryPoint":36558,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:80737:19","statements":[{"body":{"nodeType":"YulBlock","src":"125:555:19","statements":[{"nodeType":"YulAssignment","src":"135:88:19","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"215:6:19"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulIdentifier","src":"160:54:19"},"nodeType":"YulFunctionCall","src":"160:62:19"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"144:15:19"},"nodeType":"YulFunctionCall","src":"144:79:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"135:5:19"}]},{"nodeType":"YulVariableDeclaration","src":"232:16:19","value":{"name":"array","nodeType":"YulIdentifier","src":"243:5:19"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"236:3:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"258:17:19","value":{"name":"offset","nodeType":"YulIdentifier","src":"269:6:19"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"262:3:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"324:103:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"338:77:19"},"nodeType":"YulFunctionCall","src":"338:79:19"},"nodeType":"YulExpressionStatement","src":"338:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"294:3:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"303:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"311:4:19","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"299:3:19"},"nodeType":"YulFunctionCall","src":"299:17:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"290:3:19"},"nodeType":"YulFunctionCall","src":"290:27:19"},{"name":"end","nodeType":"YulIdentifier","src":"319:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"287:2:19"},"nodeType":"YulFunctionCall","src":"287:36:19"},"nodeType":"YulIf","src":"284:2:19"},{"body":{"nodeType":"YulBlock","src":"496:178:19","statements":[{"nodeType":"YulVariableDeclaration","src":"511:21:19","value":{"name":"src","nodeType":"YulIdentifier","src":"529:3:19"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"515:10:19","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"553:3:19"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"579:10:19"},{"name":"end","nodeType":"YulIdentifier","src":"591:3:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"558:20:19"},"nodeType":"YulFunctionCall","src":"558:37:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"546:6:19"},"nodeType":"YulFunctionCall","src":"546:50:19"},"nodeType":"YulExpressionStatement","src":"546:50:19"},{"nodeType":"YulAssignment","src":"609:21:19","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"620:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"625:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"616:3:19"},"nodeType":"YulFunctionCall","src":"616:14:19"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"609:3:19"}]},{"nodeType":"YulAssignment","src":"643:21:19","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"654:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"659:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"650:3:19"},"nodeType":"YulFunctionCall","src":"650:14:19"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"643:3:19"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"458:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"461:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"455:2:19"},"nodeType":"YulFunctionCall","src":"455:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"469:18:19","statements":[{"nodeType":"YulAssignment","src":"471:14:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"480:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"483:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"476:3:19"},"nodeType":"YulFunctionCall","src":"476:9:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"471:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"440:14:19","statements":[{"nodeType":"YulVariableDeclaration","src":"442:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"451:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"446:1:19","type":""}]}]},"src":"436:238:19"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"95:6:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"103:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"111:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"119:5:19","type":""}],"src":"25:655:19"},{"body":{"nodeType":"YulBlock","src":"738:87:19","statements":[{"nodeType":"YulAssignment","src":"748:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"770:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"757:12:19"},"nodeType":"YulFunctionCall","src":"757:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"748:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"813:5:19"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"786:26:19"},"nodeType":"YulFunctionCall","src":"786:33:19"},"nodeType":"YulExpressionStatement","src":"786:33:19"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"716:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"724:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"732:5:19","type":""}],"src":"686:139:19"},{"body":{"nodeType":"YulBlock","src":"929:169:19","statements":[{"nodeType":"YulAssignment","src":"939:18:19","value":{"name":"offset","nodeType":"YulIdentifier","src":"951:6:19"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"939:8:19"}]},{"body":{"nodeType":"YulBlock","src":"1009:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"1011:77:19"},"nodeType":"YulFunctionCall","src":"1011:79:19"},"nodeType":"YulExpressionStatement","src":"1011:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"976:8:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"990:4:19","type":"","value":"0x02"},{"kind":"number","nodeType":"YulLiteral","src":"996:4:19","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"986:3:19"},"nodeType":"YulFunctionCall","src":"986:15:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"972:3:19"},"nodeType":"YulFunctionCall","src":"972:30:19"},{"name":"end","nodeType":"YulIdentifier","src":"1004:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"969:2:19"},"nodeType":"YulFunctionCall","src":"969:39:19"},"nodeType":"YulIf","src":"966:2:19"}]},"name":"abi_decode_t_array$_t_uint256_$2_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"904:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"912:3:19","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"920:8:19","type":""}],"src":"849:249:19"},{"body":{"nodeType":"YulBlock","src":"1197:264:19","statements":[{"body":{"nodeType":"YulBlock","src":"1246:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1248:77:19"},"nodeType":"YulFunctionCall","src":"1248:79:19"},"nodeType":"YulExpressionStatement","src":"1248:79:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1225:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"1233:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1221:3:19"},"nodeType":"YulFunctionCall","src":"1221:17:19"},{"name":"end","nodeType":"YulIdentifier","src":"1240:3:19"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1217:3:19"},"nodeType":"YulFunctionCall","src":"1217:27:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1210:6:19"},"nodeType":"YulFunctionCall","src":"1210:35:19"},"nodeType":"YulIf","src":"1207:2:19"},{"nodeType":"YulVariableDeclaration","src":"1338:18:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1352:4:19","type":"","value":"0x02"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1342:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1365:90:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1435:6:19"},{"name":"length","nodeType":"YulIdentifier","src":"1443:6:19"},{"name":"end","nodeType":"YulIdentifier","src":"1451:3:19"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulIdentifier","src":"1374:60:19"},"nodeType":"YulFunctionCall","src":"1374:81:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1365:5:19"}]}]},"name":"abi_decode_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1175:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"1183:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1191:5:19","type":""}],"src":"1122:339:19"},{"body":{"nodeType":"YulBlock","src":"1527:77:19","statements":[{"nodeType":"YulAssignment","src":"1537:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1552:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1546:5:19"},"nodeType":"YulFunctionCall","src":"1546:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1537:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1592:5:19"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"1568:23:19"},"nodeType":"YulFunctionCall","src":"1568:30:19"},"nodeType":"YulExpressionStatement","src":"1568:30:19"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1505:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"1513:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1521:5:19","type":""}],"src":"1467:137:19"},{"body":{"nodeType":"YulBlock","src":"1662:87:19","statements":[{"nodeType":"YulAssignment","src":"1672:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1694:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1681:12:19"},"nodeType":"YulFunctionCall","src":"1681:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1672:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1737:5:19"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"1710:26:19"},"nodeType":"YulFunctionCall","src":"1710:33:19"},"nodeType":"YulExpressionStatement","src":"1710:33:19"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1640:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"1648:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1656:5:19","type":""}],"src":"1610:139:19"},{"body":{"nodeType":"YulBlock","src":"1818:80:19","statements":[{"nodeType":"YulAssignment","src":"1828:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1843:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1837:5:19"},"nodeType":"YulFunctionCall","src":"1837:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1828:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1886:5:19"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"1859:26:19"},"nodeType":"YulFunctionCall","src":"1859:33:19"},"nodeType":"YulExpressionStatement","src":"1859:33:19"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1796:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"1804:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1812:5:19","type":""}],"src":"1755:143:19"},{"body":{"nodeType":"YulBlock","src":"1991:478:19","statements":[{"body":{"nodeType":"YulBlock","src":"2040:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2042:77:19"},"nodeType":"YulFunctionCall","src":"2042:79:19"},"nodeType":"YulExpressionStatement","src":"2042:79:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2019:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"2027:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2015:3:19"},"nodeType":"YulFunctionCall","src":"2015:17:19"},{"name":"end","nodeType":"YulIdentifier","src":"2034:3:19"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2011:3:19"},"nodeType":"YulFunctionCall","src":"2011:27:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2004:6:19"},"nodeType":"YulFunctionCall","src":"2004:35:19"},"nodeType":"YulIf","src":"2001:2:19"},{"nodeType":"YulAssignment","src":"2132:30:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2155:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2142:12:19"},"nodeType":"YulFunctionCall","src":"2142:20:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2132:6:19"}]},{"body":{"nodeType":"YulBlock","src":"2205:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"2207:77:19"},"nodeType":"YulFunctionCall","src":"2207:79:19"},"nodeType":"YulExpressionStatement","src":"2207:79:19"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2177:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"2185:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2174:2:19"},"nodeType":"YulFunctionCall","src":"2174:30:19"},"nodeType":"YulIf","src":"2171:2:19"},{"nodeType":"YulAssignment","src":"2297:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2313:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"2321:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2309:3:19"},"nodeType":"YulFunctionCall","src":"2309:17:19"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2297:8:19"}]},{"body":{"nodeType":"YulBlock","src":"2380:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2382:77:19"},"nodeType":"YulFunctionCall","src":"2382:79:19"},"nodeType":"YulExpressionStatement","src":"2382:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2345:8:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2359:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"2367:4:19","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2355:3:19"},"nodeType":"YulFunctionCall","src":"2355:17:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2341:3:19"},"nodeType":"YulFunctionCall","src":"2341:32:19"},{"name":"end","nodeType":"YulIdentifier","src":"2375:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2338:2:19"},"nodeType":"YulFunctionCall","src":"2338:41:19"},"nodeType":"YulIf","src":"2335:2:19"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1958:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"1966:3:19","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"1974:8:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"1984:6:19","type":""}],"src":"1917:552:19"},{"body":{"nodeType":"YulBlock","src":"2526:86:19","statements":[{"nodeType":"YulAssignment","src":"2536:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2558:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2545:12:19"},"nodeType":"YulFunctionCall","src":"2545:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2536:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2600:5:19"}],"functionName":{"name":"validator_revert_t_int256","nodeType":"YulIdentifier","src":"2574:25:19"},"nodeType":"YulFunctionCall","src":"2574:32:19"},"nodeType":"YulExpressionStatement","src":"2574:32:19"}]},"name":"abi_decode_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2504:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"2512:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2520:5:19","type":""}],"src":"2475:137:19"},{"body":{"nodeType":"YulBlock","src":"2680:79:19","statements":[{"nodeType":"YulAssignment","src":"2690:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2705:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2699:5:19"},"nodeType":"YulFunctionCall","src":"2699:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2690:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2747:5:19"}],"functionName":{"name":"validator_revert_t_int256","nodeType":"YulIdentifier","src":"2721:25:19"},"nodeType":"YulFunctionCall","src":"2721:32:19"},"nodeType":"YulExpressionStatement","src":"2721:32:19"}]},"name":"abi_decode_t_int256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2658:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"2666:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2674:5:19","type":""}],"src":"2618:141:19"},{"body":{"nodeType":"YulBlock","src":"2888:1785:19","statements":[{"body":{"nodeType":"YulBlock","src":"2934:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"2936:77:19"},"nodeType":"YulFunctionCall","src":"2936:79:19"},"nodeType":"YulExpressionStatement","src":"2936:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"2909:3:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"2914:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2905:3:19"},"nodeType":"YulFunctionCall","src":"2905:19:19"},{"kind":"number","nodeType":"YulLiteral","src":"2926:6:19","type":"","value":"0x0120"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2901:3:19"},"nodeType":"YulFunctionCall","src":"2901:32:19"},"nodeType":"YulIf","src":"2898:2:19"},{"nodeType":"YulAssignment","src":"3026:32:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3051:6:19","type":"","value":"0x0120"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3035:15:19"},"nodeType":"YulFunctionCall","src":"3035:23:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3026:5:19"}]},{"nodeType":"YulBlock","src":"3068:175:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3129:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3143:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3133:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3169:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"3176:4:19","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3165:3:19"},"nodeType":"YulFunctionCall","src":"3165:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3207:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3218:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3203:3:19"},"nodeType":"YulFunctionCall","src":"3203:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"3227:3:19"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"3183:19:19"},"nodeType":"YulFunctionCall","src":"3183:48:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3158:6:19"},"nodeType":"YulFunctionCall","src":"3158:74:19"},"nodeType":"YulExpressionStatement","src":"3158:74:19"}]},{"nodeType":"YulBlock","src":"3253:176:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3314:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3328:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3318:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3355:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"3362:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3351:3:19"},"nodeType":"YulFunctionCall","src":"3351:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3393:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3404:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3389:3:19"},"nodeType":"YulFunctionCall","src":"3389:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"3413:3:19"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"3369:19:19"},"nodeType":"YulFunctionCall","src":"3369:48:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3344:6:19"},"nodeType":"YulFunctionCall","src":"3344:74:19"},"nodeType":"YulExpressionStatement","src":"3344:74:19"}]},{"nodeType":"YulBlock","src":"3439:176:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3500:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3514:2:19","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3504:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3541:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"3548:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3537:3:19"},"nodeType":"YulFunctionCall","src":"3537:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3579:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3590:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3575:3:19"},"nodeType":"YulFunctionCall","src":"3575:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"3599:3:19"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"3555:19:19"},"nodeType":"YulFunctionCall","src":"3555:48:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3530:6:19"},"nodeType":"YulFunctionCall","src":"3530:74:19"},"nodeType":"YulExpressionStatement","src":"3530:74:19"}]},{"nodeType":"YulBlock","src":"3625:176:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3686:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3700:2:19","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3690:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3727:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"3734:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3723:3:19"},"nodeType":"YulFunctionCall","src":"3723:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3765:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3776:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3761:3:19"},"nodeType":"YulFunctionCall","src":"3761:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"3785:3:19"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"3741:19:19"},"nodeType":"YulFunctionCall","src":"3741:48:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3716:6:19"},"nodeType":"YulFunctionCall","src":"3716:74:19"},"nodeType":"YulExpressionStatement","src":"3716:74:19"}]},{"nodeType":"YulBlock","src":"3811:177:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3872:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3886:3:19","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3876:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3914:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"3921:4:19","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3910:3:19"},"nodeType":"YulFunctionCall","src":"3910:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3952:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3963:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3948:3:19"},"nodeType":"YulFunctionCall","src":"3948:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"3972:3:19"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"3928:19:19"},"nodeType":"YulFunctionCall","src":"3928:48:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3903:6:19"},"nodeType":"YulFunctionCall","src":"3903:74:19"},"nodeType":"YulExpressionStatement","src":"3903:74:19"}]},{"nodeType":"YulBlock","src":"3998:159:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4041:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"4055:3:19","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4045:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4083:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"4090:4:19","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4079:3:19"},"nodeType":"YulFunctionCall","src":"4079:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4121:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"4132:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4117:3:19"},"nodeType":"YulFunctionCall","src":"4117:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"4141:3:19"}],"functionName":{"name":"abi_decode_t_uint24","nodeType":"YulIdentifier","src":"4097:19:19"},"nodeType":"YulFunctionCall","src":"4097:48:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4072:6:19"},"nodeType":"YulFunctionCall","src":"4072:74:19"},"nodeType":"YulExpressionStatement","src":"4072:74:19"}]},{"nodeType":"YulBlock","src":"4167:159:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4210:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"4224:3:19","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4214:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4252:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"4259:4:19","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4248:3:19"},"nodeType":"YulFunctionCall","src":"4248:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4290:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"4301:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:19"},"nodeType":"YulFunctionCall","src":"4286:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"4310:3:19"}],"functionName":{"name":"abi_decode_t_uint24","nodeType":"YulIdentifier","src":"4266:19:19"},"nodeType":"YulFunctionCall","src":"4266:48:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4241:6:19"},"nodeType":"YulFunctionCall","src":"4241:74:19"},"nodeType":"YulExpressionStatement","src":"4241:74:19"}]},{"nodeType":"YulBlock","src":"4336:159:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4379:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"4393:3:19","type":"","value":"224"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4383:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4421:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"4428:4:19","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4417:3:19"},"nodeType":"YulFunctionCall","src":"4417:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4459:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"4470:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4455:3:19"},"nodeType":"YulFunctionCall","src":"4455:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"4479:3:19"}],"functionName":{"name":"abi_decode_t_uint24","nodeType":"YulIdentifier","src":"4435:19:19"},"nodeType":"YulFunctionCall","src":"4435:48:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4410:6:19"},"nodeType":"YulFunctionCall","src":"4410:74:19"},"nodeType":"YulExpressionStatement","src":"4410:74:19"}]},{"nodeType":"YulBlock","src":"4505:161:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4548:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"4562:3:19","type":"","value":"256"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4552:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4590:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"4597:6:19","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4586:3:19"},"nodeType":"YulFunctionCall","src":"4586:18:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4630:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"4641:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4626:3:19"},"nodeType":"YulFunctionCall","src":"4626:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"4650:3:19"}],"functionName":{"name":"abi_decode_t_uint24","nodeType":"YulIdentifier","src":"4606:19:19"},"nodeType":"YulFunctionCall","src":"4606:48:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4579:6:19"},"nodeType":"YulFunctionCall","src":"4579:76:19"},"nodeType":"YulExpressionStatement","src":"4579:76:19"}]}]},"name":"abi_decode_t_struct$_FeeConfig_$2780_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2863:9:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"2874:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2882:5:19","type":""}],"src":"2806:1867:19"},{"body":{"nodeType":"YulBlock","src":"4781:1740:19","statements":[{"body":{"nodeType":"YulBlock","src":"4827:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"4829:77:19"},"nodeType":"YulFunctionCall","src":"4829:79:19"},"nodeType":"YulExpressionStatement","src":"4829:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4802:3:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"4807:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4798:3:19"},"nodeType":"YulFunctionCall","src":"4798:19:19"},{"kind":"number","nodeType":"YulLiteral","src":"4819:6:19","type":"","value":"0x01a0"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4794:3:19"},"nodeType":"YulFunctionCall","src":"4794:32:19"},"nodeType":"YulIf","src":"4791:2:19"},{"nodeType":"YulAssignment","src":"4919:32:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4944:6:19","type":"","value":"0x0120"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4928:15:19"},"nodeType":"YulFunctionCall","src":"4928:23:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4919:5:19"}]},{"nodeType":"YulBlock","src":"4961:171:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4994:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"5008:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4998:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5034:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"5041:4:19","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5030:3:19"},"nodeType":"YulFunctionCall","src":"5030:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5096:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"5107:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5092:3:19"},"nodeType":"YulFunctionCall","src":"5092:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"5116:3:19"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulIdentifier","src":"5048:43:19"},"nodeType":"YulFunctionCall","src":"5048:72:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5023:6:19"},"nodeType":"YulFunctionCall","src":"5023:98:19"},"nodeType":"YulExpressionStatement","src":"5023:98:19"}]},{"nodeType":"YulBlock","src":"5142:175:19","statements":[{"nodeType":"YulVariableDeclaration","src":"5178:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"5192:2:19","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5182:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5219:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"5226:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5215:3:19"},"nodeType":"YulFunctionCall","src":"5215:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5281:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"5292:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5277:3:19"},"nodeType":"YulFunctionCall","src":"5277:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"5301:3:19"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulIdentifier","src":"5233:43:19"},"nodeType":"YulFunctionCall","src":"5233:72:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5208:6:19"},"nodeType":"YulFunctionCall","src":"5208:98:19"},"nodeType":"YulExpressionStatement","src":"5208:98:19"}]},{"nodeType":"YulBlock","src":"5327:149:19","statements":[{"nodeType":"YulVariableDeclaration","src":"5359:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"5373:3:19","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5363:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5401:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"5408:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5397:3:19"},"nodeType":"YulFunctionCall","src":"5397:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5440:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"5451:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5436:3:19"},"nodeType":"YulFunctionCall","src":"5436:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"5460:3:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5415:20:19"},"nodeType":"YulFunctionCall","src":"5415:49:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5390:6:19"},"nodeType":"YulFunctionCall","src":"5390:75:19"},"nodeType":"YulExpressionStatement","src":"5390:75:19"}]},{"nodeType":"YulBlock","src":"5486:149:19","statements":[{"nodeType":"YulVariableDeclaration","src":"5518:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"5532:3:19","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5522:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5560:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"5567:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5556:3:19"},"nodeType":"YulFunctionCall","src":"5556:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5599:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"5610:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5595:3:19"},"nodeType":"YulFunctionCall","src":"5595:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"5619:3:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5574:20:19"},"nodeType":"YulFunctionCall","src":"5574:49:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5549:6:19"},"nodeType":"YulFunctionCall","src":"5549:75:19"},"nodeType":"YulExpressionStatement","src":"5549:75:19"}]},{"nodeType":"YulBlock","src":"5645:152:19","statements":[{"nodeType":"YulVariableDeclaration","src":"5680:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"5694:3:19","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5684:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5722:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"5729:4:19","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5718:3:19"},"nodeType":"YulFunctionCall","src":"5718:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5761:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"5772:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5757:3:19"},"nodeType":"YulFunctionCall","src":"5757:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"5781:3:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5736:20:19"},"nodeType":"YulFunctionCall","src":"5736:49:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5711:6:19"},"nodeType":"YulFunctionCall","src":"5711:75:19"},"nodeType":"YulExpressionStatement","src":"5711:75:19"}]},{"nodeType":"YulBlock","src":"5807:156:19","statements":[{"nodeType":"YulVariableDeclaration","src":"5846:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"5860:3:19","type":"","value":"224"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5850:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5888:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"5895:4:19","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5884:3:19"},"nodeType":"YulFunctionCall","src":"5884:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5927:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"5938:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5923:3:19"},"nodeType":"YulFunctionCall","src":"5923:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"5947:3:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5902:20:19"},"nodeType":"YulFunctionCall","src":"5902:49:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5877:6:19"},"nodeType":"YulFunctionCall","src":"5877:75:19"},"nodeType":"YulExpressionStatement","src":"5877:75:19"}]},{"nodeType":"YulBlock","src":"5973:184:19","statements":[{"nodeType":"YulVariableDeclaration","src":"6017:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"6031:3:19","type":"","value":"256"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6021:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6059:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"6066:4:19","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6055:3:19"},"nodeType":"YulFunctionCall","src":"6055:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6121:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"6132:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6117:3:19"},"nodeType":"YulFunctionCall","src":"6117:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"6141:3:19"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulIdentifier","src":"6073:43:19"},"nodeType":"YulFunctionCall","src":"6073:72:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6048:6:19"},"nodeType":"YulFunctionCall","src":"6048:98:19"},"nodeType":"YulExpressionStatement","src":"6048:98:19"}]},{"nodeType":"YulBlock","src":"6167:183:19","statements":[{"nodeType":"YulVariableDeclaration","src":"6210:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"6224:3:19","type":"","value":"320"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6214:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6252:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"6259:4:19","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6248:3:19"},"nodeType":"YulFunctionCall","src":"6248:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6314:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"6325:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6310:3:19"},"nodeType":"YulFunctionCall","src":"6310:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"6334:3:19"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulIdentifier","src":"6266:43:19"},"nodeType":"YulFunctionCall","src":"6266:72:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6241:6:19"},"nodeType":"YulFunctionCall","src":"6241:98:19"},"nodeType":"YulExpressionStatement","src":"6241:98:19"}]},{"nodeType":"YulBlock","src":"6360:154:19","statements":[{"nodeType":"YulVariableDeclaration","src":"6395:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"6409:3:19","type":"","value":"384"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6399:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6437:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"6444:6:19","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6433:3:19"},"nodeType":"YulFunctionCall","src":"6433:18:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6478:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"6489:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6474:3:19"},"nodeType":"YulFunctionCall","src":"6474:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"6498:3:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6453:20:19"},"nodeType":"YulFunctionCall","src":"6453:49:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6426:6:19"},"nodeType":"YulFunctionCall","src":"6426:77:19"},"nodeType":"YulExpressionStatement","src":"6426:77:19"}]}]},"name":"abi_decode_t_struct$_Proof_$2346_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4756:9:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"4767:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4775:5:19","type":""}],"src":"4703:1818:19"},{"body":{"nodeType":"YulBlock","src":"6666:997:19","statements":[{"body":{"nodeType":"YulBlock","src":"6710:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"6712:77:19"},"nodeType":"YulFunctionCall","src":"6712:79:19"},"nodeType":"YulExpressionStatement","src":"6712:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"6687:3:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"6692:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6683:3:19"},"nodeType":"YulFunctionCall","src":"6683:19:19"},{"kind":"number","nodeType":"YulLiteral","src":"6704:4:19","type":"","value":"0xa0"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6679:3:19"},"nodeType":"YulFunctionCall","src":"6679:30:19"},"nodeType":"YulIf","src":"6676:2:19"},{"nodeType":"YulAssignment","src":"6802:30:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6827:4:19","type":"","value":"0xa0"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6811:15:19"},"nodeType":"YulFunctionCall","src":"6811:21:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6802:5:19"}]},{"nodeType":"YulBlock","src":"6842:153:19","statements":[{"nodeType":"YulVariableDeclaration","src":"6881:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"6895:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6885:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6921:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"6928:4:19","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6917:3:19"},"nodeType":"YulFunctionCall","src":"6917:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6959:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"6970:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6955:3:19"},"nodeType":"YulFunctionCall","src":"6955:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"6979:3:19"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"6935:19:19"},"nodeType":"YulFunctionCall","src":"6935:48:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6910:6:19"},"nodeType":"YulFunctionCall","src":"6910:74:19"},"nodeType":"YulExpressionStatement","src":"6910:74:19"}]},{"nodeType":"YulBlock","src":"7005:151:19","statements":[{"nodeType":"YulVariableDeclaration","src":"7041:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"7055:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7045:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7082:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"7089:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7078:3:19"},"nodeType":"YulFunctionCall","src":"7078:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7120:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"7131:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7116:3:19"},"nodeType":"YulFunctionCall","src":"7116:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"7140:3:19"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"7096:19:19"},"nodeType":"YulFunctionCall","src":"7096:48:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7071:6:19"},"nodeType":"YulFunctionCall","src":"7071:74:19"},"nodeType":"YulExpressionStatement","src":"7071:74:19"}]},{"nodeType":"YulBlock","src":"7166:162:19","statements":[{"nodeType":"YulVariableDeclaration","src":"7213:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"7227:2:19","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7217:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7254:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"7261:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7250:3:19"},"nodeType":"YulFunctionCall","src":"7250:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7292:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"7303:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7288:3:19"},"nodeType":"YulFunctionCall","src":"7288:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"7312:3:19"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"7268:19:19"},"nodeType":"YulFunctionCall","src":"7268:48:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7243:6:19"},"nodeType":"YulFunctionCall","src":"7243:74:19"},"nodeType":"YulExpressionStatement","src":"7243:74:19"}]},{"nodeType":"YulBlock","src":"7338:154:19","statements":[{"nodeType":"YulVariableDeclaration","src":"7377:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"7391:2:19","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7381:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7418:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"7425:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7414:3:19"},"nodeType":"YulFunctionCall","src":"7414:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7456:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"7467:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7452:3:19"},"nodeType":"YulFunctionCall","src":"7452:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"7476:3:19"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"7432:19:19"},"nodeType":"YulFunctionCall","src":"7432:48:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7407:6:19"},"nodeType":"YulFunctionCall","src":"7407:74:19"},"nodeType":"YulExpressionStatement","src":"7407:74:19"}]},{"nodeType":"YulBlock","src":"7502:154:19","statements":[{"nodeType":"YulVariableDeclaration","src":"7539:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"7553:3:19","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7543:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7581:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"7588:4:19","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7577:3:19"},"nodeType":"YulFunctionCall","src":"7577:16:19"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7620:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"7631:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7616:3:19"},"nodeType":"YulFunctionCall","src":"7616:22:19"},{"name":"end","nodeType":"YulIdentifier","src":"7640:3:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7595:20:19"},"nodeType":"YulFunctionCall","src":"7595:49:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7570:6:19"},"nodeType":"YulFunctionCall","src":"7570:75:19"},"nodeType":"YulExpressionStatement","src":"7570:75:19"}]}]},"name":"abi_decode_t_struct$_RequestCommitment_$2687_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6641:9:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"6652:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6660:5:19","type":""}],"src":"6576:1087:19"},{"body":{"nodeType":"YulBlock","src":"7720:86:19","statements":[{"nodeType":"YulAssignment","src":"7730:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7752:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7739:12:19"},"nodeType":"YulFunctionCall","src":"7739:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7730:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7794:5:19"}],"functionName":{"name":"validator_revert_t_uint16","nodeType":"YulIdentifier","src":"7768:25:19"},"nodeType":"YulFunctionCall","src":"7768:32:19"},"nodeType":"YulExpressionStatement","src":"7768:32:19"}]},"name":"abi_decode_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7698:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"7706:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7714:5:19","type":""}],"src":"7669:137:19"},{"body":{"nodeType":"YulBlock","src":"7863:86:19","statements":[{"nodeType":"YulAssignment","src":"7873:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7895:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7882:12:19"},"nodeType":"YulFunctionCall","src":"7882:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7873:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7937:5:19"}],"functionName":{"name":"validator_revert_t_uint24","nodeType":"YulIdentifier","src":"7911:25:19"},"nodeType":"YulFunctionCall","src":"7911:32:19"},"nodeType":"YulExpressionStatement","src":"7911:32:19"}]},"name":"abi_decode_t_uint24","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7841:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"7849:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7857:5:19","type":""}],"src":"7812:137:19"},{"body":{"nodeType":"YulBlock","src":"8007:87:19","statements":[{"nodeType":"YulAssignment","src":"8017:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8039:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8026:12:19"},"nodeType":"YulFunctionCall","src":"8026:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8017:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8082:5:19"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"8055:26:19"},"nodeType":"YulFunctionCall","src":"8055:33:19"},"nodeType":"YulExpressionStatement","src":"8055:33:19"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7985:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"7993:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8001:5:19","type":""}],"src":"7955:139:19"},{"body":{"nodeType":"YulBlock","src":"8163:80:19","statements":[{"nodeType":"YulAssignment","src":"8173:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8188:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8182:5:19"},"nodeType":"YulFunctionCall","src":"8182:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8173:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8231:5:19"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"8204:26:19"},"nodeType":"YulFunctionCall","src":"8204:33:19"},"nodeType":"YulExpressionStatement","src":"8204:33:19"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8141:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"8149:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8157:5:19","type":""}],"src":"8100:143:19"},{"body":{"nodeType":"YulBlock","src":"8300:86:19","statements":[{"nodeType":"YulAssignment","src":"8310:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8332:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8319:12:19"},"nodeType":"YulFunctionCall","src":"8319:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8310:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8374:5:19"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"8348:25:19"},"nodeType":"YulFunctionCall","src":"8348:32:19"},"nodeType":"YulExpressionStatement","src":"8348:32:19"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8278:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"8286:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8294:5:19","type":""}],"src":"8249:137:19"},{"body":{"nodeType":"YulBlock","src":"8443:86:19","statements":[{"nodeType":"YulAssignment","src":"8453:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8475:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8462:12:19"},"nodeType":"YulFunctionCall","src":"8462:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8453:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8517:5:19"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"8491:25:19"},"nodeType":"YulFunctionCall","src":"8491:32:19"},"nodeType":"YulExpressionStatement","src":"8491:32:19"}]},"name":"abi_decode_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8421:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"8429:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8437:5:19","type":""}],"src":"8392:137:19"},{"body":{"nodeType":"YulBlock","src":"8597:79:19","statements":[{"nodeType":"YulAssignment","src":"8607:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8622:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8616:5:19"},"nodeType":"YulFunctionCall","src":"8616:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8607:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8664:5:19"}],"functionName":{"name":"validator_revert_t_uint80","nodeType":"YulIdentifier","src":"8638:25:19"},"nodeType":"YulFunctionCall","src":"8638:32:19"},"nodeType":"YulExpressionStatement","src":"8638:32:19"}]},"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8575:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"8583:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8591:5:19","type":""}],"src":"8535:141:19"},{"body":{"nodeType":"YulBlock","src":"8733:86:19","statements":[{"nodeType":"YulAssignment","src":"8743:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8765:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8752:12:19"},"nodeType":"YulFunctionCall","src":"8752:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8743:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8807:5:19"}],"functionName":{"name":"validator_revert_t_uint96","nodeType":"YulIdentifier","src":"8781:25:19"},"nodeType":"YulFunctionCall","src":"8781:32:19"},"nodeType":"YulExpressionStatement","src":"8781:32:19"}]},"name":"abi_decode_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8711:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"8719:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8727:5:19","type":""}],"src":"8682:137:19"},{"body":{"nodeType":"YulBlock","src":"8891:263:19","statements":[{"body":{"nodeType":"YulBlock","src":"8937:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8939:77:19"},"nodeType":"YulFunctionCall","src":"8939:79:19"},"nodeType":"YulExpressionStatement","src":"8939:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8912:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"8921:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8908:3:19"},"nodeType":"YulFunctionCall","src":"8908:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"8933:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8904:3:19"},"nodeType":"YulFunctionCall","src":"8904:32:19"},"nodeType":"YulIf","src":"8901:2:19"},{"nodeType":"YulBlock","src":"9030:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"9045:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"9059:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9049:6:19","type":""}]},{"nodeType":"YulAssignment","src":"9074:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9109:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"9120:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9105:3:19"},"nodeType":"YulFunctionCall","src":"9105:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9129:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9084:20:19"},"nodeType":"YulFunctionCall","src":"9084:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9074:6:19"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8861:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8872:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8884:6:19","type":""}],"src":"8825:329:19"},{"body":{"nodeType":"YulBlock","src":"9268:416:19","statements":[{"body":{"nodeType":"YulBlock","src":"9314:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9316:77:19"},"nodeType":"YulFunctionCall","src":"9316:79:19"},"nodeType":"YulExpressionStatement","src":"9316:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9289:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"9298:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9285:3:19"},"nodeType":"YulFunctionCall","src":"9285:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"9310:2:19","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9281:3:19"},"nodeType":"YulFunctionCall","src":"9281:32:19"},"nodeType":"YulIf","src":"9278:2:19"},{"nodeType":"YulBlock","src":"9407:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"9422:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"9436:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9426:6:19","type":""}]},{"nodeType":"YulAssignment","src":"9451:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9486:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"9497:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9482:3:19"},"nodeType":"YulFunctionCall","src":"9482:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9506:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9461:20:19"},"nodeType":"YulFunctionCall","src":"9461:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9451:6:19"}]}]},{"nodeType":"YulBlock","src":"9534:143:19","statements":[{"nodeType":"YulVariableDeclaration","src":"9549:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"9563:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9553:6:19","type":""}]},{"nodeType":"YulAssignment","src":"9579:88:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9639:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"9650:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9635:3:19"},"nodeType":"YulFunctionCall","src":"9635:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9659:7:19"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$2_calldata_ptr","nodeType":"YulIdentifier","src":"9589:45:19"},"nodeType":"YulFunctionCall","src":"9589:78:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9579:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_uint256_$2_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9230:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9241:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9253:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9261:6:19","type":""}],"src":"9160:524:19"},{"body":{"nodeType":"YulBlock","src":"9809:698:19","statements":[{"body":{"nodeType":"YulBlock","src":"9855:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9857:77:19"},"nodeType":"YulFunctionCall","src":"9857:79:19"},"nodeType":"YulExpressionStatement","src":"9857:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9830:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"9839:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9826:3:19"},"nodeType":"YulFunctionCall","src":"9826:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"9851:2:19","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9822:3:19"},"nodeType":"YulFunctionCall","src":"9822:32:19"},"nodeType":"YulIf","src":"9819:2:19"},{"nodeType":"YulBlock","src":"9948:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"9963:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"9977:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9967:6:19","type":""}]},{"nodeType":"YulAssignment","src":"9992:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10027:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"10038:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10023:3:19"},"nodeType":"YulFunctionCall","src":"10023:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10047:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10002:20:19"},"nodeType":"YulFunctionCall","src":"10002:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9992:6:19"}]}]},{"nodeType":"YulBlock","src":"10075:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"10090:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"10104:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10094:6:19","type":""}]},{"nodeType":"YulAssignment","src":"10120:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10155:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"10166:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10151:3:19"},"nodeType":"YulFunctionCall","src":"10151:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10175:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10130:20:19"},"nodeType":"YulFunctionCall","src":"10130:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10120:6:19"}]}]},{"nodeType":"YulBlock","src":"10203:297:19","statements":[{"nodeType":"YulVariableDeclaration","src":"10218:46:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10249:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"10260:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10245:3:19"},"nodeType":"YulFunctionCall","src":"10245:18:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10232:12:19"},"nodeType":"YulFunctionCall","src":"10232:32:19"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10222:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"10311:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10313:77:19"},"nodeType":"YulFunctionCall","src":"10313:79:19"},"nodeType":"YulExpressionStatement","src":"10313:79:19"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10283:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"10291:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10280:2:19"},"nodeType":"YulFunctionCall","src":"10280:30:19"},"nodeType":"YulIf","src":"10277:2:19"},{"nodeType":"YulAssignment","src":"10408:82:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10462:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"10473:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10458:3:19"},"nodeType":"YulFunctionCall","src":"10458:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10482:7:19"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"10426:31:19"},"nodeType":"YulFunctionCall","src":"10426:64:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10408:6:19"},{"name":"value3","nodeType":"YulIdentifier","src":"10416:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9755:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9766:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9778:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9786:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9794:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9802:6:19","type":""}],"src":"9690:817:19"},{"body":{"nodeType":"YulBlock","src":"10595:390:19","statements":[{"body":{"nodeType":"YulBlock","src":"10641:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10643:77:19"},"nodeType":"YulFunctionCall","src":"10643:79:19"},"nodeType":"YulExpressionStatement","src":"10643:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10616:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"10625:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10612:3:19"},"nodeType":"YulFunctionCall","src":"10612:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"10637:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10608:3:19"},"nodeType":"YulFunctionCall","src":"10608:32:19"},"nodeType":"YulIf","src":"10605:2:19"},{"nodeType":"YulBlock","src":"10734:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"10749:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"10763:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10753:6:19","type":""}]},{"nodeType":"YulAssignment","src":"10778:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10813:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"10824:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10809:3:19"},"nodeType":"YulFunctionCall","src":"10809:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10833:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10788:20:19"},"nodeType":"YulFunctionCall","src":"10788:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10778:6:19"}]}]},{"nodeType":"YulBlock","src":"10861:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"10876:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"10890:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10880:6:19","type":""}]},{"nodeType":"YulAssignment","src":"10906:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10940:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"10951:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10936:3:19"},"nodeType":"YulFunctionCall","src":"10936:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10960:7:19"}],"functionName":{"name":"abi_decode_t_uint96","nodeType":"YulIdentifier","src":"10916:19:19"},"nodeType":"YulFunctionCall","src":"10916:52:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10906:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10557:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10568:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10580:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10588:6:19","type":""}],"src":"10513:472:19"},{"body":{"nodeType":"YulBlock","src":"11082:288:19","statements":[{"body":{"nodeType":"YulBlock","src":"11128:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11130:77:19"},"nodeType":"YulFunctionCall","src":"11130:79:19"},"nodeType":"YulExpressionStatement","src":"11130:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11103:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"11112:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11099:3:19"},"nodeType":"YulFunctionCall","src":"11099:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"11124:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11095:3:19"},"nodeType":"YulFunctionCall","src":"11095:32:19"},"nodeType":"YulIf","src":"11092:2:19"},{"nodeType":"YulBlock","src":"11221:142:19","statements":[{"nodeType":"YulVariableDeclaration","src":"11236:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"11250:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11240:6:19","type":""}]},{"nodeType":"YulAssignment","src":"11265:88:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11325:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"11336:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11321:3:19"},"nodeType":"YulFunctionCall","src":"11321:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11345:7:19"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$2_calldata_ptr","nodeType":"YulIdentifier","src":"11275:45:19"},"nodeType":"YulFunctionCall","src":"11275:78:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11265:6:19"}]}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$2_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11052:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11063:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11075:6:19","type":""}],"src":"10991:379:19"},{"body":{"nodeType":"YulBlock","src":"11465:286:19","statements":[{"body":{"nodeType":"YulBlock","src":"11511:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11513:77:19"},"nodeType":"YulFunctionCall","src":"11513:79:19"},"nodeType":"YulExpressionStatement","src":"11513:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11486:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"11495:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11482:3:19"},"nodeType":"YulFunctionCall","src":"11482:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"11507:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11478:3:19"},"nodeType":"YulFunctionCall","src":"11478:32:19"},"nodeType":"YulIf","src":"11475:2:19"},{"nodeType":"YulBlock","src":"11604:140:19","statements":[{"nodeType":"YulVariableDeclaration","src":"11619:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"11633:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11623:6:19","type":""}]},{"nodeType":"YulAssignment","src":"11648:86:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11706:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"11717:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11702:3:19"},"nodeType":"YulFunctionCall","src":"11702:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11726:7:19"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulIdentifier","src":"11658:43:19"},"nodeType":"YulFunctionCall","src":"11658:76:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11648:6:19"}]}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11435:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11446:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11458:6:19","type":""}],"src":"11376:375:19"},{"body":{"nodeType":"YulBlock","src":"11831:271:19","statements":[{"body":{"nodeType":"YulBlock","src":"11877:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11879:77:19"},"nodeType":"YulFunctionCall","src":"11879:79:19"},"nodeType":"YulExpressionStatement","src":"11879:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11852:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"11861:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11848:3:19"},"nodeType":"YulFunctionCall","src":"11848:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"11873:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11844:3:19"},"nodeType":"YulFunctionCall","src":"11844:32:19"},"nodeType":"YulIf","src":"11841:2:19"},{"nodeType":"YulBlock","src":"11970:125:19","statements":[{"nodeType":"YulVariableDeclaration","src":"11985:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"11999:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11989:6:19","type":""}]},{"nodeType":"YulAssignment","src":"12014:71:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12057:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"12068:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12053:3:19"},"nodeType":"YulFunctionCall","src":"12053:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12077:7:19"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"12024:28:19"},"nodeType":"YulFunctionCall","src":"12024:61:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12014:6:19"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11801:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11812:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11824:6:19","type":""}],"src":"11757:345:19"},{"body":{"nodeType":"YulBlock","src":"12185:274:19","statements":[{"body":{"nodeType":"YulBlock","src":"12231:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12233:77:19"},"nodeType":"YulFunctionCall","src":"12233:79:19"},"nodeType":"YulExpressionStatement","src":"12233:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12206:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"12215:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12202:3:19"},"nodeType":"YulFunctionCall","src":"12202:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"12227:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12198:3:19"},"nodeType":"YulFunctionCall","src":"12198:32:19"},"nodeType":"YulIf","src":"12195:2:19"},{"nodeType":"YulBlock","src":"12324:128:19","statements":[{"nodeType":"YulVariableDeclaration","src":"12339:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"12353:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12343:6:19","type":""}]},{"nodeType":"YulAssignment","src":"12368:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12414:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"12425:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12410:3:19"},"nodeType":"YulFunctionCall","src":"12410:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12434:7:19"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"12378:31:19"},"nodeType":"YulFunctionCall","src":"12378:64:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12368:6:19"}]}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12155:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12166:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12178:6:19","type":""}],"src":"12108:351:19"},{"body":{"nodeType":"YulBlock","src":"12595:773:19","statements":[{"body":{"nodeType":"YulBlock","src":"12642:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12644:77:19"},"nodeType":"YulFunctionCall","src":"12644:79:19"},"nodeType":"YulExpressionStatement","src":"12644:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12616:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"12625:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12612:3:19"},"nodeType":"YulFunctionCall","src":"12612:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"12637:3:19","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12608:3:19"},"nodeType":"YulFunctionCall","src":"12608:33:19"},"nodeType":"YulIf","src":"12605:2:19"},{"nodeType":"YulBlock","src":"12735:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"12750:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"12764:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12754:6:19","type":""}]},{"nodeType":"YulAssignment","src":"12779:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12814:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"12825:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12810:3:19"},"nodeType":"YulFunctionCall","src":"12810:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12834:7:19"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"12789:20:19"},"nodeType":"YulFunctionCall","src":"12789:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12779:6:19"}]}]},{"nodeType":"YulBlock","src":"12862:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"12877:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"12891:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12881:6:19","type":""}]},{"nodeType":"YulAssignment","src":"12907:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12941:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"12952:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12937:3:19"},"nodeType":"YulFunctionCall","src":"12937:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12961:7:19"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"12917:19:19"},"nodeType":"YulFunctionCall","src":"12917:52:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12907:6:19"}]}]},{"nodeType":"YulBlock","src":"12989:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"13004:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"13018:2:19","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13008:6:19","type":""}]},{"nodeType":"YulAssignment","src":"13034:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13068:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"13079:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13064:3:19"},"nodeType":"YulFunctionCall","src":"13064:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13088:7:19"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"13044:19:19"},"nodeType":"YulFunctionCall","src":"13044:52:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"13034:6:19"}]}]},{"nodeType":"YulBlock","src":"13116:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"13131:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"13145:2:19","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13135:6:19","type":""}]},{"nodeType":"YulAssignment","src":"13161:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13195:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"13206:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13191:3:19"},"nodeType":"YulFunctionCall","src":"13191:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13215:7:19"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"13171:19:19"},"nodeType":"YulFunctionCall","src":"13171:52:19"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"13161:6:19"}]}]},{"nodeType":"YulBlock","src":"13243:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"13258:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"13272:3:19","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13262:6:19","type":""}]},{"nodeType":"YulAssignment","src":"13289:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13323:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"13334:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13319:3:19"},"nodeType":"YulFunctionCall","src":"13319:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13343:7:19"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"13299:19:19"},"nodeType":"YulFunctionCall","src":"13299:52:19"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"13289:6:19"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_uint64t_uint16t_uint32t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12533:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12544:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12556:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12564:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12572:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12580:6:19","type":""},{"name":"value4","nodeType":"YulTypedName","src":"12588:6:19","type":""}],"src":"12465:903:19"},{"body":{"nodeType":"YulBlock","src":"13515:451:19","statements":[{"body":{"nodeType":"YulBlock","src":"13562:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13564:77:19"},"nodeType":"YulFunctionCall","src":"13564:79:19"},"nodeType":"YulExpressionStatement","src":"13564:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13536:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"13545:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13532:3:19"},"nodeType":"YulFunctionCall","src":"13532:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"13557:3:19","type":"","value":"576"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13528:3:19"},"nodeType":"YulFunctionCall","src":"13528:33:19"},"nodeType":"YulIf","src":"13525:2:19"},{"nodeType":"YulBlock","src":"13655:140:19","statements":[{"nodeType":"YulVariableDeclaration","src":"13670:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"13684:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13674:6:19","type":""}]},{"nodeType":"YulAssignment","src":"13699:86:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13757:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"13768:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13753:3:19"},"nodeType":"YulFunctionCall","src":"13753:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13777:7:19"}],"functionName":{"name":"abi_decode_t_struct$_Proof_$2346_memory_ptr","nodeType":"YulIdentifier","src":"13709:43:19"},"nodeType":"YulFunctionCall","src":"13709:76:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13699:6:19"}]}]},{"nodeType":"YulBlock","src":"13805:154:19","statements":[{"nodeType":"YulVariableDeclaration","src":"13820:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"13834:3:19","type":"","value":"416"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13824:6:19","type":""}]},{"nodeType":"YulAssignment","src":"13851:98:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13921:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"13932:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13917:3:19"},"nodeType":"YulFunctionCall","src":"13917:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13941:7:19"}],"functionName":{"name":"abi_decode_t_struct$_RequestCommitment_$2687_memory_ptr","nodeType":"YulIdentifier","src":"13861:55:19"},"nodeType":"YulFunctionCall","src":"13861:88:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13851:6:19"}]}]}]},"name":"abi_decode_tuple_t_struct$_Proof_$2346_memory_ptrt_struct$_RequestCommitment_$2687_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13477:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13488:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13500:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13508:6:19","type":""}],"src":"13374:592:19"},{"body":{"nodeType":"YulBlock","src":"14145:928:19","statements":[{"body":{"nodeType":"YulBlock","src":"14192:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14194:77:19"},"nodeType":"YulFunctionCall","src":"14194:79:19"},"nodeType":"YulExpressionStatement","src":"14194:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14166:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"14175:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14162:3:19"},"nodeType":"YulFunctionCall","src":"14162:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"14187:3:19","type":"","value":"448"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14158:3:19"},"nodeType":"YulFunctionCall","src":"14158:33:19"},"nodeType":"YulIf","src":"14155:2:19"},{"nodeType":"YulBlock","src":"14285:116:19","statements":[{"nodeType":"YulVariableDeclaration","src":"14300:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"14314:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14304:6:19","type":""}]},{"nodeType":"YulAssignment","src":"14329:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14363:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"14374:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14359:3:19"},"nodeType":"YulFunctionCall","src":"14359:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14383:7:19"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"14339:19:19"},"nodeType":"YulFunctionCall","src":"14339:52:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14329:6:19"}]}]},{"nodeType":"YulBlock","src":"14411:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"14426:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"14440:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14430:6:19","type":""}]},{"nodeType":"YulAssignment","src":"14456:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14490:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"14501:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14486:3:19"},"nodeType":"YulFunctionCall","src":"14486:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14510:7:19"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"14466:19:19"},"nodeType":"YulFunctionCall","src":"14466:52:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14456:6:19"}]}]},{"nodeType":"YulBlock","src":"14538:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"14553:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"14567:2:19","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14557:6:19","type":""}]},{"nodeType":"YulAssignment","src":"14583:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14617:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"14628:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14613:3:19"},"nodeType":"YulFunctionCall","src":"14613:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14637:7:19"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"14593:19:19"},"nodeType":"YulFunctionCall","src":"14593:52:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"14583:6:19"}]}]},{"nodeType":"YulBlock","src":"14665:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"14680:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"14694:2:19","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14684:6:19","type":""}]},{"nodeType":"YulAssignment","src":"14710:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14744:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"14755:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14740:3:19"},"nodeType":"YulFunctionCall","src":"14740:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14764:7:19"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"14720:19:19"},"nodeType":"YulFunctionCall","src":"14720:52:19"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"14710:6:19"}]}]},{"nodeType":"YulBlock","src":"14792:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"14807:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"14821:3:19","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14811:6:19","type":""}]},{"nodeType":"YulAssignment","src":"14838:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14872:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"14883:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14868:3:19"},"nodeType":"YulFunctionCall","src":"14868:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14892:7:19"}],"functionName":{"name":"abi_decode_t_int256","nodeType":"YulIdentifier","src":"14848:19:19"},"nodeType":"YulFunctionCall","src":"14848:52:19"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"14838:6:19"}]}]},{"nodeType":"YulBlock","src":"14920:146:19","statements":[{"nodeType":"YulVariableDeclaration","src":"14935:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"14949:3:19","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14939:6:19","type":""}]},{"nodeType":"YulAssignment","src":"14966:90:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15028:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"15039:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15024:3:19"},"nodeType":"YulFunctionCall","src":"15024:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15048:7:19"}],"functionName":{"name":"abi_decode_t_struct$_FeeConfig_$2780_memory_ptr","nodeType":"YulIdentifier","src":"14976:47:19"},"nodeType":"YulFunctionCall","src":"14976:80:19"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"14966:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint16t_uint32t_uint32t_uint32t_int256t_struct$_FeeConfig_$2780_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14075:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14086:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14098:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14106:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14114:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14122:6:19","type":""},{"name":"value4","nodeType":"YulTypedName","src":"14130:6:19","type":""},{"name":"value5","nodeType":"YulTypedName","src":"14138:6:19","type":""}],"src":"13972:1101:19"},{"body":{"nodeType":"YulBlock","src":"15145:263:19","statements":[{"body":{"nodeType":"YulBlock","src":"15191:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15193:77:19"},"nodeType":"YulFunctionCall","src":"15193:79:19"},"nodeType":"YulExpressionStatement","src":"15193:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15166:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"15175:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15162:3:19"},"nodeType":"YulFunctionCall","src":"15162:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"15187:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15158:3:19"},"nodeType":"YulFunctionCall","src":"15158:32:19"},"nodeType":"YulIf","src":"15155:2:19"},{"nodeType":"YulBlock","src":"15284:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"15299:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"15313:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15303:6:19","type":""}]},{"nodeType":"YulAssignment","src":"15328:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15363:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"15374:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15359:3:19"},"nodeType":"YulFunctionCall","src":"15359:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15383:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"15338:20:19"},"nodeType":"YulFunctionCall","src":"15338:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15328:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15115:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15126:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15138:6:19","type":""}],"src":"15079:329:19"},{"body":{"nodeType":"YulBlock","src":"15491:274:19","statements":[{"body":{"nodeType":"YulBlock","src":"15537:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15539:77:19"},"nodeType":"YulFunctionCall","src":"15539:79:19"},"nodeType":"YulExpressionStatement","src":"15539:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15512:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"15521:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15508:3:19"},"nodeType":"YulFunctionCall","src":"15508:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"15533:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15504:3:19"},"nodeType":"YulFunctionCall","src":"15504:32:19"},"nodeType":"YulIf","src":"15501:2:19"},{"nodeType":"YulBlock","src":"15630:128:19","statements":[{"nodeType":"YulVariableDeclaration","src":"15645:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"15659:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15649:6:19","type":""}]},{"nodeType":"YulAssignment","src":"15674:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15720:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"15731:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15716:3:19"},"nodeType":"YulFunctionCall","src":"15716:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15740:7:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"15684:31:19"},"nodeType":"YulFunctionCall","src":"15684:64:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15674:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15461:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15472:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15484:6:19","type":""}],"src":"15414:351:19"},{"body":{"nodeType":"YulBlock","src":"15836:262:19","statements":[{"body":{"nodeType":"YulBlock","src":"15882:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15884:77:19"},"nodeType":"YulFunctionCall","src":"15884:79:19"},"nodeType":"YulExpressionStatement","src":"15884:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15857:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"15866:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15853:3:19"},"nodeType":"YulFunctionCall","src":"15853:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"15878:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15849:3:19"},"nodeType":"YulFunctionCall","src":"15849:32:19"},"nodeType":"YulIf","src":"15846:2:19"},{"nodeType":"YulBlock","src":"15975:116:19","statements":[{"nodeType":"YulVariableDeclaration","src":"15990:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"16004:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15994:6:19","type":""}]},{"nodeType":"YulAssignment","src":"16019:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16053:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"16064:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16049:3:19"},"nodeType":"YulFunctionCall","src":"16049:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16073:7:19"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"16029:19:19"},"nodeType":"YulFunctionCall","src":"16029:52:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16019:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15806:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15817:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15829:6:19","type":""}],"src":"15771:327:19"},{"body":{"nodeType":"YulBlock","src":"16186:390:19","statements":[{"body":{"nodeType":"YulBlock","src":"16232:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"16234:77:19"},"nodeType":"YulFunctionCall","src":"16234:79:19"},"nodeType":"YulExpressionStatement","src":"16234:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16207:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"16216:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16203:3:19"},"nodeType":"YulFunctionCall","src":"16203:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"16228:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16199:3:19"},"nodeType":"YulFunctionCall","src":"16199:32:19"},"nodeType":"YulIf","src":"16196:2:19"},{"nodeType":"YulBlock","src":"16325:116:19","statements":[{"nodeType":"YulVariableDeclaration","src":"16340:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"16354:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16344:6:19","type":""}]},{"nodeType":"YulAssignment","src":"16369:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16403:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"16414:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16399:3:19"},"nodeType":"YulFunctionCall","src":"16399:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16423:7:19"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"16379:19:19"},"nodeType":"YulFunctionCall","src":"16379:52:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16369:6:19"}]}]},{"nodeType":"YulBlock","src":"16451:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"16466:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"16480:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16470:6:19","type":""}]},{"nodeType":"YulAssignment","src":"16496:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16531:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"16542:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16527:3:19"},"nodeType":"YulFunctionCall","src":"16527:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16551:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"16506:20:19"},"nodeType":"YulFunctionCall","src":"16506:53:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"16496:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint64t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16148:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16159:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16171:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16179:6:19","type":""}],"src":"16104:472:19"},{"body":{"nodeType":"YulBlock","src":"16724:829:19","statements":[{"body":{"nodeType":"YulBlock","src":"16771:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"16773:77:19"},"nodeType":"YulFunctionCall","src":"16773:79:19"},"nodeType":"YulExpressionStatement","src":"16773:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16745:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"16754:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16741:3:19"},"nodeType":"YulFunctionCall","src":"16741:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"16766:3:19","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16737:3:19"},"nodeType":"YulFunctionCall","src":"16737:33:19"},"nodeType":"YulIf","src":"16734:2:19"},{"nodeType":"YulBlock","src":"16864:127:19","statements":[{"nodeType":"YulVariableDeclaration","src":"16879:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"16893:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16883:6:19","type":""}]},{"nodeType":"YulAssignment","src":"16908:73:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16953:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"16964:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16949:3:19"},"nodeType":"YulFunctionCall","src":"16949:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16973:7:19"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"16918:30:19"},"nodeType":"YulFunctionCall","src":"16918:63:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16908:6:19"}]}]},{"nodeType":"YulBlock","src":"17001:128:19","statements":[{"nodeType":"YulVariableDeclaration","src":"17016:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"17030:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17020:6:19","type":""}]},{"nodeType":"YulAssignment","src":"17046:73:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17091:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"17102:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17087:3:19"},"nodeType":"YulFunctionCall","src":"17087:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17111:7:19"}],"functionName":{"name":"abi_decode_t_int256_fromMemory","nodeType":"YulIdentifier","src":"17056:30:19"},"nodeType":"YulFunctionCall","src":"17056:63:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"17046:6:19"}]}]},{"nodeType":"YulBlock","src":"17139:129:19","statements":[{"nodeType":"YulVariableDeclaration","src":"17154:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"17168:2:19","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17158:6:19","type":""}]},{"nodeType":"YulAssignment","src":"17184:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17230:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"17241:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17226:3:19"},"nodeType":"YulFunctionCall","src":"17226:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17250:7:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"17194:31:19"},"nodeType":"YulFunctionCall","src":"17194:64:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"17184:6:19"}]}]},{"nodeType":"YulBlock","src":"17278:129:19","statements":[{"nodeType":"YulVariableDeclaration","src":"17293:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"17307:2:19","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17297:6:19","type":""}]},{"nodeType":"YulAssignment","src":"17323:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17369:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"17380:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17365:3:19"},"nodeType":"YulFunctionCall","src":"17365:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17389:7:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"17333:31:19"},"nodeType":"YulFunctionCall","src":"17333:64:19"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"17323:6:19"}]}]},{"nodeType":"YulBlock","src":"17417:129:19","statements":[{"nodeType":"YulVariableDeclaration","src":"17432:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"17446:3:19","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17436:6:19","type":""}]},{"nodeType":"YulAssignment","src":"17463:73:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17508:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"17519:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17504:3:19"},"nodeType":"YulFunctionCall","src":"17504:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17528:7:19"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"17473:30:19"},"nodeType":"YulFunctionCall","src":"17473:63:19"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"17463:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16662:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16673:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16685:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16693:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16701:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16709:6:19","type":""},{"name":"value4","nodeType":"YulTypedName","src":"16717:6:19","type":""}],"src":"16582:971:19"},{"body":{"nodeType":"YulBlock","src":"17639:99:19","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17683:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"17691:3:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"17649:33:19"},"nodeType":"YulFunctionCall","src":"17649:46:19"},"nodeType":"YulExpressionStatement","src":"17649:46:19"},{"nodeType":"YulAssignment","src":"17704:28:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17722:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"17727:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17718:3:19"},"nodeType":"YulFunctionCall","src":"17718:14:19"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"17704:10:19"}]}]},"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"17612:6:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17620:3:19","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"17628:10:19","type":""}],"src":"17559:179:19"},{"body":{"nodeType":"YulBlock","src":"17824:99:19","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17868:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"17876:3:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"17834:33:19"},"nodeType":"YulFunctionCall","src":"17834:46:19"},"nodeType":"YulExpressionStatement","src":"17834:46:19"},{"nodeType":"YulAssignment","src":"17889:28:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17907:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"17912:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17903:3:19"},"nodeType":"YulFunctionCall","src":"17903:14:19"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"17889:10:19"}]}]},"name":"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"17797:6:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17805:3:19","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"17813:10:19","type":""}],"src":"17744:179:19"},{"body":{"nodeType":"YulBlock","src":"18009:99:19","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18053:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"18061:3:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"18019:33:19"},"nodeType":"YulFunctionCall","src":"18019:46:19"},"nodeType":"YulExpressionStatement","src":"18019:46:19"},{"nodeType":"YulAssignment","src":"18074:28:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18092:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18097:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18088:3:19"},"nodeType":"YulFunctionCall","src":"18088:14:19"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"18074:10:19"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"17982:6:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17990:3:19","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"17998:10:19","type":""}],"src":"17929:179:19"},{"body":{"nodeType":"YulBlock","src":"18202:107:19","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18254:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"18262:3:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_inplace","nodeType":"YulIdentifier","src":"18212:41:19"},"nodeType":"YulFunctionCall","src":"18212:54:19"},"nodeType":"YulExpressionStatement","src":"18212:54:19"},{"nodeType":"YulAssignment","src":"18275:28:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18293:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18298:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18289:3:19"},"nodeType":"YulFunctionCall","src":"18289:14:19"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"18275:10:19"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256_inplace","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"18175:6:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18183:3:19","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"18191:10:19","type":""}],"src":"18114:195:19"},{"body":{"nodeType":"YulBlock","src":"18370:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18387:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18410:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"18392:17:19"},"nodeType":"YulFunctionCall","src":"18392:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18380:6:19"},"nodeType":"YulFunctionCall","src":"18380:37:19"},"nodeType":"YulExpressionStatement","src":"18380:37:19"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18358:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18365:3:19","type":""}],"src":"18315:108:19"},{"body":{"nodeType":"YulBlock","src":"18494:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18511:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18534:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"18516:17:19"},"nodeType":"YulFunctionCall","src":"18516:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18504:6:19"},"nodeType":"YulFunctionCall","src":"18504:37:19"},"nodeType":"YulExpressionStatement","src":"18504:37:19"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18482:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18489:3:19","type":""}],"src":"18429:118:19"},{"body":{"nodeType":"YulBlock","src":"18636:74:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18653:3:19"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18696:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"18678:17:19"},"nodeType":"YulFunctionCall","src":"18678:24:19"}],"functionName":{"name":"leftAlign_t_address","nodeType":"YulIdentifier","src":"18658:19:19"},"nodeType":"YulFunctionCall","src":"18658:45:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18646:6:19"},"nodeType":"YulFunctionCall","src":"18646:58:19"},"nodeType":"YulExpressionStatement","src":"18646:58:19"}]},"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18624:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18631:3:19","type":""}],"src":"18553:157:19"},{"body":{"nodeType":"YulBlock","src":"18870:608:19","statements":[{"nodeType":"YulVariableDeclaration","src":"18880:68:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18942:5:19"}],"functionName":{"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"18894:47:19"},"nodeType":"YulFunctionCall","src":"18894:54:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"18884:6:19","type":""}]},{"nodeType":"YulAssignment","src":"18957:93:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19038:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"19043:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18964:73:19"},"nodeType":"YulFunctionCall","src":"18964:86:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18957:3:19"}]},{"nodeType":"YulVariableDeclaration","src":"19059:71:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19124:5:19"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"19074:49:19"},"nodeType":"YulFunctionCall","src":"19074:56:19"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"19063:7:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19139:21:19","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"19153:7:19"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"19143:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"19229:224:19","statements":[{"nodeType":"YulVariableDeclaration","src":"19243:34:19","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"19270:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19264:5:19"},"nodeType":"YulFunctionCall","src":"19264:13:19"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"19247:13:19","type":""}]},{"nodeType":"YulAssignment","src":"19290:70:19","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"19341:13:19"},{"name":"pos","nodeType":"YulIdentifier","src":"19356:3:19"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulIdentifier","src":"19297:43:19"},"nodeType":"YulFunctionCall","src":"19297:63:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19290:3:19"}]},{"nodeType":"YulAssignment","src":"19373:70:19","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"19436:6:19"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"19383:52:19"},"nodeType":"YulFunctionCall","src":"19383:60:19"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"19373:6:19"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19191:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"19194:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19188:2:19"},"nodeType":"YulFunctionCall","src":"19188:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"19202:18:19","statements":[{"nodeType":"YulAssignment","src":"19204:14:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19213:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"19216:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19209:3:19"},"nodeType":"YulFunctionCall","src":"19209:9:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"19204:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"19173:14:19","statements":[{"nodeType":"YulVariableDeclaration","src":"19175:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"19184:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"19179:1:19","type":""}]}]},"src":"19169:284:19"},{"nodeType":"YulAssignment","src":"19462:10:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"19469:3:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19462:3:19"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18849:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18856:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18865:3:19","type":""}],"src":"18746:732:19"},{"body":{"nodeType":"YulBlock","src":"19638:608:19","statements":[{"nodeType":"YulVariableDeclaration","src":"19648:68:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19710:5:19"}],"functionName":{"name":"array_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"19662:47:19"},"nodeType":"YulFunctionCall","src":"19662:54:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"19652:6:19","type":""}]},{"nodeType":"YulAssignment","src":"19725:93:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19806:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"19811:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19732:73:19"},"nodeType":"YulFunctionCall","src":"19732:86:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19725:3:19"}]},{"nodeType":"YulVariableDeclaration","src":"19827:71:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19892:5:19"}],"functionName":{"name":"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"19842:49:19"},"nodeType":"YulFunctionCall","src":"19842:56:19"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"19831:7:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19907:21:19","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"19921:7:19"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"19911:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"19997:224:19","statements":[{"nodeType":"YulVariableDeclaration","src":"20011:34:19","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"20038:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20032:5:19"},"nodeType":"YulFunctionCall","src":"20032:13:19"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"20015:13:19","type":""}]},{"nodeType":"YulAssignment","src":"20058:70:19","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"20109:13:19"},{"name":"pos","nodeType":"YulIdentifier","src":"20124:3:19"}],"functionName":{"name":"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"20065:43:19"},"nodeType":"YulFunctionCall","src":"20065:63:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20058:3:19"}]},{"nodeType":"YulAssignment","src":"20141:70:19","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"20204:6:19"}],"functionName":{"name":"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"20151:52:19"},"nodeType":"YulFunctionCall","src":"20151:60:19"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"20141:6:19"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19959:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"19962:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19956:2:19"},"nodeType":"YulFunctionCall","src":"19956:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"19970:18:19","statements":[{"nodeType":"YulAssignment","src":"19972:14:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19981:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"19984:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19977:3:19"},"nodeType":"YulFunctionCall","src":"19977:9:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"19972:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"19941:14:19","statements":[{"nodeType":"YulVariableDeclaration","src":"19943:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"19952:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"19947:1:19","type":""}]}]},"src":"19937:284:19"},{"nodeType":"YulAssignment","src":"20230:10:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"20237:3:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20230:3:19"}]}]},"name":"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19617:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19624:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19633:3:19","type":""}],"src":"19514:732:19"},{"body":{"nodeType":"YulBlock","src":"20396:582:19","statements":[{"nodeType":"YulVariableDeclaration","src":"20406:66:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20466:5:19"}],"functionName":{"name":"array_length_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulIdentifier","src":"20420:45:19"},"nodeType":"YulFunctionCall","src":"20420:52:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"20410:6:19","type":""}]},{"nodeType":"YulAssignment","src":"20481:91:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20560:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"20565:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$2_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20488:71:19"},"nodeType":"YulFunctionCall","src":"20488:84:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20481:3:19"}]},{"nodeType":"YulVariableDeclaration","src":"20581:69:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20644:5:19"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulIdentifier","src":"20596:47:19"},"nodeType":"YulFunctionCall","src":"20596:54:19"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"20585:7:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20659:21:19","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"20673:7:19"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"20663:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"20749:222:19","statements":[{"nodeType":"YulVariableDeclaration","src":"20763:34:19","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"20790:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20784:5:19"},"nodeType":"YulFunctionCall","src":"20784:13:19"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"20767:13:19","type":""}]},{"nodeType":"YulAssignment","src":"20810:70:19","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"20861:13:19"},{"name":"pos","nodeType":"YulIdentifier","src":"20876:3:19"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"20817:43:19"},"nodeType":"YulFunctionCall","src":"20817:63:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20810:3:19"}]},{"nodeType":"YulAssignment","src":"20893:68:19","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"20954:6:19"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulIdentifier","src":"20903:50:19"},"nodeType":"YulFunctionCall","src":"20903:58:19"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"20893:6:19"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"20711:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"20714:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20708:2:19"},"nodeType":"YulFunctionCall","src":"20708:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"20722:18:19","statements":[{"nodeType":"YulAssignment","src":"20724:14:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"20733:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"20736:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20729:3:19"},"nodeType":"YulFunctionCall","src":"20729:9:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"20724:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"20693:14:19","statements":[{"nodeType":"YulVariableDeclaration","src":"20695:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"20704:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"20699:1:19","type":""}]}]},"src":"20689:282:19"}]},"name":"abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20383:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20390:3:19","type":""}],"src":"20284:694:19"},{"body":{"nodeType":"YulBlock","src":"21146:608:19","statements":[{"nodeType":"YulVariableDeclaration","src":"21156:66:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21216:5:19"}],"functionName":{"name":"array_length_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulIdentifier","src":"21170:45:19"},"nodeType":"YulFunctionCall","src":"21170:52:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"21160:6:19","type":""}]},{"nodeType":"YulAssignment","src":"21231:109:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21328:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"21333:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21238:89:19"},"nodeType":"YulFunctionCall","src":"21238:102:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21231:3:19"}]},{"nodeType":"YulVariableDeclaration","src":"21349:69:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21412:5:19"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulIdentifier","src":"21364:47:19"},"nodeType":"YulFunctionCall","src":"21364:54:19"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"21353:7:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"21427:21:19","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"21441:7:19"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"21431:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"21517:230:19","statements":[{"nodeType":"YulVariableDeclaration","src":"21531:34:19","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"21558:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21552:5:19"},"nodeType":"YulFunctionCall","src":"21552:13:19"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"21535:13:19","type":""}]},{"nodeType":"YulAssignment","src":"21578:78:19","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"21637:13:19"},{"name":"pos","nodeType":"YulIdentifier","src":"21652:3:19"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256_inplace","nodeType":"YulIdentifier","src":"21585:51:19"},"nodeType":"YulFunctionCall","src":"21585:71:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21578:3:19"}]},{"nodeType":"YulAssignment","src":"21669:68:19","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"21730:6:19"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulIdentifier","src":"21679:50:19"},"nodeType":"YulFunctionCall","src":"21679:58:19"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"21669:6:19"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"21479:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"21482:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21476:2:19"},"nodeType":"YulFunctionCall","src":"21476:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"21490:18:19","statements":[{"nodeType":"YulAssignment","src":"21492:14:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"21501:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"21504:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21497:3:19"},"nodeType":"YulFunctionCall","src":"21497:9:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"21492:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"21461:14:19","statements":[{"nodeType":"YulVariableDeclaration","src":"21463:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"21472:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"21467:1:19","type":""}]}]},"src":"21457:290:19"}]},"name":"abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21133:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21140:3:19","type":""}],"src":"21016:738:19"},{"body":{"nodeType":"YulBlock","src":"21914:608:19","statements":[{"nodeType":"YulVariableDeclaration","src":"21924:68:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21986:5:19"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"21938:47:19"},"nodeType":"YulFunctionCall","src":"21938:54:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"21928:6:19","type":""}]},{"nodeType":"YulAssignment","src":"22001:93:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22082:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"22087:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22008:73:19"},"nodeType":"YulFunctionCall","src":"22008:86:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22001:3:19"}]},{"nodeType":"YulVariableDeclaration","src":"22103:71:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22168:5:19"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"22118:49:19"},"nodeType":"YulFunctionCall","src":"22118:56:19"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"22107:7:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22183:21:19","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"22197:7:19"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"22187:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"22273:224:19","statements":[{"nodeType":"YulVariableDeclaration","src":"22287:34:19","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"22314:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22308:5:19"},"nodeType":"YulFunctionCall","src":"22308:13:19"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"22291:13:19","type":""}]},{"nodeType":"YulAssignment","src":"22334:70:19","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"22385:13:19"},{"name":"pos","nodeType":"YulIdentifier","src":"22400:3:19"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"22341:43:19"},"nodeType":"YulFunctionCall","src":"22341:63:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22334:3:19"}]},{"nodeType":"YulAssignment","src":"22417:70:19","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"22480:6:19"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"22427:52:19"},"nodeType":"YulFunctionCall","src":"22427:60:19"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"22417:6:19"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22235:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"22238:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22232:2:19"},"nodeType":"YulFunctionCall","src":"22232:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"22246:18:19","statements":[{"nodeType":"YulAssignment","src":"22248:14:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22257:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"22260:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22253:3:19"},"nodeType":"YulFunctionCall","src":"22253:9:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"22248:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"22217:14:19","statements":[{"nodeType":"YulVariableDeclaration","src":"22219:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"22228:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"22223:1:19","type":""}]}]},"src":"22213:284:19"},{"nodeType":"YulAssignment","src":"22506:10:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"22513:3:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22506:3:19"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21893:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21900:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21909:3:19","type":""}],"src":"21790:732:19"},{"body":{"nodeType":"YulBlock","src":"22587:50:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22604:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22624:5:19"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"22609:14:19"},"nodeType":"YulFunctionCall","src":"22609:21:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22597:6:19"},"nodeType":"YulFunctionCall","src":"22597:34:19"},"nodeType":"YulExpressionStatement","src":"22597:34:19"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22575:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22582:3:19","type":""}],"src":"22528:109:19"},{"body":{"nodeType":"YulBlock","src":"22698:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22715:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22738:5:19"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"22720:17:19"},"nodeType":"YulFunctionCall","src":"22720:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22708:6:19"},"nodeType":"YulFunctionCall","src":"22708:37:19"},"nodeType":"YulExpressionStatement","src":"22708:37:19"}]},"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22686:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22693:3:19","type":""}],"src":"22643:108:19"},{"body":{"nodeType":"YulBlock","src":"22822:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22839:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22862:5:19"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"22844:17:19"},"nodeType":"YulFunctionCall","src":"22844:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22832:6:19"},"nodeType":"YulFunctionCall","src":"22832:37:19"},"nodeType":"YulExpressionStatement","src":"22832:37:19"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22810:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22817:3:19","type":""}],"src":"22757:118:19"},{"body":{"nodeType":"YulBlock","src":"22964:74:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22981:3:19"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23024:5:19"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"23006:17:19"},"nodeType":"YulFunctionCall","src":"23006:24:19"}],"functionName":{"name":"leftAlign_t_bytes32","nodeType":"YulIdentifier","src":"22986:19:19"},"nodeType":"YulFunctionCall","src":"22986:45:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22974:6:19"},"nodeType":"YulFunctionCall","src":"22974:58:19"},"nodeType":"YulExpressionStatement","src":"22974:58:19"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22952:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22959:3:19","type":""}],"src":"22881:157:19"},{"body":{"nodeType":"YulBlock","src":"23134:270:19","statements":[{"nodeType":"YulVariableDeclaration","src":"23144:52:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23190:5:19"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"23158:31:19"},"nodeType":"YulFunctionCall","src":"23158:38:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"23148:6:19","type":""}]},{"nodeType":"YulAssignment","src":"23205:77:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23270:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"23275:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23212:57:19"},"nodeType":"YulFunctionCall","src":"23212:70:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23205:3:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23317:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"23324:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23313:3:19"},"nodeType":"YulFunctionCall","src":"23313:16:19"},{"name":"pos","nodeType":"YulIdentifier","src":"23331:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"23336:6:19"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"23291:21:19"},"nodeType":"YulFunctionCall","src":"23291:52:19"},"nodeType":"YulExpressionStatement","src":"23291:52:19"},{"nodeType":"YulAssignment","src":"23352:46:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23363:3:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23390:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"23368:21:19"},"nodeType":"YulFunctionCall","src":"23368:29:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23359:3:19"},"nodeType":"YulFunctionCall","src":"23359:39:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23352:3:19"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23115:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23122:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23130:3:19","type":""}],"src":"23044:360:19"},{"body":{"nodeType":"YulBlock","src":"23518:265:19","statements":[{"nodeType":"YulVariableDeclaration","src":"23528:52:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23574:5:19"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"23542:31:19"},"nodeType":"YulFunctionCall","src":"23542:38:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"23532:6:19","type":""}]},{"nodeType":"YulAssignment","src":"23589:95:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23672:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"23677:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23596:75:19"},"nodeType":"YulFunctionCall","src":"23596:88:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23589:3:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23719:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"23726:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23715:3:19"},"nodeType":"YulFunctionCall","src":"23715:16:19"},{"name":"pos","nodeType":"YulIdentifier","src":"23733:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"23738:6:19"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"23693:21:19"},"nodeType":"YulFunctionCall","src":"23693:52:19"},"nodeType":"YulExpressionStatement","src":"23693:52:19"},{"nodeType":"YulAssignment","src":"23754:23:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23765:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"23770:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23761:3:19"},"nodeType":"YulFunctionCall","src":"23761:16:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23754:3:19"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23499:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23506:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23514:3:19","type":""}],"src":"23410:373:19"},{"body":{"nodeType":"YulBlock","src":"23883:95:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23900:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23965:5:19"}],"functionName":{"name":"convert_t_contract$_AggregatorV3Interface_$590_to_t_address","nodeType":"YulIdentifier","src":"23905:59:19"},"nodeType":"YulFunctionCall","src":"23905:66:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23893:6:19"},"nodeType":"YulFunctionCall","src":"23893:79:19"},"nodeType":"YulExpressionStatement","src":"23893:79:19"}]},"name":"abi_encode_t_contract$_AggregatorV3Interface_$590_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23871:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23878:3:19","type":""}],"src":"23789:189:19"},{"body":{"nodeType":"YulBlock","src":"24081:98:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24098:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24166:5:19"}],"functionName":{"name":"convert_t_contract$_BlockhashStoreInterface_$4786_to_t_address","nodeType":"YulIdentifier","src":"24103:62:19"},"nodeType":"YulFunctionCall","src":"24103:69:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24091:6:19"},"nodeType":"YulFunctionCall","src":"24091:82:19"},"nodeType":"YulExpressionStatement","src":"24091:82:19"}]},"name":"abi_encode_t_contract$_BlockhashStoreInterface_$4786_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24069:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24076:3:19","type":""}],"src":"23984:195:19"},{"body":{"nodeType":"YulBlock","src":"24276:92:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24293:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24355:5:19"}],"functionName":{"name":"convert_t_contract$_LinkTokenInterface_$713_to_t_address","nodeType":"YulIdentifier","src":"24298:56:19"},"nodeType":"YulFunctionCall","src":"24298:63:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24286:6:19"},"nodeType":"YulFunctionCall","src":"24286:76:19"},"nodeType":"YulExpressionStatement","src":"24286:76:19"}]},"name":"abi_encode_t_contract$_LinkTokenInterface_$713_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24264:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24271:3:19","type":""}],"src":"24185:183:19"},{"body":{"nodeType":"YulBlock","src":"24437:52:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24454:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24476:5:19"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"24459:16:19"},"nodeType":"YulFunctionCall","src":"24459:23:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24447:6:19"},"nodeType":"YulFunctionCall","src":"24447:36:19"},"nodeType":"YulExpressionStatement","src":"24447:36:19"}]},"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24425:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24432:3:19","type":""}],"src":"24374:115:19"},{"body":{"nodeType":"YulBlock","src":"24587:272:19","statements":[{"nodeType":"YulVariableDeclaration","src":"24597:53:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24644:5:19"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"24611:32:19"},"nodeType":"YulFunctionCall","src":"24611:39:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"24601:6:19","type":""}]},{"nodeType":"YulAssignment","src":"24659:78:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24725:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"24730:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24666:58:19"},"nodeType":"YulFunctionCall","src":"24666:71:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24659:3:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24772:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"24779:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24768:3:19"},"nodeType":"YulFunctionCall","src":"24768:16:19"},{"name":"pos","nodeType":"YulIdentifier","src":"24786:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"24791:6:19"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"24746:21:19"},"nodeType":"YulFunctionCall","src":"24746:52:19"},"nodeType":"YulExpressionStatement","src":"24746:52:19"},{"nodeType":"YulAssignment","src":"24807:46:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24818:3:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"24845:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"24823:21:19"},"nodeType":"YulFunctionCall","src":"24823:29:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24814:3:19"},"nodeType":"YulFunctionCall","src":"24814:39:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24807:3:19"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24568:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24575:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24583:3:19","type":""}],"src":"24495:364:19"},{"body":{"nodeType":"YulBlock","src":"25011:220:19","statements":[{"nodeType":"YulAssignment","src":"25021:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25087:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"25092:2:19","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25028:58:19"},"nodeType":"YulFunctionCall","src":"25028:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25021:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25193:3:19"}],"functionName":{"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulIdentifier","src":"25104:88:19"},"nodeType":"YulFunctionCall","src":"25104:93:19"},"nodeType":"YulExpressionStatement","src":"25104:93:19"},{"nodeType":"YulAssignment","src":"25206:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25217:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"25222:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25213:3:19"},"nodeType":"YulFunctionCall","src":"25213:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25206:3:19"}]}]},"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24999:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25007:3:19","type":""}],"src":"24865:366:19"},{"body":{"nodeType":"YulBlock","src":"25383:220:19","statements":[{"nodeType":"YulAssignment","src":"25393:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25459:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"25464:2:19","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25400:58:19"},"nodeType":"YulFunctionCall","src":"25400:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25393:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25565:3:19"}],"functionName":{"name":"store_literal_in_memory_13447e9fa8630e4bb2fa50f1493aa790167933f55263568ac4ad74cb4d138234","nodeType":"YulIdentifier","src":"25476:88:19"},"nodeType":"YulFunctionCall","src":"25476:93:19"},"nodeType":"YulExpressionStatement","src":"25476:93:19"},{"nodeType":"YulAssignment","src":"25578:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25589:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"25594:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25585:3:19"},"nodeType":"YulFunctionCall","src":"25585:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25578:3:19"}]}]},"name":"abi_encode_t_stringliteral_13447e9fa8630e4bb2fa50f1493aa790167933f55263568ac4ad74cb4d138234_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25371:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25379:3:19","type":""}],"src":"25237:366:19"},{"body":{"nodeType":"YulBlock","src":"25755:220:19","statements":[{"nodeType":"YulAssignment","src":"25765:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25831:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"25836:2:19","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25772:58:19"},"nodeType":"YulFunctionCall","src":"25772:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25765:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25937:3:19"}],"functionName":{"name":"store_literal_in_memory_2ce93c410880bb13bca91831655ee36bc7ab052e7c8cb24dd914165b1030eeca","nodeType":"YulIdentifier","src":"25848:88:19"},"nodeType":"YulFunctionCall","src":"25848:93:19"},"nodeType":"YulExpressionStatement","src":"25848:93:19"},{"nodeType":"YulAssignment","src":"25950:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25961:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"25966:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25957:3:19"},"nodeType":"YulFunctionCall","src":"25957:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25950:3:19"}]}]},"name":"abi_encode_t_stringliteral_2ce93c410880bb13bca91831655ee36bc7ab052e7c8cb24dd914165b1030eeca_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25743:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25751:3:19","type":""}],"src":"25609:366:19"},{"body":{"nodeType":"YulBlock","src":"26127:220:19","statements":[{"nodeType":"YulAssignment","src":"26137:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26203:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"26208:2:19","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26144:58:19"},"nodeType":"YulFunctionCall","src":"26144:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26137:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26309:3:19"}],"functionName":{"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulIdentifier","src":"26220:88:19"},"nodeType":"YulFunctionCall","src":"26220:93:19"},"nodeType":"YulExpressionStatement","src":"26220:93:19"},{"nodeType":"YulAssignment","src":"26322:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26333:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"26338:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26329:3:19"},"nodeType":"YulFunctionCall","src":"26329:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26322:3:19"}]}]},"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26115:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26123:3:19","type":""}],"src":"25981:366:19"},{"body":{"nodeType":"YulBlock","src":"26499:220:19","statements":[{"nodeType":"YulAssignment","src":"26509:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26575:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"26580:2:19","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26516:58:19"},"nodeType":"YulFunctionCall","src":"26516:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26509:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26681:3:19"}],"functionName":{"name":"store_literal_in_memory_4bd695d9be776d24ba6aaa6ea48a189f388adfd8a5e6a1df7bd6471290ea4e5f","nodeType":"YulIdentifier","src":"26592:88:19"},"nodeType":"YulFunctionCall","src":"26592:93:19"},"nodeType":"YulExpressionStatement","src":"26592:93:19"},{"nodeType":"YulAssignment","src":"26694:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26705:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"26710:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26701:3:19"},"nodeType":"YulFunctionCall","src":"26701:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26694:3:19"}]}]},"name":"abi_encode_t_stringliteral_4bd695d9be776d24ba6aaa6ea48a189f388adfd8a5e6a1df7bd6471290ea4e5f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26487:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26495:3:19","type":""}],"src":"26353:366:19"},{"body":{"nodeType":"YulBlock","src":"26871:220:19","statements":[{"nodeType":"YulAssignment","src":"26881:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26947:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"26952:2:19","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26888:58:19"},"nodeType":"YulFunctionCall","src":"26888:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26881:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27053:3:19"}],"functionName":{"name":"store_literal_in_memory_787cf99fb194dba922561b5b1fd0b18a6a49c57eaa01d9c5279f2b2a5bdc1a86","nodeType":"YulIdentifier","src":"26964:88:19"},"nodeType":"YulFunctionCall","src":"26964:93:19"},"nodeType":"YulExpressionStatement","src":"26964:93:19"},{"nodeType":"YulAssignment","src":"27066:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27077:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"27082:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27073:3:19"},"nodeType":"YulFunctionCall","src":"27073:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27066:3:19"}]}]},"name":"abi_encode_t_stringliteral_787cf99fb194dba922561b5b1fd0b18a6a49c57eaa01d9c5279f2b2a5bdc1a86_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26859:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26867:3:19","type":""}],"src":"26725:366:19"},{"body":{"nodeType":"YulBlock","src":"27243:220:19","statements":[{"nodeType":"YulAssignment","src":"27253:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27319:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"27324:2:19","type":"","value":"11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27260:58:19"},"nodeType":"YulFunctionCall","src":"27260:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27253:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27425:3:19"}],"functionName":{"name":"store_literal_in_memory_7fcbfa9df9f83be5218dd62480bcb5cdae56a970e549b88ff2403f5fcded9211","nodeType":"YulIdentifier","src":"27336:88:19"},"nodeType":"YulFunctionCall","src":"27336:93:19"},"nodeType":"YulExpressionStatement","src":"27336:93:19"},{"nodeType":"YulAssignment","src":"27438:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27449:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"27454:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27445:3:19"},"nodeType":"YulFunctionCall","src":"27445:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27438:3:19"}]}]},"name":"abi_encode_t_stringliteral_7fcbfa9df9f83be5218dd62480bcb5cdae56a970e549b88ff2403f5fcded9211_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27231:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27239:3:19","type":""}],"src":"27097:366:19"},{"body":{"nodeType":"YulBlock","src":"27615:220:19","statements":[{"nodeType":"YulAssignment","src":"27625:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27691:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"27696:2:19","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27632:58:19"},"nodeType":"YulFunctionCall","src":"27632:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27625:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27797:3:19"}],"functionName":{"name":"store_literal_in_memory_897d9ab785e875f3b83c51a39f09c2f6a852e06c26e3faf90359e5ad589f8cf1","nodeType":"YulIdentifier","src":"27708:88:19"},"nodeType":"YulFunctionCall","src":"27708:93:19"},"nodeType":"YulExpressionStatement","src":"27708:93:19"},{"nodeType":"YulAssignment","src":"27810:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27821:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"27826:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27817:3:19"},"nodeType":"YulFunctionCall","src":"27817:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27810:3:19"}]}]},"name":"abi_encode_t_stringliteral_897d9ab785e875f3b83c51a39f09c2f6a852e06c26e3faf90359e5ad589f8cf1_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27603:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27611:3:19","type":""}],"src":"27469:366:19"},{"body":{"nodeType":"YulBlock","src":"27987:220:19","statements":[{"nodeType":"YulAssignment","src":"27997:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28063:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"28068:2:19","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28004:58:19"},"nodeType":"YulFunctionCall","src":"28004:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27997:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28169:3:19"}],"functionName":{"name":"store_literal_in_memory_95046d93d9b2e6ba778cd180e8c682e7d907547386cb54bf80bca322c50144ca","nodeType":"YulIdentifier","src":"28080:88:19"},"nodeType":"YulFunctionCall","src":"28080:93:19"},"nodeType":"YulExpressionStatement","src":"28080:93:19"},{"nodeType":"YulAssignment","src":"28182:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28193:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"28198:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28189:3:19"},"nodeType":"YulFunctionCall","src":"28189:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28182:3:19"}]}]},"name":"abi_encode_t_stringliteral_95046d93d9b2e6ba778cd180e8c682e7d907547386cb54bf80bca322c50144ca_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27975:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27983:3:19","type":""}],"src":"27841:366:19"},{"body":{"nodeType":"YulBlock","src":"28359:220:19","statements":[{"nodeType":"YulAssignment","src":"28369:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28435:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"28440:2:19","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28376:58:19"},"nodeType":"YulFunctionCall","src":"28376:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28369:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28541:3:19"}],"functionName":{"name":"store_literal_in_memory_9f90959a5b25997fe56cdafc2f72d300e298468f5ac5e847db7890be22108d2b","nodeType":"YulIdentifier","src":"28452:88:19"},"nodeType":"YulFunctionCall","src":"28452:93:19"},"nodeType":"YulExpressionStatement","src":"28452:93:19"},{"nodeType":"YulAssignment","src":"28554:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28565:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"28570:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28561:3:19"},"nodeType":"YulFunctionCall","src":"28561:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28554:3:19"}]}]},"name":"abi_encode_t_stringliteral_9f90959a5b25997fe56cdafc2f72d300e298468f5ac5e847db7890be22108d2b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28347:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28355:3:19","type":""}],"src":"28213:366:19"},{"body":{"nodeType":"YulBlock","src":"28731:220:19","statements":[{"nodeType":"YulAssignment","src":"28741:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28807:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"28812:2:19","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28748:58:19"},"nodeType":"YulFunctionCall","src":"28748:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28741:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28913:3:19"}],"functionName":{"name":"store_literal_in_memory_ae4825d6ed8aab0513e68c27d2710aa68bcf110761c187d047951a5ec2580d8c","nodeType":"YulIdentifier","src":"28824:88:19"},"nodeType":"YulFunctionCall","src":"28824:93:19"},"nodeType":"YulExpressionStatement","src":"28824:93:19"},{"nodeType":"YulAssignment","src":"28926:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28937:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"28942:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28933:3:19"},"nodeType":"YulFunctionCall","src":"28933:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28926:3:19"}]}]},"name":"abi_encode_t_stringliteral_ae4825d6ed8aab0513e68c27d2710aa68bcf110761c187d047951a5ec2580d8c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28719:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28727:3:19","type":""}],"src":"28585:366:19"},{"body":{"nodeType":"YulBlock","src":"29103:220:19","statements":[{"nodeType":"YulAssignment","src":"29113:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29179:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"29184:2:19","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29120:58:19"},"nodeType":"YulFunctionCall","src":"29120:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29113:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29285:3:19"}],"functionName":{"name":"store_literal_in_memory_c6038a70864418dbffbd772a49c391c3536f6b633b3f2ccbcd6a6e15dbadd34c","nodeType":"YulIdentifier","src":"29196:88:19"},"nodeType":"YulFunctionCall","src":"29196:93:19"},"nodeType":"YulExpressionStatement","src":"29196:93:19"},{"nodeType":"YulAssignment","src":"29298:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29309:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"29314:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29305:3:19"},"nodeType":"YulFunctionCall","src":"29305:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29298:3:19"}]}]},"name":"abi_encode_t_stringliteral_c6038a70864418dbffbd772a49c391c3536f6b633b3f2ccbcd6a6e15dbadd34c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29091:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29099:3:19","type":""}],"src":"28957:366:19"},{"body":{"nodeType":"YulBlock","src":"29475:220:19","statements":[{"nodeType":"YulAssignment","src":"29485:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29551:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"29556:2:19","type":"","value":"13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29492:58:19"},"nodeType":"YulFunctionCall","src":"29492:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29485:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29657:3:19"}],"functionName":{"name":"store_literal_in_memory_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624","nodeType":"YulIdentifier","src":"29568:88:19"},"nodeType":"YulFunctionCall","src":"29568:93:19"},"nodeType":"YulExpressionStatement","src":"29568:93:19"},{"nodeType":"YulAssignment","src":"29670:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29681:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"29686:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29677:3:19"},"nodeType":"YulFunctionCall","src":"29677:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29670:3:19"}]}]},"name":"abi_encode_t_stringliteral_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29463:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29471:3:19","type":""}],"src":"29329:366:19"},{"body":{"nodeType":"YulBlock","src":"29847:220:19","statements":[{"nodeType":"YulAssignment","src":"29857:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29923:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"29928:2:19","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29864:58:19"},"nodeType":"YulFunctionCall","src":"29864:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29857:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30029:3:19"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"29940:88:19"},"nodeType":"YulFunctionCall","src":"29940:93:19"},"nodeType":"YulExpressionStatement","src":"29940:93:19"},{"nodeType":"YulAssignment","src":"30042:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30053:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"30058:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30049:3:19"},"nodeType":"YulFunctionCall","src":"30049:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30042:3:19"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29835:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29843:3:19","type":""}],"src":"29701:366:19"},{"body":{"nodeType":"YulBlock","src":"30219:220:19","statements":[{"nodeType":"YulAssignment","src":"30229:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30295:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"30300:2:19","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30236:58:19"},"nodeType":"YulFunctionCall","src":"30236:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30229:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30401:3:19"}],"functionName":{"name":"store_literal_in_memory_d9cf4c09fcc6ead19e539ee3210816df98f1219b8b47e830620ffd543bfea51f","nodeType":"YulIdentifier","src":"30312:88:19"},"nodeType":"YulFunctionCall","src":"30312:93:19"},"nodeType":"YulExpressionStatement","src":"30312:93:19"},{"nodeType":"YulAssignment","src":"30414:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30425:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"30430:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30421:3:19"},"nodeType":"YulFunctionCall","src":"30421:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30414:3:19"}]}]},"name":"abi_encode_t_stringliteral_d9cf4c09fcc6ead19e539ee3210816df98f1219b8b47e830620ffd543bfea51f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30207:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30215:3:19","type":""}],"src":"30073:366:19"},{"body":{"nodeType":"YulBlock","src":"30591:220:19","statements":[{"nodeType":"YulAssignment","src":"30601:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30667:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"30672:2:19","type":"","value":"11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30608:58:19"},"nodeType":"YulFunctionCall","src":"30608:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30601:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30773:3:19"}],"functionName":{"name":"store_literal_in_memory_e71e9381bf8fff7d9eeee436d182c3c8b982b1d416953f4ca9ccf572989baeca","nodeType":"YulIdentifier","src":"30684:88:19"},"nodeType":"YulFunctionCall","src":"30684:93:19"},"nodeType":"YulExpressionStatement","src":"30684:93:19"},{"nodeType":"YulAssignment","src":"30786:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30797:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"30802:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30793:3:19"},"nodeType":"YulFunctionCall","src":"30793:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30786:3:19"}]}]},"name":"abi_encode_t_stringliteral_e71e9381bf8fff7d9eeee436d182c3c8b982b1d416953f4ca9ccf572989baeca_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30579:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30587:3:19","type":""}],"src":"30445:366:19"},{"body":{"nodeType":"YulBlock","src":"30963:220:19","statements":[{"nodeType":"YulAssignment","src":"30973:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31039:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"31044:2:19","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30980:58:19"},"nodeType":"YulFunctionCall","src":"30980:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30973:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31145:3:19"}],"functionName":{"name":"store_literal_in_memory_ecc598139057476f7e46578e2e254b173afe0910225980583669989d2a737f84","nodeType":"YulIdentifier","src":"31056:88:19"},"nodeType":"YulFunctionCall","src":"31056:93:19"},"nodeType":"YulExpressionStatement","src":"31056:93:19"},{"nodeType":"YulAssignment","src":"31158:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31169:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"31174:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31165:3:19"},"nodeType":"YulFunctionCall","src":"31165:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31158:3:19"}]}]},"name":"abi_encode_t_stringliteral_ecc598139057476f7e46578e2e254b173afe0910225980583669989d2a737f84_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30951:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30959:3:19","type":""}],"src":"30817:366:19"},{"body":{"nodeType":"YulBlock","src":"31335:220:19","statements":[{"nodeType":"YulAssignment","src":"31345:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31411:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"31416:2:19","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31352:58:19"},"nodeType":"YulFunctionCall","src":"31352:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31345:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31517:3:19"}],"functionName":{"name":"store_literal_in_memory_ff425c3ce65530e49c0c35a5fdd7a61b00545f1fcc6482c28903cdcf48ac624f","nodeType":"YulIdentifier","src":"31428:88:19"},"nodeType":"YulFunctionCall","src":"31428:93:19"},"nodeType":"YulExpressionStatement","src":"31428:93:19"},{"nodeType":"YulAssignment","src":"31530:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31541:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"31546:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31537:3:19"},"nodeType":"YulFunctionCall","src":"31537:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31530:3:19"}]}]},"name":"abi_encode_t_stringliteral_ff425c3ce65530e49c0c35a5fdd7a61b00545f1fcc6482c28903cdcf48ac624f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31323:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31331:3:19","type":""}],"src":"31189:366:19"},{"body":{"nodeType":"YulBlock","src":"31756:2117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"31766:28:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31782:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"31787:6:19","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31778:3:19"},"nodeType":"YulFunctionCall","src":"31778:16:19"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"31770:4:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"31803:18:19","value":{"kind":"number","nodeType":"YulLiteral","src":"31820:1:19","type":"","value":"0"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"31807:9:19","type":""}]},{"nodeType":"YulBlock","src":"31831:267:19","statements":[{"nodeType":"YulAssignment","src":"31891:36:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31914:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"31921:4:19","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31910:3:19"},"nodeType":"YulFunctionCall","src":"31910:16:19"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"31904:5:19"},"nodeType":"YulFunctionCall","src":"31904:23:19"},"variableNames":[{"name":"slotValue","nodeType":"YulIdentifier","src":"31891:9:19"}]},{"nodeType":"YulVariableDeclaration","src":"31940:74:19","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"32004:9:19"}],"functionName":{"name":"extract_from_storage_value_offset_0t_uint32","nodeType":"YulIdentifier","src":"31960:43:19"},"nodeType":"YulFunctionCall","src":"31960:54:19"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"31944:12:19","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"32059:12:19"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32077:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"32082:4:19","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32073:3:19"},"nodeType":"YulFunctionCall","src":"32073:14:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulIdentifier","src":"32027:31:19"},"nodeType":"YulFunctionCall","src":"32027:61:19"},"nodeType":"YulExpressionStatement","src":"32027:61:19"}]},{"nodeType":"YulBlock","src":"32108:219:19","statements":[{"nodeType":"YulVariableDeclaration","src":"32169:74:19","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"32233:9:19"}],"functionName":{"name":"extract_from_storage_value_offset_4t_uint32","nodeType":"YulIdentifier","src":"32189:43:19"},"nodeType":"YulFunctionCall","src":"32189:54:19"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"32173:12:19","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"32288:12:19"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32306:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"32311:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32302:3:19"},"nodeType":"YulFunctionCall","src":"32302:14:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulIdentifier","src":"32256:31:19"},"nodeType":"YulFunctionCall","src":"32256:61:19"},"nodeType":"YulExpressionStatement","src":"32256:61:19"}]},{"nodeType":"YulBlock","src":"32337:219:19","statements":[{"nodeType":"YulVariableDeclaration","src":"32398:74:19","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"32462:9:19"}],"functionName":{"name":"extract_from_storage_value_offset_8t_uint32","nodeType":"YulIdentifier","src":"32418:43:19"},"nodeType":"YulFunctionCall","src":"32418:54:19"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"32402:12:19","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"32517:12:19"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32535:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"32540:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32531:3:19"},"nodeType":"YulFunctionCall","src":"32531:14:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulIdentifier","src":"32485:31:19"},"nodeType":"YulFunctionCall","src":"32485:61:19"},"nodeType":"YulExpressionStatement","src":"32485:61:19"}]},{"nodeType":"YulBlock","src":"32566:220:19","statements":[{"nodeType":"YulVariableDeclaration","src":"32627:75:19","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"32692:9:19"}],"functionName":{"name":"extract_from_storage_value_offset_12t_uint32","nodeType":"YulIdentifier","src":"32647:44:19"},"nodeType":"YulFunctionCall","src":"32647:55:19"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"32631:12:19","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"32747:12:19"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32765:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"32770:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32761:3:19"},"nodeType":"YulFunctionCall","src":"32761:14:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulIdentifier","src":"32715:31:19"},"nodeType":"YulFunctionCall","src":"32715:61:19"},"nodeType":"YulExpressionStatement","src":"32715:61:19"}]},{"nodeType":"YulBlock","src":"32796:220:19","statements":[{"nodeType":"YulVariableDeclaration","src":"32857:75:19","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"32922:9:19"}],"functionName":{"name":"extract_from_storage_value_offset_16t_uint32","nodeType":"YulIdentifier","src":"32877:44:19"},"nodeType":"YulFunctionCall","src":"32877:55:19"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"32861:12:19","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"32977:12:19"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32995:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"33000:4:19","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32991:3:19"},"nodeType":"YulFunctionCall","src":"32991:14:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulIdentifier","src":"32945:31:19"},"nodeType":"YulFunctionCall","src":"32945:61:19"},"nodeType":"YulExpressionStatement","src":"32945:61:19"}]},{"nodeType":"YulBlock","src":"33026:202:19","statements":[{"nodeType":"YulVariableDeclaration","src":"33069:75:19","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"33134:9:19"}],"functionName":{"name":"extract_from_storage_value_offset_20t_uint24","nodeType":"YulIdentifier","src":"33089:44:19"},"nodeType":"YulFunctionCall","src":"33089:55:19"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"33073:12:19","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"33189:12:19"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33207:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"33212:4:19","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33203:3:19"},"nodeType":"YulFunctionCall","src":"33203:14:19"}],"functionName":{"name":"abi_encode_t_uint24_to_t_uint24","nodeType":"YulIdentifier","src":"33157:31:19"},"nodeType":"YulFunctionCall","src":"33157:61:19"},"nodeType":"YulExpressionStatement","src":"33157:61:19"}]},{"nodeType":"YulBlock","src":"33238:202:19","statements":[{"nodeType":"YulVariableDeclaration","src":"33281:75:19","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"33346:9:19"}],"functionName":{"name":"extract_from_storage_value_offset_23t_uint24","nodeType":"YulIdentifier","src":"33301:44:19"},"nodeType":"YulFunctionCall","src":"33301:55:19"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"33285:12:19","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"33401:12:19"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33419:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"33424:4:19","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33415:3:19"},"nodeType":"YulFunctionCall","src":"33415:14:19"}],"functionName":{"name":"abi_encode_t_uint24_to_t_uint24","nodeType":"YulIdentifier","src":"33369:31:19"},"nodeType":"YulFunctionCall","src":"33369:61:19"},"nodeType":"YulExpressionStatement","src":"33369:61:19"}]},{"nodeType":"YulBlock","src":"33450:202:19","statements":[{"nodeType":"YulVariableDeclaration","src":"33493:75:19","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"33558:9:19"}],"functionName":{"name":"extract_from_storage_value_offset_26t_uint24","nodeType":"YulIdentifier","src":"33513:44:19"},"nodeType":"YulFunctionCall","src":"33513:55:19"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"33497:12:19","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"33613:12:19"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33631:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"33636:4:19","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33627:3:19"},"nodeType":"YulFunctionCall","src":"33627:14:19"}],"functionName":{"name":"abi_encode_t_uint24_to_t_uint24","nodeType":"YulIdentifier","src":"33581:31:19"},"nodeType":"YulFunctionCall","src":"33581:61:19"},"nodeType":"YulExpressionStatement","src":"33581:61:19"}]},{"nodeType":"YulBlock","src":"33662:204:19","statements":[{"nodeType":"YulVariableDeclaration","src":"33705:75:19","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"33770:9:19"}],"functionName":{"name":"extract_from_storage_value_offset_29t_uint24","nodeType":"YulIdentifier","src":"33725:44:19"},"nodeType":"YulFunctionCall","src":"33725:55:19"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"33709:12:19","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"33825:12:19"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33843:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"33848:6:19","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33839:3:19"},"nodeType":"YulFunctionCall","src":"33839:16:19"}],"functionName":{"name":"abi_encode_t_uint24_to_t_uint24","nodeType":"YulIdentifier","src":"33793:31:19"},"nodeType":"YulFunctionCall","src":"33793:63:19"},"nodeType":"YulExpressionStatement","src":"33793:63:19"}]}]},"name":"abi_encode_t_struct$_FeeConfig_$2780_storage_to_t_struct$_FeeConfig_$2780_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31743:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"31750:3:19","type":""}],"src":"31639:2234:19"},{"body":{"nodeType":"YulBlock","src":"33942:52:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33959:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33981:5:19"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"33964:16:19"},"nodeType":"YulFunctionCall","src":"33964:23:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33952:6:19"},"nodeType":"YulFunctionCall","src":"33952:36:19"},"nodeType":"YulExpressionStatement","src":"33952:36:19"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33930:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"33937:3:19","type":""}],"src":"33879:115:19"},{"body":{"nodeType":"YulBlock","src":"34053:52:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34070:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34092:5:19"}],"functionName":{"name":"cleanup_t_uint24","nodeType":"YulIdentifier","src":"34075:16:19"},"nodeType":"YulFunctionCall","src":"34075:23:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34063:6:19"},"nodeType":"YulFunctionCall","src":"34063:36:19"},"nodeType":"YulExpressionStatement","src":"34063:36:19"}]},"name":"abi_encode_t_uint24_to_t_uint24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34041:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"34048:3:19","type":""}],"src":"34000:105:19"},{"body":{"nodeType":"YulBlock","src":"34174:52:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34191:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34213:5:19"}],"functionName":{"name":"cleanup_t_uint24","nodeType":"YulIdentifier","src":"34196:16:19"},"nodeType":"YulFunctionCall","src":"34196:23:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34184:6:19"},"nodeType":"YulFunctionCall","src":"34184:36:19"},"nodeType":"YulExpressionStatement","src":"34184:36:19"}]},"name":"abi_encode_t_uint24_to_t_uint24_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34162:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"34169:3:19","type":""}],"src":"34111:115:19"},{"body":{"nodeType":"YulBlock","src":"34287:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34304:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34327:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34309:17:19"},"nodeType":"YulFunctionCall","src":"34309:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34297:6:19"},"nodeType":"YulFunctionCall","src":"34297:37:19"},"nodeType":"YulExpressionStatement","src":"34297:37:19"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34275:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"34282:3:19","type":""}],"src":"34232:108:19"},{"body":{"nodeType":"YulBlock","src":"34411:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34428:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34451:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34433:17:19"},"nodeType":"YulFunctionCall","src":"34433:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34421:6:19"},"nodeType":"YulFunctionCall","src":"34421:37:19"},"nodeType":"YulExpressionStatement","src":"34421:37:19"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34399:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"34406:3:19","type":""}],"src":"34346:118:19"},{"body":{"nodeType":"YulBlock","src":"34533:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34550:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34573:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34555:17:19"},"nodeType":"YulFunctionCall","src":"34555:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34543:6:19"},"nodeType":"YulFunctionCall","src":"34543:37:19"},"nodeType":"YulExpressionStatement","src":"34543:37:19"}]},"name":"abi_encode_t_uint256_to_t_uint256_inplace","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34521:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"34528:3:19","type":""}],"src":"34470:116:19"},{"body":{"nodeType":"YulBlock","src":"34675:74:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34692:3:19"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34735:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34717:17:19"},"nodeType":"YulFunctionCall","src":"34717:24:19"}],"functionName":{"name":"leftAlign_t_uint256","nodeType":"YulIdentifier","src":"34697:19:19"},"nodeType":"YulFunctionCall","src":"34697:45:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34685:6:19"},"nodeType":"YulFunctionCall","src":"34685:58:19"},"nodeType":"YulExpressionStatement","src":"34685:58:19"}]},"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34663:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"34670:3:19","type":""}],"src":"34592:157:19"},{"body":{"nodeType":"YulBlock","src":"34808:52:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34825:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34847:5:19"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"34830:16:19"},"nodeType":"YulFunctionCall","src":"34830:23:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34818:6:19"},"nodeType":"YulFunctionCall","src":"34818:36:19"},"nodeType":"YulExpressionStatement","src":"34818:36:19"}]},"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34796:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"34803:3:19","type":""}],"src":"34755:105:19"},{"body":{"nodeType":"YulBlock","src":"34929:52:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34946:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34968:5:19"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"34951:16:19"},"nodeType":"YulFunctionCall","src":"34951:23:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34939:6:19"},"nodeType":"YulFunctionCall","src":"34939:36:19"},"nodeType":"YulExpressionStatement","src":"34939:36:19"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34917:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"34924:3:19","type":""}],"src":"34866:115:19"},{"body":{"nodeType":"YulBlock","src":"35051:65:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35068:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35103:5:19"}],"functionName":{"name":"convert_t_uint64_to_t_uint256","nodeType":"YulIdentifier","src":"35073:29:19"},"nodeType":"YulFunctionCall","src":"35073:36:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35061:6:19"},"nodeType":"YulFunctionCall","src":"35061:49:19"},"nodeType":"YulExpressionStatement","src":"35061:49:19"}]},"name":"abi_encode_t_uint64_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35039:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"35046:3:19","type":""}],"src":"34987:129:19"},{"body":{"nodeType":"YulBlock","src":"35185:52:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35202:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35224:5:19"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"35207:16:19"},"nodeType":"YulFunctionCall","src":"35207:23:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35195:6:19"},"nodeType":"YulFunctionCall","src":"35195:36:19"},"nodeType":"YulExpressionStatement","src":"35195:36:19"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35173:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"35180:3:19","type":""}],"src":"35122:115:19"},{"body":{"nodeType":"YulBlock","src":"35304:51:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35321:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35342:5:19"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"35326:15:19"},"nodeType":"YulFunctionCall","src":"35326:22:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35314:6:19"},"nodeType":"YulFunctionCall","src":"35314:35:19"},"nodeType":"YulExpressionStatement","src":"35314:35:19"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35292:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"35299:3:19","type":""}],"src":"35243:112:19"},{"body":{"nodeType":"YulBlock","src":"35425:65:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35442:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35477:5:19"}],"functionName":{"name":"convert_t_uint96_to_t_uint256","nodeType":"YulIdentifier","src":"35447:29:19"},"nodeType":"YulFunctionCall","src":"35447:36:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35435:6:19"},"nodeType":"YulFunctionCall","src":"35435:49:19"},"nodeType":"YulExpressionStatement","src":"35435:49:19"}]},"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35413:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"35420:3:19","type":""}],"src":"35361:129:19"},{"body":{"nodeType":"YulBlock","src":"35559:52:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35576:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35598:5:19"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"35581:16:19"},"nodeType":"YulFunctionCall","src":"35581:23:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35569:6:19"},"nodeType":"YulFunctionCall","src":"35569:36:19"},"nodeType":"YulExpressionStatement","src":"35569:36:19"}]},"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35547:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"35554:3:19","type":""}],"src":"35496:115:19"},{"body":{"nodeType":"YulBlock","src":"35779:186:19","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"35898:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"35907:3:19"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"35790:107:19"},"nodeType":"YulFunctionCall","src":"35790:121:19"},"nodeType":"YulExpressionStatement","src":"35790:121:19"},{"nodeType":"YulAssignment","src":"35920:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35931:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"35936:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35927:3:19"},"nodeType":"YulFunctionCall","src":"35927:12:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35920:3:19"}]},{"nodeType":"YulAssignment","src":"35949:10:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"35956:3:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35949:3:19"}]}]},"name":"abi_encode_tuple_packed_t_array$_t_uint256_$2_memory_ptr__to_t_array$_t_uint256_$2_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35758:3:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"35764:6:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35775:3:19","type":""}],"src":"35617:348:19"},{"body":{"nodeType":"YulBlock","src":"36151:247:19","statements":[{"nodeType":"YulAssignment","src":"36162:100:19","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"36249:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"36258:3:19"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36169:79:19"},"nodeType":"YulFunctionCall","src":"36169:93:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36162:3:19"}]},{"nodeType":"YulAssignment","src":"36272:100:19","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"36359:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"36368:3:19"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36279:79:19"},"nodeType":"YulFunctionCall","src":"36279:93:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36272:3:19"}]},{"nodeType":"YulAssignment","src":"36382:10:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"36389:3:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36382:3:19"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36122:3:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"36128:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36136:6:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36147:3:19","type":""}],"src":"35971:427:19"},{"body":{"nodeType":"YulBlock","src":"36520:140:19","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"36593:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"36602:3:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36531:61:19"},"nodeType":"YulFunctionCall","src":"36531:75:19"},"nodeType":"YulExpressionStatement","src":"36531:75:19"},{"nodeType":"YulAssignment","src":"36615:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36626:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"36631:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36622:3:19"},"nodeType":"YulFunctionCall","src":"36622:12:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36615:3:19"}]},{"nodeType":"YulAssignment","src":"36644:10:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"36651:3:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36644:3:19"}]}]},"name":"abi_encode_tuple_packed_t_uint256__to_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36499:3:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36505:6:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36516:3:19","type":""}],"src":"36404:256:19"},{"body":{"nodeType":"YulBlock","src":"37106:889:19","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"37179:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"37188:3:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"37117:61:19"},"nodeType":"YulFunctionCall","src":"37117:75:19"},"nodeType":"YulExpressionStatement","src":"37117:75:19"},{"nodeType":"YulAssignment","src":"37201:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37212:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"37217:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37208:3:19"},"nodeType":"YulFunctionCall","src":"37208:12:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37201:3:19"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"37338:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"37347:3:19"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"37230:107:19"},"nodeType":"YulFunctionCall","src":"37230:121:19"},"nodeType":"YulExpressionStatement","src":"37230:121:19"},{"nodeType":"YulAssignment","src":"37360:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37371:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"37376:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37367:3:19"},"nodeType":"YulFunctionCall","src":"37367:12:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37360:3:19"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"37497:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"37506:3:19"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"37389:107:19"},"nodeType":"YulFunctionCall","src":"37389:121:19"},"nodeType":"YulExpressionStatement","src":"37389:121:19"},{"nodeType":"YulAssignment","src":"37519:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37530:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"37535:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37526:3:19"},"nodeType":"YulFunctionCall","src":"37526:12:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37519:3:19"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"37656:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"37665:3:19"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"37548:107:19"},"nodeType":"YulFunctionCall","src":"37548:121:19"},"nodeType":"YulExpressionStatement","src":"37548:121:19"},{"nodeType":"YulAssignment","src":"37678:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37689:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"37694:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37685:3:19"},"nodeType":"YulFunctionCall","src":"37685:12:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37678:3:19"}]},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"37815:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"37824:3:19"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"37707:107:19"},"nodeType":"YulFunctionCall","src":"37707:121:19"},"nodeType":"YulExpressionStatement","src":"37707:121:19"},{"nodeType":"YulAssignment","src":"37837:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37848:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"37853:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37844:3:19"},"nodeType":"YulFunctionCall","src":"37844:12:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37837:3:19"}]},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"37928:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"37937:3:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"37866:61:19"},"nodeType":"YulFunctionCall","src":"37866:75:19"},"nodeType":"YulExpressionStatement","src":"37866:75:19"},{"nodeType":"YulAssignment","src":"37950:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37961:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"37966:2:19","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37957:3:19"},"nodeType":"YulFunctionCall","src":"37957:12:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37950:3:19"}]},{"nodeType":"YulAssignment","src":"37979:10:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"37986:3:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37979:3:19"}]}]},"name":"abi_encode_tuple_packed_t_uint256_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_address__to_t_uint256_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37045:3:19","type":""},{"name":"value5","nodeType":"YulTypedName","src":"37051:6:19","type":""},{"name":"value4","nodeType":"YulTypedName","src":"37059:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"37067:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"37075:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"37083:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"37091:6:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37102:3:19","type":""}],"src":"36666:1329:19"},{"body":{"nodeType":"YulBlock","src":"38219:412:19","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"38292:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"38301:3:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"38230:61:19"},"nodeType":"YulFunctionCall","src":"38230:75:19"},"nodeType":"YulExpressionStatement","src":"38230:75:19"},{"nodeType":"YulAssignment","src":"38314:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38325:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"38330:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38321:3:19"},"nodeType":"YulFunctionCall","src":"38321:12:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38314:3:19"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"38451:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"38460:3:19"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"38343:107:19"},"nodeType":"YulFunctionCall","src":"38343:121:19"},"nodeType":"YulExpressionStatement","src":"38343:121:19"},{"nodeType":"YulAssignment","src":"38473:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38484:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"38489:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38480:3:19"},"nodeType":"YulFunctionCall","src":"38480:12:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38473:3:19"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"38564:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"38573:3:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"38502:61:19"},"nodeType":"YulFunctionCall","src":"38502:75:19"},"nodeType":"YulExpressionStatement","src":"38502:75:19"},{"nodeType":"YulAssignment","src":"38586:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38597:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"38602:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38593:3:19"},"nodeType":"YulFunctionCall","src":"38593:12:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38586:3:19"}]},{"nodeType":"YulAssignment","src":"38615:10:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"38622:3:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38615:3:19"}]}]},"name":"abi_encode_tuple_packed_t_uint256_t_array$_t_uint256_$2_memory_ptr_t_uint256__to_t_uint256_t_array$_t_uint256_$2_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38182:3:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"38188:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"38196:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"38204:6:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38215:3:19","type":""}],"src":"38001:630:19"},{"body":{"nodeType":"YulBlock","src":"38781:253:19","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"38854:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"38863:3:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"38792:61:19"},"nodeType":"YulFunctionCall","src":"38792:75:19"},"nodeType":"YulExpressionStatement","src":"38792:75:19"},{"nodeType":"YulAssignment","src":"38876:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38887:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"38892:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38883:3:19"},"nodeType":"YulFunctionCall","src":"38883:12:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38876:3:19"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"38967:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"38976:3:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"38905:61:19"},"nodeType":"YulFunctionCall","src":"38905:75:19"},"nodeType":"YulExpressionStatement","src":"38905:75:19"},{"nodeType":"YulAssignment","src":"38989:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39000:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"39005:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38996:3:19"},"nodeType":"YulFunctionCall","src":"38996:12:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38989:3:19"}]},{"nodeType":"YulAssignment","src":"39018:10:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"39025:3:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39018:3:19"}]}]},"name":"abi_encode_tuple_packed_t_uint256_t_bytes32__to_t_uint256_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38752:3:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"38758:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"38766:6:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38777:3:19","type":""}],"src":"38637:397:19"},{"body":{"nodeType":"YulBlock","src":"39138:124:19","statements":[{"nodeType":"YulAssignment","src":"39148:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39160:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"39171:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39156:3:19"},"nodeType":"YulFunctionCall","src":"39156:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39148:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"39228:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39241:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"39252:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39237:3:19"},"nodeType":"YulFunctionCall","src":"39237:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"39184:43:19"},"nodeType":"YulFunctionCall","src":"39184:71:19"},"nodeType":"YulExpressionStatement","src":"39184:71:19"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39110:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"39122:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39133:4:19","type":""}],"src":"39040:222:19"},{"body":{"nodeType":"YulBlock","src":"39394:206:19","statements":[{"nodeType":"YulAssignment","src":"39404:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39416:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"39427:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39412:3:19"},"nodeType":"YulFunctionCall","src":"39412:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39404:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"39484:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39497:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"39508:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39493:3:19"},"nodeType":"YulFunctionCall","src":"39493:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"39440:43:19"},"nodeType":"YulFunctionCall","src":"39440:71:19"},"nodeType":"YulExpressionStatement","src":"39440:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"39565:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39578:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"39589:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39574:3:19"},"nodeType":"YulFunctionCall","src":"39574:18:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"39521:43:19"},"nodeType":"YulFunctionCall","src":"39521:72:19"},"nodeType":"YulExpressionStatement","src":"39521:72:19"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39358:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"39370:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"39378:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39389:4:19","type":""}],"src":"39268:332:19"},{"body":{"nodeType":"YulBlock","src":"39732:206:19","statements":[{"nodeType":"YulAssignment","src":"39742:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39754:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"39765:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39750:3:19"},"nodeType":"YulFunctionCall","src":"39750:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39742:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"39822:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39835:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"39846:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39831:3:19"},"nodeType":"YulFunctionCall","src":"39831:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"39778:43:19"},"nodeType":"YulFunctionCall","src":"39778:71:19"},"nodeType":"YulExpressionStatement","src":"39778:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"39903:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39916:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"39927:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39912:3:19"},"nodeType":"YulFunctionCall","src":"39912:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"39859:43:19"},"nodeType":"YulFunctionCall","src":"39859:72:19"},"nodeType":"YulExpressionStatement","src":"39859:72:19"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39696:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"39708:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"39716:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39727:4:19","type":""}],"src":"39606:332:19"},{"body":{"nodeType":"YulBlock","src":"40069:205:19","statements":[{"nodeType":"YulAssignment","src":"40079:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40091:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"40102:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40087:3:19"},"nodeType":"YulFunctionCall","src":"40087:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40079:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"40159:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40172:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"40183:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40168:3:19"},"nodeType":"YulFunctionCall","src":"40168:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"40115:43:19"},"nodeType":"YulFunctionCall","src":"40115:71:19"},"nodeType":"YulExpressionStatement","src":"40115:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"40239:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40252:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"40263:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40248:3:19"},"nodeType":"YulFunctionCall","src":"40248:18:19"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"40196:42:19"},"nodeType":"YulFunctionCall","src":"40196:71:19"},"nodeType":"YulExpressionStatement","src":"40196:71:19"}]},"name":"abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40033:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"40045:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"40053:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40064:4:19","type":""}],"src":"39944:330:19"},{"body":{"nodeType":"YulBlock","src":"40424:170:19","statements":[{"nodeType":"YulAssignment","src":"40434:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40446:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"40457:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40442:3:19"},"nodeType":"YulFunctionCall","src":"40442:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40434:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"40560:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40573:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"40584:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40569:3:19"},"nodeType":"YulFunctionCall","src":"40569:17:19"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40470:89:19"},"nodeType":"YulFunctionCall","src":"40470:117:19"},"nodeType":"YulExpressionStatement","src":"40470:117:19"}]},"name":"abi_encode_tuple_t_array$_t_uint256_$2_memory_ptr__to_t_array$_t_uint256_$2_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40396:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"40408:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40419:4:19","type":""}],"src":"40280:314:19"},{"body":{"nodeType":"YulBlock","src":"40692:118:19","statements":[{"nodeType":"YulAssignment","src":"40702:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40714:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"40725:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40710:3:19"},"nodeType":"YulFunctionCall","src":"40710:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40702:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"40776:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40789:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"40800:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40785:3:19"},"nodeType":"YulFunctionCall","src":"40785:17:19"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"40738:37:19"},"nodeType":"YulFunctionCall","src":"40738:65:19"},"nodeType":"YulExpressionStatement","src":"40738:65:19"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40664:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"40676:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40687:4:19","type":""}],"src":"40600:210:19"},{"body":{"nodeType":"YulBlock","src":"40914:124:19","statements":[{"nodeType":"YulAssignment","src":"40924:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40936:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"40947:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40932:3:19"},"nodeType":"YulFunctionCall","src":"40932:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40924:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"41004:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41017:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"41028:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41013:3:19"},"nodeType":"YulFunctionCall","src":"41013:17:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"40960:43:19"},"nodeType":"YulFunctionCall","src":"40960:71:19"},"nodeType":"YulExpressionStatement","src":"40960:71:19"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40886:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"40898:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40909:4:19","type":""}],"src":"40816:222:19"},{"body":{"nodeType":"YulBlock","src":"41222:367:19","statements":[{"nodeType":"YulAssignment","src":"41232:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41244:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"41255:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41240:3:19"},"nodeType":"YulFunctionCall","src":"41240:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41232:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"41313:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41326:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"41337:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41322:3:19"},"nodeType":"YulFunctionCall","src":"41322:17:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"41269:43:19"},"nodeType":"YulFunctionCall","src":"41269:71:19"},"nodeType":"YulExpressionStatement","src":"41269:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"41394:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41407:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"41418:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41403:3:19"},"nodeType":"YulFunctionCall","src":"41403:18:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"41350:43:19"},"nodeType":"YulFunctionCall","src":"41350:72:19"},"nodeType":"YulExpressionStatement","src":"41350:72:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"41474:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41487:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"41498:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41483:3:19"},"nodeType":"YulFunctionCall","src":"41483:18:19"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"41432:41:19"},"nodeType":"YulFunctionCall","src":"41432:70:19"},"nodeType":"YulExpressionStatement","src":"41432:70:19"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"41554:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41567:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"41578:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41563:3:19"},"nodeType":"YulFunctionCall","src":"41563:18:19"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"41512:41:19"},"nodeType":"YulFunctionCall","src":"41512:70:19"},"nodeType":"YulExpressionStatement","src":"41512:70:19"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_uint64_t_uint64__to_t_bytes32_t_address_t_uint64_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41170:9:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"41182:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"41190:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"41198:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"41206:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41217:4:19","type":""}],"src":"41044:545:19"},{"body":{"nodeType":"YulBlock","src":"41721:206:19","statements":[{"nodeType":"YulAssignment","src":"41731:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41743:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"41754:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41739:3:19"},"nodeType":"YulFunctionCall","src":"41739:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41731:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"41811:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41824:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"41835:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41820:3:19"},"nodeType":"YulFunctionCall","src":"41820:17:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"41767:43:19"},"nodeType":"YulFunctionCall","src":"41767:71:19"},"nodeType":"YulExpressionStatement","src":"41767:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"41892:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41905:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"41916:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41901:3:19"},"nodeType":"YulFunctionCall","src":"41901:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"41848:43:19"},"nodeType":"YulFunctionCall","src":"41848:72:19"},"nodeType":"YulExpressionStatement","src":"41848:72:19"}]},"name":"abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41685:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"41697:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"41705:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41716:4:19","type":""}],"src":"41595:332:19"},{"body":{"nodeType":"YulBlock","src":"42111:367:19","statements":[{"nodeType":"YulAssignment","src":"42121:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42133:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"42144:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42129:3:19"},"nodeType":"YulFunctionCall","src":"42129:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42121:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"42202:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42215:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"42226:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42211:3:19"},"nodeType":"YulFunctionCall","src":"42211:17:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"42158:43:19"},"nodeType":"YulFunctionCall","src":"42158:71:19"},"nodeType":"YulExpressionStatement","src":"42158:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"42279:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42292:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"42303:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42288:3:19"},"nodeType":"YulFunctionCall","src":"42288:18:19"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"42239:39:19"},"nodeType":"YulFunctionCall","src":"42239:68:19"},"nodeType":"YulExpressionStatement","src":"42239:68:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"42361:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42374:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"42385:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42370:3:19"},"nodeType":"YulFunctionCall","src":"42370:18:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"42317:43:19"},"nodeType":"YulFunctionCall","src":"42317:72:19"},"nodeType":"YulExpressionStatement","src":"42317:72:19"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"42443:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42456:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"42467:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42452:3:19"},"nodeType":"YulFunctionCall","src":"42452:18:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"42399:43:19"},"nodeType":"YulFunctionCall","src":"42399:72:19"},"nodeType":"YulExpressionStatement","src":"42399:72:19"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42059:9:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"42071:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"42079:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"42087:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"42095:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42106:4:19","type":""}],"src":"41933:545:19"},{"body":{"nodeType":"YulBlock","src":"42600:193:19","statements":[{"nodeType":"YulAssignment","src":"42610:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42622:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"42633:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42618:3:19"},"nodeType":"YulFunctionCall","src":"42618:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42610:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42657:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"42668:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42653:3:19"},"nodeType":"YulFunctionCall","src":"42653:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42676:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"42682:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"42672:3:19"},"nodeType":"YulFunctionCall","src":"42672:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42646:6:19"},"nodeType":"YulFunctionCall","src":"42646:47:19"},"nodeType":"YulExpressionStatement","src":"42646:47:19"},{"nodeType":"YulAssignment","src":"42702:84:19","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"42772:6:19"},{"name":"tail","nodeType":"YulIdentifier","src":"42781:4:19"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42710:61:19"},"nodeType":"YulFunctionCall","src":"42710:76:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42702:4:19"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42572:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"42584:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42595:4:19","type":""}],"src":"42484:309:19"},{"body":{"nodeType":"YulBlock","src":"42926:153:19","statements":[{"nodeType":"YulAssignment","src":"42936:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42948:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"42959:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42944:3:19"},"nodeType":"YulFunctionCall","src":"42944:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42936:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"43045:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43058:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"43069:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43054:3:19"},"nodeType":"YulFunctionCall","src":"43054:17:19"}],"functionName":{"name":"abi_encode_t_contract$_AggregatorV3Interface_$590_to_t_address_fromStack","nodeType":"YulIdentifier","src":"42972:72:19"},"nodeType":"YulFunctionCall","src":"42972:100:19"},"nodeType":"YulExpressionStatement","src":"42972:100:19"}]},"name":"abi_encode_tuple_t_contract$_AggregatorV3Interface_$590__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42898:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"42910:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42921:4:19","type":""}],"src":"42799:280:19"},{"body":{"nodeType":"YulBlock","src":"43215:156:19","statements":[{"nodeType":"YulAssignment","src":"43225:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43237:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"43248:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43233:3:19"},"nodeType":"YulFunctionCall","src":"43233:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43225:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"43337:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43350:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"43361:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43346:3:19"},"nodeType":"YulFunctionCall","src":"43346:17:19"}],"functionName":{"name":"abi_encode_t_contract$_BlockhashStoreInterface_$4786_to_t_address_fromStack","nodeType":"YulIdentifier","src":"43261:75:19"},"nodeType":"YulFunctionCall","src":"43261:103:19"},"nodeType":"YulExpressionStatement","src":"43261:103:19"}]},"name":"abi_encode_tuple_t_contract$_BlockhashStoreInterface_$4786__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43187:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"43199:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43210:4:19","type":""}],"src":"43085:286:19"},{"body":{"nodeType":"YulBlock","src":"43501:150:19","statements":[{"nodeType":"YulAssignment","src":"43511:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43523:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"43534:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43519:3:19"},"nodeType":"YulFunctionCall","src":"43519:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43511:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"43617:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43630:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"43641:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43626:3:19"},"nodeType":"YulFunctionCall","src":"43626:17:19"}],"functionName":{"name":"abi_encode_t_contract$_LinkTokenInterface_$713_to_t_address_fromStack","nodeType":"YulIdentifier","src":"43547:69:19"},"nodeType":"YulFunctionCall","src":"43547:97:19"},"nodeType":"YulExpressionStatement","src":"43547:97:19"}]},"name":"abi_encode_tuple_t_contract$_LinkTokenInterface_$713__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43473:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"43485:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43496:4:19","type":""}],"src":"43377:274:19"},{"body":{"nodeType":"YulBlock","src":"43753:122:19","statements":[{"nodeType":"YulAssignment","src":"43763:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43775:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"43786:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43771:3:19"},"nodeType":"YulFunctionCall","src":"43771:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43763:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"43841:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43854:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"43865:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43850:3:19"},"nodeType":"YulFunctionCall","src":"43850:17:19"}],"functionName":{"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulIdentifier","src":"43799:41:19"},"nodeType":"YulFunctionCall","src":"43799:69:19"},"nodeType":"YulExpressionStatement","src":"43799:69:19"}]},"name":"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43725:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"43737:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43748:4:19","type":""}],"src":"43657:218:19"},{"body":{"nodeType":"YulBlock","src":"43999:195:19","statements":[{"nodeType":"YulAssignment","src":"44009:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44021:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"44032:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44017:3:19"},"nodeType":"YulFunctionCall","src":"44017:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44009:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44056:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"44067:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44052:3:19"},"nodeType":"YulFunctionCall","src":"44052:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44075:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"44081:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44071:3:19"},"nodeType":"YulFunctionCall","src":"44071:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44045:6:19"},"nodeType":"YulFunctionCall","src":"44045:47:19"},"nodeType":"YulExpressionStatement","src":"44045:47:19"},{"nodeType":"YulAssignment","src":"44101:86:19","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"44173:6:19"},{"name":"tail","nodeType":"YulIdentifier","src":"44182:4:19"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44109:63:19"},"nodeType":"YulFunctionCall","src":"44109:78:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44101:4:19"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43971:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"43983:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43994:4:19","type":""}],"src":"43881:313:19"},{"body":{"nodeType":"YulBlock","src":"44371:248:19","statements":[{"nodeType":"YulAssignment","src":"44381:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44393:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"44404:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44389:3:19"},"nodeType":"YulFunctionCall","src":"44389:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44381:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44428:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"44439:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44424:3:19"},"nodeType":"YulFunctionCall","src":"44424:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44447:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"44453:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44443:3:19"},"nodeType":"YulFunctionCall","src":"44443:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44417:6:19"},"nodeType":"YulFunctionCall","src":"44417:47:19"},"nodeType":"YulExpressionStatement","src":"44417:47:19"},{"nodeType":"YulAssignment","src":"44473:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44607:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44481:124:19"},"nodeType":"YulFunctionCall","src":"44481:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44473:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"44351:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"44366:4:19","type":""}],"src":"44200:419:19"},{"body":{"nodeType":"YulBlock","src":"44796:248:19","statements":[{"nodeType":"YulAssignment","src":"44806:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44818:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"44829:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44814:3:19"},"nodeType":"YulFunctionCall","src":"44814:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44806:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44853:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"44864:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44849:3:19"},"nodeType":"YulFunctionCall","src":"44849:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44872:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"44878:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44868:3:19"},"nodeType":"YulFunctionCall","src":"44868:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44842:6:19"},"nodeType":"YulFunctionCall","src":"44842:47:19"},"nodeType":"YulExpressionStatement","src":"44842:47:19"},{"nodeType":"YulAssignment","src":"44898:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45032:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_13447e9fa8630e4bb2fa50f1493aa790167933f55263568ac4ad74cb4d138234_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44906:124:19"},"nodeType":"YulFunctionCall","src":"44906:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44898:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_13447e9fa8630e4bb2fa50f1493aa790167933f55263568ac4ad74cb4d138234__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"44776:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"44791:4:19","type":""}],"src":"44625:419:19"},{"body":{"nodeType":"YulBlock","src":"45221:248:19","statements":[{"nodeType":"YulAssignment","src":"45231:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45243:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"45254:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45239:3:19"},"nodeType":"YulFunctionCall","src":"45239:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45231:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45278:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"45289:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45274:3:19"},"nodeType":"YulFunctionCall","src":"45274:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45297:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"45303:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"45293:3:19"},"nodeType":"YulFunctionCall","src":"45293:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45267:6:19"},"nodeType":"YulFunctionCall","src":"45267:47:19"},"nodeType":"YulExpressionStatement","src":"45267:47:19"},{"nodeType":"YulAssignment","src":"45323:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45457:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_2ce93c410880bb13bca91831655ee36bc7ab052e7c8cb24dd914165b1030eeca_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45331:124:19"},"nodeType":"YulFunctionCall","src":"45331:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45323:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_2ce93c410880bb13bca91831655ee36bc7ab052e7c8cb24dd914165b1030eeca__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45201:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"45216:4:19","type":""}],"src":"45050:419:19"},{"body":{"nodeType":"YulBlock","src":"45646:248:19","statements":[{"nodeType":"YulAssignment","src":"45656:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45668:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"45679:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45664:3:19"},"nodeType":"YulFunctionCall","src":"45664:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45656:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45703:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"45714:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45699:3:19"},"nodeType":"YulFunctionCall","src":"45699:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45722:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"45728:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"45718:3:19"},"nodeType":"YulFunctionCall","src":"45718:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45692:6:19"},"nodeType":"YulFunctionCall","src":"45692:47:19"},"nodeType":"YulExpressionStatement","src":"45692:47:19"},{"nodeType":"YulAssignment","src":"45748:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45882:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45756:124:19"},"nodeType":"YulFunctionCall","src":"45756:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45748:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45626:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"45641:4:19","type":""}],"src":"45475:419:19"},{"body":{"nodeType":"YulBlock","src":"46071:248:19","statements":[{"nodeType":"YulAssignment","src":"46081:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46093:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"46104:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46089:3:19"},"nodeType":"YulFunctionCall","src":"46089:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46081:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46128:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"46139:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46124:3:19"},"nodeType":"YulFunctionCall","src":"46124:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46147:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"46153:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"46143:3:19"},"nodeType":"YulFunctionCall","src":"46143:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46117:6:19"},"nodeType":"YulFunctionCall","src":"46117:47:19"},"nodeType":"YulExpressionStatement","src":"46117:47:19"},{"nodeType":"YulAssignment","src":"46173:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46307:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_4bd695d9be776d24ba6aaa6ea48a189f388adfd8a5e6a1df7bd6471290ea4e5f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46181:124:19"},"nodeType":"YulFunctionCall","src":"46181:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46173:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_4bd695d9be776d24ba6aaa6ea48a189f388adfd8a5e6a1df7bd6471290ea4e5f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46051:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"46066:4:19","type":""}],"src":"45900:419:19"},{"body":{"nodeType":"YulBlock","src":"46496:248:19","statements":[{"nodeType":"YulAssignment","src":"46506:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46518:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"46529:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46514:3:19"},"nodeType":"YulFunctionCall","src":"46514:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46506:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46553:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"46564:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46549:3:19"},"nodeType":"YulFunctionCall","src":"46549:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46572:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"46578:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"46568:3:19"},"nodeType":"YulFunctionCall","src":"46568:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46542:6:19"},"nodeType":"YulFunctionCall","src":"46542:47:19"},"nodeType":"YulExpressionStatement","src":"46542:47:19"},{"nodeType":"YulAssignment","src":"46598:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46732:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_787cf99fb194dba922561b5b1fd0b18a6a49c57eaa01d9c5279f2b2a5bdc1a86_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46606:124:19"},"nodeType":"YulFunctionCall","src":"46606:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46598:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_787cf99fb194dba922561b5b1fd0b18a6a49c57eaa01d9c5279f2b2a5bdc1a86__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46476:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"46491:4:19","type":""}],"src":"46325:419:19"},{"body":{"nodeType":"YulBlock","src":"46921:248:19","statements":[{"nodeType":"YulAssignment","src":"46931:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46943:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"46954:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46939:3:19"},"nodeType":"YulFunctionCall","src":"46939:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46931:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46978:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"46989:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46974:3:19"},"nodeType":"YulFunctionCall","src":"46974:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46997:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"47003:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"46993:3:19"},"nodeType":"YulFunctionCall","src":"46993:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46967:6:19"},"nodeType":"YulFunctionCall","src":"46967:47:19"},"nodeType":"YulExpressionStatement","src":"46967:47:19"},{"nodeType":"YulAssignment","src":"47023:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"47157:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_7fcbfa9df9f83be5218dd62480bcb5cdae56a970e549b88ff2403f5fcded9211_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"47031:124:19"},"nodeType":"YulFunctionCall","src":"47031:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47023:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_7fcbfa9df9f83be5218dd62480bcb5cdae56a970e549b88ff2403f5fcded9211__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46901:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"46916:4:19","type":""}],"src":"46750:419:19"},{"body":{"nodeType":"YulBlock","src":"47346:248:19","statements":[{"nodeType":"YulAssignment","src":"47356:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47368:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"47379:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47364:3:19"},"nodeType":"YulFunctionCall","src":"47364:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47356:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47403:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"47414:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47399:3:19"},"nodeType":"YulFunctionCall","src":"47399:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"47422:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"47428:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"47418:3:19"},"nodeType":"YulFunctionCall","src":"47418:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47392:6:19"},"nodeType":"YulFunctionCall","src":"47392:47:19"},"nodeType":"YulExpressionStatement","src":"47392:47:19"},{"nodeType":"YulAssignment","src":"47448:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"47582:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_897d9ab785e875f3b83c51a39f09c2f6a852e06c26e3faf90359e5ad589f8cf1_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"47456:124:19"},"nodeType":"YulFunctionCall","src":"47456:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47448:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_897d9ab785e875f3b83c51a39f09c2f6a852e06c26e3faf90359e5ad589f8cf1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"47326:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"47341:4:19","type":""}],"src":"47175:419:19"},{"body":{"nodeType":"YulBlock","src":"47771:248:19","statements":[{"nodeType":"YulAssignment","src":"47781:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47793:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"47804:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47789:3:19"},"nodeType":"YulFunctionCall","src":"47789:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47781:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47828:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"47839:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47824:3:19"},"nodeType":"YulFunctionCall","src":"47824:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"47847:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"47853:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"47843:3:19"},"nodeType":"YulFunctionCall","src":"47843:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47817:6:19"},"nodeType":"YulFunctionCall","src":"47817:47:19"},"nodeType":"YulExpressionStatement","src":"47817:47:19"},{"nodeType":"YulAssignment","src":"47873:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"48007:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_95046d93d9b2e6ba778cd180e8c682e7d907547386cb54bf80bca322c50144ca_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"47881:124:19"},"nodeType":"YulFunctionCall","src":"47881:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47873:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_95046d93d9b2e6ba778cd180e8c682e7d907547386cb54bf80bca322c50144ca__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"47751:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"47766:4:19","type":""}],"src":"47600:419:19"},{"body":{"nodeType":"YulBlock","src":"48196:248:19","statements":[{"nodeType":"YulAssignment","src":"48206:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48218:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"48229:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48214:3:19"},"nodeType":"YulFunctionCall","src":"48214:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"48206:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48253:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"48264:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48249:3:19"},"nodeType":"YulFunctionCall","src":"48249:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"48272:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"48278:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"48268:3:19"},"nodeType":"YulFunctionCall","src":"48268:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48242:6:19"},"nodeType":"YulFunctionCall","src":"48242:47:19"},"nodeType":"YulExpressionStatement","src":"48242:47:19"},{"nodeType":"YulAssignment","src":"48298:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"48432:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_9f90959a5b25997fe56cdafc2f72d300e298468f5ac5e847db7890be22108d2b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"48306:124:19"},"nodeType":"YulFunctionCall","src":"48306:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"48298:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_9f90959a5b25997fe56cdafc2f72d300e298468f5ac5e847db7890be22108d2b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"48176:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"48191:4:19","type":""}],"src":"48025:419:19"},{"body":{"nodeType":"YulBlock","src":"48621:248:19","statements":[{"nodeType":"YulAssignment","src":"48631:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48643:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"48654:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48639:3:19"},"nodeType":"YulFunctionCall","src":"48639:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"48631:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48678:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"48689:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48674:3:19"},"nodeType":"YulFunctionCall","src":"48674:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"48697:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"48703:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"48693:3:19"},"nodeType":"YulFunctionCall","src":"48693:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48667:6:19"},"nodeType":"YulFunctionCall","src":"48667:47:19"},"nodeType":"YulExpressionStatement","src":"48667:47:19"},{"nodeType":"YulAssignment","src":"48723:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"48857:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_ae4825d6ed8aab0513e68c27d2710aa68bcf110761c187d047951a5ec2580d8c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"48731:124:19"},"nodeType":"YulFunctionCall","src":"48731:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"48723:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_ae4825d6ed8aab0513e68c27d2710aa68bcf110761c187d047951a5ec2580d8c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"48601:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"48616:4:19","type":""}],"src":"48450:419:19"},{"body":{"nodeType":"YulBlock","src":"49046:248:19","statements":[{"nodeType":"YulAssignment","src":"49056:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49068:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"49079:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49064:3:19"},"nodeType":"YulFunctionCall","src":"49064:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"49056:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49103:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"49114:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49099:3:19"},"nodeType":"YulFunctionCall","src":"49099:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"49122:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"49128:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"49118:3:19"},"nodeType":"YulFunctionCall","src":"49118:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49092:6:19"},"nodeType":"YulFunctionCall","src":"49092:47:19"},"nodeType":"YulExpressionStatement","src":"49092:47:19"},{"nodeType":"YulAssignment","src":"49148:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"49282:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_c6038a70864418dbffbd772a49c391c3536f6b633b3f2ccbcd6a6e15dbadd34c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"49156:124:19"},"nodeType":"YulFunctionCall","src":"49156:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"49148:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6038a70864418dbffbd772a49c391c3536f6b633b3f2ccbcd6a6e15dbadd34c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49026:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"49041:4:19","type":""}],"src":"48875:419:19"},{"body":{"nodeType":"YulBlock","src":"49471:248:19","statements":[{"nodeType":"YulAssignment","src":"49481:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49493:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"49504:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49489:3:19"},"nodeType":"YulFunctionCall","src":"49489:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"49481:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49528:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"49539:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49524:3:19"},"nodeType":"YulFunctionCall","src":"49524:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"49547:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"49553:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"49543:3:19"},"nodeType":"YulFunctionCall","src":"49543:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49517:6:19"},"nodeType":"YulFunctionCall","src":"49517:47:19"},"nodeType":"YulExpressionStatement","src":"49517:47:19"},{"nodeType":"YulAssignment","src":"49573:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"49707:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"49581:124:19"},"nodeType":"YulFunctionCall","src":"49581:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"49573:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49451:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"49466:4:19","type":""}],"src":"49300:419:19"},{"body":{"nodeType":"YulBlock","src":"49896:248:19","statements":[{"nodeType":"YulAssignment","src":"49906:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49918:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"49929:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49914:3:19"},"nodeType":"YulFunctionCall","src":"49914:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"49906:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49953:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"49964:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49949:3:19"},"nodeType":"YulFunctionCall","src":"49949:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"49972:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"49978:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"49968:3:19"},"nodeType":"YulFunctionCall","src":"49968:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49942:6:19"},"nodeType":"YulFunctionCall","src":"49942:47:19"},"nodeType":"YulExpressionStatement","src":"49942:47:19"},{"nodeType":"YulAssignment","src":"49998:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"50132:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"50006:124:19"},"nodeType":"YulFunctionCall","src":"50006:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"49998:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49876:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"49891:4:19","type":""}],"src":"49725:419:19"},{"body":{"nodeType":"YulBlock","src":"50321:248:19","statements":[{"nodeType":"YulAssignment","src":"50331:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50343:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"50354:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50339:3:19"},"nodeType":"YulFunctionCall","src":"50339:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"50331:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50378:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"50389:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50374:3:19"},"nodeType":"YulFunctionCall","src":"50374:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"50397:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"50403:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"50393:3:19"},"nodeType":"YulFunctionCall","src":"50393:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50367:6:19"},"nodeType":"YulFunctionCall","src":"50367:47:19"},"nodeType":"YulExpressionStatement","src":"50367:47:19"},{"nodeType":"YulAssignment","src":"50423:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"50557:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_d9cf4c09fcc6ead19e539ee3210816df98f1219b8b47e830620ffd543bfea51f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"50431:124:19"},"nodeType":"YulFunctionCall","src":"50431:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"50423:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_d9cf4c09fcc6ead19e539ee3210816df98f1219b8b47e830620ffd543bfea51f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50301:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"50316:4:19","type":""}],"src":"50150:419:19"},{"body":{"nodeType":"YulBlock","src":"50746:248:19","statements":[{"nodeType":"YulAssignment","src":"50756:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50768:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"50779:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50764:3:19"},"nodeType":"YulFunctionCall","src":"50764:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"50756:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50803:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"50814:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50799:3:19"},"nodeType":"YulFunctionCall","src":"50799:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"50822:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"50828:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"50818:3:19"},"nodeType":"YulFunctionCall","src":"50818:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50792:6:19"},"nodeType":"YulFunctionCall","src":"50792:47:19"},"nodeType":"YulExpressionStatement","src":"50792:47:19"},{"nodeType":"YulAssignment","src":"50848:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"50982:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_e71e9381bf8fff7d9eeee436d182c3c8b982b1d416953f4ca9ccf572989baeca_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"50856:124:19"},"nodeType":"YulFunctionCall","src":"50856:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"50848:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_e71e9381bf8fff7d9eeee436d182c3c8b982b1d416953f4ca9ccf572989baeca__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50726:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"50741:4:19","type":""}],"src":"50575:419:19"},{"body":{"nodeType":"YulBlock","src":"51171:248:19","statements":[{"nodeType":"YulAssignment","src":"51181:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51193:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"51204:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51189:3:19"},"nodeType":"YulFunctionCall","src":"51189:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"51181:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51228:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"51239:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51224:3:19"},"nodeType":"YulFunctionCall","src":"51224:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"51247:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"51253:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"51243:3:19"},"nodeType":"YulFunctionCall","src":"51243:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51217:6:19"},"nodeType":"YulFunctionCall","src":"51217:47:19"},"nodeType":"YulExpressionStatement","src":"51217:47:19"},{"nodeType":"YulAssignment","src":"51273:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"51407:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_ecc598139057476f7e46578e2e254b173afe0910225980583669989d2a737f84_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"51281:124:19"},"nodeType":"YulFunctionCall","src":"51281:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"51273:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_ecc598139057476f7e46578e2e254b173afe0910225980583669989d2a737f84__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"51151:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"51166:4:19","type":""}],"src":"51000:419:19"},{"body":{"nodeType":"YulBlock","src":"51596:248:19","statements":[{"nodeType":"YulAssignment","src":"51606:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51618:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"51629:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51614:3:19"},"nodeType":"YulFunctionCall","src":"51614:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"51606:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51653:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"51664:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51649:3:19"},"nodeType":"YulFunctionCall","src":"51649:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"51672:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"51678:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"51668:3:19"},"nodeType":"YulFunctionCall","src":"51668:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51642:6:19"},"nodeType":"YulFunctionCall","src":"51642:47:19"},"nodeType":"YulExpressionStatement","src":"51642:47:19"},{"nodeType":"YulAssignment","src":"51698:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"51832:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_ff425c3ce65530e49c0c35a5fdd7a61b00545f1fcc6482c28903cdcf48ac624f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"51706:124:19"},"nodeType":"YulFunctionCall","src":"51706:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"51698:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_ff425c3ce65530e49c0c35a5fdd7a61b00545f1fcc6482c28903cdcf48ac624f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"51576:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"51591:4:19","type":""}],"src":"51425:419:19"},{"body":{"nodeType":"YulBlock","src":"51946:122:19","statements":[{"nodeType":"YulAssignment","src":"51956:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51968:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"51979:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51964:3:19"},"nodeType":"YulFunctionCall","src":"51964:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"51956:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"52034:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52047:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"52058:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52043:3:19"},"nodeType":"YulFunctionCall","src":"52043:17:19"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"51992:41:19"},"nodeType":"YulFunctionCall","src":"51992:69:19"},"nodeType":"YulExpressionStatement","src":"51992:69:19"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"51918:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"51930:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"51941:4:19","type":""}],"src":"51850:218:19"},{"body":{"nodeType":"YulBlock","src":"52222:282:19","statements":[{"nodeType":"YulAssignment","src":"52232:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52244:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"52255:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52240:3:19"},"nodeType":"YulFunctionCall","src":"52240:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"52232:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"52310:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52323:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"52334:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52319:3:19"},"nodeType":"YulFunctionCall","src":"52319:17:19"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"52268:41:19"},"nodeType":"YulFunctionCall","src":"52268:69:19"},"nodeType":"YulExpressionStatement","src":"52268:69:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"52389:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52402:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"52413:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52398:3:19"},"nodeType":"YulFunctionCall","src":"52398:18:19"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"52347:41:19"},"nodeType":"YulFunctionCall","src":"52347:70:19"},"nodeType":"YulExpressionStatement","src":"52347:70:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"52469:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52482:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"52493:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52478:3:19"},"nodeType":"YulFunctionCall","src":"52478:18:19"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"52427:41:19"},"nodeType":"YulFunctionCall","src":"52427:70:19"},"nodeType":"YulExpressionStatement","src":"52427:70:19"}]},"name":"abi_encode_tuple_t_uint16_t_uint16_t_uint16__to_t_uint16_t_uint16_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"52178:9:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"52190:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"52198:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"52206:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"52217:4:19","type":""}],"src":"52074:430:19"},{"body":{"nodeType":"YulBlock","src":"52710:385:19","statements":[{"nodeType":"YulAssignment","src":"52720:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52732:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"52743:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52728:3:19"},"nodeType":"YulFunctionCall","src":"52728:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"52720:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"52798:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52811:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"52822:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52807:3:19"},"nodeType":"YulFunctionCall","src":"52807:17:19"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"52756:41:19"},"nodeType":"YulFunctionCall","src":"52756:69:19"},"nodeType":"YulExpressionStatement","src":"52756:69:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"52877:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52890:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"52901:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52886:3:19"},"nodeType":"YulFunctionCall","src":"52886:18:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"52835:41:19"},"nodeType":"YulFunctionCall","src":"52835:70:19"},"nodeType":"YulExpressionStatement","src":"52835:70:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52926:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"52937:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52922:3:19"},"nodeType":"YulFunctionCall","src":"52922:18:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"52946:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"52952:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"52942:3:19"},"nodeType":"YulFunctionCall","src":"52942:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52915:6:19"},"nodeType":"YulFunctionCall","src":"52915:48:19"},"nodeType":"YulExpressionStatement","src":"52915:48:19"},{"nodeType":"YulAssignment","src":"52972:116:19","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"53074:6:19"},{"name":"tail","nodeType":"YulIdentifier","src":"53083:4:19"}],"functionName":{"name":"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"52980:93:19"},"nodeType":"YulFunctionCall","src":"52980:108:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"52972:4:19"}]}]},"name":"abi_encode_tuple_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__to_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"52666:9:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"52678:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"52686:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"52694:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"52705:4:19","type":""}],"src":"52510:585:19"},{"body":{"nodeType":"YulBlock","src":"53275:363:19","statements":[{"nodeType":"YulAssignment","src":"53285:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53297:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"53308:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53293:3:19"},"nodeType":"YulFunctionCall","src":"53293:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"53285:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"53364:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53377:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"53388:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53373:3:19"},"nodeType":"YulFunctionCall","src":"53373:17:19"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"53322:41:19"},"nodeType":"YulFunctionCall","src":"53322:69:19"},"nodeType":"YulExpressionStatement","src":"53322:69:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"53443:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53456:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"53467:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53452:3:19"},"nodeType":"YulFunctionCall","src":"53452:18:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"53401:41:19"},"nodeType":"YulFunctionCall","src":"53401:70:19"},"nodeType":"YulExpressionStatement","src":"53401:70:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"53523:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53536:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"53547:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53532:3:19"},"nodeType":"YulFunctionCall","src":"53532:18:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"53481:41:19"},"nodeType":"YulFunctionCall","src":"53481:70:19"},"nodeType":"YulExpressionStatement","src":"53481:70:19"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"53603:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53616:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"53627:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53612:3:19"},"nodeType":"YulFunctionCall","src":"53612:18:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"53561:41:19"},"nodeType":"YulFunctionCall","src":"53561:70:19"},"nodeType":"YulExpressionStatement","src":"53561:70:19"}]},"name":"abi_encode_tuple_t_uint16_t_uint32_t_uint32_t_uint32__to_t_uint16_t_uint32_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"53223:9:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"53235:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"53243:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"53251:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"53259:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"53270:4:19","type":""}],"src":"53101:537:19"},{"body":{"nodeType":"YulBlock","src":"53923:578:19","statements":[{"nodeType":"YulAssignment","src":"53933:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53945:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"53956:3:19","type":"","value":"448"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53941:3:19"},"nodeType":"YulFunctionCall","src":"53941:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"53933:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"54012:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54025:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"54036:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54021:3:19"},"nodeType":"YulFunctionCall","src":"54021:17:19"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"53970:41:19"},"nodeType":"YulFunctionCall","src":"53970:69:19"},"nodeType":"YulExpressionStatement","src":"53970:69:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"54091:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54104:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"54115:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54100:3:19"},"nodeType":"YulFunctionCall","src":"54100:18:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"54049:41:19"},"nodeType":"YulFunctionCall","src":"54049:70:19"},"nodeType":"YulExpressionStatement","src":"54049:70:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"54171:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54184:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"54195:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54180:3:19"},"nodeType":"YulFunctionCall","src":"54180:18:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"54129:41:19"},"nodeType":"YulFunctionCall","src":"54129:70:19"},"nodeType":"YulExpressionStatement","src":"54129:70:19"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"54251:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54264:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"54275:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54260:3:19"},"nodeType":"YulFunctionCall","src":"54260:18:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"54209:41:19"},"nodeType":"YulFunctionCall","src":"54209:70:19"},"nodeType":"YulExpressionStatement","src":"54209:70:19"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"54331:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54344:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"54355:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54340:3:19"},"nodeType":"YulFunctionCall","src":"54340:19:19"}],"functionName":{"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulIdentifier","src":"54289:41:19"},"nodeType":"YulFunctionCall","src":"54289:71:19"},"nodeType":"YulExpressionStatement","src":"54289:71:19"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"54465:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54478:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"54489:3:19","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54474:3:19"},"nodeType":"YulFunctionCall","src":"54474:19:19"}],"functionName":{"name":"abi_encode_t_struct$_FeeConfig_$2780_storage_to_t_struct$_FeeConfig_$2780_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"54370:94:19"},"nodeType":"YulFunctionCall","src":"54370:124:19"},"nodeType":"YulExpressionStatement","src":"54370:124:19"}]},"name":"abi_encode_tuple_t_uint16_t_uint32_t_uint32_t_uint32_t_int256_t_struct$_FeeConfig_$2780_storage__to_t_uint16_t_uint32_t_uint32_t_uint32_t_int256_t_struct$_FeeConfig_$2780_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"53855:9:19","type":""},{"name":"value5","nodeType":"YulTypedName","src":"53867:6:19","type":""},{"name":"value4","nodeType":"YulTypedName","src":"53875:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"53883:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"53891:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"53899:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"53907:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"53918:4:19","type":""}],"src":"53644:857:19"},{"body":{"nodeType":"YulBlock","src":"54605:124:19","statements":[{"nodeType":"YulAssignment","src":"54615:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54627:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"54638:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54623:3:19"},"nodeType":"YulFunctionCall","src":"54623:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"54615:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"54695:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54708:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"54719:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54704:3:19"},"nodeType":"YulFunctionCall","src":"54704:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"54651:43:19"},"nodeType":"YulFunctionCall","src":"54651:71:19"},"nodeType":"YulExpressionStatement","src":"54651:71:19"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"54577:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"54589:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"54600:4:19","type":""}],"src":"54507:222:19"},{"body":{"nodeType":"YulBlock","src":"54907:252:19","statements":[{"nodeType":"YulAssignment","src":"54917:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54929:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"54940:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54925:3:19"},"nodeType":"YulFunctionCall","src":"54925:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"54917:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"54997:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"55010:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"55021:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55006:3:19"},"nodeType":"YulFunctionCall","src":"55006:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"54953:43:19"},"nodeType":"YulFunctionCall","src":"54953:71:19"},"nodeType":"YulExpressionStatement","src":"54953:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"55124:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"55137:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"55148:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55133:3:19"},"nodeType":"YulFunctionCall","src":"55133:18:19"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"55034:89:19"},"nodeType":"YulFunctionCall","src":"55034:118:19"},"nodeType":"YulExpressionStatement","src":"55034:118:19"}]},"name":"abi_encode_tuple_t_uint256_t_array$_t_uint256_$2_memory_ptr__to_t_uint256_t_array$_t_uint256_$2_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"54871:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"54883:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"54891:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"54902:4:19","type":""}],"src":"54735:424:19"},{"body":{"nodeType":"YulBlock","src":"55341:307:19","statements":[{"nodeType":"YulAssignment","src":"55351:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"55363:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"55374:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55359:3:19"},"nodeType":"YulFunctionCall","src":"55359:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"55351:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"55431:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"55444:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"55455:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55440:3:19"},"nodeType":"YulFunctionCall","src":"55440:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"55387:43:19"},"nodeType":"YulFunctionCall","src":"55387:71:19"},"nodeType":"YulExpressionStatement","src":"55387:71:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"55479:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"55490:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55475:3:19"},"nodeType":"YulFunctionCall","src":"55475:18:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"55499:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"55505:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"55495:3:19"},"nodeType":"YulFunctionCall","src":"55495:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"55468:6:19"},"nodeType":"YulFunctionCall","src":"55468:48:19"},"nodeType":"YulExpressionStatement","src":"55468:48:19"},{"nodeType":"YulAssignment","src":"55525:116:19","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"55627:6:19"},{"name":"tail","nodeType":"YulIdentifier","src":"55636:4:19"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"55533:93:19"},"nodeType":"YulFunctionCall","src":"55533:108:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"55525:4:19"}]}]},"name":"abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"55305:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"55317:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"55325:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"55336:4:19","type":""}],"src":"55165:483:19"},{"body":{"nodeType":"YulBlock","src":"55780:206:19","statements":[{"nodeType":"YulAssignment","src":"55790:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"55802:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"55813:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55798:3:19"},"nodeType":"YulFunctionCall","src":"55798:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"55790:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"55870:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"55883:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"55894:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55879:3:19"},"nodeType":"YulFunctionCall","src":"55879:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"55826:43:19"},"nodeType":"YulFunctionCall","src":"55826:71:19"},"nodeType":"YulExpressionStatement","src":"55826:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"55951:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"55964:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"55975:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55960:3:19"},"nodeType":"YulFunctionCall","src":"55960:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"55907:43:19"},"nodeType":"YulFunctionCall","src":"55907:72:19"},"nodeType":"YulExpressionStatement","src":"55907:72:19"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"55744:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"55756:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"55764:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"55775:4:19","type":""}],"src":"55654:332:19"},{"body":{"nodeType":"YulBlock","src":"56196:448:19","statements":[{"nodeType":"YulAssignment","src":"56206:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56218:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"56229:3:19","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56214:3:19"},"nodeType":"YulFunctionCall","src":"56214:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"56206:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"56287:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56300:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"56311:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56296:3:19"},"nodeType":"YulFunctionCall","src":"56296:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"56243:43:19"},"nodeType":"YulFunctionCall","src":"56243:71:19"},"nodeType":"YulExpressionStatement","src":"56243:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"56368:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56381:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"56392:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56377:3:19"},"nodeType":"YulFunctionCall","src":"56377:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"56324:43:19"},"nodeType":"YulFunctionCall","src":"56324:72:19"},"nodeType":"YulExpressionStatement","src":"56324:72:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"56448:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56461:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"56472:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56457:3:19"},"nodeType":"YulFunctionCall","src":"56457:18:19"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"56406:41:19"},"nodeType":"YulFunctionCall","src":"56406:70:19"},"nodeType":"YulExpressionStatement","src":"56406:70:19"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"56528:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56541:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"56552:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56537:3:19"},"nodeType":"YulFunctionCall","src":"56537:18:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"56486:41:19"},"nodeType":"YulFunctionCall","src":"56486:70:19"},"nodeType":"YulExpressionStatement","src":"56486:70:19"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"56608:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56621:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"56632:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56617:3:19"},"nodeType":"YulFunctionCall","src":"56617:19:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"56566:41:19"},"nodeType":"YulFunctionCall","src":"56566:71:19"},"nodeType":"YulExpressionStatement","src":"56566:71:19"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"56136:9:19","type":""},{"name":"value4","nodeType":"YulTypedName","src":"56148:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"56156:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"56164:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"56172:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"56180:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"56191:4:19","type":""}],"src":"55992:652:19"},{"body":{"nodeType":"YulBlock","src":"56882:531:19","statements":[{"nodeType":"YulAssignment","src":"56892:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56904:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"56915:3:19","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56900:3:19"},"nodeType":"YulFunctionCall","src":"56900:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"56892:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"56973:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56986:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"56997:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56982:3:19"},"nodeType":"YulFunctionCall","src":"56982:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"56929:43:19"},"nodeType":"YulFunctionCall","src":"56929:71:19"},"nodeType":"YulExpressionStatement","src":"56929:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"57054:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57067:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"57078:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57063:3:19"},"nodeType":"YulFunctionCall","src":"57063:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"57010:43:19"},"nodeType":"YulFunctionCall","src":"57010:72:19"},"nodeType":"YulExpressionStatement","src":"57010:72:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"57134:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57147:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"57158:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57143:3:19"},"nodeType":"YulFunctionCall","src":"57143:18:19"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"57092:41:19"},"nodeType":"YulFunctionCall","src":"57092:70:19"},"nodeType":"YulExpressionStatement","src":"57092:70:19"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"57214:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57227:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"57238:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57223:3:19"},"nodeType":"YulFunctionCall","src":"57223:18:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"57172:41:19"},"nodeType":"YulFunctionCall","src":"57172:70:19"},"nodeType":"YulExpressionStatement","src":"57172:70:19"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"57294:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57307:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"57318:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57303:3:19"},"nodeType":"YulFunctionCall","src":"57303:19:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"57252:41:19"},"nodeType":"YulFunctionCall","src":"57252:71:19"},"nodeType":"YulExpressionStatement","src":"57252:71:19"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"57377:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57390:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"57401:3:19","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57386:3:19"},"nodeType":"YulFunctionCall","src":"57386:19:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"57333:43:19"},"nodeType":"YulFunctionCall","src":"57333:73:19"},"nodeType":"YulExpressionStatement","src":"57333:73:19"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint64_t_uint32_t_uint32_t_address__to_t_uint256_t_uint256_t_uint64_t_uint32_t_uint32_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"56814:9:19","type":""},{"name":"value5","nodeType":"YulTypedName","src":"56826:6:19","type":""},{"name":"value4","nodeType":"YulTypedName","src":"56834:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"56842:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"56850:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"56858:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"56866:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"56877:4:19","type":""}],"src":"56650:763:19"},{"body":{"nodeType":"YulBlock","src":"57649:529:19","statements":[{"nodeType":"YulAssignment","src":"57659:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57671:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"57682:3:19","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57667:3:19"},"nodeType":"YulFunctionCall","src":"57667:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"57659:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"57740:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57753:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"57764:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57749:3:19"},"nodeType":"YulFunctionCall","src":"57749:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"57696:43:19"},"nodeType":"YulFunctionCall","src":"57696:71:19"},"nodeType":"YulExpressionStatement","src":"57696:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"57819:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57832:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"57843:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57828:3:19"},"nodeType":"YulFunctionCall","src":"57828:18:19"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"57777:41:19"},"nodeType":"YulFunctionCall","src":"57777:70:19"},"nodeType":"YulExpressionStatement","src":"57777:70:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"57899:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57912:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"57923:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57908:3:19"},"nodeType":"YulFunctionCall","src":"57908:18:19"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"57857:41:19"},"nodeType":"YulFunctionCall","src":"57857:70:19"},"nodeType":"YulExpressionStatement","src":"57857:70:19"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"57979:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57992:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"58003:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57988:3:19"},"nodeType":"YulFunctionCall","src":"57988:18:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"57937:41:19"},"nodeType":"YulFunctionCall","src":"57937:70:19"},"nodeType":"YulExpressionStatement","src":"57937:70:19"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"58059:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58072:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"58083:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58068:3:19"},"nodeType":"YulFunctionCall","src":"58068:19:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"58017:41:19"},"nodeType":"YulFunctionCall","src":"58017:71:19"},"nodeType":"YulExpressionStatement","src":"58017:71:19"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"58142:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58155:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"58166:3:19","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58151:3:19"},"nodeType":"YulFunctionCall","src":"58151:19:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"58098:43:19"},"nodeType":"YulFunctionCall","src":"58098:73:19"},"nodeType":"YulExpressionStatement","src":"58098:73:19"}]},"name":"abi_encode_tuple_t_uint256_t_uint64_t_uint64_t_uint32_t_uint32_t_address__to_t_uint256_t_uint64_t_uint64_t_uint32_t_uint32_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"57581:9:19","type":""},{"name":"value5","nodeType":"YulTypedName","src":"57593:6:19","type":""},{"name":"value4","nodeType":"YulTypedName","src":"57601:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"57609:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"57617:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"57625:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"57633:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"57644:4:19","type":""}],"src":"57419:759:19"},{"body":{"nodeType":"YulBlock","src":"58330:280:19","statements":[{"nodeType":"YulAssignment","src":"58340:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58352:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"58363:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58348:3:19"},"nodeType":"YulFunctionCall","src":"58348:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"58340:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"58420:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58433:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"58444:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58429:3:19"},"nodeType":"YulFunctionCall","src":"58429:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"58376:43:19"},"nodeType":"YulFunctionCall","src":"58376:71:19"},"nodeType":"YulExpressionStatement","src":"58376:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"58499:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58512:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"58523:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58508:3:19"},"nodeType":"YulFunctionCall","src":"58508:18:19"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"58457:41:19"},"nodeType":"YulFunctionCall","src":"58457:70:19"},"nodeType":"YulExpressionStatement","src":"58457:70:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"58575:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58588:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"58599:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58584:3:19"},"nodeType":"YulFunctionCall","src":"58584:18:19"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"58537:37:19"},"nodeType":"YulFunctionCall","src":"58537:66:19"},"nodeType":"YulExpressionStatement","src":"58537:66:19"}]},"name":"abi_encode_tuple_t_uint256_t_uint96_t_bool__to_t_uint256_t_uint96_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"58286:9:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"58298:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"58306:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"58314:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"58325:4:19","type":""}],"src":"58184:426:19"},{"body":{"nodeType":"YulBlock","src":"58712:122:19","statements":[{"nodeType":"YulAssignment","src":"58722:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58734:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"58745:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58730:3:19"},"nodeType":"YulFunctionCall","src":"58730:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"58722:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"58800:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58813:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"58824:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58809:3:19"},"nodeType":"YulFunctionCall","src":"58809:17:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"58758:41:19"},"nodeType":"YulFunctionCall","src":"58758:69:19"},"nodeType":"YulExpressionStatement","src":"58758:69:19"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"58684:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"58696:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"58707:4:19","type":""}],"src":"58616:218:19"},{"body":{"nodeType":"YulBlock","src":"58962:202:19","statements":[{"nodeType":"YulAssignment","src":"58972:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58984:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"58995:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58980:3:19"},"nodeType":"YulFunctionCall","src":"58980:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"58972:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"59050:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"59063:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"59074:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59059:3:19"},"nodeType":"YulFunctionCall","src":"59059:17:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"59008:41:19"},"nodeType":"YulFunctionCall","src":"59008:69:19"},"nodeType":"YulExpressionStatement","src":"59008:69:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"59129:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"59142:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"59153:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59138:3:19"},"nodeType":"YulFunctionCall","src":"59138:18:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"59087:41:19"},"nodeType":"YulFunctionCall","src":"59087:70:19"},"nodeType":"YulExpressionStatement","src":"59087:70:19"}]},"name":"abi_encode_tuple_t_uint32_t_uint32__to_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"58926:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"58938:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"58946:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"58957:4:19","type":""}],"src":"58840:324:19"},{"body":{"nodeType":"YulBlock","src":"59474:768:19","statements":[{"nodeType":"YulAssignment","src":"59484:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"59496:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"59507:3:19","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59492:3:19"},"nodeType":"YulFunctionCall","src":"59492:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"59484:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"59563:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"59576:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"59587:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59572:3:19"},"nodeType":"YulFunctionCall","src":"59572:17:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"59521:41:19"},"nodeType":"YulFunctionCall","src":"59521:69:19"},"nodeType":"YulExpressionStatement","src":"59521:69:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"59642:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"59655:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"59666:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59651:3:19"},"nodeType":"YulFunctionCall","src":"59651:18:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"59600:41:19"},"nodeType":"YulFunctionCall","src":"59600:70:19"},"nodeType":"YulExpressionStatement","src":"59600:70:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"59722:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"59735:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"59746:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59731:3:19"},"nodeType":"YulFunctionCall","src":"59731:18:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"59680:41:19"},"nodeType":"YulFunctionCall","src":"59680:70:19"},"nodeType":"YulExpressionStatement","src":"59680:70:19"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"59802:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"59815:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"59826:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59811:3:19"},"nodeType":"YulFunctionCall","src":"59811:18:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"59760:41:19"},"nodeType":"YulFunctionCall","src":"59760:70:19"},"nodeType":"YulExpressionStatement","src":"59760:70:19"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"59882:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"59895:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"59906:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59891:3:19"},"nodeType":"YulFunctionCall","src":"59891:19:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"59840:41:19"},"nodeType":"YulFunctionCall","src":"59840:71:19"},"nodeType":"YulExpressionStatement","src":"59840:71:19"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"59963:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"59976:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"59987:3:19","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59972:3:19"},"nodeType":"YulFunctionCall","src":"59972:19:19"}],"functionName":{"name":"abi_encode_t_uint24_to_t_uint24_fromStack","nodeType":"YulIdentifier","src":"59921:41:19"},"nodeType":"YulFunctionCall","src":"59921:71:19"},"nodeType":"YulExpressionStatement","src":"59921:71:19"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"60044:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"60057:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"60068:3:19","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60053:3:19"},"nodeType":"YulFunctionCall","src":"60053:19:19"}],"functionName":{"name":"abi_encode_t_uint24_to_t_uint24_fromStack","nodeType":"YulIdentifier","src":"60002:41:19"},"nodeType":"YulFunctionCall","src":"60002:71:19"},"nodeType":"YulExpressionStatement","src":"60002:71:19"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"60125:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"60138:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"60149:3:19","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60134:3:19"},"nodeType":"YulFunctionCall","src":"60134:19:19"}],"functionName":{"name":"abi_encode_t_uint24_to_t_uint24_fromStack","nodeType":"YulIdentifier","src":"60083:41:19"},"nodeType":"YulFunctionCall","src":"60083:71:19"},"nodeType":"YulExpressionStatement","src":"60083:71:19"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"60206:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"60219:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"60230:3:19","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60215:3:19"},"nodeType":"YulFunctionCall","src":"60215:19:19"}],"functionName":{"name":"abi_encode_t_uint24_to_t_uint24_fromStack","nodeType":"YulIdentifier","src":"60164:41:19"},"nodeType":"YulFunctionCall","src":"60164:71:19"},"nodeType":"YulExpressionStatement","src":"60164:71:19"}]},"name":"abi_encode_tuple_t_uint32_t_uint32_t_uint32_t_uint32_t_uint32_t_uint24_t_uint24_t_uint24_t_uint24__to_t_uint32_t_uint32_t_uint32_t_uint32_t_uint32_t_uint24_t_uint24_t_uint24_t_uint24__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"59382:9:19","type":""},{"name":"value8","nodeType":"YulTypedName","src":"59394:6:19","type":""},{"name":"value7","nodeType":"YulTypedName","src":"59402:6:19","type":""},{"name":"value6","nodeType":"YulTypedName","src":"59410:6:19","type":""},{"name":"value5","nodeType":"YulTypedName","src":"59418:6:19","type":""},{"name":"value4","nodeType":"YulTypedName","src":"59426:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"59434:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"59442:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"59450:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"59458:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"59469:4:19","type":""}],"src":"59170:1072:19"},{"body":{"nodeType":"YulBlock","src":"60345:123:19","statements":[{"nodeType":"YulAssignment","src":"60355:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"60367:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"60378:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60363:3:19"},"nodeType":"YulFunctionCall","src":"60363:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"60355:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"60434:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"60447:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"60458:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60443:3:19"},"nodeType":"YulFunctionCall","src":"60443:17:19"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"60391:42:19"},"nodeType":"YulFunctionCall","src":"60391:70:19"},"nodeType":"YulExpressionStatement","src":"60391:70:19"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"60317:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"60329:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"60340:4:19","type":""}],"src":"60248:220:19"},{"body":{"nodeType":"YulBlock","src":"60570:122:19","statements":[{"nodeType":"YulAssignment","src":"60580:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"60592:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"60603:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60588:3:19"},"nodeType":"YulFunctionCall","src":"60588:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"60580:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"60658:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"60671:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"60682:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60667:3:19"},"nodeType":"YulFunctionCall","src":"60667:17:19"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"60616:41:19"},"nodeType":"YulFunctionCall","src":"60616:69:19"},"nodeType":"YulExpressionStatement","src":"60616:69:19"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"60542:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"60554:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"60565:4:19","type":""}],"src":"60474:218:19"},{"body":{"nodeType":"YulBlock","src":"60822:204:19","statements":[{"nodeType":"YulAssignment","src":"60832:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"60844:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"60855:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60840:3:19"},"nodeType":"YulFunctionCall","src":"60840:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"60832:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"60910:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"60923:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"60934:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60919:3:19"},"nodeType":"YulFunctionCall","src":"60919:17:19"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"60868:41:19"},"nodeType":"YulFunctionCall","src":"60868:69:19"},"nodeType":"YulExpressionStatement","src":"60868:69:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"60991:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"61004:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"61015:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61000:3:19"},"nodeType":"YulFunctionCall","src":"61000:18:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"60947:43:19"},"nodeType":"YulFunctionCall","src":"60947:72:19"},"nodeType":"YulExpressionStatement","src":"60947:72:19"}]},"name":"abi_encode_tuple_t_uint64_t_address__to_t_uint64_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"60786:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"60798:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"60806:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"60817:4:19","type":""}],"src":"60698:328:19"},{"body":{"nodeType":"YulBlock","src":"61128:122:19","statements":[{"nodeType":"YulAssignment","src":"61138:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"61150:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"61161:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61146:3:19"},"nodeType":"YulFunctionCall","src":"61146:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"61138:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"61216:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"61229:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"61240:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61225:3:19"},"nodeType":"YulFunctionCall","src":"61225:17:19"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"61174:41:19"},"nodeType":"YulFunctionCall","src":"61174:69:19"},"nodeType":"YulExpressionStatement","src":"61174:69:19"}]},"name":"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61100:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"61112:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"61123:4:19","type":""}],"src":"61032:218:19"},{"body":{"nodeType":"YulBlock","src":"61484:468:19","statements":[{"nodeType":"YulAssignment","src":"61494:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"61506:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"61517:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61502:3:19"},"nodeType":"YulFunctionCall","src":"61502:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"61494:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"61573:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"61586:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"61597:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61582:3:19"},"nodeType":"YulFunctionCall","src":"61582:17:19"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"61531:41:19"},"nodeType":"YulFunctionCall","src":"61531:69:19"},"nodeType":"YulExpressionStatement","src":"61531:69:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"61652:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"61665:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"61676:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61661:3:19"},"nodeType":"YulFunctionCall","src":"61661:18:19"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"61610:41:19"},"nodeType":"YulFunctionCall","src":"61610:70:19"},"nodeType":"YulExpressionStatement","src":"61610:70:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"61734:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"61747:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"61758:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61743:3:19"},"nodeType":"YulFunctionCall","src":"61743:18:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"61690:43:19"},"nodeType":"YulFunctionCall","src":"61690:72:19"},"nodeType":"YulExpressionStatement","src":"61690:72:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"61783:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"61794:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61779:3:19"},"nodeType":"YulFunctionCall","src":"61779:18:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"61803:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"61809:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"61799:3:19"},"nodeType":"YulFunctionCall","src":"61799:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"61772:6:19"},"nodeType":"YulFunctionCall","src":"61772:48:19"},"nodeType":"YulExpressionStatement","src":"61772:48:19"},{"nodeType":"YulAssignment","src":"61829:116:19","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"61931:6:19"},{"name":"tail","nodeType":"YulIdentifier","src":"61940:4:19"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"61837:93:19"},"nodeType":"YulFunctionCall","src":"61837:108:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"61829:4:19"}]}]},"name":"abi_encode_tuple_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61432:9:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"61444:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"61452:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"61460:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"61468:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"61479:4:19","type":""}],"src":"61256:696:19"},{"body":{"nodeType":"YulBlock","src":"61999:88:19","statements":[{"nodeType":"YulAssignment","src":"62009:30:19","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"62019:18:19"},"nodeType":"YulFunctionCall","src":"62019:20:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"62009:6:19"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"62068:6:19"},{"name":"size","nodeType":"YulIdentifier","src":"62076:4:19"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"62048:19:19"},"nodeType":"YulFunctionCall","src":"62048:33:19"},"nodeType":"YulExpressionStatement","src":"62048:33:19"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"61983:4:19","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"61992:6:19","type":""}],"src":"61958:129:19"},{"body":{"nodeType":"YulBlock","src":"62133:35:19","statements":[{"nodeType":"YulAssignment","src":"62143:19:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"62159:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"62153:5:19"},"nodeType":"YulFunctionCall","src":"62153:9:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"62143:6:19"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"62126:6:19","type":""}],"src":"62093:75:19"},{"body":{"nodeType":"YulBlock","src":"62254:169:19","statements":[{"body":{"nodeType":"YulBlock","src":"62359:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"62361:16:19"},"nodeType":"YulFunctionCall","src":"62361:18:19"},"nodeType":"YulExpressionStatement","src":"62361:18:19"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"62331:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"62339:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"62328:2:19"},"nodeType":"YulFunctionCall","src":"62328:30:19"},"nodeType":"YulIf","src":"62325:2:19"},{"nodeType":"YulAssignment","src":"62391:25:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"62403:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"62411:4:19","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"62399:3:19"},"nodeType":"YulFunctionCall","src":"62399:17:19"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"62391:4:19"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"62238:6:19","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"62249:4:19","type":""}],"src":"62174:249:19"},{"body":{"nodeType":"YulBlock","src":"62501:60:19","statements":[{"nodeType":"YulAssignment","src":"62511:11:19","value":{"name":"ptr","nodeType":"YulIdentifier","src":"62519:3:19"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"62511:4:19"}]},{"nodeType":"YulAssignment","src":"62532:22:19","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"62544:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"62549:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"62540:3:19"},"nodeType":"YulFunctionCall","src":"62540:14:19"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"62532:4:19"}]}]},"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"62488:3:19","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"62496:4:19","type":""}],"src":"62429:132:19"},{"body":{"nodeType":"YulBlock","src":"62639:60:19","statements":[{"nodeType":"YulAssignment","src":"62649:11:19","value":{"name":"ptr","nodeType":"YulIdentifier","src":"62657:3:19"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"62649:4:19"}]},{"nodeType":"YulAssignment","src":"62670:22:19","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"62682:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"62687:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"62678:3:19"},"nodeType":"YulFunctionCall","src":"62678:14:19"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"62670:4:19"}]}]},"name":"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"62626:3:19","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"62634:4:19","type":""}],"src":"62567:132:19"},{"body":{"nodeType":"YulBlock","src":"62775:28:19","statements":[{"nodeType":"YulAssignment","src":"62785:11:19","value":{"name":"ptr","nodeType":"YulIdentifier","src":"62793:3:19"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"62785:4:19"}]}]},"name":"array_dataslot_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"62762:3:19","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"62770:4:19","type":""}],"src":"62705:98:19"},{"body":{"nodeType":"YulBlock","src":"62881:60:19","statements":[{"nodeType":"YulAssignment","src":"62891:11:19","value":{"name":"ptr","nodeType":"YulIdentifier","src":"62899:3:19"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"62891:4:19"}]},{"nodeType":"YulAssignment","src":"62912:22:19","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"62924:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"62929:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"62920:3:19"},"nodeType":"YulFunctionCall","src":"62920:14:19"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"62912:4:19"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"62868:3:19","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"62876:4:19","type":""}],"src":"62809:132:19"},{"body":{"nodeType":"YulBlock","src":"63021:40:19","statements":[{"nodeType":"YulAssignment","src":"63032:22:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"63048:5:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"63042:5:19"},"nodeType":"YulFunctionCall","src":"63042:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"63032:6:19"}]}]},"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"63004:5:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"63014:6:19","type":""}],"src":"62947:114:19"},{"body":{"nodeType":"YulBlock","src":"63141:40:19","statements":[{"nodeType":"YulAssignment","src":"63152:22:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"63168:5:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"63162:5:19"},"nodeType":"YulFunctionCall","src":"63162:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"63152:6:19"}]}]},"name":"array_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"63124:5:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"63134:6:19","type":""}],"src":"63067:114:19"},{"body":{"nodeType":"YulBlock","src":"63259:32:19","statements":[{"nodeType":"YulAssignment","src":"63270:14:19","value":{"kind":"number","nodeType":"YulLiteral","src":"63280:4:19","type":"","value":"0x02"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"63270:6:19"}]}]},"name":"array_length_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"63242:5:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"63252:6:19","type":""}],"src":"63187:104:19"},{"body":{"nodeType":"YulBlock","src":"63371:40:19","statements":[{"nodeType":"YulAssignment","src":"63382:22:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"63398:5:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"63392:5:19"},"nodeType":"YulFunctionCall","src":"63392:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"63382:6:19"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"63354:5:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"63364:6:19","type":""}],"src":"63297:114:19"},{"body":{"nodeType":"YulBlock","src":"63475:40:19","statements":[{"nodeType":"YulAssignment","src":"63486:22:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"63502:5:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"63496:5:19"},"nodeType":"YulFunctionCall","src":"63496:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"63486:6:19"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"63458:5:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"63468:6:19","type":""}],"src":"63417:98:19"},{"body":{"nodeType":"YulBlock","src":"63580:40:19","statements":[{"nodeType":"YulAssignment","src":"63591:22:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"63607:5:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"63601:5:19"},"nodeType":"YulFunctionCall","src":"63601:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"63591:6:19"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"63563:5:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"63573:6:19","type":""}],"src":"63521:99:19"},{"body":{"nodeType":"YulBlock","src":"63701:38:19","statements":[{"nodeType":"YulAssignment","src":"63711:22:19","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"63723:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"63728:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"63719:3:19"},"nodeType":"YulFunctionCall","src":"63719:14:19"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"63711:4:19"}]}]},"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"63688:3:19","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"63696:4:19","type":""}],"src":"63626:113:19"},{"body":{"nodeType":"YulBlock","src":"63820:38:19","statements":[{"nodeType":"YulAssignment","src":"63830:22:19","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"63842:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"63847:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"63838:3:19"},"nodeType":"YulFunctionCall","src":"63838:14:19"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"63830:4:19"}]}]},"name":"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"63807:3:19","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"63815:4:19","type":""}],"src":"63745:113:19"},{"body":{"nodeType":"YulBlock","src":"63937:38:19","statements":[{"nodeType":"YulAssignment","src":"63947:22:19","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"63959:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"63964:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"63955:3:19"},"nodeType":"YulFunctionCall","src":"63955:14:19"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"63947:4:19"}]}]},"name":"array_nextElement_t_array$_t_uint256_$2_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"63924:3:19","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"63932:4:19","type":""}],"src":"63864:111:19"},{"body":{"nodeType":"YulBlock","src":"64056:38:19","statements":[{"nodeType":"YulAssignment","src":"64066:22:19","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"64078:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"64083:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"64074:3:19"},"nodeType":"YulFunctionCall","src":"64074:14:19"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"64066:4:19"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"64043:3:19","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"64051:4:19","type":""}],"src":"63981:113:19"},{"body":{"nodeType":"YulBlock","src":"64211:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"64228:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"64233:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"64221:6:19"},"nodeType":"YulFunctionCall","src":"64221:19:19"},"nodeType":"YulExpressionStatement","src":"64221:19:19"},{"nodeType":"YulAssignment","src":"64249:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"64268:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"64273:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"64264:3:19"},"nodeType":"YulFunctionCall","src":"64264:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"64249:11:19"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"64183:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"64188:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"64199:11:19","type":""}],"src":"64100:184:19"},{"body":{"nodeType":"YulBlock","src":"64401:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"64418:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"64423:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"64411:6:19"},"nodeType":"YulFunctionCall","src":"64411:19:19"},"nodeType":"YulExpressionStatement","src":"64411:19:19"},{"nodeType":"YulAssignment","src":"64439:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"64458:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"64463:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"64454:3:19"},"nodeType":"YulFunctionCall","src":"64454:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"64439:11:19"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"64373:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"64378:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"64389:11:19","type":""}],"src":"64290:184:19"},{"body":{"nodeType":"YulBlock","src":"64589:34:19","statements":[{"nodeType":"YulAssignment","src":"64599:18:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"64614:3:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"64599:11:19"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$2_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"64561:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"64566:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"64577:11:19","type":""}],"src":"64480:143:19"},{"body":{"nodeType":"YulBlock","src":"64756:34:19","statements":[{"nodeType":"YulAssignment","src":"64766:18:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"64781:3:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"64766:11:19"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"64728:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"64733:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"64744:11:19","type":""}],"src":"64629:161:19"},{"body":{"nodeType":"YulBlock","src":"64907:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"64924:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"64929:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"64917:6:19"},"nodeType":"YulFunctionCall","src":"64917:19:19"},"nodeType":"YulExpressionStatement","src":"64917:19:19"},{"nodeType":"YulAssignment","src":"64945:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"64964:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"64969:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"64960:3:19"},"nodeType":"YulFunctionCall","src":"64960:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"64945:11:19"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"64879:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"64884:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"64895:11:19","type":""}],"src":"64796:184:19"},{"body":{"nodeType":"YulBlock","src":"65081:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"65098:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"65103:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"65091:6:19"},"nodeType":"YulFunctionCall","src":"65091:19:19"},"nodeType":"YulExpressionStatement","src":"65091:19:19"},{"nodeType":"YulAssignment","src":"65119:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"65138:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"65143:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"65134:3:19"},"nodeType":"YulFunctionCall","src":"65134:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"65119:11:19"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"65053:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"65058:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"65069:11:19","type":""}],"src":"64986:168:19"},{"body":{"nodeType":"YulBlock","src":"65273:34:19","statements":[{"nodeType":"YulAssignment","src":"65283:18:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"65298:3:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"65283:11:19"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"65245:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"65250:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"65261:11:19","type":""}],"src":"65160:147:19"},{"body":{"nodeType":"YulBlock","src":"65409:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"65426:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"65431:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"65419:6:19"},"nodeType":"YulFunctionCall","src":"65419:19:19"},"nodeType":"YulExpressionStatement","src":"65419:19:19"},{"nodeType":"YulAssignment","src":"65447:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"65466:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"65471:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"65462:3:19"},"nodeType":"YulFunctionCall","src":"65462:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"65447:11:19"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"65381:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"65386:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"65397:11:19","type":""}],"src":"65313:169:19"},{"body":{"nodeType":"YulBlock","src":"65532:261:19","statements":[{"nodeType":"YulAssignment","src":"65542:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"65565:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"65547:17:19"},"nodeType":"YulFunctionCall","src":"65547:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"65542:1:19"}]},{"nodeType":"YulAssignment","src":"65576:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"65599:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"65581:17:19"},"nodeType":"YulFunctionCall","src":"65581:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"65576:1:19"}]},{"body":{"nodeType":"YulBlock","src":"65739:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"65741:16:19"},"nodeType":"YulFunctionCall","src":"65741:18:19"},"nodeType":"YulExpressionStatement","src":"65741:18:19"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"65660:1:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"65667:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"65735:1:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"65663:3:19"},"nodeType":"YulFunctionCall","src":"65663:74:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"65657:2:19"},"nodeType":"YulFunctionCall","src":"65657:81:19"},"nodeType":"YulIf","src":"65654:2:19"},{"nodeType":"YulAssignment","src":"65771:16:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"65782:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"65785:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"65778:3:19"},"nodeType":"YulFunctionCall","src":"65778:9:19"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"65771:3:19"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"65519:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"65522:1:19","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"65528:3:19","type":""}],"src":"65488:305:19"},{"body":{"nodeType":"YulBlock","src":"65842:211:19","statements":[{"nodeType":"YulAssignment","src":"65852:24:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"65874:1:19"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"65857:16:19"},"nodeType":"YulFunctionCall","src":"65857:19:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"65852:1:19"}]},{"nodeType":"YulAssignment","src":"65885:24:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"65907:1:19"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"65890:16:19"},"nodeType":"YulFunctionCall","src":"65890:19:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"65885:1:19"}]},{"body":{"nodeType":"YulBlock","src":"65999:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"66001:16:19"},"nodeType":"YulFunctionCall","src":"66001:18:19"},"nodeType":"YulExpressionStatement","src":"66001:18:19"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"65968:1:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"65975:18:19","type":"","value":"0xffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"65995:1:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"65971:3:19"},"nodeType":"YulFunctionCall","src":"65971:26:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"65965:2:19"},"nodeType":"YulFunctionCall","src":"65965:33:19"},"nodeType":"YulIf","src":"65962:2:19"},{"nodeType":"YulAssignment","src":"66031:16:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"66042:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"66045:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"66038:3:19"},"nodeType":"YulFunctionCall","src":"66038:9:19"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"66031:3:19"}]}]},"name":"checked_add_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"65829:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"65832:1:19","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"65838:3:19","type":""}],"src":"65799:254:19"},{"body":{"nodeType":"YulBlock","src":"66102:219:19","statements":[{"nodeType":"YulAssignment","src":"66112:24:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"66134:1:19"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"66117:16:19"},"nodeType":"YulFunctionCall","src":"66117:19:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"66112:1:19"}]},{"nodeType":"YulAssignment","src":"66145:24:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"66167:1:19"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"66150:16:19"},"nodeType":"YulFunctionCall","src":"66150:19:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"66145:1:19"}]},{"body":{"nodeType":"YulBlock","src":"66267:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"66269:16:19"},"nodeType":"YulFunctionCall","src":"66269:18:19"},"nodeType":"YulExpressionStatement","src":"66269:18:19"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"66228:1:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"66235:26:19","type":"","value":"0xffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"66263:1:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"66231:3:19"},"nodeType":"YulFunctionCall","src":"66231:34:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"66225:2:19"},"nodeType":"YulFunctionCall","src":"66225:41:19"},"nodeType":"YulIf","src":"66222:2:19"},{"nodeType":"YulAssignment","src":"66299:16:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"66310:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"66313:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"66306:3:19"},"nodeType":"YulFunctionCall","src":"66306:9:19"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"66299:3:19"}]}]},"name":"checked_add_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"66089:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"66092:1:19","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"66098:3:19","type":""}],"src":"66059:262:19"},{"body":{"nodeType":"YulBlock","src":"66369:143:19","statements":[{"nodeType":"YulAssignment","src":"66379:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"66402:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"66384:17:19"},"nodeType":"YulFunctionCall","src":"66384:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"66379:1:19"}]},{"nodeType":"YulAssignment","src":"66413:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"66436:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"66418:17:19"},"nodeType":"YulFunctionCall","src":"66418:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"66413:1:19"}]},{"body":{"nodeType":"YulBlock","src":"66460:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"66462:16:19"},"nodeType":"YulFunctionCall","src":"66462:18:19"},"nodeType":"YulExpressionStatement","src":"66462:18:19"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"66457:1:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"66450:6:19"},"nodeType":"YulFunctionCall","src":"66450:9:19"},"nodeType":"YulIf","src":"66447:2:19"},{"nodeType":"YulAssignment","src":"66492:14:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"66501:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"66504:1:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"66497:3:19"},"nodeType":"YulFunctionCall","src":"66497:9:19"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"66492:1:19"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"66358:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"66361:1:19","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"66367:1:19","type":""}],"src":"66327:185:19"},{"body":{"nodeType":"YulBlock","src":"66566:300:19","statements":[{"nodeType":"YulAssignment","src":"66576:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"66599:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"66581:17:19"},"nodeType":"YulFunctionCall","src":"66581:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"66576:1:19"}]},{"nodeType":"YulAssignment","src":"66610:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"66633:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"66615:17:19"},"nodeType":"YulFunctionCall","src":"66615:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"66610:1:19"}]},{"body":{"nodeType":"YulBlock","src":"66808:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"66810:16:19"},"nodeType":"YulFunctionCall","src":"66810:18:19"},"nodeType":"YulExpressionStatement","src":"66810:18:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"66720:1:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"66713:6:19"},"nodeType":"YulFunctionCall","src":"66713:9:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"66706:6:19"},"nodeType":"YulFunctionCall","src":"66706:17:19"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"66728:1:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"66735:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"66803:1:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"66731:3:19"},"nodeType":"YulFunctionCall","src":"66731:74:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"66725:2:19"},"nodeType":"YulFunctionCall","src":"66725:81:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"66702:3:19"},"nodeType":"YulFunctionCall","src":"66702:105:19"},"nodeType":"YulIf","src":"66699:2:19"},{"nodeType":"YulAssignment","src":"66840:20:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"66855:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"66858:1:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"66851:3:19"},"nodeType":"YulFunctionCall","src":"66851:9:19"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"66840:7:19"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"66549:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"66552:1:19","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"66558:7:19","type":""}],"src":"66518:348:19"},{"body":{"nodeType":"YulBlock","src":"66917:146:19","statements":[{"nodeType":"YulAssignment","src":"66927:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"66950:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"66932:17:19"},"nodeType":"YulFunctionCall","src":"66932:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"66927:1:19"}]},{"nodeType":"YulAssignment","src":"66961:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"66984:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"66966:17:19"},"nodeType":"YulFunctionCall","src":"66966:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"66961:1:19"}]},{"body":{"nodeType":"YulBlock","src":"67008:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"67010:16:19"},"nodeType":"YulFunctionCall","src":"67010:18:19"},"nodeType":"YulExpressionStatement","src":"67010:18:19"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"67002:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"67005:1:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"66999:2:19"},"nodeType":"YulFunctionCall","src":"66999:8:19"},"nodeType":"YulIf","src":"66996:2:19"},{"nodeType":"YulAssignment","src":"67040:17:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"67052:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"67055:1:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"67048:3:19"},"nodeType":"YulFunctionCall","src":"67048:9:19"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"67040:4:19"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"66903:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"66906:1:19","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"66912:4:19","type":""}],"src":"66872:191:19"},{"body":{"nodeType":"YulBlock","src":"67113:144:19","statements":[{"nodeType":"YulAssignment","src":"67123:24:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"67145:1:19"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"67128:16:19"},"nodeType":"YulFunctionCall","src":"67128:19:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"67123:1:19"}]},{"nodeType":"YulAssignment","src":"67156:24:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"67178:1:19"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"67161:16:19"},"nodeType":"YulFunctionCall","src":"67161:19:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"67156:1:19"}]},{"body":{"nodeType":"YulBlock","src":"67202:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"67204:16:19"},"nodeType":"YulFunctionCall","src":"67204:18:19"},"nodeType":"YulExpressionStatement","src":"67204:18:19"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"67196:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"67199:1:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"67193:2:19"},"nodeType":"YulFunctionCall","src":"67193:8:19"},"nodeType":"YulIf","src":"67190:2:19"},{"nodeType":"YulAssignment","src":"67234:17:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"67246:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"67249:1:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"67242:3:19"},"nodeType":"YulFunctionCall","src":"67242:9:19"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"67234:4:19"}]}]},"name":"checked_sub_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"67099:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"67102:1:19","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"67108:4:19","type":""}],"src":"67069:188:19"},{"body":{"nodeType":"YulBlock","src":"67320:47:19","statements":[{"nodeType":"YulAssignment","src":"67330:31:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"67345:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"67352:8:19","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"67341:3:19"},"nodeType":"YulFunctionCall","src":"67341:20:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"67330:7:19"}]}]},"name":"cleanup_from_storage_t_uint24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"67302:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"67312:7:19","type":""}],"src":"67263:104:19"},{"body":{"nodeType":"YulBlock","src":"67430:49:19","statements":[{"nodeType":"YulAssignment","src":"67440:33:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"67455:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"67462:10:19","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"67451:3:19"},"nodeType":"YulFunctionCall","src":"67451:22:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"67440:7:19"}]}]},"name":"cleanup_from_storage_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"67412:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"67422:7:19","type":""}],"src":"67373:106:19"},{"body":{"nodeType":"YulBlock","src":"67530:51:19","statements":[{"nodeType":"YulAssignment","src":"67540:35:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"67569:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"67551:17:19"},"nodeType":"YulFunctionCall","src":"67551:24:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"67540:7:19"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"67512:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"67522:7:19","type":""}],"src":"67485:96:19"},{"body":{"nodeType":"YulBlock","src":"67629:48:19","statements":[{"nodeType":"YulAssignment","src":"67639:32:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"67664:5:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"67657:6:19"},"nodeType":"YulFunctionCall","src":"67657:13:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"67650:6:19"},"nodeType":"YulFunctionCall","src":"67650:21:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"67639:7:19"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"67611:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"67621:7:19","type":""}],"src":"67587:90:19"},{"body":{"nodeType":"YulBlock","src":"67728:32:19","statements":[{"nodeType":"YulAssignment","src":"67738:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"67749:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"67738:7:19"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"67710:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"67720:7:19","type":""}],"src":"67683:77:19"},{"body":{"nodeType":"YulBlock","src":"67810:32:19","statements":[{"nodeType":"YulAssignment","src":"67820:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"67831:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"67820:7:19"}]}]},"name":"cleanup_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"67792:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"67802:7:19","type":""}],"src":"67766:76:19"},{"body":{"nodeType":"YulBlock","src":"67892:45:19","statements":[{"nodeType":"YulAssignment","src":"67902:29:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"67917:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"67924:6:19","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"67913:3:19"},"nodeType":"YulFunctionCall","src":"67913:18:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"67902:7:19"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"67874:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"67884:7:19","type":""}],"src":"67848:89:19"},{"body":{"nodeType":"YulBlock","src":"67988:81:19","statements":[{"nodeType":"YulAssignment","src":"67998:65:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"68013:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"68020:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"68009:3:19"},"nodeType":"YulFunctionCall","src":"68009:54:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"67998:7:19"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"67970:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"67980:7:19","type":""}],"src":"67943:126:19"},{"body":{"nodeType":"YulBlock","src":"68119:47:19","statements":[{"nodeType":"YulAssignment","src":"68129:31:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"68144:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"68151:8:19","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"68140:3:19"},"nodeType":"YulFunctionCall","src":"68140:20:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"68129:7:19"}]}]},"name":"cleanup_t_uint24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"68101:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"68111:7:19","type":""}],"src":"68075:91:19"},{"body":{"nodeType":"YulBlock","src":"68217:32:19","statements":[{"nodeType":"YulAssignment","src":"68227:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"68238:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"68227:7:19"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"68199:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"68209:7:19","type":""}],"src":"68172:77:19"},{"body":{"nodeType":"YulBlock","src":"68299:49:19","statements":[{"nodeType":"YulAssignment","src":"68309:33:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"68324:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"68331:10:19","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"68320:3:19"},"nodeType":"YulFunctionCall","src":"68320:22:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"68309:7:19"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"68281:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"68291:7:19","type":""}],"src":"68255:93:19"},{"body":{"nodeType":"YulBlock","src":"68398:57:19","statements":[{"nodeType":"YulAssignment","src":"68408:41:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"68423:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"68430:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"68419:3:19"},"nodeType":"YulFunctionCall","src":"68419:30:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"68408:7:19"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"68380:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"68390:7:19","type":""}],"src":"68354:101:19"},{"body":{"nodeType":"YulBlock","src":"68504:43:19","statements":[{"nodeType":"YulAssignment","src":"68514:27:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"68529:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"68536:4:19","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"68525:3:19"},"nodeType":"YulFunctionCall","src":"68525:16:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"68514:7:19"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"68486:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"68496:7:19","type":""}],"src":"68461:86:19"},{"body":{"nodeType":"YulBlock","src":"68597:61:19","statements":[{"nodeType":"YulAssignment","src":"68607:45:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"68622:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"68629:22:19","type":"","value":"0xffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"68618:3:19"},"nodeType":"YulFunctionCall","src":"68618:34:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"68607:7:19"}]}]},"name":"cleanup_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"68579:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"68589:7:19","type":""}],"src":"68553:105:19"},{"body":{"nodeType":"YulBlock","src":"68708:65:19","statements":[{"nodeType":"YulAssignment","src":"68718:49:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"68733:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"68740:26:19","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"68729:3:19"},"nodeType":"YulFunctionCall","src":"68729:38:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"68718:7:19"}]}]},"name":"cleanup_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"68690:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"68700:7:19","type":""}],"src":"68664:109:19"},{"body":{"nodeType":"YulBlock","src":"68868:95:19","statements":[{"nodeType":"YulAssignment","src":"68878:79:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"68951:5:19"}],"functionName":{"name":"convert_t_contract$_AggregatorV3Interface_$590_to_t_uint160","nodeType":"YulIdentifier","src":"68891:59:19"},"nodeType":"YulFunctionCall","src":"68891:66:19"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"68878:9:19"}]}]},"name":"convert_t_contract$_AggregatorV3Interface_$590_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"68848:5:19","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"68858:9:19","type":""}],"src":"68779:184:19"},{"body":{"nodeType":"YulBlock","src":"69058:53:19","statements":[{"nodeType":"YulAssignment","src":"69068:37:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"69099:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"69081:17:19"},"nodeType":"YulFunctionCall","src":"69081:24:19"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"69068:9:19"}]}]},"name":"convert_t_contract$_AggregatorV3Interface_$590_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"69038:5:19","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"69048:9:19","type":""}],"src":"68969:142:19"},{"body":{"nodeType":"YulBlock","src":"69209:98:19","statements":[{"nodeType":"YulAssignment","src":"69219:82:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"69295:5:19"}],"functionName":{"name":"convert_t_contract$_BlockhashStoreInterface_$4786_to_t_uint160","nodeType":"YulIdentifier","src":"69232:62:19"},"nodeType":"YulFunctionCall","src":"69232:69:19"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"69219:9:19"}]}]},"name":"convert_t_contract$_BlockhashStoreInterface_$4786_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"69189:5:19","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"69199:9:19","type":""}],"src":"69117:190:19"},{"body":{"nodeType":"YulBlock","src":"69405:53:19","statements":[{"nodeType":"YulAssignment","src":"69415:37:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"69446:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"69428:17:19"},"nodeType":"YulFunctionCall","src":"69428:24:19"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"69415:9:19"}]}]},"name":"convert_t_contract$_BlockhashStoreInterface_$4786_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"69385:5:19","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"69395:9:19","type":""}],"src":"69313:145:19"},{"body":{"nodeType":"YulBlock","src":"69550:92:19","statements":[{"nodeType":"YulAssignment","src":"69560:76:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"69630:5:19"}],"functionName":{"name":"convert_t_contract$_LinkTokenInterface_$713_to_t_uint160","nodeType":"YulIdentifier","src":"69573:56:19"},"nodeType":"YulFunctionCall","src":"69573:63:19"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"69560:9:19"}]}]},"name":"convert_t_contract$_LinkTokenInterface_$713_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"69530:5:19","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"69540:9:19","type":""}],"src":"69464:178:19"},{"body":{"nodeType":"YulBlock","src":"69734:53:19","statements":[{"nodeType":"YulAssignment","src":"69744:37:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"69775:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"69757:17:19"},"nodeType":"YulFunctionCall","src":"69757:24:19"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"69744:9:19"}]}]},"name":"convert_t_contract$_LinkTokenInterface_$713_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"69714:5:19","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"69724:9:19","type":""}],"src":"69648:139:19"},{"body":{"nodeType":"YulBlock","src":"69852:52:19","statements":[{"nodeType":"YulAssignment","src":"69862:36:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"69892:5:19"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"69875:16:19"},"nodeType":"YulFunctionCall","src":"69875:23:19"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"69862:9:19"}]}]},"name":"convert_t_uint64_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"69832:5:19","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"69842:9:19","type":""}],"src":"69793:111:19"},{"body":{"nodeType":"YulBlock","src":"69969:52:19","statements":[{"nodeType":"YulAssignment","src":"69979:36:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"70009:5:19"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"69992:16:19"},"nodeType":"YulFunctionCall","src":"69992:23:19"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"69979:9:19"}]}]},"name":"convert_t_uint96_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"69949:5:19","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"69959:9:19","type":""}],"src":"69910:111:19"},{"body":{"nodeType":"YulBlock","src":"70076:258:19","statements":[{"nodeType":"YulVariableDeclaration","src":"70086:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"70095:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"70090:1:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"70155:63:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"70180:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"70185:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"70176:3:19"},"nodeType":"YulFunctionCall","src":"70176:11:19"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"70199:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"70204:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"70195:3:19"},"nodeType":"YulFunctionCall","src":"70195:11:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"70189:5:19"},"nodeType":"YulFunctionCall","src":"70189:18:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"70169:6:19"},"nodeType":"YulFunctionCall","src":"70169:39:19"},"nodeType":"YulExpressionStatement","src":"70169:39:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"70116:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"70119:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"70113:2:19"},"nodeType":"YulFunctionCall","src":"70113:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"70127:19:19","statements":[{"nodeType":"YulAssignment","src":"70129:15:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"70138:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"70141:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"70134:3:19"},"nodeType":"YulFunctionCall","src":"70134:10:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"70129:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"70109:3:19","statements":[]},"src":"70105:113:19"},{"body":{"nodeType":"YulBlock","src":"70252:76:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"70302:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"70307:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"70298:3:19"},"nodeType":"YulFunctionCall","src":"70298:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"70316:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"70291:6:19"},"nodeType":"YulFunctionCall","src":"70291:27:19"},"nodeType":"YulExpressionStatement","src":"70291:27:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"70233:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"70236:6:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"70230:2:19"},"nodeType":"YulFunctionCall","src":"70230:13:19"},"nodeType":"YulIf","src":"70227:2:19"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"70058:3:19","type":""},{"name":"dst","nodeType":"YulTypedName","src":"70063:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"70068:6:19","type":""}],"src":"70027:307:19"},{"body":{"nodeType":"YulBlock","src":"70414:90:19","statements":[{"nodeType":"YulAssignment","src":"70424:74:19","value":{"arguments":[{"arguments":[{"name":"slot_value","nodeType":"YulIdentifier","src":"70486:10:19"}],"functionName":{"name":"shift_right_0_unsigned","nodeType":"YulIdentifier","src":"70463:22:19"},"nodeType":"YulFunctionCall","src":"70463:34:19"}],"functionName":{"name":"cleanup_from_storage_t_uint32","nodeType":"YulIdentifier","src":"70433:29:19"},"nodeType":"YulFunctionCall","src":"70433:65:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"70424:5:19"}]}]},"name":"extract_from_storage_value_offset_0t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot_value","nodeType":"YulTypedName","src":"70393:10:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"70408:5:19","type":""}],"src":"70340:164:19"},{"body":{"nodeType":"YulBlock","src":"70585:91:19","statements":[{"nodeType":"YulAssignment","src":"70595:75:19","value":{"arguments":[{"arguments":[{"name":"slot_value","nodeType":"YulIdentifier","src":"70658:10:19"}],"functionName":{"name":"shift_right_96_unsigned","nodeType":"YulIdentifier","src":"70634:23:19"},"nodeType":"YulFunctionCall","src":"70634:35:19"}],"functionName":{"name":"cleanup_from_storage_t_uint32","nodeType":"YulIdentifier","src":"70604:29:19"},"nodeType":"YulFunctionCall","src":"70604:66:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"70595:5:19"}]}]},"name":"extract_from_storage_value_offset_12t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot_value","nodeType":"YulTypedName","src":"70564:10:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"70579:5:19","type":""}],"src":"70510:166:19"},{"body":{"nodeType":"YulBlock","src":"70757:92:19","statements":[{"nodeType":"YulAssignment","src":"70767:76:19","value":{"arguments":[{"arguments":[{"name":"slot_value","nodeType":"YulIdentifier","src":"70831:10:19"}],"functionName":{"name":"shift_right_128_unsigned","nodeType":"YulIdentifier","src":"70806:24:19"},"nodeType":"YulFunctionCall","src":"70806:36:19"}],"functionName":{"name":"cleanup_from_storage_t_uint32","nodeType":"YulIdentifier","src":"70776:29:19"},"nodeType":"YulFunctionCall","src":"70776:67:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"70767:5:19"}]}]},"name":"extract_from_storage_value_offset_16t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot_value","nodeType":"YulTypedName","src":"70736:10:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"70751:5:19","type":""}],"src":"70682:167:19"},{"body":{"nodeType":"YulBlock","src":"70930:92:19","statements":[{"nodeType":"YulAssignment","src":"70940:76:19","value":{"arguments":[{"arguments":[{"name":"slot_value","nodeType":"YulIdentifier","src":"71004:10:19"}],"functionName":{"name":"shift_right_160_unsigned","nodeType":"YulIdentifier","src":"70979:24:19"},"nodeType":"YulFunctionCall","src":"70979:36:19"}],"functionName":{"name":"cleanup_from_storage_t_uint24","nodeType":"YulIdentifier","src":"70949:29:19"},"nodeType":"YulFunctionCall","src":"70949:67:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"70940:5:19"}]}]},"name":"extract_from_storage_value_offset_20t_uint24","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot_value","nodeType":"YulTypedName","src":"70909:10:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"70924:5:19","type":""}],"src":"70855:167:19"},{"body":{"nodeType":"YulBlock","src":"71103:92:19","statements":[{"nodeType":"YulAssignment","src":"71113:76:19","value":{"arguments":[{"arguments":[{"name":"slot_value","nodeType":"YulIdentifier","src":"71177:10:19"}],"functionName":{"name":"shift_right_184_unsigned","nodeType":"YulIdentifier","src":"71152:24:19"},"nodeType":"YulFunctionCall","src":"71152:36:19"}],"functionName":{"name":"cleanup_from_storage_t_uint24","nodeType":"YulIdentifier","src":"71122:29:19"},"nodeType":"YulFunctionCall","src":"71122:67:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"71113:5:19"}]}]},"name":"extract_from_storage_value_offset_23t_uint24","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot_value","nodeType":"YulTypedName","src":"71082:10:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"71097:5:19","type":""}],"src":"71028:167:19"},{"body":{"nodeType":"YulBlock","src":"71276:92:19","statements":[{"nodeType":"YulAssignment","src":"71286:76:19","value":{"arguments":[{"arguments":[{"name":"slot_value","nodeType":"YulIdentifier","src":"71350:10:19"}],"functionName":{"name":"shift_right_208_unsigned","nodeType":"YulIdentifier","src":"71325:24:19"},"nodeType":"YulFunctionCall","src":"71325:36:19"}],"functionName":{"name":"cleanup_from_storage_t_uint24","nodeType":"YulIdentifier","src":"71295:29:19"},"nodeType":"YulFunctionCall","src":"71295:67:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"71286:5:19"}]}]},"name":"extract_from_storage_value_offset_26t_uint24","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot_value","nodeType":"YulTypedName","src":"71255:10:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"71270:5:19","type":""}],"src":"71201:167:19"},{"body":{"nodeType":"YulBlock","src":"71449:92:19","statements":[{"nodeType":"YulAssignment","src":"71459:76:19","value":{"arguments":[{"arguments":[{"name":"slot_value","nodeType":"YulIdentifier","src":"71523:10:19"}],"functionName":{"name":"shift_right_232_unsigned","nodeType":"YulIdentifier","src":"71498:24:19"},"nodeType":"YulFunctionCall","src":"71498:36:19"}],"functionName":{"name":"cleanup_from_storage_t_uint24","nodeType":"YulIdentifier","src":"71468:29:19"},"nodeType":"YulFunctionCall","src":"71468:67:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"71459:5:19"}]}]},"name":"extract_from_storage_value_offset_29t_uint24","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot_value","nodeType":"YulTypedName","src":"71428:10:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"71443:5:19","type":""}],"src":"71374:167:19"},{"body":{"nodeType":"YulBlock","src":"71621:91:19","statements":[{"nodeType":"YulAssignment","src":"71631:75:19","value":{"arguments":[{"arguments":[{"name":"slot_value","nodeType":"YulIdentifier","src":"71694:10:19"}],"functionName":{"name":"shift_right_32_unsigned","nodeType":"YulIdentifier","src":"71670:23:19"},"nodeType":"YulFunctionCall","src":"71670:35:19"}],"functionName":{"name":"cleanup_from_storage_t_uint32","nodeType":"YulIdentifier","src":"71640:29:19"},"nodeType":"YulFunctionCall","src":"71640:66:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"71631:5:19"}]}]},"name":"extract_from_storage_value_offset_4t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot_value","nodeType":"YulTypedName","src":"71600:10:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"71615:5:19","type":""}],"src":"71547:165:19"},{"body":{"nodeType":"YulBlock","src":"71792:91:19","statements":[{"nodeType":"YulAssignment","src":"71802:75:19","value":{"arguments":[{"arguments":[{"name":"slot_value","nodeType":"YulIdentifier","src":"71865:10:19"}],"functionName":{"name":"shift_right_64_unsigned","nodeType":"YulIdentifier","src":"71841:23:19"},"nodeType":"YulFunctionCall","src":"71841:35:19"}],"functionName":{"name":"cleanup_from_storage_t_uint32","nodeType":"YulIdentifier","src":"71811:29:19"},"nodeType":"YulFunctionCall","src":"71811:66:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"71802:5:19"}]}]},"name":"extract_from_storage_value_offset_8t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot_value","nodeType":"YulTypedName","src":"71771:10:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"71786:5:19","type":""}],"src":"71718:165:19"},{"body":{"nodeType":"YulBlock","src":"71932:238:19","statements":[{"nodeType":"YulVariableDeclaration","src":"71942:58:19","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"71964:6:19"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"71994:4:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"71972:21:19"},"nodeType":"YulFunctionCall","src":"71972:27:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"71960:3:19"},"nodeType":"YulFunctionCall","src":"71960:40:19"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"71946:10:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"72111:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"72113:16:19"},"nodeType":"YulFunctionCall","src":"72113:18:19"},"nodeType":"YulExpressionStatement","src":"72113:18:19"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"72054:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"72066:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"72051:2:19"},"nodeType":"YulFunctionCall","src":"72051:34:19"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"72090:10:19"},{"name":"memPtr","nodeType":"YulIdentifier","src":"72102:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"72087:2:19"},"nodeType":"YulFunctionCall","src":"72087:22:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"72048:2:19"},"nodeType":"YulFunctionCall","src":"72048:62:19"},"nodeType":"YulIf","src":"72045:2:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"72149:2:19","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"72153:10:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"72142:6:19"},"nodeType":"YulFunctionCall","src":"72142:22:19"},"nodeType":"YulExpressionStatement","src":"72142:22:19"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"71918:6:19","type":""},{"name":"size","nodeType":"YulTypedName","src":"71926:4:19","type":""}],"src":"71889:281:19"},{"body":{"nodeType":"YulBlock","src":"72219:190:19","statements":[{"nodeType":"YulAssignment","src":"72229:33:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"72256:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"72238:17:19"},"nodeType":"YulFunctionCall","src":"72238:24:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"72229:5:19"}]},{"body":{"nodeType":"YulBlock","src":"72352:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"72354:16:19"},"nodeType":"YulFunctionCall","src":"72354:18:19"},"nodeType":"YulExpressionStatement","src":"72354:18:19"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"72277:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"72284:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"72274:2:19"},"nodeType":"YulFunctionCall","src":"72274:77:19"},"nodeType":"YulIf","src":"72271:2:19"},{"nodeType":"YulAssignment","src":"72383:20:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"72394:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"72401:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"72390:3:19"},"nodeType":"YulFunctionCall","src":"72390:13:19"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"72383:3:19"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"72205:5:19","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"72215:3:19","type":""}],"src":"72176:233:19"},{"body":{"nodeType":"YulBlock","src":"72457:141:19","statements":[{"nodeType":"YulAssignment","src":"72467:32:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"72493:5:19"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"72476:16:19"},"nodeType":"YulFunctionCall","src":"72476:23:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"72467:5:19"}]},{"body":{"nodeType":"YulBlock","src":"72541:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"72543:16:19"},"nodeType":"YulFunctionCall","src":"72543:18:19"},"nodeType":"YulExpressionStatement","src":"72543:18:19"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"72514:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"72521:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"72511:2:19"},"nodeType":"YulFunctionCall","src":"72511:29:19"},"nodeType":"YulIf","src":"72508:2:19"},{"nodeType":"YulAssignment","src":"72572:20:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"72583:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"72590:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"72579:3:19"},"nodeType":"YulFunctionCall","src":"72579:13:19"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"72572:3:19"}]}]},"name":"increment_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"72443:5:19","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"72453:3:19","type":""}],"src":"72415:183:19"},{"body":{"nodeType":"YulBlock","src":"72651:53:19","statements":[{"nodeType":"YulAssignment","src":"72661:37:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"72692:5:19"}],"functionName":{"name":"leftAlign_t_uint160","nodeType":"YulIdentifier","src":"72672:19:19"},"nodeType":"YulFunctionCall","src":"72672:26:19"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"72661:7:19"}]}]},"name":"leftAlign_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"72633:5:19","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"72643:7:19","type":""}],"src":"72604:100:19"},{"body":{"nodeType":"YulBlock","src":"72757:32:19","statements":[{"nodeType":"YulAssignment","src":"72767:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"72778:5:19"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"72767:7:19"}]}]},"name":"leftAlign_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"72739:5:19","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"72749:7:19","type":""}],"src":"72710:79:19"},{"body":{"nodeType":"YulBlock","src":"72842:47:19","statements":[{"nodeType":"YulAssignment","src":"72852:31:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"72877:5:19"}],"functionName":{"name":"shift_left_96","nodeType":"YulIdentifier","src":"72863:13:19"},"nodeType":"YulFunctionCall","src":"72863:20:19"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"72852:7:19"}]}]},"name":"leftAlign_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"72824:5:19","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"72834:7:19","type":""}],"src":"72795:94:19"},{"body":{"nodeType":"YulBlock","src":"72942:32:19","statements":[{"nodeType":"YulAssignment","src":"72952:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"72963:5:19"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"72952:7:19"}]}]},"name":"leftAlign_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"72924:5:19","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"72934:7:19","type":""}],"src":"72895:79:19"},{"body":{"nodeType":"YulBlock","src":"73014:142:19","statements":[{"nodeType":"YulAssignment","src":"73024:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"73047:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"73029:17:19"},"nodeType":"YulFunctionCall","src":"73029:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"73024:1:19"}]},{"nodeType":"YulAssignment","src":"73058:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"73081:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"73063:17:19"},"nodeType":"YulFunctionCall","src":"73063:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"73058:1:19"}]},{"body":{"nodeType":"YulBlock","src":"73105:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"73107:16:19"},"nodeType":"YulFunctionCall","src":"73107:18:19"},"nodeType":"YulExpressionStatement","src":"73107:18:19"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"73102:1:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"73095:6:19"},"nodeType":"YulFunctionCall","src":"73095:9:19"},"nodeType":"YulIf","src":"73092:2:19"},{"nodeType":"YulAssignment","src":"73136:14:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"73145:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"73148:1:19"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"73141:3:19"},"nodeType":"YulFunctionCall","src":"73141:9:19"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"73136:1:19"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"73003:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"73006:1:19","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"73012:1:19","type":""}],"src":"72980:176:19"},{"body":{"nodeType":"YulBlock","src":"73190:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73207:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"73210:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"73200:6:19"},"nodeType":"YulFunctionCall","src":"73200:88:19"},"nodeType":"YulExpressionStatement","src":"73200:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73304:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"73307:4:19","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"73297:6:19"},"nodeType":"YulFunctionCall","src":"73297:15:19"},"nodeType":"YulExpressionStatement","src":"73297:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73328:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"73331:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"73321:6:19"},"nodeType":"YulFunctionCall","src":"73321:15:19"},"nodeType":"YulExpressionStatement","src":"73321:15:19"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"73162:180:19"},{"body":{"nodeType":"YulBlock","src":"73376:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73393:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"73396:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"73386:6:19"},"nodeType":"YulFunctionCall","src":"73386:88:19"},"nodeType":"YulExpressionStatement","src":"73386:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73490:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"73493:4:19","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"73483:6:19"},"nodeType":"YulFunctionCall","src":"73483:15:19"},"nodeType":"YulExpressionStatement","src":"73483:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73514:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"73517:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"73507:6:19"},"nodeType":"YulFunctionCall","src":"73507:15:19"},"nodeType":"YulExpressionStatement","src":"73507:15:19"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"73348:180:19"},{"body":{"nodeType":"YulBlock","src":"73562:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73579:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"73582:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"73572:6:19"},"nodeType":"YulFunctionCall","src":"73572:88:19"},"nodeType":"YulExpressionStatement","src":"73572:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73676:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"73679:4:19","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"73669:6:19"},"nodeType":"YulFunctionCall","src":"73669:15:19"},"nodeType":"YulExpressionStatement","src":"73669:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73700:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"73703:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"73693:6:19"},"nodeType":"YulFunctionCall","src":"73693:15:19"},"nodeType":"YulExpressionStatement","src":"73693:15:19"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"73534:180:19"},{"body":{"nodeType":"YulBlock","src":"73748:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73765:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"73768:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"73758:6:19"},"nodeType":"YulFunctionCall","src":"73758:88:19"},"nodeType":"YulExpressionStatement","src":"73758:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73862:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"73865:4:19","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"73855:6:19"},"nodeType":"YulFunctionCall","src":"73855:15:19"},"nodeType":"YulExpressionStatement","src":"73855:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73886:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"73889:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"73879:6:19"},"nodeType":"YulFunctionCall","src":"73879:15:19"},"nodeType":"YulExpressionStatement","src":"73879:15:19"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"73720:180:19"},{"body":{"nodeType":"YulBlock","src":"73934:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73951:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"73954:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"73944:6:19"},"nodeType":"YulFunctionCall","src":"73944:88:19"},"nodeType":"YulExpressionStatement","src":"73944:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"74048:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"74051:4:19","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"74041:6:19"},"nodeType":"YulFunctionCall","src":"74041:15:19"},"nodeType":"YulExpressionStatement","src":"74041:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"74072:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"74075:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"74065:6:19"},"nodeType":"YulFunctionCall","src":"74065:15:19"},"nodeType":"YulExpressionStatement","src":"74065:15:19"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"73906:180:19"},{"body":{"nodeType":"YulBlock","src":"74181:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"74198:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"74201:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"74191:6:19"},"nodeType":"YulFunctionCall","src":"74191:12:19"},"nodeType":"YulExpressionStatement","src":"74191:12:19"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"74092:117:19"},{"body":{"nodeType":"YulBlock","src":"74304:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"74321:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"74324:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"74314:6:19"},"nodeType":"YulFunctionCall","src":"74314:12:19"},"nodeType":"YulExpressionStatement","src":"74314:12:19"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"74215:117:19"},{"body":{"nodeType":"YulBlock","src":"74427:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"74444:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"74447:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"74437:6:19"},"nodeType":"YulFunctionCall","src":"74437:12:19"},"nodeType":"YulExpressionStatement","src":"74437:12:19"}]},"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulFunctionDefinition","src":"74338:117:19"},{"body":{"nodeType":"YulBlock","src":"74550:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"74567:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"74570:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"74560:6:19"},"nodeType":"YulFunctionCall","src":"74560:12:19"},"nodeType":"YulExpressionStatement","src":"74560:12:19"}]},"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulFunctionDefinition","src":"74461:117:19"},{"body":{"nodeType":"YulBlock","src":"74673:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"74690:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"74693:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"74683:6:19"},"nodeType":"YulFunctionCall","src":"74683:12:19"},"nodeType":"YulExpressionStatement","src":"74683:12:19"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"74584:117:19"},{"body":{"nodeType":"YulBlock","src":"74796:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"74813:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"74816:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"74806:6:19"},"nodeType":"YulFunctionCall","src":"74806:12:19"},"nodeType":"YulExpressionStatement","src":"74806:12:19"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"74707:117:19"},{"body":{"nodeType":"YulBlock","src":"74919:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"74936:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"74939:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"74929:6:19"},"nodeType":"YulFunctionCall","src":"74929:12:19"},"nodeType":"YulExpressionStatement","src":"74929:12:19"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"74830:117:19"},{"body":{"nodeType":"YulBlock","src":"75001:54:19","statements":[{"nodeType":"YulAssignment","src":"75011:38:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"75029:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"75036:2:19","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"75025:3:19"},"nodeType":"YulFunctionCall","src":"75025:14:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"75045:2:19","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"75041:3:19"},"nodeType":"YulFunctionCall","src":"75041:7:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"75021:3:19"},"nodeType":"YulFunctionCall","src":"75021:28:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"75011:6:19"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"74984:5:19","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"74994:6:19","type":""}],"src":"74953:102:19"},{"body":{"nodeType":"YulBlock","src":"75103:52:19","statements":[{"nodeType":"YulAssignment","src":"75113:35:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"75138:2:19","type":"","value":"96"},{"name":"value","nodeType":"YulIdentifier","src":"75142:5:19"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"75134:3:19"},"nodeType":"YulFunctionCall","src":"75134:14:19"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"75113:8:19"}]}]},"name":"shift_left_96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"75084:5:19","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"75094:8:19","type":""}],"src":"75061:94:19"},{"body":{"nodeType":"YulBlock","src":"75212:51:19","statements":[{"nodeType":"YulAssignment","src":"75222:34:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"75247:1:19","type":"","value":"0"},{"name":"value","nodeType":"YulIdentifier","src":"75250:5:19"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"75243:3:19"},"nodeType":"YulFunctionCall","src":"75243:13:19"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"75222:8:19"}]}]},"name":"shift_right_0_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"75193:5:19","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"75203:8:19","type":""}],"src":"75161:102:19"},{"body":{"nodeType":"YulBlock","src":"75322:53:19","statements":[{"nodeType":"YulAssignment","src":"75332:36:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"75357:3:19","type":"","value":"128"},{"name":"value","nodeType":"YulIdentifier","src":"75362:5:19"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"75353:3:19"},"nodeType":"YulFunctionCall","src":"75353:15:19"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"75332:8:19"}]}]},"name":"shift_right_128_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"75303:5:19","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"75313:8:19","type":""}],"src":"75269:106:19"},{"body":{"nodeType":"YulBlock","src":"75434:53:19","statements":[{"nodeType":"YulAssignment","src":"75444:36:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"75469:3:19","type":"","value":"160"},{"name":"value","nodeType":"YulIdentifier","src":"75474:5:19"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"75465:3:19"},"nodeType":"YulFunctionCall","src":"75465:15:19"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"75444:8:19"}]}]},"name":"shift_right_160_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"75415:5:19","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"75425:8:19","type":""}],"src":"75381:106:19"},{"body":{"nodeType":"YulBlock","src":"75546:53:19","statements":[{"nodeType":"YulAssignment","src":"75556:36:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"75581:3:19","type":"","value":"184"},{"name":"value","nodeType":"YulIdentifier","src":"75586:5:19"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"75577:3:19"},"nodeType":"YulFunctionCall","src":"75577:15:19"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"75556:8:19"}]}]},"name":"shift_right_184_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"75527:5:19","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"75537:8:19","type":""}],"src":"75493:106:19"},{"body":{"nodeType":"YulBlock","src":"75658:53:19","statements":[{"nodeType":"YulAssignment","src":"75668:36:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"75693:3:19","type":"","value":"208"},{"name":"value","nodeType":"YulIdentifier","src":"75698:5:19"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"75689:3:19"},"nodeType":"YulFunctionCall","src":"75689:15:19"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"75668:8:19"}]}]},"name":"shift_right_208_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"75639:5:19","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"75649:8:19","type":""}],"src":"75605:106:19"},{"body":{"nodeType":"YulBlock","src":"75770:53:19","statements":[{"nodeType":"YulAssignment","src":"75780:36:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"75805:3:19","type":"","value":"232"},{"name":"value","nodeType":"YulIdentifier","src":"75810:5:19"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"75801:3:19"},"nodeType":"YulFunctionCall","src":"75801:15:19"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"75780:8:19"}]}]},"name":"shift_right_232_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"75751:5:19","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"75761:8:19","type":""}],"src":"75717:106:19"},{"body":{"nodeType":"YulBlock","src":"75881:52:19","statements":[{"nodeType":"YulAssignment","src":"75891:35:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"75916:2:19","type":"","value":"32"},{"name":"value","nodeType":"YulIdentifier","src":"75920:5:19"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"75912:3:19"},"nodeType":"YulFunctionCall","src":"75912:14:19"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"75891:8:19"}]}]},"name":"shift_right_32_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"75862:5:19","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"75872:8:19","type":""}],"src":"75829:104:19"},{"body":{"nodeType":"YulBlock","src":"75991:52:19","statements":[{"nodeType":"YulAssignment","src":"76001:35:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"76026:2:19","type":"","value":"64"},{"name":"value","nodeType":"YulIdentifier","src":"76030:5:19"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"76022:3:19"},"nodeType":"YulFunctionCall","src":"76022:14:19"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"76001:8:19"}]}]},"name":"shift_right_64_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"75972:5:19","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"75982:8:19","type":""}],"src":"75939:104:19"},{"body":{"nodeType":"YulBlock","src":"76101:52:19","statements":[{"nodeType":"YulAssignment","src":"76111:35:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"76136:2:19","type":"","value":"96"},{"name":"value","nodeType":"YulIdentifier","src":"76140:5:19"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"76132:3:19"},"nodeType":"YulFunctionCall","src":"76132:14:19"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"76111:8:19"}]}]},"name":"shift_right_96_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"76082:5:19","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"76092:8:19","type":""}],"src":"76049:104:19"},{"body":{"nodeType":"YulBlock","src":"76265:66:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"76287:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"76295:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"76283:3:19"},"nodeType":"YulFunctionCall","src":"76283:14:19"},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","kind":"string","nodeType":"YulLiteral","src":"76299:24:19","type":"","value":"Must be proposed owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"76276:6:19"},"nodeType":"YulFunctionCall","src":"76276:48:19"},"nodeType":"YulExpressionStatement","src":"76276:48:19"}]},"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"76257:6:19","type":""}],"src":"76159:172:19"},{"body":{"nodeType":"YulBlock","src":"76443:67:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"76465:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"76473:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"76461:3:19"},"nodeType":"YulFunctionCall","src":"76461:14:19"},{"hexValue":"5365636f6e64206d756c20636865636b206661696c6564","kind":"string","nodeType":"YulLiteral","src":"76477:25:19","type":"","value":"Second mul check failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"76454:6:19"},"nodeType":"YulFunctionCall","src":"76454:49:19"},"nodeType":"YulExpressionStatement","src":"76454:49:19"}]},"name":"store_literal_in_memory_13447e9fa8630e4bb2fa50f1493aa790167933f55263568ac4ad74cb4d138234","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"76435:6:19","type":""}],"src":"76337:173:19"},{"body":{"nodeType":"YulBlock","src":"76622:74:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"76644:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"76652:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"76640:3:19"},"nodeType":"YulFunctionCall","src":"76640:14:19"},{"hexValue":"706f696e747320696e2073756d206d7573742062652064697374696e6374","kind":"string","nodeType":"YulLiteral","src":"76656:32:19","type":"","value":"points in sum must be distinct"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"76633:6:19"},"nodeType":"YulFunctionCall","src":"76633:56:19"},"nodeType":"YulExpressionStatement","src":"76633:56:19"}]},"name":"store_literal_in_memory_2ce93c410880bb13bca91831655ee36bc7ab052e7c8cb24dd914165b1030eeca","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"76614:6:19","type":""}],"src":"76516:180:19"},{"body":{"nodeType":"YulBlock","src":"76808:66:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"76830:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"76838:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"76826:3:19"},"nodeType":"YulFunctionCall","src":"76826:14:19"},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","kind":"string","nodeType":"YulLiteral","src":"76842:24:19","type":"","value":"Only callable by owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"76819:6:19"},"nodeType":"YulFunctionCall","src":"76819:48:19"},"nodeType":"YulExpressionStatement","src":"76819:48:19"}]},"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"76800:6:19","type":""}],"src":"76702:172:19"},{"body":{"nodeType":"YulBlock","src":"76986:62:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"77008:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"77016:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"77004:3:19"},"nodeType":"YulFunctionCall","src":"77004:14:19"},{"hexValue":"6269674d6f64457870206661696c75726521","kind":"string","nodeType":"YulLiteral","src":"77020:20:19","type":"","value":"bigModExp failure!"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"76997:6:19"},"nodeType":"YulFunctionCall","src":"76997:44:19"},"nodeType":"YulExpressionStatement","src":"76997:44:19"}]},"name":"store_literal_in_memory_4bd695d9be776d24ba6aaa6ea48a189f388adfd8a5e6a1df7bd6471290ea4e5f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"76978:6:19","type":""}],"src":"76880:168:19"},{"body":{"nodeType":"YulBlock","src":"77160:62:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"77182:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"77190:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"77178:3:19"},"nodeType":"YulFunctionCall","src":"77178:14:19"},{"hexValue":"696e76616c696420782d6f7264696e617465","kind":"string","nodeType":"YulLiteral","src":"77194:20:19","type":"","value":"invalid x-ordinate"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"77171:6:19"},"nodeType":"YulFunctionCall","src":"77171:44:19"},"nodeType":"YulExpressionStatement","src":"77171:44:19"}]},"name":"store_literal_in_memory_787cf99fb194dba922561b5b1fd0b18a6a49c57eaa01d9c5279f2b2a5bdc1a86","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"77152:6:19","type":""}],"src":"77054:168:19"},{"body":{"nodeType":"YulBlock","src":"77334:55:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"77356:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"77364:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"77352:3:19"},"nodeType":"YulFunctionCall","src":"77352:14:19"},{"hexValue":"626164207769746e657373","kind":"string","nodeType":"YulLiteral","src":"77368:13:19","type":"","value":"bad witness"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"77345:6:19"},"nodeType":"YulFunctionCall","src":"77345:37:19"},"nodeType":"YulExpressionStatement","src":"77345:37:19"}]},"name":"store_literal_in_memory_7fcbfa9df9f83be5218dd62480bcb5cdae56a970e549b88ff2403f5fcded9211","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"77326:6:19","type":""}],"src":"77228:161:19"},{"body":{"nodeType":"YulBlock","src":"77501:69:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"77523:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"77531:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"77519:3:19"},"nodeType":"YulFunctionCall","src":"77519:14:19"},{"hexValue":"6164647228632a706b2b732a6729213d5f755769746e657373","kind":"string","nodeType":"YulLiteral","src":"77535:27:19","type":"","value":"addr(c*pk+s*g)!=_uWitness"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"77512:6:19"},"nodeType":"YulFunctionCall","src":"77512:51:19"},"nodeType":"YulExpressionStatement","src":"77512:51:19"}]},"name":"store_literal_in_memory_897d9ab785e875f3b83c51a39f09c2f6a852e06c26e3faf90359e5ad589f8cf1","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"77493:6:19","type":""}],"src":"77395:175:19"},{"body":{"nodeType":"YulBlock","src":"77682:69:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"77704:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"77712:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"77700:3:19"},"nodeType":"YulFunctionCall","src":"77700:14:19"},{"hexValue":"696e765a206d75737420626520696e7665727365206f66207a","kind":"string","nodeType":"YulLiteral","src":"77716:27:19","type":"","value":"invZ must be inverse of z"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"77693:6:19"},"nodeType":"YulFunctionCall","src":"77693:51:19"},"nodeType":"YulExpressionStatement","src":"77693:51:19"}]},"name":"store_literal_in_memory_95046d93d9b2e6ba778cd180e8c682e7d907547386cb54bf80bca322c50144ca","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"77674:6:19","type":""}],"src":"77576:175:19"},{"body":{"nodeType":"YulBlock","src":"77863:73:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"77885:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"77893:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"77881:3:19"},"nodeType":"YulFunctionCall","src":"77881:14:19"},{"hexValue":"6347616d6d615769746e657373206973206e6f74206f6e206375727665","kind":"string","nodeType":"YulLiteral","src":"77897:31:19","type":"","value":"cGammaWitness is not on curve"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"77874:6:19"},"nodeType":"YulFunctionCall","src":"77874:55:19"},"nodeType":"YulExpressionStatement","src":"77874:55:19"}]},"name":"store_literal_in_memory_9f90959a5b25997fe56cdafc2f72d300e298468f5ac5e847db7890be22108d2b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"77855:6:19","type":""}],"src":"77757:179:19"},{"body":{"nodeType":"YulBlock","src":"78048:70:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"78070:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"78078:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"78066:3:19"},"nodeType":"YulFunctionCall","src":"78066:14:19"},{"hexValue":"7075626c6963206b6579206973206e6f74206f6e206375727665","kind":"string","nodeType":"YulLiteral","src":"78082:28:19","type":"","value":"public key is not on curve"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"78059:6:19"},"nodeType":"YulFunctionCall","src":"78059:52:19"},"nodeType":"YulExpressionStatement","src":"78059:52:19"}]},"name":"store_literal_in_memory_ae4825d6ed8aab0513e68c27d2710aa68bcf110761c187d047951a5ec2580d8c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"78040:6:19","type":""}],"src":"77942:176:19"},{"body":{"nodeType":"YulBlock","src":"78230:65:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"78252:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"78260:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"78248:3:19"},"nodeType":"YulFunctionCall","src":"78248:14:19"},{"hexValue":"67616d6d61206973206e6f74206f6e206375727665","kind":"string","nodeType":"YulLiteral","src":"78264:23:19","type":"","value":"gamma is not on curve"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"78241:6:19"},"nodeType":"YulFunctionCall","src":"78241:47:19"},"nodeType":"YulExpressionStatement","src":"78241:47:19"}]},"name":"store_literal_in_memory_c6038a70864418dbffbd772a49c391c3536f6b633b3f2ccbcd6a6e15dbadd34c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"78222:6:19","type":""}],"src":"78124:171:19"},{"body":{"nodeType":"YulBlock","src":"78407:57:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"78429:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"78437:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"78425:3:19"},"nodeType":"YulFunctionCall","src":"78425:14:19"},{"hexValue":"696e76616c69642070726f6f66","kind":"string","nodeType":"YulLiteral","src":"78441:15:19","type":"","value":"invalid proof"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"78418:6:19"},"nodeType":"YulFunctionCall","src":"78418:39:19"},"nodeType":"YulExpressionStatement","src":"78418:39:19"}]},"name":"store_literal_in_memory_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"78399:6:19","type":""}],"src":"78301:163:19"},{"body":{"nodeType":"YulBlock","src":"78576:67:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"78598:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"78606:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"78594:3:19"},"nodeType":"YulFunctionCall","src":"78594:14:19"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"78610:25:19","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"78587:6:19"},"nodeType":"YulFunctionCall","src":"78587:49:19"},"nodeType":"YulExpressionStatement","src":"78587:49:19"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"78568:6:19","type":""}],"src":"78470:173:19"},{"body":{"nodeType":"YulBlock","src":"78755:66:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"78777:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"78785:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"78773:3:19"},"nodeType":"YulFunctionCall","src":"78773:14:19"},{"hexValue":"4669727374206d756c20636865636b206661696c6564","kind":"string","nodeType":"YulLiteral","src":"78789:24:19","type":"","value":"First mul check failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"78766:6:19"},"nodeType":"YulFunctionCall","src":"78766:48:19"},"nodeType":"YulExpressionStatement","src":"78766:48:19"}]},"name":"store_literal_in_memory_d9cf4c09fcc6ead19e539ee3210816df98f1219b8b47e830620ffd543bfea51f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"78747:6:19","type":""}],"src":"78649:172:19"},{"body":{"nodeType":"YulBlock","src":"78933:55:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"78955:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"78963:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"78951:3:19"},"nodeType":"YulFunctionCall","src":"78951:14:19"},{"hexValue":"7a65726f207363616c6172","kind":"string","nodeType":"YulLiteral","src":"78967:13:19","type":"","value":"zero scalar"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"78944:6:19"},"nodeType":"YulFunctionCall","src":"78944:37:19"},"nodeType":"YulExpressionStatement","src":"78944:37:19"}]},"name":"store_literal_in_memory_e71e9381bf8fff7d9eeee436d182c3c8b982b1d416953f4ca9ccf572989baeca","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"78925:6:19","type":""}],"src":"78827:161:19"},{"body":{"nodeType":"YulBlock","src":"79100:62:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"79122:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"79130:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"79118:3:19"},"nodeType":"YulFunctionCall","src":"79118:14:19"},{"hexValue":"696e76616c696420792d6f7264696e617465","kind":"string","nodeType":"YulLiteral","src":"79134:20:19","type":"","value":"invalid y-ordinate"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"79111:6:19"},"nodeType":"YulFunctionCall","src":"79111:44:19"},"nodeType":"YulExpressionStatement","src":"79111:44:19"}]},"name":"store_literal_in_memory_ecc598139057476f7e46578e2e254b173afe0910225980583669989d2a737f84","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"79092:6:19","type":""}],"src":"78994:168:19"},{"body":{"nodeType":"YulBlock","src":"79274:72:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"79296:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"79304:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"79292:3:19"},"nodeType":"YulFunctionCall","src":"79292:14:19"},{"hexValue":"73486173685769746e657373206973206e6f74206f6e206375727665","kind":"string","nodeType":"YulLiteral","src":"79308:30:19","type":"","value":"sHashWitness is not on curve"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"79285:6:19"},"nodeType":"YulFunctionCall","src":"79285:54:19"},"nodeType":"YulExpressionStatement","src":"79285:54:19"}]},"name":"store_literal_in_memory_ff425c3ce65530e49c0c35a5fdd7a61b00545f1fcc6482c28903cdcf48ac624f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"79266:6:19","type":""}],"src":"79168:178:19"},{"body":{"nodeType":"YulBlock","src":"79395:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"79452:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"79461:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"79464:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"79454:6:19"},"nodeType":"YulFunctionCall","src":"79454:12:19"},"nodeType":"YulExpressionStatement","src":"79454:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"79418:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"79443:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"79425:17:19"},"nodeType":"YulFunctionCall","src":"79425:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"79415:2:19"},"nodeType":"YulFunctionCall","src":"79415:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"79408:6:19"},"nodeType":"YulFunctionCall","src":"79408:43:19"},"nodeType":"YulIf","src":"79405:2:19"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"79388:5:19","type":""}],"src":"79352:122:19"},{"body":{"nodeType":"YulBlock","src":"79520:76:19","statements":[{"body":{"nodeType":"YulBlock","src":"79574:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"79583:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"79586:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"79576:6:19"},"nodeType":"YulFunctionCall","src":"79576:12:19"},"nodeType":"YulExpressionStatement","src":"79576:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"79543:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"79565:5:19"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"79550:14:19"},"nodeType":"YulFunctionCall","src":"79550:21:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"79540:2:19"},"nodeType":"YulFunctionCall","src":"79540:32:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"79533:6:19"},"nodeType":"YulFunctionCall","src":"79533:40:19"},"nodeType":"YulIf","src":"79530:2:19"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"79513:5:19","type":""}],"src":"79480:116:19"},{"body":{"nodeType":"YulBlock","src":"79645:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"79702:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"79711:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"79714:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"79704:6:19"},"nodeType":"YulFunctionCall","src":"79704:12:19"},"nodeType":"YulExpressionStatement","src":"79704:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"79668:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"79693:5:19"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"79675:17:19"},"nodeType":"YulFunctionCall","src":"79675:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"79665:2:19"},"nodeType":"YulFunctionCall","src":"79665:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"79658:6:19"},"nodeType":"YulFunctionCall","src":"79658:43:19"},"nodeType":"YulIf","src":"79655:2:19"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"79638:5:19","type":""}],"src":"79602:122:19"},{"body":{"nodeType":"YulBlock","src":"79772:78:19","statements":[{"body":{"nodeType":"YulBlock","src":"79828:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"79837:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"79840:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"79830:6:19"},"nodeType":"YulFunctionCall","src":"79830:12:19"},"nodeType":"YulExpressionStatement","src":"79830:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"79795:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"79819:5:19"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"79802:16:19"},"nodeType":"YulFunctionCall","src":"79802:23:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"79792:2:19"},"nodeType":"YulFunctionCall","src":"79792:34:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"79785:6:19"},"nodeType":"YulFunctionCall","src":"79785:42:19"},"nodeType":"YulIf","src":"79782:2:19"}]},"name":"validator_revert_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"79765:5:19","type":""}],"src":"79730:120:19"},{"body":{"nodeType":"YulBlock","src":"79898:78:19","statements":[{"body":{"nodeType":"YulBlock","src":"79954:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"79963:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"79966:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"79956:6:19"},"nodeType":"YulFunctionCall","src":"79956:12:19"},"nodeType":"YulExpressionStatement","src":"79956:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"79921:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"79945:5:19"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"79928:16:19"},"nodeType":"YulFunctionCall","src":"79928:23:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"79918:2:19"},"nodeType":"YulFunctionCall","src":"79918:34:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"79911:6:19"},"nodeType":"YulFunctionCall","src":"79911:42:19"},"nodeType":"YulIf","src":"79908:2:19"}]},"name":"validator_revert_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"79891:5:19","type":""}],"src":"79856:120:19"},{"body":{"nodeType":"YulBlock","src":"80024:78:19","statements":[{"body":{"nodeType":"YulBlock","src":"80080:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"80089:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"80092:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"80082:6:19"},"nodeType":"YulFunctionCall","src":"80082:12:19"},"nodeType":"YulExpressionStatement","src":"80082:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"80047:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"80071:5:19"}],"functionName":{"name":"cleanup_t_uint24","nodeType":"YulIdentifier","src":"80054:16:19"},"nodeType":"YulFunctionCall","src":"80054:23:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"80044:2:19"},"nodeType":"YulFunctionCall","src":"80044:34:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"80037:6:19"},"nodeType":"YulFunctionCall","src":"80037:42:19"},"nodeType":"YulIf","src":"80034:2:19"}]},"name":"validator_revert_t_uint24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"80017:5:19","type":""}],"src":"79982:120:19"},{"body":{"nodeType":"YulBlock","src":"80151:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"80208:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"80217:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"80220:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"80210:6:19"},"nodeType":"YulFunctionCall","src":"80210:12:19"},"nodeType":"YulExpressionStatement","src":"80210:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"80174:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"80199:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"80181:17:19"},"nodeType":"YulFunctionCall","src":"80181:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"80171:2:19"},"nodeType":"YulFunctionCall","src":"80171:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"80164:6:19"},"nodeType":"YulFunctionCall","src":"80164:43:19"},"nodeType":"YulIf","src":"80161:2:19"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"80144:5:19","type":""}],"src":"80108:122:19"},{"body":{"nodeType":"YulBlock","src":"80278:78:19","statements":[{"body":{"nodeType":"YulBlock","src":"80334:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"80343:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"80346:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"80336:6:19"},"nodeType":"YulFunctionCall","src":"80336:12:19"},"nodeType":"YulExpressionStatement","src":"80336:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"80301:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"80325:5:19"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"80308:16:19"},"nodeType":"YulFunctionCall","src":"80308:23:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"80298:2:19"},"nodeType":"YulFunctionCall","src":"80298:34:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"80291:6:19"},"nodeType":"YulFunctionCall","src":"80291:42:19"},"nodeType":"YulIf","src":"80288:2:19"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"80271:5:19","type":""}],"src":"80236:120:19"},{"body":{"nodeType":"YulBlock","src":"80404:78:19","statements":[{"body":{"nodeType":"YulBlock","src":"80460:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"80469:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"80472:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"80462:6:19"},"nodeType":"YulFunctionCall","src":"80462:12:19"},"nodeType":"YulExpressionStatement","src":"80462:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"80427:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"80451:5:19"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"80434:16:19"},"nodeType":"YulFunctionCall","src":"80434:23:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"80424:2:19"},"nodeType":"YulFunctionCall","src":"80424:34:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"80417:6:19"},"nodeType":"YulFunctionCall","src":"80417:42:19"},"nodeType":"YulIf","src":"80414:2:19"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"80397:5:19","type":""}],"src":"80362:120:19"},{"body":{"nodeType":"YulBlock","src":"80530:78:19","statements":[{"body":{"nodeType":"YulBlock","src":"80586:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"80595:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"80598:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"80588:6:19"},"nodeType":"YulFunctionCall","src":"80588:12:19"},"nodeType":"YulExpressionStatement","src":"80588:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"80553:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"80577:5:19"}],"functionName":{"name":"cleanup_t_uint80","nodeType":"YulIdentifier","src":"80560:16:19"},"nodeType":"YulFunctionCall","src":"80560:23:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"80550:2:19"},"nodeType":"YulFunctionCall","src":"80550:34:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"80543:6:19"},"nodeType":"YulFunctionCall","src":"80543:42:19"},"nodeType":"YulIf","src":"80540:2:19"}]},"name":"validator_revert_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"80523:5:19","type":""}],"src":"80488:120:19"},{"body":{"nodeType":"YulBlock","src":"80656:78:19","statements":[{"body":{"nodeType":"YulBlock","src":"80712:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"80721:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"80724:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"80714:6:19"},"nodeType":"YulFunctionCall","src":"80714:12:19"},"nodeType":"YulExpressionStatement","src":"80714:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"80679:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"80703:5:19"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"80686:16:19"},"nodeType":"YulFunctionCall","src":"80686:23:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"80676:2:19"},"nodeType":"YulFunctionCall","src":"80676:34:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"80669:6:19"},"nodeType":"YulFunctionCall","src":"80669:42:19"},"nodeType":"YulIf","src":"80666:2:19"}]},"name":"validator_revert_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"80649:5:19","type":""}],"src":"80614:120:19"}]},"contents":"{\n\n    // uint256[2]\n    function abi_decode_available_length_t_array$_t_uint256_$2_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$2_memory_ptr(length))\n        let dst := array\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // uint256[2]\n    function abi_decode_t_array$_t_uint256_$2_calldata_ptr(offset, end) -> arrayPos {\n        arrayPos := offset\n        if gt(add(arrayPos, mul(0x02, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // uint256[2]\n    function abi_decode_t_array$_t_uint256_$2_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := 0x02\n        array := abi_decode_available_length_t_array$_t_uint256_$2_memory_ptr(offset, length, end)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_t_int256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    // struct VRFCoordinatorV2.FeeConfig\n    function abi_decode_t_struct$_FeeConfig_$2780_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x0120) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x0120)\n\n        {\n            // fulfillmentFlatFeeLinkPPMTier1\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint32(add(headStart, offset), end))\n\n        }\n\n        {\n            // fulfillmentFlatFeeLinkPPMTier2\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint32(add(headStart, offset), end))\n\n        }\n\n        {\n            // fulfillmentFlatFeeLinkPPMTier3\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint32(add(headStart, offset), end))\n\n        }\n\n        {\n            // fulfillmentFlatFeeLinkPPMTier4\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint32(add(headStart, offset), end))\n\n        }\n\n        {\n            // fulfillmentFlatFeeLinkPPMTier5\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_uint32(add(headStart, offset), end))\n\n        }\n\n        {\n            // reqsForTier2\n\n            let offset := 160\n\n            mstore(add(value, 0xa0), abi_decode_t_uint24(add(headStart, offset), end))\n\n        }\n\n        {\n            // reqsForTier3\n\n            let offset := 192\n\n            mstore(add(value, 0xc0), abi_decode_t_uint24(add(headStart, offset), end))\n\n        }\n\n        {\n            // reqsForTier4\n\n            let offset := 224\n\n            mstore(add(value, 0xe0), abi_decode_t_uint24(add(headStart, offset), end))\n\n        }\n\n        {\n            // reqsForTier5\n\n            let offset := 256\n\n            mstore(add(value, 0x0100), abi_decode_t_uint24(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct VRF.Proof\n    function abi_decode_t_struct$_Proof_$2346_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x01a0) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x0120)\n\n        {\n            // pk\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_array$_t_uint256_$2_memory_ptr(add(headStart, offset), end))\n\n        }\n\n        {\n            // gamma\n\n            let offset := 64\n\n            mstore(add(value, 0x20), abi_decode_t_array$_t_uint256_$2_memory_ptr(add(headStart, offset), end))\n\n        }\n\n        {\n            // c\n\n            let offset := 128\n\n            mstore(add(value, 0x40), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // s\n\n            let offset := 160\n\n            mstore(add(value, 0x60), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // seed\n\n            let offset := 192\n\n            mstore(add(value, 0x80), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // uWitness\n\n            let offset := 224\n\n            mstore(add(value, 0xa0), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // cGammaWitness\n\n            let offset := 256\n\n            mstore(add(value, 0xc0), abi_decode_t_array$_t_uint256_$2_memory_ptr(add(headStart, offset), end))\n\n        }\n\n        {\n            // sHashWitness\n\n            let offset := 320\n\n            mstore(add(value, 0xe0), abi_decode_t_array$_t_uint256_$2_memory_ptr(add(headStart, offset), end))\n\n        }\n\n        {\n            // zInv\n\n            let offset := 384\n\n            mstore(add(value, 0x0100), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct VRFCoordinatorV2.RequestCommitment\n    function abi_decode_t_struct$_RequestCommitment_$2687_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0xa0) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0xa0)\n\n        {\n            // blockNum\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint64(add(headStart, offset), end))\n\n        }\n\n        {\n            // subId\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint64(add(headStart, offset), end))\n\n        }\n\n        {\n            // callbackGasLimit\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint32(add(headStart, offset), end))\n\n        }\n\n        {\n            // numWords\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint32(add(headStart, offset), end))\n\n        }\n\n        {\n            // sender\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_t_uint16(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function abi_decode_t_uint24(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint24(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function abi_decode_t_uint96(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint96(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$2_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_array$_t_uint256_$2_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint96(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint96(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$2_calldata_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_array$_t_uint256_$2_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$2_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_array$_t_uint256_$2_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint64t_uint16t_uint32t_uint32(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_Proof_$2346_memory_ptrt_struct$_RequestCommitment_$2687_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 576) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_Proof_$2346_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 416\n\n            value1 := abi_decode_t_struct$_RequestCommitment_$2687_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint16t_uint32t_uint32t_uint32t_int256t_struct$_FeeConfig_$2780_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 448) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_struct$_FeeConfig_$2780_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint64(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint64t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(value0, pos) -> updatedPos {\n        abi_encode_t_bytes32_to_t_bytes32(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256_inplace(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256_inplace(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // bytes32[] -> bytes32[]\n    function abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // uint256[2] -> uint256[2]\n    function abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_fromStack(value, pos)  {\n        let length := array_length_t_array$_t_uint256_$2_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$2_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$2_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$2_memory_ptr(srcPtr)\n        }\n\n    }\n\n    // uint256[2] -> uint256[2]\n    function abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack(value, pos)  {\n        let length := array_length_t_array$_t_uint256_$2_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$2_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256_inplace(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$2_memory_ptr(srcPtr)\n        }\n\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_contract$_AggregatorV3Interface_$590_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_AggregatorV3Interface_$590_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_BlockhashStoreInterface_$4786_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_BlockhashStoreInterface_$4786_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_LinkTokenInterface_$713_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_LinkTokenInterface_$713_to_t_address(value))\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_13447e9fa8630e4bb2fa50f1493aa790167933f55263568ac4ad74cb4d138234_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_13447e9fa8630e4bb2fa50f1493aa790167933f55263568ac4ad74cb4d138234(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_2ce93c410880bb13bca91831655ee36bc7ab052e7c8cb24dd914165b1030eeca_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_2ce93c410880bb13bca91831655ee36bc7ab052e7c8cb24dd914165b1030eeca(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_4bd695d9be776d24ba6aaa6ea48a189f388adfd8a5e6a1df7bd6471290ea4e5f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_4bd695d9be776d24ba6aaa6ea48a189f388adfd8a5e6a1df7bd6471290ea4e5f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_787cf99fb194dba922561b5b1fd0b18a6a49c57eaa01d9c5279f2b2a5bdc1a86_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_787cf99fb194dba922561b5b1fd0b18a6a49c57eaa01d9c5279f2b2a5bdc1a86(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_7fcbfa9df9f83be5218dd62480bcb5cdae56a970e549b88ff2403f5fcded9211_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_7fcbfa9df9f83be5218dd62480bcb5cdae56a970e549b88ff2403f5fcded9211(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_897d9ab785e875f3b83c51a39f09c2f6a852e06c26e3faf90359e5ad589f8cf1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_897d9ab785e875f3b83c51a39f09c2f6a852e06c26e3faf90359e5ad589f8cf1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_95046d93d9b2e6ba778cd180e8c682e7d907547386cb54bf80bca322c50144ca_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_95046d93d9b2e6ba778cd180e8c682e7d907547386cb54bf80bca322c50144ca(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9f90959a5b25997fe56cdafc2f72d300e298468f5ac5e847db7890be22108d2b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_9f90959a5b25997fe56cdafc2f72d300e298468f5ac5e847db7890be22108d2b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ae4825d6ed8aab0513e68c27d2710aa68bcf110761c187d047951a5ec2580d8c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_ae4825d6ed8aab0513e68c27d2710aa68bcf110761c187d047951a5ec2580d8c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c6038a70864418dbffbd772a49c391c3536f6b633b3f2ccbcd6a6e15dbadd34c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_c6038a70864418dbffbd772a49c391c3536f6b633b3f2ccbcd6a6e15dbadd34c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d9cf4c09fcc6ead19e539ee3210816df98f1219b8b47e830620ffd543bfea51f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_d9cf4c09fcc6ead19e539ee3210816df98f1219b8b47e830620ffd543bfea51f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e71e9381bf8fff7d9eeee436d182c3c8b982b1d416953f4ca9ccf572989baeca_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_e71e9381bf8fff7d9eeee436d182c3c8b982b1d416953f4ca9ccf572989baeca(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ecc598139057476f7e46578e2e254b173afe0910225980583669989d2a737f84_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_ecc598139057476f7e46578e2e254b173afe0910225980583669989d2a737f84(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ff425c3ce65530e49c0c35a5fdd7a61b00545f1fcc6482c28903cdcf48ac624f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_ff425c3ce65530e49c0c35a5fdd7a61b00545f1fcc6482c28903cdcf48ac624f(pos)\n        end := add(pos, 32)\n    }\n\n    // struct VRFCoordinatorV2.FeeConfig -> struct VRFCoordinatorV2.FeeConfig\n    function abi_encode_t_struct$_FeeConfig_$2780_storage_to_t_struct$_FeeConfig_$2780_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0120)\n        let slotValue := 0\n\n        {\n            // fulfillmentFlatFeeLinkPPMTier1\n            slotValue := sload(add(value, 0x00))\n            let memberValue0 := extract_from_storage_value_offset_0t_uint32(slotValue)\n            abi_encode_t_uint32_to_t_uint32(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // fulfillmentFlatFeeLinkPPMTier2\n\n            let memberValue0 := extract_from_storage_value_offset_4t_uint32(slotValue)\n            abi_encode_t_uint32_to_t_uint32(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fulfillmentFlatFeeLinkPPMTier3\n\n            let memberValue0 := extract_from_storage_value_offset_8t_uint32(slotValue)\n            abi_encode_t_uint32_to_t_uint32(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // fulfillmentFlatFeeLinkPPMTier4\n\n            let memberValue0 := extract_from_storage_value_offset_12t_uint32(slotValue)\n            abi_encode_t_uint32_to_t_uint32(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // fulfillmentFlatFeeLinkPPMTier5\n\n            let memberValue0 := extract_from_storage_value_offset_16t_uint32(slotValue)\n            abi_encode_t_uint32_to_t_uint32(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // reqsForTier2\n\n            let memberValue0 := extract_from_storage_value_offset_20t_uint24(slotValue)\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // reqsForTier3\n\n            let memberValue0 := extract_from_storage_value_offset_23t_uint24(slotValue)\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // reqsForTier4\n\n            let memberValue0 := extract_from_storage_value_offset_26t_uint24(slotValue)\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // reqsForTier5\n\n            let memberValue0 := extract_from_storage_value_offset_29t_uint24(slotValue)\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x0100))\n        }\n\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_inplace(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_t_uint32_to_t_uint32(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_t_uint64_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint64_to_t_uint256(value))\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_t_uint96_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint96_to_t_uint256(value))\n    }\n\n    function abi_encode_t_uint96_to_t_uint96_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint96(value))\n    }\n\n    function abi_encode_tuple_packed_t_array$_t_uint256_$2_memory_ptr__to_t_array$_t_uint256_$2_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 64)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_uint256__to_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_uint256_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_address__to_t_uint256_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed(pos , value5, value4, value3, value2, value1, value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 64)\n\n        abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 64)\n\n        abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack(value3,  pos)\n        pos := add(pos, 64)\n\n        abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack(value4,  pos)\n        pos := add(pos, 64)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value5,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_uint256_t_array$_t_uint256_$2_memory_ptr_t_uint256__to_t_uint256_t_array$_t_uint256_$2_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 64)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_uint256_t_bytes32__to_t_uint256_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$2_memory_ptr__to_t_array$_t_uint256_$2_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_uint64_t_uint64__to_t_bytes32_t_address_t_uint64_t_uint64__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$590__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_AggregatorV3Interface_$590_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_BlockhashStoreInterface_$4786__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_BlockhashStoreInterface_$4786_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_LinkTokenInterface_$713__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_LinkTokenInterface_$713_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_13447e9fa8630e4bb2fa50f1493aa790167933f55263568ac4ad74cb4d138234__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_13447e9fa8630e4bb2fa50f1493aa790167933f55263568ac4ad74cb4d138234_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2ce93c410880bb13bca91831655ee36bc7ab052e7c8cb24dd914165b1030eeca__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2ce93c410880bb13bca91831655ee36bc7ab052e7c8cb24dd914165b1030eeca_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4bd695d9be776d24ba6aaa6ea48a189f388adfd8a5e6a1df7bd6471290ea4e5f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4bd695d9be776d24ba6aaa6ea48a189f388adfd8a5e6a1df7bd6471290ea4e5f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_787cf99fb194dba922561b5b1fd0b18a6a49c57eaa01d9c5279f2b2a5bdc1a86__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_787cf99fb194dba922561b5b1fd0b18a6a49c57eaa01d9c5279f2b2a5bdc1a86_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7fcbfa9df9f83be5218dd62480bcb5cdae56a970e549b88ff2403f5fcded9211__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7fcbfa9df9f83be5218dd62480bcb5cdae56a970e549b88ff2403f5fcded9211_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_897d9ab785e875f3b83c51a39f09c2f6a852e06c26e3faf90359e5ad589f8cf1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_897d9ab785e875f3b83c51a39f09c2f6a852e06c26e3faf90359e5ad589f8cf1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_95046d93d9b2e6ba778cd180e8c682e7d907547386cb54bf80bca322c50144ca__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_95046d93d9b2e6ba778cd180e8c682e7d907547386cb54bf80bca322c50144ca_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9f90959a5b25997fe56cdafc2f72d300e298468f5ac5e847db7890be22108d2b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9f90959a5b25997fe56cdafc2f72d300e298468f5ac5e847db7890be22108d2b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ae4825d6ed8aab0513e68c27d2710aa68bcf110761c187d047951a5ec2580d8c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ae4825d6ed8aab0513e68c27d2710aa68bcf110761c187d047951a5ec2580d8c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6038a70864418dbffbd772a49c391c3536f6b633b3f2ccbcd6a6e15dbadd34c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6038a70864418dbffbd772a49c391c3536f6b633b3f2ccbcd6a6e15dbadd34c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d9cf4c09fcc6ead19e539ee3210816df98f1219b8b47e830620ffd543bfea51f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d9cf4c09fcc6ead19e539ee3210816df98f1219b8b47e830620ffd543bfea51f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e71e9381bf8fff7d9eeee436d182c3c8b982b1d416953f4ca9ccf572989baeca__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e71e9381bf8fff7d9eeee436d182c3c8b982b1d416953f4ca9ccf572989baeca_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ecc598139057476f7e46578e2e254b173afe0910225980583669989d2a737f84__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ecc598139057476f7e46578e2e254b173afe0910225980583669989d2a737f84_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ff425c3ce65530e49c0c35a5fdd7a61b00545f1fcc6482c28903cdcf48ac624f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ff425c3ce65530e49c0c35a5fdd7a61b00545f1fcc6482c28903cdcf48ac624f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint16_t_uint16_t_uint16__to_t_uint16_t_uint16_t_uint16__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__to_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint16_t_uint32_t_uint32_t_uint32__to_t_uint16_t_uint32_t_uint32_t_uint32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_uint16_t_uint32_t_uint32_t_uint32_t_int256_t_struct$_FeeConfig_$2780_storage__to_t_uint16_t_uint32_t_uint32_t_uint32_t_int256_t_struct$_FeeConfig_$2780_memory_ptr__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 448)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_int256_to_t_int256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_struct$_FeeConfig_$2780_storage_to_t_struct$_FeeConfig_$2780_memory_ptr_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_uint256_$2_memory_ptr__to_t_uint256_t_array$_t_uint256_$2_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint64_t_uint32_t_uint32_t_address__to_t_uint256_t_uint256_t_uint64_t_uint32_t_uint32_t_address__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_address_to_t_address_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint64_t_uint64_t_uint32_t_uint32_t_address__to_t_uint256_t_uint64_t_uint64_t_uint32_t_uint32_t_address__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_address_to_t_address_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint96_t_bool__to_t_uint256_t_uint96_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint32_t_uint32__to_t_uint32_t_uint32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint32_t_uint32_t_uint32_t_uint32_t_uint32_t_uint24_t_uint24_t_uint24_t_uint24__to_t_uint32_t_uint32_t_uint32_t_uint32_t_uint32_t_uint24_t_uint24_t_uint24_t_uint24__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint64_t_address__to_t_uint64_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$2_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_uint256_$2_memory_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_array$_t_bytes32_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_array$_t_uint256_$2_memory_ptr(value) -> length {\n\n        length := 0x02\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$2_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$2_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_add_t_uint64(x, y) -> sum {\n        x := cleanup_t_uint64(x)\n        y := cleanup_t_uint64(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_add_t_uint96(x, y) -> sum {\n        x := cleanup_t_uint96(x)\n        y := cleanup_t_uint96(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_sub_t_uint96(x, y) -> diff {\n        x := cleanup_t_uint96(x)\n        y := cleanup_t_uint96(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_from_storage_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function cleanup_from_storage_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function convert_t_contract$_AggregatorV3Interface_$590_to_t_address(value) -> converted {\n        converted := convert_t_contract$_AggregatorV3Interface_$590_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_AggregatorV3Interface_$590_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_BlockhashStoreInterface_$4786_to_t_address(value) -> converted {\n        converted := convert_t_contract$_BlockhashStoreInterface_$4786_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_BlockhashStoreInterface_$4786_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_LinkTokenInterface_$713_to_t_address(value) -> converted {\n        converted := convert_t_contract$_LinkTokenInterface_$713_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_LinkTokenInterface_$713_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_uint64_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint64(value)\n    }\n\n    function convert_t_uint96_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint96(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_from_storage_value_offset_0t_uint32(slot_value) -> value {\n        value := cleanup_from_storage_t_uint32(shift_right_0_unsigned(slot_value))\n    }\n\n    function extract_from_storage_value_offset_12t_uint32(slot_value) -> value {\n        value := cleanup_from_storage_t_uint32(shift_right_96_unsigned(slot_value))\n    }\n\n    function extract_from_storage_value_offset_16t_uint32(slot_value) -> value {\n        value := cleanup_from_storage_t_uint32(shift_right_128_unsigned(slot_value))\n    }\n\n    function extract_from_storage_value_offset_20t_uint24(slot_value) -> value {\n        value := cleanup_from_storage_t_uint24(shift_right_160_unsigned(slot_value))\n    }\n\n    function extract_from_storage_value_offset_23t_uint24(slot_value) -> value {\n        value := cleanup_from_storage_t_uint24(shift_right_184_unsigned(slot_value))\n    }\n\n    function extract_from_storage_value_offset_26t_uint24(slot_value) -> value {\n        value := cleanup_from_storage_t_uint24(shift_right_208_unsigned(slot_value))\n    }\n\n    function extract_from_storage_value_offset_29t_uint24(slot_value) -> value {\n        value := cleanup_from_storage_t_uint24(shift_right_232_unsigned(slot_value))\n    }\n\n    function extract_from_storage_value_offset_4t_uint32(slot_value) -> value {\n        value := cleanup_from_storage_t_uint32(shift_right_32_unsigned(slot_value))\n    }\n\n    function extract_from_storage_value_offset_8t_uint32(slot_value) -> value {\n        value := cleanup_from_storage_t_uint32(shift_right_64_unsigned(slot_value))\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function increment_t_uint64(value) -> ret {\n        value := cleanup_t_uint64(value)\n        if eq(value, 0xffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function shift_right_0_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(0, value)\n\n    }\n\n    function shift_right_128_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(128, value)\n\n    }\n\n    function shift_right_160_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(160, value)\n\n    }\n\n    function shift_right_184_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(184, value)\n\n    }\n\n    function shift_right_208_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(208, value)\n\n    }\n\n    function shift_right_232_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(232, value)\n\n    }\n\n    function shift_right_32_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(32, value)\n\n    }\n\n    function shift_right_64_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(64, value)\n\n    }\n\n    function shift_right_96_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(96, value)\n\n    }\n\n    function store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must be proposed owner\")\n\n    }\n\n    function store_literal_in_memory_13447e9fa8630e4bb2fa50f1493aa790167933f55263568ac4ad74cb4d138234(memPtr) {\n\n        mstore(add(memPtr, 0), \"Second mul check failed\")\n\n    }\n\n    function store_literal_in_memory_2ce93c410880bb13bca91831655ee36bc7ab052e7c8cb24dd914165b1030eeca(memPtr) {\n\n        mstore(add(memPtr, 0), \"points in sum must be distinct\")\n\n    }\n\n    function store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only callable by owner\")\n\n    }\n\n    function store_literal_in_memory_4bd695d9be776d24ba6aaa6ea48a189f388adfd8a5e6a1df7bd6471290ea4e5f(memPtr) {\n\n        mstore(add(memPtr, 0), \"bigModExp failure!\")\n\n    }\n\n    function store_literal_in_memory_787cf99fb194dba922561b5b1fd0b18a6a49c57eaa01d9c5279f2b2a5bdc1a86(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid x-ordinate\")\n\n    }\n\n    function store_literal_in_memory_7fcbfa9df9f83be5218dd62480bcb5cdae56a970e549b88ff2403f5fcded9211(memPtr) {\n\n        mstore(add(memPtr, 0), \"bad witness\")\n\n    }\n\n    function store_literal_in_memory_897d9ab785e875f3b83c51a39f09c2f6a852e06c26e3faf90359e5ad589f8cf1(memPtr) {\n\n        mstore(add(memPtr, 0), \"addr(c*pk+s*g)!=_uWitness\")\n\n    }\n\n    function store_literal_in_memory_95046d93d9b2e6ba778cd180e8c682e7d907547386cb54bf80bca322c50144ca(memPtr) {\n\n        mstore(add(memPtr, 0), \"invZ must be inverse of z\")\n\n    }\n\n    function store_literal_in_memory_9f90959a5b25997fe56cdafc2f72d300e298468f5ac5e847db7890be22108d2b(memPtr) {\n\n        mstore(add(memPtr, 0), \"cGammaWitness is not on curve\")\n\n    }\n\n    function store_literal_in_memory_ae4825d6ed8aab0513e68c27d2710aa68bcf110761c187d047951a5ec2580d8c(memPtr) {\n\n        mstore(add(memPtr, 0), \"public key is not on curve\")\n\n    }\n\n    function store_literal_in_memory_c6038a70864418dbffbd772a49c391c3536f6b633b3f2ccbcd6a6e15dbadd34c(memPtr) {\n\n        mstore(add(memPtr, 0), \"gamma is not on curve\")\n\n    }\n\n    function store_literal_in_memory_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid proof\")\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function store_literal_in_memory_d9cf4c09fcc6ead19e539ee3210816df98f1219b8b47e830620ffd543bfea51f(memPtr) {\n\n        mstore(add(memPtr, 0), \"First mul check failed\")\n\n    }\n\n    function store_literal_in_memory_e71e9381bf8fff7d9eeee436d182c3c8b982b1d416953f4ca9ccf572989baeca(memPtr) {\n\n        mstore(add(memPtr, 0), \"zero scalar\")\n\n    }\n\n    function store_literal_in_memory_ecc598139057476f7e46578e2e254b173afe0910225980583669989d2a737f84(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid y-ordinate\")\n\n    }\n\n    function store_literal_in_memory_ff425c3ce65530e49c0c35a5fdd7a61b00545f1fcc6482c28903cdcf48ac624f(memPtr) {\n\n        mstore(add(memPtr, 0), \"sHashWitness is not on curve\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint24(value) {\n        if iszero(eq(value, cleanup_t_uint24(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint96(value) {\n        if iszero(eq(value, cleanup_t_uint96(value))) { revert(0, 0) }\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2487":[{"length":32,"start":3540},{"length":32,"start":6339},{"length":32,"start":12255},{"length":32,"start":15670},{"length":32,"start":15981},{"length":32,"start":18234}],"2490":[{"length":32,"start":13031},{"length":32,"start":20842}],"2493":[{"length":32,"start":6570},{"length":32,"start":19305}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061021b5760003560e01c80636f64f03f11610125578063ad178361116100ad578063d2f9f9a71161007c578063d2f9f9a714610604578063d7ae1d3014610634578063e72f6e3014610650578063e82ad7d41461066c578063f2fde38b1461069c5761021b565b8063ad17836114610565578063af198b9714610583578063c3f909d4146105b3578063caf70c4a146105d45761021b565b80638da5cb5b116100f45780638da5cb5b146104be5780639f87fad7146104dc578063a21a23e4146104f8578063a47c769614610516578063a4c0ed36146105495761021b565b80636f64f03f146104605780637341c10c1461047c57806379ba50971461049857806382359740146104a25761021b565b8063356dac71116101a85780635fbbc0d2116101775780635fbbc0d2146103b257806364d51a2a146103d857806366316d8d146103f6578063689c45171461041257806369bcdb7d146104305761021b565b8063356dac711461032a57806340d6bb82146103485780634cb48a54146103665780635d3b1d30146103825761021b565b806308821d58116101ef57806308821d581461029657806312b58349146102b257806315c48b84146102d0578063181f5a77146102ee5780631b6b6d231461030c5761021b565b80620122911461022057806302bcc5b61461024057806304c357cb1461025c57806306bfa63714610278575b600080fd5b6102286106b8565b60405161023793929190617e13565b60405180910390f35b61025a60048036038101906102559190616f69565b610746565b005b61027660048036038101906102719190616f96565b610856565b005b610280610af8565b60405161028d91906181cd565b60405180910390f35b6102b060048036038101906102ab9190616d10565b610b16565b005b6102ba610d60565b6040516102c79190617ef8565b60405180910390f35b6102d8610d90565b6040516102e59190617dc1565b60405180910390f35b6102f6610d95565b6040516103039190617b5f565b60405180910390f35b610314610dd2565b6040516103219190617b29565b60405180910390f35b610332610df6565b60405161033f9190617b44565b60405180910390f35b610350610e00565b60405161035d91906180e1565b60405180910390f35b610380600480360381019061037b9190616e81565b610e06565b005b61039c60048036038101906103979190616dc4565b611152565b6040516103a99190617ef8565b60405180910390f35b6103ba6115ed565b6040516103cf99989796959493929190618125565b60405180910390f35b6103e06116da565b6040516103ed9190617dc1565b60405180910390f35b610410600480360381019061040b9190616cd0565b6116df565b005b61041a6119a8565b6040516104279190617b0e565b60405180910390f35b61044a60048036038101906104459190616f0f565b6119cc565b6040516104579190617a03565b60405180910390f35b61047a60048036038101906104759190616c1c565b6119e9565b005b61049660048036038101906104919190616f96565b611ba7565b005b6104a0611f73565b005b6104bc60048036038101906104b79190616f69565b612108565b005b6104c6612471565b6040516104d39190617937565b60405180910390f35b6104f660048036038101906104f19190616f96565b61249a565b005b610500612a26565b60405161050d91906181cd565b60405180910390f35b610530600480360381019061052b9190616f69565b612d4d565b604051610540949392919061822c565b60405180910390f35b610563600480360381019061055e9190616c5c565b612f93565b005b61056d6132e5565b60405161057a9190617af3565b60405180910390f35b61059d60048036038101906105989190616e3f565b613309565b6040516105aa9190618211565b60405180910390f35b6105bb61384e565b6040516105cb9493929190617e51565b60405180910390f35b6105ee60048036038101906105e99190616d3d565b6138b8565b6040516105fb9190617a03565b60405180910390f35b61061e60048036038101906106199190616f69565b6138e8565b60405161062b91906180e1565b60405180910390f35b61064e60048036038101906106499190616f96565b613b69565b005b61066a60048036038101906106659190616bef565b613d2a565b005b61068660048036038101906106819190616f69565b613f59565b60405161069391906179e8565b60405180910390f35b6106b660048036038101906106b19190616bef565b61422b565b005b6000806060600b60000160009054906101000a900461ffff16600b60000160029054906101000a900463ffffffff1660078080548060200260200160405190810160405280929190818152602001828054801561073457602002820191906000526020600020905b815481526020019060010190808311610720575b50505050509050925092509250909192565b61074e61423f565b600073ffffffffffffffffffffffffffffffffffffffff16600360008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156107ff576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61085381600360008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166142cf565b50565b816000600360008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561090d576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461097d57806040517fd8a3fb520000000000000000000000000000000000000000000000000000000081526004016109749190617937565b60405180910390fd5b600b60000160069054906101000a900460ff16156109c7576040517fed3ba6a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff16600360008667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610af25782600360008667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508367ffffffffffffffff167f69436ea6df009049404f564eff6622cd00522b0bd6a89efd9e52a355c4a879be3385604051610ae9929190617952565b60405180910390a25b50505050565b6000600560009054906101000a900467ffffffffffffffff16905090565b610b1e61423f565b6000610b60826002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050506138b8565b905060006006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c0c57816040517f77f5b84c000000000000000000000000000000000000000000000000000000008152600401610c039190617a03565b60405180910390fd5b6006600083815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560005b600780549050811015610d0c578260078281548110610c6757610c666189f7565b5b90600052602060002001541415610cf957600060076001600780549050610c8e919061854a565b81548110610c9f57610c9e6189f7565b5b906000526020600020015490508060078381548110610cc157610cc06189f7565b5b90600052602060002001819055506007805480610ce157610ce06189c8565b5b60019003818190600052602060002001600090559055505b8080610d0490618887565b915050610c45565b508073ffffffffffffffffffffffffffffffffffffffff167f72be339577868f868798bac2c93e52d6f034fef4689a9848996c14ebb7416c0d83604051610d539190617a03565b60405180910390a2505050565b6000600560089054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff16905090565b60c881565b60606040518060400160405280601681526020017f565246436f6f7264696e61746f72563220312e302e3000000000000000000000815250905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600a54905090565b6101f481565b610e0e61423f565b60c861ffff168661ffff161115610e6157858660c86040517fa7386976000000000000000000000000000000000000000000000000000000008152600401610e5893929190617ddc565b60405180910390fd5b60008213610ea657816040517f43d4cf66000000000000000000000000000000000000000000000000000000008152600401610e9d9190617b44565b60405180910390fd5b6040518060a001604052808761ffff1681526020018663ffffffff1681526020016000151581526020018563ffffffff1681526020018463ffffffff16815250600b60008201518160000160006101000a81548161ffff021916908361ffff16021790555060208201518160000160026101000a81548163ffffffff021916908363ffffffff16021790555060408201518160000160066101000a81548160ff02191690831515021790555060608201518160000160076101000a81548163ffffffff021916908363ffffffff160217905550608082015181600001600b6101000a81548163ffffffff021916908363ffffffff16021790555090505080600c60008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a81548163ffffffff021916908363ffffffff16021790555060408201518160000160086101000a81548163ffffffff021916908363ffffffff160217905550606082015181600001600c6101000a81548163ffffffff021916908363ffffffff16021790555060808201518160000160106101000a81548163ffffffff021916908363ffffffff16021790555060a08201518160000160146101000a81548162ffffff021916908362ffffff16021790555060c08201518160000160176101000a81548162ffffff021916908362ffffff16021790555060e082015181600001601a6101000a81548162ffffff021916908362ffffff16021790555061010082015181600001601d6101000a81548162ffffff021916908362ffffff16021790555090505081600a819055507fc21e3bd2e0b339d2848f0dd956947a88966c242c0c0c582a33137a5c1ceb5cb28686868686600c60405161114296959493929190617e96565b60405180910390a1505050505050565b6000600b60000160069054906101000a900460ff161561119e576040517fed3ba6a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561124f576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff16905060008167ffffffffffffffff16141561131e5785336040517ff0019fe60000000000000000000000000000000000000000000000000000000081526004016113159291906181e8565b60405180910390fd5b600b60000160009054906101000a900461ffff1661ffff168561ffff16108061134f575060c861ffff168561ffff16115b156113a95784600b60000160009054906101000a900461ffff1660c86040517fa73869760000000000000000000000000000000000000000000000000000000081526004016113a093929190617ddc565b60405180910390fd5b600b60000160029054906101000a900463ffffffff1663ffffffff168463ffffffff1611156114265783600b60000160029054906101000a900463ffffffff166040517ff5d7e01e00000000000000000000000000000000000000000000000000000000815260040161141d9291906180fc565b60405180910390fd5b6101f463ffffffff168363ffffffff16111561147d57826101f46040517f47386bec0000000000000000000000000000000000000000000000000000000081526004016114749291906180fc565b60405180910390fd5b600060018261148c919061843f565b905060008061149d8a338b86614874565b91509150816114aa6148e6565b8a8989336040516020016114c396959493929190617fe8565b6040516020818303038152906040528051906020012060096000848152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff168967ffffffffffffffff168b7f63373d1c4696214b898952999c9aaec57dac1ee2723cec59bea6888f489a977285858d8d8d60405161154a959493929190617f95565b60405180910390a482600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508194505050505095945050505050565b6000806000806000806000806000600c60000160009054906101000a900463ffffffff16600c60000160049054906101000a900463ffffffff16600c60000160089054906101000a900463ffffffff16600c600001600c9054906101000a900463ffffffff16600c60000160109054906101000a900463ffffffff16600c60000160149054906101000a900462ffffff16600c60000160179054906101000a900462ffffff16600c600001601a9054906101000a900462ffffff16600c600001601d9054906101000a900462ffffff16985098509850985098509850985098509850909192939495969798565b606481565b600b60000160069054906101000a900460ff1615611729576040517fed3ba6a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806bffffffffffffffffffffffff16600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff1610156117d6576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282829054906101000a90046bffffffffffffffffffffffff1661183c919061857e565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555080600560088282829054906101000a90046bffffffffffffffffffffffff16611893919061857e565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b815260040161191c9291906179a4565b602060405180830381600087803b15801561193657600080fd5b505af115801561194a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196e9190616d6a565b6119a4576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600060096000838152602001908152602001600020549050919050565b6119f161423f565b6000611a33826002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050506138b8565b9050600073ffffffffffffffffffffffffffffffffffffffff166006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611ad957806040517f4a0b8fa7000000000000000000000000000000000000000000000000000000008152600401611ad09190617a03565b60405180910390fd5b826006600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060078190806001815401808255809150506001900390600052602060002001600090919091909150558273ffffffffffffffffffffffffffffffffffffffff167fe729ae16526293f74ade739043022254f1489f616295a25bf72dfb4511ed73b882604051611b9a9190617a03565b60405180910390a2505050565b816000600360008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611c5e576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611cce57806040517fd8a3fb52000000000000000000000000000000000000000000000000000000008152600401611cc59190617937565b60405180910390fd5b600b60000160069054906101000a900460ff1615611d18576040517fed3ba6a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606461ffff16600360008667ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600201805490501415611d84576040517f05a48e0f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff1614611e1357611f6d565b6001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550600360008567ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600201839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508367ffffffffffffffff167f43dc749a04ac8fb825cbd514f7c0e13f13bc6f2ee66043b76629d51776cff8e084604051611f649190617937565b60405180910390a25b50505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612003576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ffa90617b81565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b600b60000160069054906101000a900460ff1615612152576040517fed3ba6a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612203576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600360008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461230757600360008267ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517fd084e9750000000000000000000000000000000000000000000000000000000081526004016122fe9190617937565b60405180910390fd5b6000600360008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905033600360008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600360008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508167ffffffffffffffff167f6f1dc65165ffffedfd8e507b4a0f1fcfdada045ed11f6c26ba27cedfe87802f08233604051612465929190617952565b60405180910390a25050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b816000600360008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612551576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146125c157806040517fd8a3fb520000000000000000000000000000000000000000000000000000000081526004016125b89190617937565b60405180910390fd5b600b60000160069054906101000a900460ff161561260b576040517fed3ba6a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61261484613f59565b1561264b576040517fb42f66e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff1614156127155783836040517ff0019fe600000000000000000000000000000000000000000000000000000000815260040161270c9291906181e8565b60405180910390fd5b6000600360008667ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206002018054806020026020016040519081016040528092919081815260200182805480156127c157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612777575b505050505090506000600182516127d8919061854a565b905060005b8251811015612960578573ffffffffffffffffffffffffffffffffffffffff168382815181106128105761280f6189f7565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16141561294d576000838381518110612849576128486189f7565b5b6020026020010151905080600360008a67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020183815481106128905761288f6189f7565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360008967ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600201805480612912576129116189c8565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055905550612960565b808061295890618887565b9150506127dd565b50600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060006101000a81549067ffffffffffffffff02191690558567ffffffffffffffff167f182bff9831466789164ca77075fffd84916d35a8180ba73c27e45634549b445b86604051612a169190617937565b60405180910390a2505050505050565b6000600b60000160069054906101000a900460ff1615612a72576040517fed3ba6a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6005600081819054906101000a900467ffffffffffffffff1680929190612a98906188d0565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550506000600560009054906101000a900467ffffffffffffffff16905060008067ffffffffffffffff811115612af657612af5618a26565b5b604051908082528060200260200182016040528015612b245781602001602082028036833780820191505090505b509050604051806040016040528060006bffffffffffffffffffffffff168152602001600067ffffffffffffffff16815250600460008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008201518160000160006101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550602082015181600001600c6101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555090505060405180606001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200182815250600360008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019080519060200190612cff929190616643565b509050508167ffffffffffffffff167f464722b4166576d3dcbba877b999bc35cf911f4eaf434b7eba68fa113951d0bf33604051612d3d9190617937565b60405180910390a2819250505090565b60008060006060600073ffffffffffffffffffffffffffffffffffffffff16600360008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612e05576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600460008667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a90046bffffffffffffffffffffffff16600460008767ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600001600c9054906101000a900467ffffffffffffffff16600360008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360008967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020180805480602002602001604051908101604052809291908181526020018280548015612f7d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612f33575b5050505050905093509350935093509193509193565b600b60000160069054906101000a900460ff1615612fdd576040517fed3ba6a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614613062576040517f44b0e3c300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6020828290501461309f576040517f8129bbcd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082828101906130b09190616f69565b9050600073ffffffffffffffffffffffffffffffffffffffff16600360008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415613163576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600460008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff16905084600460008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160008282829054906101000a90046bffffffffffffffffffffffff16613209919061847d565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555084600560088282829054906101000a90046bffffffffffffffffffffffff16613260919061847d565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508167ffffffffffffffff167fd39ec07f4e209f627a4c427971473820dc129761ba28de8906bd56f57101d4f88287846132c791906183e9565b6040516132d5929190617f6c565b60405180910390a2505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600b60000160069054906101000a900460ff1615613355576040517fed3ba6a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005a905060008060006133698787614989565b9250925092506000866060015163ffffffff1667ffffffffffffffff81111561339557613394618a26565b5b6040519080825280602002602001820160405280156133c35781602001602082028036833780820191505090505b50905060005b876060015163ffffffff168110156134395782816040516020016133ee929190617f6c565b6040516020818303038152906040528051906020012060001c82828151811061341a576134196189f7565b5b602002602001018181525050808061343190618887565b9150506133c9565b506009600084815260200190815260200160002060009055600080631fe543e360e01b858460405160240161346f929190617f3c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506001600b60000160066101000a81548160ff02191690831515021790555060006135078a6040015163ffffffff168b6080015184614cae565b90506000600b60000160066101000a81548160ff0219169083151502179055506000600460008c6020015167ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600001600c9054906101000a900467ffffffffffffffff1690506001600460008d6020015167ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600001600c8282829054906101000a900467ffffffffffffffff166135c0919061843f565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060006136178a600b600001600b9054906101000a900463ffffffff1663ffffffff16613611856138e8565b3a614cfb565b9050806bffffffffffffffffffffffff16600460008e6020015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff1610156136b5576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600460008e6020015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160008282829054906101000a90046bffffffffffffffffffffffff1661370a919061857e565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508060086000600660008d815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282829054906101000a90046bffffffffffffffffffffffff166137d1919061847d565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550877f7dffc5ae5ee4e2e4df1651cf6ad329a73cebdb728f37ea0187b9b17e036756e4888386604051613833939291906180aa565b60405180910390a2809a505050505050505050505092915050565b600080600080600b60000160009054906101000a900461ffff16600b60000160029054906101000a900463ffffffff16600b60000160079054906101000a900463ffffffff16600b600001600b9054906101000a900463ffffffff16935093509350935090919293565b6000816040516020016138cb91906179cd565b604051602081830303815290604052805190602001209050919050565b600080600c604051806101200160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160089054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160008201600c9054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160109054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160149054906101000a900462ffffff1662ffffff1662ffffff1681526020016000820160179054906101000a900462ffffff1662ffffff1662ffffff16815260200160008201601a9054906101000a900462ffffff1662ffffff1662ffffff16815260200160008201601d9054906101000a900462ffffff1662ffffff1662ffffff168152505090508267ffffffffffffffff16600011158015613a7357508060a0015162ffffff168367ffffffffffffffff1611155b15613a85578060000151915050613b64565b8267ffffffffffffffff168160a0015162ffffff16108015613aba57508060c0015162ffffff168367ffffffffffffffff1611155b15613acc578060200151915050613b64565b8267ffffffffffffffff168160c0015162ffffff16108015613b0157508060e0015162ffffff168367ffffffffffffffff1611155b15613b13578060400151915050613b64565b8267ffffffffffffffff168160e0015162ffffff16108015613b49575080610100015162ffffff168367ffffffffffffffff1611155b15613b5b578060600151915050613b64565b80608001519150505b919050565b816000600360008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415613c20576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614613c9057806040517fd8a3fb52000000000000000000000000000000000000000000000000000000008152600401613c879190617937565b60405180910390fd5b600b60000160069054906101000a900460ff1615613cda576040517fed3ba6a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b613ce384613f59565b15613d1a576040517fb42f66e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b613d2484846142cf565b50505050565b613d3261423f565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401613d8d9190617937565b60206040518083038186803b158015613da557600080fd5b505afa158015613db9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ddd9190616f3c565b90506000600560089054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff16905081811115613e535780826040517fa99da302000000000000000000000000000000000000000000000000000000008152600401613e4a929190617f6c565b60405180910390fd5b81811015613f545760008183613e69919061854a565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85836040518363ffffffff1660e01b8152600401613ec692919061797b565b602060405180830381600087803b158015613ee057600080fd5b505af1158015613ef4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613f189190616d6a565b507f59bfc682b673f8cbf945f1e454df9334834abf7dfe7f92237ca29ecb9b4366008482604051613f4a92919061797b565b60405180910390a1505b505050565b600080600360008467ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054806020026020016040519081016040528092919081815260200182805480156140bf57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311614075575b505050505081525050905060005b81604001515181101561421f5760005b60078054905081101561420b5760006141ca60078381548110614103576141026189f7565b5b906000526020600020015485604001518581518110614125576141246189f7565b5b6020026020010151886002600089604001518981518110614149576141486189f7565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff16614874565b5090506000801b6009600083815260200190815260200160002054146141f7576001945050505050614226565b50808061420390618887565b9150506140dd565b50808061421790618887565b9150506140cd565b5060009150505b919050565b61423361423f565b61423c81614e74565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146142cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016142c490617be1565b60405180910390fd5b565b600b60000160069054906101000a900460ff1615614319576040517fed3ba6a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360008467ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180548060200260200160405190810160405280929190818152602001828054801561447e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311614434575b50505050508152505090506000600460008567ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff166bffffffffffffffffffffffff16815260200160008201600c9054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681525050905060008160000151905060005b8360400151518110156145f4576002600085604001518381518110614563576145626189f7565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060006101000a81549067ffffffffffffffff021916905580806145ec90618887565b91505061453b565b50600360008667ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600061467b91906166cd565b5050600460008667ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600080820160006101000a8154906bffffffffffffffffffffffff021916905560008201600c6101000a81549067ffffffffffffffff0219169055505080600560088282829054906101000a90046bffffffffffffffffffffffff1661470a919061857e565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85836bffffffffffffffffffffffff166040518363ffffffff1660e01b81526004016147a192919061797b565b602060405180830381600087803b1580156147bb57600080fd5b505af11580156147cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906147f39190616d6a565b614829576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8467ffffffffffffffff167fe8ed5b475a5b5987aa9165e8731bb78043f39eee32ec5a1169a89e27fcd4981585836040516148659291906179a4565b60405180910390a25050505050565b6000806000868686866040516020016148909493929190617a1e565b6040516020818303038152906040528051906020012060001c905086816040516020016148be929190617a63565b6040516020818303038152906040528051906020012060001c81925092505094509492505050565b6000804690506148f581614fa1565b1561498157606473ffffffffffffffffffffffffffffffffffffffff1663a3b1b31d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561494157600080fd5b505afa158015614955573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906149799190616f3c565b915050614986565b439150505b90565b600080600061499b85600001516138b8565b925060006006600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415614a4757836040517f77f5b84c000000000000000000000000000000000000000000000000000000008152600401614a3e9190617a03565b60405180910390fd5b838660800151604051602001614a5e929190617a63565b6040516020818303038152906040528051906020012060001c92506000600960008581526020019081526020016000205490506000801b811415614ace576040517f3688124a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8386600001518760200151886040015189606001518a60800151604051602001614afd96959493929190618049565b604051602081830303815290604052805190602001208114614b4b576040517fd529142c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000614b5a8760000151614fc9565b90506000801b811415614c63577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e9413d3888600001516040518263ffffffff1660e01b8152600401614bc491906181b2565b60206040518083038186803b158015614bdc57600080fd5b505afa158015614bf0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614c149190616d97565b90506000801b811415614c625786600001516040517f175dadad000000000000000000000000000000000000000000000000000000008152600401614c5991906181b2565b60405180910390fd5b5b6000886080015182604051602001614c7c92919061790b565b6040516020818303038152906040528051906020012060001c9050614ca189826150d0565b9450505050509250925092565b60005a611388811015614cc057600080fd5b611388810390508460408204820311614cd857600080fd5b833b614ce357600080fd5b6000808451602086016000888af19150509392505050565b600080614d0661513d565b905060008113614d4d57806040517f43d4cf66000000000000000000000000000000000000000000000000000000008152600401614d449190617b44565b60405180910390fd5b6000614d9d6000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050615249565b9050600082825a8a8a614db091906183e9565b614dba919061854a565b87614dc591906184f0565b614dcf91906183e9565b670de0b6b3a7640000614de291906184f0565b614dec91906184bf565b905060008663ffffffff1664e8d4a51000614e0791906184f0565b9050806b033b2e3c9fd0803ce8000000614e21919061854a565b821115614e5a576040517fe80fa38100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8082614e6691906183e9565b945050505050949350505050565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415614ee3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401614eda90617d21565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600061a4b1821480614fb5575062066eed82145b80614fc2575062066eee82145b9050919050565b600080469050614fd881614fa1565b156150bb576101008367ffffffffffffffff16614ff36148e6565b614ffd919061854a565b118061501a575061500c6148e6565b8367ffffffffffffffff1610155b156150295760009150506150cb565b606473ffffffffffffffffffffffffffffffffffffffff16632b407a82846040518263ffffffff1660e01b815260040161506391906181b2565b60206040518083038186803b15801561507b57600080fd5b505afa15801561508f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906150b39190616d97565b9150506150cb565b8267ffffffffffffffff16409150505b919050565b60006151048360000151846020015185604001518660600151868860a001518960c001518a60e001518b61010001516153db565b6003836020015160405160200161511c929190617f13565b6040516020818303038152906040528051906020012060001c905092915050565b600080600b60000160079054906101000a900463ffffffff1690506000808263ffffffff161190506000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156151ce57600080fd5b505afa1580156151e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906152069190616fd6565b90919293509091505080935081925050508280156152345750814261522b919061854a565b8463ffffffff16105b1561523f57600a5490505b8094505050505090565b60008046905061525881614fa1565b156152e457606c73ffffffffffffffffffffffffffffffffffffffff1663c6f7de0e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156152a457600080fd5b505afa1580156152b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906152dc9190616f3c565b9150506153d6565b6152ed816155c8565b156153d05773420000000000000000000000000000000000000f73ffffffffffffffffffffffffffffffffffffffff166349948e0e84604051806080016040528060488152602001618ee66048913960405160200161534d92919061781f565b6040516020818303038152906040526040518263ffffffff1660e01b81526004016153789190617ad1565b60206040518083038186803b15801561539057600080fd5b505afa1580156153a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906153c89190616f3c565b9150506153d6565b60009150505b919050565b6153e489615607565b615423576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161541a90617cc1565b60405180910390fd5b61542c88615607565b61546b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161546290617ce1565b60405180910390fd5b61547483615607565b6154b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016154aa90617ca1565b60405180910390fd5b6154bc82615607565b6154fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016154f290617da1565b60405180910390fd5b615507878a8887615788565b615546576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161553d90617c61565b60405180910390fd5b60006155528a876159a6565b90506000615565898b878b868989615a38565b90506000615576838d8d8a86615bbf565b9050808a146155ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016155b190617d01565b60405180910390fd5b505050505050505050505050565b6000600a8214806155da57506101a482145b806155e7575062aa37dc82145b806155f3575061210582145b80615600575062014a3382145b9050919050565b60007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8260006002811061563e5761563d6189f7565b5b602002015110615683576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161567a90617c21565b60405180910390fd5b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f826001600281106156b8576156b76189f7565b5b6020020151106156fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016156f490617d81565b60405180910390fd5b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8061572c5761572b618999565b5b826001600281106157405761573f6189f7565b5b602002015183600160028110615759576157586189f7565b5b60200201510961578083600060028110615776576157756189f7565b5b6020020151615c01565b149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156157f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016157f090617c41565b60405180910390fd5b600080600286600160028110615812576158116189f7565b5b60200201518161582557615824618999565b5b061461583257601c615835565b601b5b905060007ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd03641418061586857615867618999565b5b858760006002811061587d5761587c6189f7565b5b6020020151097ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd03641410360001b905060007ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141806158db576158da618999565b5b876000600281106158ef576158ee6189f7565b5b6020020151890960001b90506000600183858a600060028110615915576159146189f7565b5b602002015160001b856040516000815260200160405260405161593b9493929190617a8c565b6020604051602081039080840390855afa15801561595d573d6000803e3d6000fd5b5050506020604051035190508573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614945050505050949350505050565b6159ae6166ee565b6159db600184846040516020016159c7939291906178ce565b604051602081830303815290604052615ca4565b90505b6159e781615607565b615a3257615a2b81600060028110615a0257615a016189f7565b5b6020020151604051602001615a179190617843565b604051602081830303815290604052615ca4565b90506159de565b92915050565b615a406166ee565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f83600060028110615a7557615a746189f7565b5b602002015181615a8857615a87618999565b5b067ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f87600060028110615abe57615abd6189f7565b5b602002015181615ad157615ad0618999565b5b061415615b13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401615b0a90617bc1565b60405180910390fd5b615b1e878988615da8565b615b5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401615b5490617d41565b60405180910390fd5b615b68848685615da8565b615ba7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401615b9e90617ba1565b60405180910390fd5b615bb2868484615f40565b9050979650505050505050565b600060028686868587604051602001615bdd9695949392919061785e565b6040516020818303038152906040528051906020012060001c905095945050505050565b6000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80615c3357615c32618999565b5b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80615c6257615c61618999565b5b848509840990507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80615c9857615c97618999565b5b60078208915050919050565b615cac6166ee565b615cb5826160bc565b81600060028110615cc957615cc86189f7565b5b602002018181525050615cfb615cf682600060028110615cec57615ceb6189f7565b5b6020020151615c01565b616129565b81600160028110615d0f57615d0e6189f7565b5b6020020181815250506001600282600160028110615d3057615d2f6189f7565b5b602002015181615d4357615d42618999565b5b061415615da35780600160028110615d5e57615d5d6189f7565b5b60200201517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f0381600160028110615d9957615d986189f7565b5b6020020181815250505b919050565b600080831415615ded576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401615de490617d61565b60405180910390fd5b600084600060028110615e0357615e026189f7565b5b60200201519050600080600287600160028110615e2357615e226189f7565b5b6020020151615e329190618939565b14615e3e57601c615e41565b601b5b905060007ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd036414180615e7457615e73618999565b5b83870960001b9050600060016000801b848660001b8560405160008152602001604052604051615ea79493929190617a8c565b6020604051602081039080840390855afa158015615ec9573d6000803e3d6000fd5b505050602060405103519050600086604051602001615ee89190617804565b6040516020818303038152906040528051906020012060001c90508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614955050505050509392505050565b615f486166ee565b6000806000615fb987600060028110615f6457615f636189f7565b5b602002015188600160028110615f7d57615f7c6189f7565b5b602002015188600060028110615f9657615f956189f7565b5b602002015189600160028110615faf57615fae6189f7565b5b602002015161616c565b80935081945082955050505060017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f80615ff657615ff5618999565b5b86830914616039576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161603090617c81565b60405180910390fd5b60405180604001604052807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8061607357616072618999565b5b87860981526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f806160aa576160a9618999565b5b87850981525093505050509392505050565b6000818051906020012060001c90505b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f811061612457806040516020016161049190617843565b6040516020818303038152906040528051906020012060001c90506160cc565b919050565b600061616582600260017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f61615e91906183e9565b901c616363565b9050919050565b60008060008060006001809150915060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f806161ac576161ab618999565b5b897ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f038808905060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8061620457616203618999565b5b8b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f038a0890506000616239838385856164c3565b809250819950505061624d88828e8861653b565b809250819950505061626188828c8761653b565b809250819950505060006162778d878b8561653b565b809250819950505061628b888286866164c3565b809250819950505061629f88828e8961653b565b809250819950505080821461634f577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f806162dd576162dc618999565b5b818a0998507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8061631157616310618999565b5b82890997507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8061634557616344618999565b5b8183099650616353565b8196505b5050505050509450945094915050565b60008061636e616710565b602081600060068110616384576163836189f7565b5b6020020181815250506020816001600681106163a3576163a26189f7565b5b6020020181815250506020816002600681106163c2576163c16189f7565b5b60200201818152505084816003600681106163e0576163df6189f7565b5b60200201818152505083816004600681106163fe576163fd6189f7565b5b6020020181815250507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8160056006811061643c5761643b6189f7565b5b60200201818152505061644d616732565b60208160c0846005600019fa9250600083141561649f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161649690617c01565b60405180910390fd5b806000600181106164b3576164b26189f7565b5b6020020151935050505092915050565b6000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f806164f5576164f4618999565b5b8487097ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8061652757616526618999565b5b848709809250819350505094509492505050565b60008060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8061656f5761656e618999565b5b878509905060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f806165a5576165a4618999565b5b87877ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f030990507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f806165fb576165fa618999565b5b8183087ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8061662d5761662c618999565b5b8689098094508195505050505094509492505050565b8280548282559060005260206000209081019282156166bc579160200282015b828111156166bb5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190616663565b5b5090506166c99190616754565b5090565b50805460008255906000526020600020908101906166eb9190616754565b50565b6040518060400160405280600290602082028036833780820191505090505090565b6040518060c00160405280600690602082028036833780820191505090505090565b6040518060200160405280600190602082028036833780820191505090505090565b5b8082111561676d576000816000905550600101616755565b5090565b600061678461677f8461829d565b618278565b9050808285602086028201111561679e5761679d618a64565b5b60005b858110156167ce57816167b48882616b71565b8452602084019350602083019250506001810190506167a1565b5050509392505050565b6000813590506167e781618de8565b92915050565b60008190508260206002028201111561680957616808618a64565b5b92915050565b600082601f83011261682457616823618a5a565b5b6002616831848285616771565b91505092915050565b60008151905061684981618dff565b92915050565b60008135905061685e81618e16565b92915050565b60008151905061687381618e16565b92915050565b60008083601f84011261688f5761688e618a5a565b5b8235905067ffffffffffffffff8111156168ac576168ab618a55565b5b6020830191508360018202830111156168c8576168c7618a64565b5b9250929050565b6000813590506168de81618e2d565b92915050565b6000815190506168f381618e2d565b92915050565b600061012082840312156169105761690f618a5f565b5b61691b610120618278565b9050600061692b84828501616b9b565b600083015250602061693f84828501616b9b565b602083015250604061695384828501616b9b565b604083015250606061696784828501616b9b565b606083015250608061697b84828501616b9b565b60808301525060a061698f84828501616b5c565b60a08301525060c06169a384828501616b5c565b60c08301525060e06169b784828501616b5c565b60e0830152506101006169cc84828501616b5c565b6101008301525092915050565b60006101a082840312156169f0576169ef618a5f565b5b6169fb610120618278565b90506000616a0b8482850161680f565b6000830152506040616a1f8482850161680f565b6020830152506080616a3384828501616b71565b60408301525060a0616a4784828501616b71565b60608301525060c0616a5b84828501616b71565b60808301525060e0616a6f848285016167d8565b60a083015250610100616a848482850161680f565b60c083015250610140616a998482850161680f565b60e083015250610180616aae84828501616b71565b6101008301525092915050565b600060a08284031215616ad157616ad0618a5f565b5b616adb60a0618278565b90506000616aeb84828501616bb0565b6000830152506020616aff84828501616bb0565b6020830152506040616b1384828501616b9b565b6040830152506060616b2784828501616b9b565b6060830152506080616b3b848285016167d8565b60808301525092915050565b600081359050616b5681618e44565b92915050565b600081359050616b6b81618e5b565b92915050565b600081359050616b8081618e72565b92915050565b600081519050616b9581618e72565b92915050565b600081359050616baa81618e89565b92915050565b600081359050616bbf81618ea0565b92915050565b600081519050616bd481618eb7565b92915050565b600081359050616be981618ece565b92915050565b600060208284031215616c0557616c04618a6e565b5b6000616c13848285016167d8565b91505092915050565b60008060608385031215616c3357616c32618a6e565b5b6000616c41858286016167d8565b9250506020616c52858286016167ed565b9150509250929050565b60008060008060608587031215616c7657616c75618a6e565b5b6000616c84878288016167d8565b9450506020616c9587828801616b71565b935050604085013567ffffffffffffffff811115616cb657616cb5618a69565b5b616cc287828801616879565b925092505092959194509250565b60008060408385031215616ce757616ce6618a6e565b5b6000616cf5858286016167d8565b9250506020616d0685828601616bda565b9150509250929050565b600060408284031215616d2657616d25618a6e565b5b6000616d34848285016167ed565b91505092915050565b600060408284031215616d5357616d52618a6e565b5b6000616d618482850161680f565b91505092915050565b600060208284031215616d8057616d7f618a6e565b5b6000616d8e8482850161683a565b91505092915050565b600060208284031215616dad57616dac618a6e565b5b6000616dbb84828501616864565b91505092915050565b600080600080600060a08688031215616de057616ddf618a6e565b5b6000616dee8882890161684f565b9550506020616dff88828901616bb0565b9450506040616e1088828901616b47565b9350506060616e2188828901616b9b565b9250506080616e3288828901616b9b565b9150509295509295909350565b6000806102408385031215616e5757616e56618a6e565b5b6000616e65858286016169d9565b9250506101a0616e7785828601616abb565b9150509250929050565b6000806000806000806101c08789031215616e9f57616e9e618a6e565b5b6000616ead89828a01616b47565b9650506020616ebe89828a01616b9b565b9550506040616ecf89828a01616b9b565b9450506060616ee089828a01616b9b565b9350506080616ef189828a016168cf565b92505060a0616f0289828a016168f9565b9150509295509295509295565b600060208284031215616f2557616f24618a6e565b5b6000616f3384828501616b71565b91505092915050565b600060208284031215616f5257616f51618a6e565b5b6000616f6084828501616b86565b91505092915050565b600060208284031215616f7f57616f7e618a6e565b5b6000616f8d84828501616bb0565b91505092915050565b60008060408385031215616fad57616fac618a6e565b5b6000616fbb85828601616bb0565b9250506020616fcc858286016167d8565b9150509250929050565b600080600080600060a08688031215616ff257616ff1618a6e565b5b600061700088828901616bc5565b9550506020617011888289016168e4565b945050604061702288828901616b86565b935050606061703388828901616b86565b925050608061704488828901616bc5565b9150509295509295909350565b600061705d83836170b1565b60208301905092915050565b600061707583836172bd565b60208301905092915050565b600061708d8383617757565b60208301905092915050565b60006170a58383617775565b60208301905092915050565b6170ba816185d1565b82525050565b6170c9816185d1565b82525050565b6170e06170db826185d1565b618901565b82525050565b60006170f1826182fd565b6170fb8185618373565b9350617106836182c3565b8060005b8381101561713757815161711e8882617051565b97506171298361833f565b92505060018101905061710a565b5085935050505092915050565b600061714f82618308565b6171598185618384565b9350617164836182d3565b8060005b8381101561719557815161717c8882617069565b97506171878361834c565b925050600181019050617168565b5085935050505092915050565b6171ab81618313565b6171b58184618395565b92506171c0826182e3565b8060005b838110156171f15781516171d88782617081565b96506171e383618359565b9250506001810190506171c4565b505050505050565b61720281618313565b61720c81846183a0565b9250617217826182e3565b8060005b8381101561724857815161722f8782617099565b965061723a83618359565b92505060018101905061721b565b505050505050565b600061725b8261831e565b61726581856183ab565b9350617270836182ed565b8060005b838110156172a15781516172888882617081565b975061729383618366565b925050600181019050617274565b5085935050505092915050565b6172b7816185e3565b82525050565b6172c6816185ef565b82525050565b6172d5816185ef565b82525050565b6172ec6172e7826185ef565b618913565b82525050565b60006172fd82618329565b61730781856183bc565b9350617317818560208601618739565b61732081618a73565b840191505092915050565b600061733682618329565b61734081856183cd565b9350617350818560208601618739565b80840191505092915050565b617365816186a9565b82525050565b617374816186cd565b82525050565b617383816186f1565b82525050565b617392816185f9565b82525050565b60006173a382618334565b6173ad81856183d8565b93506173bd818560208601618739565b6173c681618a73565b840191505092915050565b60006173de6016836183d8565b91506173e982618b06565b602082019050919050565b60006174016017836183d8565b915061740c82618b2f565b602082019050919050565b6000617424601e836183d8565b915061742f82618b58565b602082019050919050565b60006174476016836183d8565b915061745282618b81565b602082019050919050565b600061746a6012836183d8565b915061747582618baa565b602082019050919050565b600061748d6012836183d8565b915061749882618bd3565b602082019050919050565b60006174b0600b836183d8565b91506174bb82618bfc565b602082019050919050565b60006174d36019836183d8565b91506174de82618c25565b602082019050919050565b60006174f66019836183d8565b915061750182618c4e565b602082019050919050565b6000617519601d836183d8565b915061752482618c77565b602082019050919050565b600061753c601a836183d8565b915061754782618ca0565b602082019050919050565b600061755f6015836183d8565b915061756a82618cc9565b602082019050919050565b6000617582600d836183d8565b915061758d82618cf2565b602082019050919050565b60006175a56017836183d8565b91506175b082618d1b565b602082019050919050565b60006175c86016836183d8565b91506175d382618d44565b602082019050919050565b60006175eb600b836183d8565b91506175f682618d6d565b602082019050919050565b600061760e6012836183d8565b915061761982618d96565b602082019050919050565b6000617631601c836183d8565b915061763c82618dbf565b602082019050919050565b6101208201600080830154905061765d8161876c565b61766a600086018261779b565b5061767481618822565b617681602086018261779b565b5061768b8161883c565b617698604086018261779b565b506176a281618786565b6176af606086018261779b565b506176b9816187a0565b6176c6608086018261779b565b506176d0816187ba565b6176dd60a0860182617739565b506176e7816187d4565b6176f460c0860182617739565b506176fe816187ee565b61770b60e0860182617739565b5061771581618808565b617723610100860182617739565b5050505050565b61773381618603565b82525050565b61774281618631565b82525050565b61775181618631565b82525050565b61776081618640565b82525050565b61776f81618640565b82525050565b61777e81618640565b82525050565b61779561779082618640565b61892f565b82525050565b6177a48161864a565b82525050565b6177b38161864a565b82525050565b6177c281618715565b82525050565b6177d18161865a565b82525050565b6177e08161866e565b82525050565b6177ef81618727565b82525050565b6177fe81618691565b82525050565b600061781082846171f9565b60408201915081905092915050565b600061782b828561732b565b9150617837828461732b565b91508190509392505050565b600061784f8284617784565b60208201915081905092915050565b600061786a8289617784565b60208201915061787a82886171f9565b60408201915061788a82876171f9565b60408201915061789a82866171f9565b6040820191506178aa82856171f9565b6040820191506178ba82846170cf565b601482019150819050979650505050505050565b60006178da8286617784565b6020820191506178ea82856171f9565b6040820191506178fa8284617784565b602082019150819050949350505050565b60006179178285617784565b60208201915061792782846172db565b6020820191508190509392505050565b600060208201905061794c60008301846170c0565b92915050565b600060408201905061796760008301856170c0565b61797460208301846170c0565b9392505050565b600060408201905061799060008301856170c0565b61799d6020830184617766565b9392505050565b60006040820190506179b960008301856170c0565b6179c660208301846177e6565b9392505050565b60006040820190506179e260008301846171a2565b92915050565b60006020820190506179fd60008301846172ae565b92915050565b6000602082019050617a1860008301846172cc565b92915050565b6000608082019050617a3360008301876172cc565b617a4060208301866170c0565b617a4d60408301856177c8565b617a5a60608301846177c8565b95945050505050565b6000604082019050617a7860008301856172cc565b617a856020830184617766565b9392505050565b6000608082019050617aa160008301876172cc565b617aae60208301866177d7565b617abb60408301856172cc565b617ac860608301846172cc565b95945050505050565b60006020820190508181036000830152617aeb81846172f2565b905092915050565b6000602082019050617b08600083018461735c565b92915050565b6000602082019050617b23600083018461736b565b92915050565b6000602082019050617b3e600083018461737a565b92915050565b6000602082019050617b596000830184617389565b92915050565b60006020820190508181036000830152617b798184617398565b905092915050565b60006020820190508181036000830152617b9a816173d1565b9050919050565b60006020820190508181036000830152617bba816173f4565b9050919050565b60006020820190508181036000830152617bda81617417565b9050919050565b60006020820190508181036000830152617bfa8161743a565b9050919050565b60006020820190508181036000830152617c1a8161745d565b9050919050565b60006020820190508181036000830152617c3a81617480565b9050919050565b60006020820190508181036000830152617c5a816174a3565b9050919050565b60006020820190508181036000830152617c7a816174c6565b9050919050565b60006020820190508181036000830152617c9a816174e9565b9050919050565b60006020820190508181036000830152617cba8161750c565b9050919050565b60006020820190508181036000830152617cda8161752f565b9050919050565b60006020820190508181036000830152617cfa81617552565b9050919050565b60006020820190508181036000830152617d1a81617575565b9050919050565b60006020820190508181036000830152617d3a81617598565b9050919050565b60006020820190508181036000830152617d5a816175bb565b9050919050565b60006020820190508181036000830152617d7a816175de565b9050919050565b60006020820190508181036000830152617d9a81617601565b9050919050565b60006020820190508181036000830152617dba81617624565b9050919050565b6000602082019050617dd6600083018461772a565b92915050565b6000606082019050617df1600083018661772a565b617dfe602083018561772a565b617e0b604083018461772a565b949350505050565b6000606082019050617e28600083018661772a565b617e3560208301856177aa565b8181036040830152617e478184617144565b9050949350505050565b6000608082019050617e66600083018761772a565b617e7360208301866177aa565b617e8060408301856177aa565b617e8d60608301846177aa565b95945050505050565b60006101c082019050617eac600083018961772a565b617eb960208301886177aa565b617ec660408301876177aa565b617ed360608301866177aa565b617ee06080830185617389565b617eed60a0830184617647565b979650505050505050565b6000602082019050617f0d6000830184617766565b92915050565b6000606082019050617f286000830185617766565b617f3560208301846171a2565b9392505050565b6000604082019050617f516000830185617766565b8181036020830152617f638184617250565b90509392505050565b6000604082019050617f816000830185617766565b617f8e6020830184617766565b9392505050565b600060a082019050617faa6000830188617766565b617fb76020830187617766565b617fc4604083018661772a565b617fd160608301856177aa565b617fde60808301846177aa565b9695505050505050565b600060c082019050617ffd6000830189617766565b61800a6020830188617766565b61801760408301876177c8565b61802460608301866177aa565b61803160808301856177aa565b61803e60a08301846170c0565b979650505050505050565b600060c08201905061805e6000830189617766565b61806b60208301886177c8565b61807860408301876177c8565b61808560608301866177aa565b61809260808301856177aa565b61809f60a08301846170c0565b979650505050505050565b60006060820190506180bf6000830186617766565b6180cc60208301856177f5565b6180d960408301846172ae565b949350505050565b60006020820190506180f660008301846177aa565b92915050565b600060408201905061811160008301856177aa565b61811e60208301846177aa565b9392505050565b60006101208201905061813b600083018c6177aa565b618148602083018b6177aa565b618155604083018a6177aa565b61816260608301896177aa565b61816f60808301886177aa565b61817c60a0830187617748565b61818960c0830186617748565b61819660e0830185617748565b6181a4610100830184617748565b9a9950505050505050505050565b60006020820190506181c760008301846177b9565b92915050565b60006020820190506181e260008301846177c8565b92915050565b60006040820190506181fd60008301856177c8565b61820a60208301846170c0565b9392505050565b600060208201905061822660008301846177f5565b92915050565b600060808201905061824160008301876177f5565b61824e60208301866177c8565b61825b60408301856170c0565b818103606083015261826d81846170e6565b905095945050505050565b6000618282618293565b905061828e8282618856565b919050565b6000604051905090565b600067ffffffffffffffff8211156182b8576182b7618a26565b5b602082029050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600060029050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b60006183f482618640565b91506183ff83618640565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156184345761843361896a565b5b828201905092915050565b600061844a8261865a565b91506184558361865a565b92508267ffffffffffffffff038211156184725761847161896a565b5b828201905092915050565b600061848882618691565b915061849383618691565b9250826bffffffffffffffffffffffff038211156184b4576184b361896a565b5b828201905092915050565b60006184ca82618640565b91506184d583618640565b9250826184e5576184e4618999565b5b828204905092915050565b60006184fb82618640565b915061850683618640565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561853f5761853e61896a565b5b828202905092915050565b600061855582618640565b915061856083618640565b9250828210156185735761857261896a565b5b828203905092915050565b600061858982618691565b915061859483618691565b9250828210156185a7576185a661896a565b5b828203905092915050565b600062ffffff82169050919050565b600063ffffffff82169050919050565b60006185dc82618611565b9050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b600060ff82169050919050565b600069ffffffffffffffffffff82169050919050565b60006bffffffffffffffffffffffff82169050919050565b60006186b4826186bb565b9050919050565b60006186c682618611565b9050919050565b60006186d8826186df565b9050919050565b60006186ea82618611565b9050919050565b60006186fc82618703565b9050919050565b600061870e82618611565b9050919050565b60006187208261865a565b9050919050565b600061873282618691565b9050919050565b60005b8381101561875757808201518184015260208101905061873c565b83811115618766576000848401525b50505050565b600061877f61877a83618a91565b6185c1565b9050919050565b600061879961879483618af9565b6185c1565b9050919050565b60006187b36187ae83618a9e565b6185c1565b9050919050565b60006187cd6187c883618aab565b6185b2565b9050919050565b60006187e76187e283618ab8565b6185b2565b9050919050565b60006188016187fc83618ac5565b6185b2565b9050919050565b600061881b61881683618ad2565b6185b2565b9050919050565b600061883561883083618adf565b6185c1565b9050919050565b600061884f61884a83618aec565b6185c1565b9050919050565b61885f82618a73565b810181811067ffffffffffffffff8211171561887e5761887d618a26565b5b80604052505050565b600061889282618640565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156188c5576188c461896a565b5b600182019050919050565b60006188db8261865a565b915067ffffffffffffffff8214156188f6576188f561896a565b5b600182019050919050565b600061890c8261891d565b9050919050565b6000819050919050565b600061892882618a84565b9050919050565b6000819050919050565b600061894482618640565b915061894f83618640565b92508261895f5761895e618999565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b60008160001c9050919050565b60008160801c9050919050565b60008160a01c9050919050565b60008160b81c9050919050565b60008160d01c9050919050565b60008160e81c9050919050565b60008160201c9050919050565b60008160401c9050919050565b60008160601c9050919050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b7f5365636f6e64206d756c20636865636b206661696c6564000000000000000000600082015250565b7f706f696e747320696e2073756d206d7573742062652064697374696e63740000600082015250565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b7f6269674d6f64457870206661696c757265210000000000000000000000000000600082015250565b7f696e76616c696420782d6f7264696e6174650000000000000000000000000000600082015250565b7f626164207769746e657373000000000000000000000000000000000000000000600082015250565b7f6164647228632a706b2b732a6729213d5f755769746e65737300000000000000600082015250565b7f696e765a206d75737420626520696e7665727365206f66207a00000000000000600082015250565b7f6347616d6d615769746e657373206973206e6f74206f6e206375727665000000600082015250565b7f7075626c6963206b6579206973206e6f74206f6e206375727665000000000000600082015250565b7f67616d6d61206973206e6f74206f6e2063757276650000000000000000000000600082015250565b7f696e76616c69642070726f6f6600000000000000000000000000000000000000600082015250565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b7f4669727374206d756c20636865636b206661696c656400000000000000000000600082015250565b7f7a65726f207363616c6172000000000000000000000000000000000000000000600082015250565b7f696e76616c696420792d6f7264696e6174650000000000000000000000000000600082015250565b7f73486173685769746e657373206973206e6f74206f6e20637572766500000000600082015250565b618df1816185d1565b8114618dfc57600080fd5b50565b618e08816185e3565b8114618e1357600080fd5b50565b618e1f816185ef565b8114618e2a57600080fd5b50565b618e36816185f9565b8114618e4157600080fd5b50565b618e4d81618603565b8114618e5857600080fd5b50565b618e6481618631565b8114618e6f57600080fd5b50565b618e7b81618640565b8114618e8657600080fd5b50565b618e928161864a565b8114618e9d57600080fd5b50565b618ea98161865a565b8114618eb457600080fd5b50565b618ec08161867b565b8114618ecb57600080fd5b50565b618ed781618691565b8114618ee257600080fd5b5056fe307866666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666a2646970667358221220e864cdc4be1fa0737b53ab71de666a40aed9395310d61b4b4beea341bde1ea0764736f6c63430008060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F64F03F GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xAD178361 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD2F9F9A7 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD2F9F9A7 EQ PUSH2 0x604 JUMPI DUP1 PUSH4 0xD7AE1D30 EQ PUSH2 0x634 JUMPI DUP1 PUSH4 0xE72F6E30 EQ PUSH2 0x650 JUMPI DUP1 PUSH4 0xE82AD7D4 EQ PUSH2 0x66C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x69C JUMPI PUSH2 0x21B JUMP JUMPDEST DUP1 PUSH4 0xAD178361 EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0xAF198B97 EQ PUSH2 0x583 JUMPI DUP1 PUSH4 0xC3F909D4 EQ PUSH2 0x5B3 JUMPI DUP1 PUSH4 0xCAF70C4A EQ PUSH2 0x5D4 JUMPI PUSH2 0x21B JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4BE JUMPI DUP1 PUSH4 0x9F87FAD7 EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0xA21A23E4 EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0xA47C7696 EQ PUSH2 0x516 JUMPI DUP1 PUSH4 0xA4C0ED36 EQ PUSH2 0x549 JUMPI PUSH2 0x21B JUMP JUMPDEST DUP1 PUSH4 0x6F64F03F EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0x7341C10C EQ PUSH2 0x47C JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x498 JUMPI DUP1 PUSH4 0x82359740 EQ PUSH2 0x4A2 JUMPI PUSH2 0x21B JUMP JUMPDEST DUP1 PUSH4 0x356DAC71 GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x5FBBC0D2 GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x5FBBC0D2 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x64D51A2A EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x66316D8D EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0x689C4517 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0x69BCDB7D EQ PUSH2 0x430 JUMPI PUSH2 0x21B JUMP JUMPDEST DUP1 PUSH4 0x356DAC71 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0x40D6BB82 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x4CB48A54 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x5D3B1D30 EQ PUSH2 0x382 JUMPI PUSH2 0x21B JUMP JUMPDEST DUP1 PUSH4 0x8821D58 GT PUSH2 0x1EF JUMPI DUP1 PUSH4 0x8821D58 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x12B58349 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x15C48B84 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x181F5A77 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x1B6B6D23 EQ PUSH2 0x30C JUMPI PUSH2 0x21B JUMP JUMPDEST DUP1 PUSH3 0x12291 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x2BCC5B6 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x4C357CB EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x6BFA637 EQ PUSH2 0x278 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x228 PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x237 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7E13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x6F69 JUMP JUMPDEST PUSH2 0x746 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x6F96 JUMP JUMPDEST PUSH2 0x856 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x280 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x81CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x6D10 JUMP JUMPDEST PUSH2 0xB16 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BA PUSH2 0xD60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x7EF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D8 PUSH2 0xD90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x7DC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F6 PUSH2 0xD95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x7B5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x314 PUSH2 0xDD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x7B29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x332 PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x7B44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x350 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x80E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x380 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x6E81 JUMP JUMPDEST PUSH2 0xE06 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x6DC4 JUMP JUMPDEST PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x7EF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BA PUSH2 0x15ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CF SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8125 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E0 PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x7DC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x410 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x6CD0 JUMP JUMPDEST PUSH2 0x16DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41A PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x427 SWAP2 SWAP1 PUSH2 0x7B0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x6F0F JUMP JUMPDEST PUSH2 0x19CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x7A03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x475 SWAP2 SWAP1 PUSH2 0x6C1C JUMP JUMPDEST PUSH2 0x19E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x496 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x491 SWAP2 SWAP1 PUSH2 0x6F96 JUMP JUMPDEST PUSH2 0x1BA7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A0 PUSH2 0x1F73 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B7 SWAP2 SWAP1 PUSH2 0x6F69 JUMP JUMPDEST PUSH2 0x2108 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4C6 PUSH2 0x2471 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0x7937 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F1 SWAP2 SWAP1 PUSH2 0x6F96 JUMP JUMPDEST PUSH2 0x249A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x500 PUSH2 0x2A26 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x81CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x530 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52B SWAP2 SWAP1 PUSH2 0x6F69 JUMP JUMPDEST PUSH2 0x2D4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x540 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x822C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x563 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x55E SWAP2 SWAP1 PUSH2 0x6C5C JUMP JUMPDEST PUSH2 0x2F93 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x56D PUSH2 0x32E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57A SWAP2 SWAP1 PUSH2 0x7AF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x598 SWAP2 SWAP1 PUSH2 0x6E3F JUMP JUMPDEST PUSH2 0x3309 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AA SWAP2 SWAP1 PUSH2 0x8211 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5BB PUSH2 0x384E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0x6D3D JUMP JUMPDEST PUSH2 0x38B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5FB SWAP2 SWAP1 PUSH2 0x7A03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x619 SWAP2 SWAP1 PUSH2 0x6F69 JUMP JUMPDEST PUSH2 0x38E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62B SWAP2 SWAP1 PUSH2 0x80E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x649 SWAP2 SWAP1 PUSH2 0x6F96 JUMP JUMPDEST PUSH2 0x3B69 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x66A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x665 SWAP2 SWAP1 PUSH2 0x6BEF JUMP JUMPDEST PUSH2 0x3D2A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x686 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x681 SWAP2 SWAP1 PUSH2 0x6F69 JUMP JUMPDEST PUSH2 0x3F59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x693 SWAP2 SWAP1 PUSH2 0x79E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B1 SWAP2 SWAP1 PUSH2 0x6BEF JUMP JUMPDEST PUSH2 0x422B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x7 DUP1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x734 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x720 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH2 0x74E PUSH2 0x423F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x853 DUP2 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x42CF JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x90D JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x97D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x974 SWAP2 SWAP1 PUSH2 0x7937 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x9C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAF2 JUMPI DUP3 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x69436EA6DF009049404F564EFF6622CD00522B0BD6A89EFD9E52A355C4A879BE CALLER DUP6 PUSH1 0x40 MLOAD PUSH2 0xAE9 SWAP3 SWAP2 SWAP1 PUSH2 0x7952 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB1E PUSH2 0x423F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB60 DUP3 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP PUSH2 0x38B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC0C JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x77F5B84C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC03 SWAP2 SWAP1 PUSH2 0x7A03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xD0C JUMPI DUP3 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC67 JUMPI PUSH2 0xC66 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ ISZERO PUSH2 0xCF9 JUMPI PUSH1 0x0 PUSH1 0x7 PUSH1 0x1 PUSH1 0x7 DUP1 SLOAD SWAP1 POP PUSH2 0xC8E SWAP2 SWAP1 PUSH2 0x854A JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xC9F JUMPI PUSH2 0xC9E PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xCC1 JUMPI PUSH2 0xCC0 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x7 DUP1 SLOAD DUP1 PUSH2 0xCE1 JUMPI PUSH2 0xCE0 PUSH2 0x89C8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP JUMPDEST DUP1 DUP1 PUSH2 0xD04 SWAP1 PUSH2 0x8887 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC45 JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x72BE339577868F868798BAC2C93E52D6F034FEF4689A9848996C14EBB7416C0D DUP4 PUSH1 0x40 MLOAD PUSH2 0xD53 SWAP2 SWAP1 PUSH2 0x7A03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC8 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x565246436F6F7264696E61746F72563220312E302E3000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1F4 DUP2 JUMP JUMPDEST PUSH2 0xE0E PUSH2 0x423F JUMP JUMPDEST PUSH1 0xC8 PUSH2 0xFFFF AND DUP7 PUSH2 0xFFFF AND GT ISZERO PUSH2 0xE61 JUMPI DUP6 DUP7 PUSH1 0xC8 PUSH1 0x40 MLOAD PUSH32 0xA738697600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE58 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7DDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 SGT PUSH2 0xEA6 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x43D4CF6600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9D SWAP2 SWAP1 PUSH2 0x7B44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP PUSH1 0xB PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xB PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 PUSH1 0xC PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x17 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x1A PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x1D PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP2 PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH32 0xC21E3BD2E0B339D2848F0DD956947A88966C242C0C0C582A33137A5C1CEB5CB2 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH1 0xC PUSH1 0x40 MLOAD PUSH2 0x1142 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7E96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x119E JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x124F JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x131E JUMPI DUP6 CALLER PUSH1 0x40 MLOAD PUSH32 0xF0019FE600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1315 SWAP3 SWAP2 SWAP1 PUSH2 0x81E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP6 PUSH2 0xFFFF AND LT DUP1 PUSH2 0x134F JUMPI POP PUSH1 0xC8 PUSH2 0xFFFF AND DUP6 PUSH2 0xFFFF AND GT JUMPDEST ISZERO PUSH2 0x13A9 JUMPI DUP5 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH1 0xC8 PUSH1 0x40 MLOAD PUSH32 0xA738697600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7DDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP5 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1426 JUMPI DUP4 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x40 MLOAD PUSH32 0xF5D7E01E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x141D SWAP3 SWAP2 SWAP1 PUSH2 0x80FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F4 PUSH4 0xFFFFFFFF AND DUP4 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x147D JUMPI DUP3 PUSH2 0x1F4 PUSH1 0x40 MLOAD PUSH32 0x47386BEC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1474 SWAP3 SWAP2 SWAP1 PUSH2 0x80FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x148C SWAP2 SWAP1 PUSH2 0x843F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x149D DUP11 CALLER DUP12 DUP7 PUSH2 0x4874 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x14AA PUSH2 0x48E6 JUMP JUMPDEST DUP11 DUP10 DUP10 CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x14C3 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7FE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP12 PUSH32 0x63373D1C4696214B898952999C9AAEC57DAC1EE2723CEC59BEA6888F489A9772 DUP6 DUP6 DUP14 DUP14 DUP14 PUSH1 0x40 MLOAD PUSH2 0x154A SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7F95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP3 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 SWAP5 POP POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xC PUSH1 0x0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x17 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x1D SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1729 JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x17D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x183C SWAP2 SWAP1 PUSH2 0x857E JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH1 0x8 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1893 SWAP2 SWAP1 PUSH2 0x857E JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191C SWAP3 SWAP2 SWAP1 PUSH2 0x79A4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1936 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x194A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x196E SWAP2 SWAP1 PUSH2 0x6D6A JUMP JUMPDEST PUSH2 0x19A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19F1 PUSH2 0x423F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A33 DUP3 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP PUSH2 0x38B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AD9 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4A0B8FA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AD0 SWAP2 SWAP1 PUSH2 0x7A03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x7 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE729AE16526293F74ADE739043022254F1489F616295A25BF72DFB4511ED73B8 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1B9A SWAP2 SWAP1 PUSH2 0x7A03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1C5E JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CCE JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CC5 SWAP2 SWAP1 PUSH2 0x7937 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1D18 JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH2 0xFFFF AND PUSH1 0x3 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD SWAP1 POP EQ ISZERO PUSH2 0x1D84 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5A48E0F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E13 JUMPI PUSH2 0x1F6D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x43DC749A04AC8FB825CBD514F7C0E13F13BC6F2EE66043B76629D51776CFF8E0 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1F64 SWAP2 SWAP1 PUSH2 0x7937 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2003 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FFA SWAP1 PUSH2 0x7B81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2152 JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2203 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2307 JUMPI PUSH1 0x3 PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH32 0xD084E97500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22FE SWAP2 SWAP1 PUSH2 0x7937 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x6F1DC65165FFFFEDFD8E507B4A0F1FCFDADA045ED11F6C26BA27CEDFE87802F0 DUP3 CALLER PUSH1 0x40 MLOAD PUSH2 0x2465 SWAP3 SWAP2 SWAP1 PUSH2 0x7952 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2551 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x25C1 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25B8 SWAP2 SWAP1 PUSH2 0x7937 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x260B JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2614 DUP5 PUSH2 0x3F59 JUMP JUMPDEST ISZERO PUSH2 0x264B JUMPI PUSH1 0x40 MLOAD PUSH32 0xB42F66E800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2715 JUMPI DUP4 DUP4 PUSH1 0x40 MLOAD PUSH32 0xF0019FE600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x270C SWAP3 SWAP2 SWAP1 PUSH2 0x81E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x27C1 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2777 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 MLOAD PUSH2 0x27D8 SWAP2 SWAP1 PUSH2 0x854A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2960 JUMPI DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2810 JUMPI PUSH2 0x280F PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x294D JUMPI PUSH1 0x0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2849 JUMPI PUSH2 0x2848 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP11 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2890 JUMPI PUSH2 0x288F PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP10 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP1 PUSH2 0x2912 JUMPI PUSH2 0x2911 PUSH2 0x89C8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE POP PUSH2 0x2960 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2958 SWAP1 PUSH2 0x8887 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x27DD JUMP JUMPDEST POP PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x182BFF9831466789164CA77075FFFD84916D35A8180BA73C27E45634549B445B DUP7 PUSH1 0x40 MLOAD PUSH2 0x2A16 SWAP2 SWAP1 PUSH2 0x7937 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2A72 JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2A98 SWAP1 PUSH2 0x88D0 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2AF6 JUMPI PUSH2 0x2AF5 PUSH2 0x8A26 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2B24 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2CFF SWAP3 SWAP2 SWAP1 PUSH2 0x6643 JUMP JUMPDEST POP SWAP1 POP POP DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x464722B4166576D3DCBBA877B999BC35CF911F4EAF434B7EBA68FA113951D0BF CALLER PUSH1 0x40 MLOAD PUSH2 0x2D3D SWAP2 SWAP1 PUSH2 0x7937 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP2 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2E05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP10 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2F7D JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2F33 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2FDD JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3062 JUMPI PUSH1 0x40 MLOAD PUSH32 0x44B0E3C300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 DUP3 SWAP1 POP EQ PUSH2 0x309F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8129BBCD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP2 ADD SWAP1 PUSH2 0x30B0 SWAP2 SWAP1 PUSH2 0x6F69 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3163 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP5 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3209 SWAP2 SWAP1 PUSH2 0x847D JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x5 PUSH1 0x8 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3260 SWAP2 SWAP1 PUSH2 0x847D JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xD39EC07F4E209F627A4C427971473820DC129761BA28DE8906BD56F57101D4F8 DUP3 DUP8 DUP5 PUSH2 0x32C7 SWAP2 SWAP1 PUSH2 0x83E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32D5 SWAP3 SWAP2 SWAP1 PUSH2 0x7F6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3355 JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 GAS SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3369 DUP8 DUP8 PUSH2 0x4989 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP7 PUSH1 0x60 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3395 JUMPI PUSH2 0x3394 PUSH2 0x8A26 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x33C3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP8 PUSH1 0x60 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP2 LT ISZERO PUSH2 0x3439 JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x33EE SWAP3 SWAP2 SWAP1 PUSH2 0x7F6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x341A JUMPI PUSH2 0x3419 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x3431 SWAP1 PUSH2 0x8887 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x33C9 JUMP JUMPDEST POP PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x0 DUP1 PUSH4 0x1FE543E3 PUSH1 0xE0 SHL DUP6 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x346F SWAP3 SWAP2 SWAP1 PUSH2 0x7F3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x1 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x3507 DUP11 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP12 PUSH1 0x80 ADD MLOAD DUP5 PUSH2 0x4CAE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP13 PUSH1 0x20 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP14 PUSH1 0x20 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xC DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x35C0 SWAP2 SWAP1 PUSH2 0x843F JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x3617 DUP11 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0xB SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH2 0x3611 DUP6 PUSH2 0x38E8 JUMP JUMPDEST GASPRICE PUSH2 0x4CFB JUMP JUMPDEST SWAP1 POP DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP15 PUSH1 0x20 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x36B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP15 PUSH1 0x20 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x370A SWAP2 SWAP1 PUSH2 0x857E JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP14 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x37D1 SWAP2 SWAP1 PUSH2 0x847D JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP8 PUSH32 0x7DFFC5AE5EE4E2E4DF1651CF6AD329A73CEBDB728F37EA0187B9B17E036756E4 DUP9 DUP4 DUP7 PUSH1 0x40 MLOAD PUSH2 0x3833 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x80AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 SWAP11 POP POP POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x7 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xB PUSH1 0x0 ADD PUSH1 0xB SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x38CB SWAP2 SWAP1 PUSH2 0x79CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x17 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1D SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 GT ISZERO DUP1 ISZERO PUSH2 0x3A73 JUMPI POP DUP1 PUSH1 0xA0 ADD MLOAD PUSH3 0xFFFFFF AND DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x3A85 JUMPI DUP1 PUSH1 0x0 ADD MLOAD SWAP2 POP POP PUSH2 0x3B64 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0xA0 ADD MLOAD PUSH3 0xFFFFFF AND LT DUP1 ISZERO PUSH2 0x3ABA JUMPI POP DUP1 PUSH1 0xC0 ADD MLOAD PUSH3 0xFFFFFF AND DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x3ACC JUMPI DUP1 PUSH1 0x20 ADD MLOAD SWAP2 POP POP PUSH2 0x3B64 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0xC0 ADD MLOAD PUSH3 0xFFFFFF AND LT DUP1 ISZERO PUSH2 0x3B01 JUMPI POP DUP1 PUSH1 0xE0 ADD MLOAD PUSH3 0xFFFFFF AND DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x3B13 JUMPI DUP1 PUSH1 0x40 ADD MLOAD SWAP2 POP POP PUSH2 0x3B64 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0xE0 ADD MLOAD PUSH3 0xFFFFFF AND LT DUP1 ISZERO PUSH2 0x3B49 JUMPI POP DUP1 PUSH2 0x100 ADD MLOAD PUSH3 0xFFFFFF AND DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x3B5B JUMPI DUP1 PUSH1 0x60 ADD MLOAD SWAP2 POP POP PUSH2 0x3B64 JUMP JUMPDEST DUP1 PUSH1 0x80 ADD MLOAD SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3C20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3C90 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C87 SWAP2 SWAP1 PUSH2 0x7937 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3CDA JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3CE3 DUP5 PUSH2 0x3F59 JUMP JUMPDEST ISZERO PUSH2 0x3D1A JUMPI PUSH1 0x40 MLOAD PUSH32 0xB42F66E800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3D24 DUP5 DUP5 PUSH2 0x42CF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3D32 PUSH2 0x423F JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D8D SWAP2 SWAP1 PUSH2 0x7937 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3DA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3DB9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3DDD SWAP2 SWAP1 PUSH2 0x6F3C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3E53 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA99DA30200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E4A SWAP3 SWAP2 SWAP1 PUSH2 0x7F6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3F54 JUMPI PUSH1 0x0 DUP2 DUP4 PUSH2 0x3E69 SWAP2 SWAP1 PUSH2 0x854A JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EC6 SWAP3 SWAP2 SWAP1 PUSH2 0x797B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3EE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3EF4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F18 SWAP2 SWAP1 PUSH2 0x6D6A JUMP JUMPDEST POP PUSH32 0x59BFC682B673F8CBF945F1E454DF9334834ABF7DFE7F92237CA29ECB9B436600 DUP5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3F4A SWAP3 SWAP2 SWAP1 PUSH2 0x797B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x40BF JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x4075 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x421F JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x420B JUMPI PUSH1 0x0 PUSH2 0x41CA PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x4103 JUMPI PUSH2 0x4102 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP6 PUSH1 0x40 ADD MLOAD DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x4125 JUMPI PUSH2 0x4124 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 PUSH1 0x2 PUSH1 0x0 DUP10 PUSH1 0x40 ADD MLOAD DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x4149 JUMPI PUSH2 0x4148 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x4874 JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 SHL PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x41F7 JUMPI PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x4226 JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x4203 SWAP1 PUSH2 0x8887 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x40DD JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x4217 SWAP1 PUSH2 0x8887 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x40CD JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4233 PUSH2 0x423F JUMP JUMPDEST PUSH2 0x423C DUP2 PUSH2 0x4E74 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x42CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42C4 SWAP1 PUSH2 0x7BE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4319 JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x447E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x4434 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x45F4 JUMPI PUSH1 0x2 PUSH1 0x0 DUP6 PUSH1 0x40 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x4563 JUMPI PUSH2 0x4562 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE DUP1 DUP1 PUSH2 0x45EC SWAP1 PUSH2 0x8887 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x453B JUMP JUMPDEST POP PUSH1 0x3 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x467B SWAP2 SWAP1 PUSH2 0x66CD JUMP JUMPDEST POP POP PUSH1 0x4 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP DUP1 PUSH1 0x5 PUSH1 0x8 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x470A SWAP2 SWAP1 PUSH2 0x857E JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47A1 SWAP3 SWAP2 SWAP1 PUSH2 0x797B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x47BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x47CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x47F3 SWAP2 SWAP1 PUSH2 0x6D6A JUMP JUMPDEST PUSH2 0x4829 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xE8ED5B475A5B5987AA9165E8731BB78043F39EEE32EC5A1169A89E27FCD49815 DUP6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x4865 SWAP3 SWAP2 SWAP1 PUSH2 0x79A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4890 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7A1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP DUP7 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x48BE SWAP3 SWAP2 SWAP1 PUSH2 0x7A63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR DUP2 SWAP3 POP SWAP3 POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CHAINID SWAP1 POP PUSH2 0x48F5 DUP2 PUSH2 0x4FA1 JUMP JUMPDEST ISZERO PUSH2 0x4981 JUMPI PUSH1 0x64 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA3B1B31D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4941 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4955 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4979 SWAP2 SWAP1 PUSH2 0x6F3C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4986 JUMP JUMPDEST NUMBER SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x499B DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x38B8 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4A47 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x77F5B84C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A3E SWAP2 SWAP1 PUSH2 0x7A03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP7 PUSH1 0x80 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4A5E SWAP3 SWAP2 SWAP1 PUSH2 0x7A63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP3 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 EQ ISZERO PUSH2 0x4ACE JUMPI PUSH1 0x40 MLOAD PUSH32 0x3688124A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP7 PUSH1 0x0 ADD MLOAD DUP8 PUSH1 0x20 ADD MLOAD DUP9 PUSH1 0x40 ADD MLOAD DUP10 PUSH1 0x60 ADD MLOAD DUP11 PUSH1 0x80 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4AFD SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8049 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 EQ PUSH2 0x4B4B JUMPI PUSH1 0x40 MLOAD PUSH32 0xD529142C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4B5A DUP8 PUSH1 0x0 ADD MLOAD PUSH2 0x4FC9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 EQ ISZERO PUSH2 0x4C63 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE9413D38 DUP9 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BC4 SWAP2 SWAP1 PUSH2 0x81B2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4BDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4BF0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4C14 SWAP2 SWAP1 PUSH2 0x6D97 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 EQ ISZERO PUSH2 0x4C62 JUMPI DUP7 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x175DADAD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C59 SWAP2 SWAP1 PUSH2 0x81B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 DUP9 PUSH1 0x80 ADD MLOAD DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4C7C SWAP3 SWAP2 SWAP1 PUSH2 0x790B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP PUSH2 0x4CA1 DUP10 DUP3 PUSH2 0x50D0 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 GAS PUSH2 0x1388 DUP2 LT ISZERO PUSH2 0x4CC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1388 DUP2 SUB SWAP1 POP DUP5 PUSH1 0x40 DUP3 DIV DUP3 SUB GT PUSH2 0x4CD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 EXTCODESIZE PUSH2 0x4CE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 DUP11 CALL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4D06 PUSH2 0x513D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT PUSH2 0x4D4D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x43D4CF6600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D44 SWAP2 SWAP1 PUSH2 0x7B44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4D9D PUSH1 0x0 CALLDATASIZE DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x5249 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 DUP3 GAS DUP11 DUP11 PUSH2 0x4DB0 SWAP2 SWAP1 PUSH2 0x83E9 JUMP JUMPDEST PUSH2 0x4DBA SWAP2 SWAP1 PUSH2 0x854A JUMP JUMPDEST DUP8 PUSH2 0x4DC5 SWAP2 SWAP1 PUSH2 0x84F0 JUMP JUMPDEST PUSH2 0x4DCF SWAP2 SWAP1 PUSH2 0x83E9 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x4DE2 SWAP2 SWAP1 PUSH2 0x84F0 JUMP JUMPDEST PUSH2 0x4DEC SWAP2 SWAP1 PUSH2 0x84BF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH4 0xFFFFFFFF AND PUSH5 0xE8D4A51000 PUSH2 0x4E07 SWAP2 SWAP1 PUSH2 0x84F0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x4E21 SWAP2 SWAP1 PUSH2 0x854A JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x4E5A JUMPI PUSH1 0x40 MLOAD PUSH32 0xE80FA38100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP3 PUSH2 0x4E66 SWAP2 SWAP1 PUSH2 0x83E9 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4EE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4EDA SWAP1 PUSH2 0x7D21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA4B1 DUP3 EQ DUP1 PUSH2 0x4FB5 JUMPI POP PUSH3 0x66EED DUP3 EQ JUMPDEST DUP1 PUSH2 0x4FC2 JUMPI POP PUSH3 0x66EEE DUP3 EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 CHAINID SWAP1 POP PUSH2 0x4FD8 DUP2 PUSH2 0x4FA1 JUMP JUMPDEST ISZERO PUSH2 0x50BB JUMPI PUSH2 0x100 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x4FF3 PUSH2 0x48E6 JUMP JUMPDEST PUSH2 0x4FFD SWAP2 SWAP1 PUSH2 0x854A JUMP JUMPDEST GT DUP1 PUSH2 0x501A JUMPI POP PUSH2 0x500C PUSH2 0x48E6 JUMP JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x5029 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x50CB JUMP JUMPDEST PUSH1 0x64 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2B407A82 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5063 SWAP2 SWAP1 PUSH2 0x81B2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x507B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x508F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x50B3 SWAP2 SWAP1 PUSH2 0x6D97 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x50CB JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND BLOCKHASH SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5104 DUP4 PUSH1 0x0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD DUP7 PUSH1 0x60 ADD MLOAD DUP7 DUP9 PUSH1 0xA0 ADD MLOAD DUP10 PUSH1 0xC0 ADD MLOAD DUP11 PUSH1 0xE0 ADD MLOAD DUP12 PUSH2 0x100 ADD MLOAD PUSH2 0x53DB JUMP JUMPDEST PUSH1 0x3 DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x511C SWAP3 SWAP2 SWAP1 PUSH2 0x7F13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x7 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND GT SWAP1 POP PUSH1 0x0 DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x51CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x51E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5206 SWAP2 SWAP1 PUSH2 0x6FD6 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP SWAP1 SWAP2 POP POP DUP1 SWAP4 POP DUP2 SWAP3 POP POP POP DUP3 DUP1 ISZERO PUSH2 0x5234 JUMPI POP DUP2 TIMESTAMP PUSH2 0x522B SWAP2 SWAP1 PUSH2 0x854A JUMP JUMPDEST DUP5 PUSH4 0xFFFFFFFF AND LT JUMPDEST ISZERO PUSH2 0x523F JUMPI PUSH1 0xA SLOAD SWAP1 POP JUMPDEST DUP1 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 CHAINID SWAP1 POP PUSH2 0x5258 DUP2 PUSH2 0x4FA1 JUMP JUMPDEST ISZERO PUSH2 0x52E4 JUMPI PUSH1 0x6C PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC6F7DE0E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x52A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x52B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x52DC SWAP2 SWAP1 PUSH2 0x6F3C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x53D6 JUMP JUMPDEST PUSH2 0x52ED DUP2 PUSH2 0x55C8 JUMP JUMPDEST ISZERO PUSH2 0x53D0 JUMPI PUSH20 0x420000000000000000000000000000000000000F PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x49948E0E DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x48 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8EE6 PUSH1 0x48 SWAP2 CODECOPY PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x534D SWAP3 SWAP2 SWAP1 PUSH2 0x781F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5378 SWAP2 SWAP1 PUSH2 0x7AD1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x53A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x53C8 SWAP2 SWAP1 PUSH2 0x6F3C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x53D6 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x53E4 DUP10 PUSH2 0x5607 JUMP JUMPDEST PUSH2 0x5423 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x541A SWAP1 PUSH2 0x7CC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x542C DUP9 PUSH2 0x5607 JUMP JUMPDEST PUSH2 0x546B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5462 SWAP1 PUSH2 0x7CE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5474 DUP4 PUSH2 0x5607 JUMP JUMPDEST PUSH2 0x54B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54AA SWAP1 PUSH2 0x7CA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x54BC DUP3 PUSH2 0x5607 JUMP JUMPDEST PUSH2 0x54FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54F2 SWAP1 PUSH2 0x7DA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5507 DUP8 DUP11 DUP9 DUP8 PUSH2 0x5788 JUMP JUMPDEST PUSH2 0x5546 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x553D SWAP1 PUSH2 0x7C61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5552 DUP11 DUP8 PUSH2 0x59A6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5565 DUP10 DUP12 DUP8 DUP12 DUP7 DUP10 DUP10 PUSH2 0x5A38 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5576 DUP4 DUP14 DUP14 DUP11 DUP7 PUSH2 0x5BBF JUMP JUMPDEST SWAP1 POP DUP1 DUP11 EQ PUSH2 0x55BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55B1 SWAP1 PUSH2 0x7D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA DUP3 EQ DUP1 PUSH2 0x55DA JUMPI POP PUSH2 0x1A4 DUP3 EQ JUMPDEST DUP1 PUSH2 0x55E7 JUMPI POP PUSH3 0xAA37DC DUP3 EQ JUMPDEST DUP1 PUSH2 0x55F3 JUMPI POP PUSH2 0x2105 DUP3 EQ JUMPDEST DUP1 PUSH2 0x5600 JUMPI POP PUSH3 0x14A33 DUP3 EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP3 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x563E JUMPI PUSH2 0x563D PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD LT PUSH2 0x5683 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x567A SWAP1 PUSH2 0x7C21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP3 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x56B8 JUMPI PUSH2 0x56B7 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD LT PUSH2 0x56FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56F4 SWAP1 PUSH2 0x7D81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x572C JUMPI PUSH2 0x572B PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5740 JUMPI PUSH2 0x573F PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5759 JUMPI PUSH2 0x5758 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD MULMOD PUSH2 0x5780 DUP4 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5776 JUMPI PUSH2 0x5775 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x5C01 JUMP JUMPDEST EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x57F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57F0 SWAP1 PUSH2 0x7C41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 DUP7 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5812 JUMPI PUSH2 0x5811 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH2 0x5825 JUMPI PUSH2 0x5824 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST MOD EQ PUSH2 0x5832 JUMPI PUSH1 0x1C PUSH2 0x5835 JUMP JUMPDEST PUSH1 0x1B JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP1 PUSH2 0x5868 JUMPI PUSH2 0x5867 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP6 DUP8 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x587D JUMPI PUSH2 0x587C PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD MULMOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 SUB PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP1 PUSH2 0x58DB JUMPI PUSH2 0x58DA PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP8 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x58EF JUMPI PUSH2 0x58EE PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP10 MULMOD PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 DUP6 DUP11 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5915 JUMPI PUSH2 0x5914 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x0 SHL DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x593B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7A8C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x595D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP5 POP POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x59AE PUSH2 0x66EE JUMP JUMPDEST PUSH2 0x59DB PUSH1 0x1 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x59C7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x78CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x5CA4 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x59E7 DUP2 PUSH2 0x5607 JUMP JUMPDEST PUSH2 0x5A32 JUMPI PUSH2 0x5A2B DUP2 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5A02 JUMPI PUSH2 0x5A01 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5A17 SWAP2 SWAP1 PUSH2 0x7843 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x5CA4 JUMP JUMPDEST SWAP1 POP PUSH2 0x59DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5A40 PUSH2 0x66EE JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP4 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5A75 JUMPI PUSH2 0x5A74 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH2 0x5A88 JUMPI PUSH2 0x5A87 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST MOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP8 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5ABE JUMPI PUSH2 0x5ABD PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH2 0x5AD1 JUMPI PUSH2 0x5AD0 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST MOD EQ ISZERO PUSH2 0x5B13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B0A SWAP1 PUSH2 0x7BC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5B1E DUP8 DUP10 DUP9 PUSH2 0x5DA8 JUMP JUMPDEST PUSH2 0x5B5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B54 SWAP1 PUSH2 0x7D41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5B68 DUP5 DUP7 DUP6 PUSH2 0x5DA8 JUMP JUMPDEST PUSH2 0x5BA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B9E SWAP1 PUSH2 0x7BA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5BB2 DUP7 DUP5 DUP5 PUSH2 0x5F40 JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP7 DUP7 DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5BDD SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x785E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x5C33 JUMPI PUSH2 0x5C32 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x5C62 JUMPI PUSH2 0x5C61 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP5 DUP6 MULMOD DUP5 MULMOD SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x5C98 JUMPI PUSH2 0x5C97 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST PUSH1 0x7 DUP3 ADDMOD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5CAC PUSH2 0x66EE JUMP JUMPDEST PUSH2 0x5CB5 DUP3 PUSH2 0x60BC JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5CC9 JUMPI PUSH2 0x5CC8 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x5CFB PUSH2 0x5CF6 DUP3 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5CEC JUMPI PUSH2 0x5CEB PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x5C01 JUMP JUMPDEST PUSH2 0x6129 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5D0F JUMPI PUSH2 0x5D0E PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 PUSH1 0x2 DUP3 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5D30 JUMPI PUSH2 0x5D2F PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH2 0x5D43 JUMPI PUSH2 0x5D42 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST MOD EQ ISZERO PUSH2 0x5DA3 JUMPI DUP1 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5D5E JUMPI PUSH2 0x5D5D PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB DUP2 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5D99 JUMPI PUSH2 0x5D98 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x5DED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DE4 SWAP1 PUSH2 0x7D61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5E03 JUMPI PUSH2 0x5E02 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x2 DUP8 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5E23 JUMPI PUSH2 0x5E22 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x5E32 SWAP2 SWAP1 PUSH2 0x8939 JUMP JUMPDEST EQ PUSH2 0x5E3E JUMPI PUSH1 0x1C PUSH2 0x5E41 JUMP JUMPDEST PUSH1 0x1B JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP1 PUSH2 0x5E74 JUMPI PUSH2 0x5E73 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP4 DUP8 MULMOD PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL DUP5 DUP7 PUSH1 0x0 SHL DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x5EA7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7A8C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5EC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5EE8 SWAP2 SWAP1 PUSH2 0x7804 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP6 POP POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x5F48 PUSH2 0x66EE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x5FB9 DUP8 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5F64 JUMPI PUSH2 0x5F63 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5F7D JUMPI PUSH2 0x5F7C PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5F96 JUMPI PUSH2 0x5F95 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP10 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5FAF JUMPI PUSH2 0x5FAE PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x616C JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP DUP3 SWAP6 POP POP POP POP PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x5FF6 JUMPI PUSH2 0x5FF5 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP7 DUP4 MULMOD EQ PUSH2 0x6039 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6030 SWAP1 PUSH2 0x7C81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x6073 JUMPI PUSH2 0x6072 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP8 DUP7 MULMOD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x60AA JUMPI PUSH2 0x60A9 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP8 DUP6 MULMOD DUP2 MSTORE POP SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP2 LT PUSH2 0x6124 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6104 SWAP2 SWAP1 PUSH2 0x7843 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP PUSH2 0x60CC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6165 DUP3 PUSH1 0x2 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F PUSH2 0x615E SWAP2 SWAP1 PUSH2 0x83E9 JUMP JUMPDEST SWAP1 SHR PUSH2 0x6363 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 DUP1 SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x61AC JUMPI PUSH2 0x61AB PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP10 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB DUP9 ADDMOD SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x6204 JUMPI PUSH2 0x6203 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP12 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB DUP11 ADDMOD SWAP1 POP PUSH1 0x0 PUSH2 0x6239 DUP4 DUP4 DUP6 DUP6 PUSH2 0x64C3 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x624D DUP9 DUP3 DUP15 DUP9 PUSH2 0x653B JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x6261 DUP9 DUP3 DUP13 DUP8 PUSH2 0x653B JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH1 0x0 PUSH2 0x6277 DUP14 DUP8 DUP12 DUP6 PUSH2 0x653B JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x628B DUP9 DUP3 DUP7 DUP7 PUSH2 0x64C3 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x629F DUP9 DUP3 DUP15 DUP10 PUSH2 0x653B JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP DUP1 DUP3 EQ PUSH2 0x634F JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x62DD JUMPI PUSH2 0x62DC PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP2 DUP11 MULMOD SWAP9 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x6311 JUMPI PUSH2 0x6310 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP3 DUP10 MULMOD SWAP8 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x6345 JUMPI PUSH2 0x6344 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP2 DUP4 MULMOD SWAP7 POP PUSH2 0x6353 JUMP JUMPDEST DUP2 SWAP7 POP JUMPDEST POP POP POP POP POP POP SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x636E PUSH2 0x6710 JUMP JUMPDEST PUSH1 0x20 DUP2 PUSH1 0x0 PUSH1 0x6 DUP2 LT PUSH2 0x6384 JUMPI PUSH2 0x6383 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x20 DUP2 PUSH1 0x1 PUSH1 0x6 DUP2 LT PUSH2 0x63A3 JUMPI PUSH2 0x63A2 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x20 DUP2 PUSH1 0x2 PUSH1 0x6 DUP2 LT PUSH2 0x63C2 JUMPI PUSH2 0x63C1 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x3 PUSH1 0x6 DUP2 LT PUSH2 0x63E0 JUMPI PUSH2 0x63DF PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x4 PUSH1 0x6 DUP2 LT PUSH2 0x63FE JUMPI PUSH2 0x63FD PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP2 PUSH1 0x5 PUSH1 0x6 DUP2 LT PUSH2 0x643C JUMPI PUSH2 0x643B PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x644D PUSH2 0x6732 JUMP JUMPDEST PUSH1 0x20 DUP2 PUSH1 0xC0 DUP5 PUSH1 0x5 PUSH1 0x0 NOT STATICCALL SWAP3 POP PUSH1 0x0 DUP4 EQ ISZERO PUSH2 0x649F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6496 SWAP1 PUSH2 0x7C01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x1 DUP2 LT PUSH2 0x64B3 JUMPI PUSH2 0x64B2 PUSH2 0x89F7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x64F5 JUMPI PUSH2 0x64F4 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP5 DUP8 MULMOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x6527 JUMPI PUSH2 0x6526 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP5 DUP8 MULMOD DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x656F JUMPI PUSH2 0x656E PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP8 DUP6 MULMOD SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x65A5 JUMPI PUSH2 0x65A4 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP8 DUP8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB MULMOD SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x65FB JUMPI PUSH2 0x65FA PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP2 DUP4 ADDMOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x662D JUMPI PUSH2 0x662C PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP7 DUP10 MULMOD DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x66BC JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x66BB JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x6663 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x66C9 SWAP2 SWAP1 PUSH2 0x6754 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x66EB SWAP2 SWAP1 PUSH2 0x6754 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x676D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x6755 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6784 PUSH2 0x677F DUP5 PUSH2 0x829D JUMP JUMPDEST PUSH2 0x8278 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x679E JUMPI PUSH2 0x679D PUSH2 0x8A64 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x67CE JUMPI DUP2 PUSH2 0x67B4 DUP9 DUP3 PUSH2 0x6B71 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x67A1 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x67E7 DUP2 PUSH2 0x8DE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP3 PUSH1 0x20 PUSH1 0x2 MUL DUP3 ADD GT ISZERO PUSH2 0x6809 JUMPI PUSH2 0x6808 PUSH2 0x8A64 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6824 JUMPI PUSH2 0x6823 PUSH2 0x8A5A JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH2 0x6831 DUP5 DUP3 DUP6 PUSH2 0x6771 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6849 DUP2 PUSH2 0x8DFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x685E DUP2 PUSH2 0x8E16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6873 DUP2 PUSH2 0x8E16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x688F JUMPI PUSH2 0x688E PUSH2 0x8A5A JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x68AC JUMPI PUSH2 0x68AB PUSH2 0x8A55 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x68C8 JUMPI PUSH2 0x68C7 PUSH2 0x8A64 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x68DE DUP2 PUSH2 0x8E2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x68F3 DUP2 PUSH2 0x8E2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6910 JUMPI PUSH2 0x690F PUSH2 0x8A5F JUMP JUMPDEST JUMPDEST PUSH2 0x691B PUSH2 0x120 PUSH2 0x8278 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x692B DUP5 DUP3 DUP6 ADD PUSH2 0x6B9B JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x693F DUP5 DUP3 DUP6 ADD PUSH2 0x6B9B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x6953 DUP5 DUP3 DUP6 ADD PUSH2 0x6B9B JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x6967 DUP5 DUP3 DUP6 ADD PUSH2 0x6B9B JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x697B DUP5 DUP3 DUP6 ADD PUSH2 0x6B9B JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x698F DUP5 DUP3 DUP6 ADD PUSH2 0x6B5C JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x69A3 DUP5 DUP3 DUP6 ADD PUSH2 0x6B5C JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x69B7 DUP5 DUP3 DUP6 ADD PUSH2 0x6B5C JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x100 PUSH2 0x69CC DUP5 DUP3 DUP6 ADD PUSH2 0x6B5C JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x69F0 JUMPI PUSH2 0x69EF PUSH2 0x8A5F JUMP JUMPDEST JUMPDEST PUSH2 0x69FB PUSH2 0x120 PUSH2 0x8278 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6A0B DUP5 DUP3 DUP6 ADD PUSH2 0x680F JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x6A1F DUP5 DUP3 DUP6 ADD PUSH2 0x680F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x6A33 DUP5 DUP3 DUP6 ADD PUSH2 0x6B71 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x6A47 DUP5 DUP3 DUP6 ADD PUSH2 0x6B71 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x6A5B DUP5 DUP3 DUP6 ADD PUSH2 0x6B71 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x6A6F DUP5 DUP3 DUP6 ADD PUSH2 0x67D8 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH2 0x100 PUSH2 0x6A84 DUP5 DUP3 DUP6 ADD PUSH2 0x680F JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH2 0x140 PUSH2 0x6A99 DUP5 DUP3 DUP6 ADD PUSH2 0x680F JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x180 PUSH2 0x6AAE DUP5 DUP3 DUP6 ADD PUSH2 0x6B71 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6AD1 JUMPI PUSH2 0x6AD0 PUSH2 0x8A5F JUMP JUMPDEST JUMPDEST PUSH2 0x6ADB PUSH1 0xA0 PUSH2 0x8278 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6AEB DUP5 DUP3 DUP6 ADD PUSH2 0x6BB0 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x6AFF DUP5 DUP3 DUP6 ADD PUSH2 0x6BB0 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x6B13 DUP5 DUP3 DUP6 ADD PUSH2 0x6B9B JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x6B27 DUP5 DUP3 DUP6 ADD PUSH2 0x6B9B JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x6B3B DUP5 DUP3 DUP6 ADD PUSH2 0x67D8 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6B56 DUP2 PUSH2 0x8E44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6B6B DUP2 PUSH2 0x8E5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6B80 DUP2 PUSH2 0x8E72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6B95 DUP2 PUSH2 0x8E72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6BAA DUP2 PUSH2 0x8E89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6BBF DUP2 PUSH2 0x8EA0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6BD4 DUP2 PUSH2 0x8EB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6BE9 DUP2 PUSH2 0x8ECE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6C05 JUMPI PUSH2 0x6C04 PUSH2 0x8A6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6C13 DUP5 DUP3 DUP6 ADD PUSH2 0x67D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6C33 JUMPI PUSH2 0x6C32 PUSH2 0x8A6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6C41 DUP6 DUP3 DUP7 ADD PUSH2 0x67D8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x6C52 DUP6 DUP3 DUP7 ADD PUSH2 0x67ED JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x6C76 JUMPI PUSH2 0x6C75 PUSH2 0x8A6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6C84 DUP8 DUP3 DUP9 ADD PUSH2 0x67D8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x6C95 DUP8 DUP3 DUP9 ADD PUSH2 0x6B71 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CB6 JUMPI PUSH2 0x6CB5 PUSH2 0x8A69 JUMP JUMPDEST JUMPDEST PUSH2 0x6CC2 DUP8 DUP3 DUP9 ADD PUSH2 0x6879 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6CE7 JUMPI PUSH2 0x6CE6 PUSH2 0x8A6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6CF5 DUP6 DUP3 DUP7 ADD PUSH2 0x67D8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x6D06 DUP6 DUP3 DUP7 ADD PUSH2 0x6BDA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6D26 JUMPI PUSH2 0x6D25 PUSH2 0x8A6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6D34 DUP5 DUP3 DUP6 ADD PUSH2 0x67ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6D53 JUMPI PUSH2 0x6D52 PUSH2 0x8A6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6D61 DUP5 DUP3 DUP6 ADD PUSH2 0x680F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6D80 JUMPI PUSH2 0x6D7F PUSH2 0x8A6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6D8E DUP5 DUP3 DUP6 ADD PUSH2 0x683A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6DAD JUMPI PUSH2 0x6DAC PUSH2 0x8A6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6DBB DUP5 DUP3 DUP6 ADD PUSH2 0x6864 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x6DE0 JUMPI PUSH2 0x6DDF PUSH2 0x8A6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6DEE DUP9 DUP3 DUP10 ADD PUSH2 0x684F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x6DFF DUP9 DUP3 DUP10 ADD PUSH2 0x6BB0 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x6E10 DUP9 DUP3 DUP10 ADD PUSH2 0x6B47 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x6E21 DUP9 DUP3 DUP10 ADD PUSH2 0x6B9B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x6E32 DUP9 DUP3 DUP10 ADD PUSH2 0x6B9B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x240 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6E57 JUMPI PUSH2 0x6E56 PUSH2 0x8A6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6E65 DUP6 DUP3 DUP7 ADD PUSH2 0x69D9 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1A0 PUSH2 0x6E77 DUP6 DUP3 DUP7 ADD PUSH2 0x6ABB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1C0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x6E9F JUMPI PUSH2 0x6E9E PUSH2 0x8A6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6EAD DUP10 DUP3 DUP11 ADD PUSH2 0x6B47 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x6EBE DUP10 DUP3 DUP11 ADD PUSH2 0x6B9B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x6ECF DUP10 DUP3 DUP11 ADD PUSH2 0x6B9B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x6EE0 DUP10 DUP3 DUP11 ADD PUSH2 0x6B9B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x6EF1 DUP10 DUP3 DUP11 ADD PUSH2 0x68CF JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x6F02 DUP10 DUP3 DUP11 ADD PUSH2 0x68F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F25 JUMPI PUSH2 0x6F24 PUSH2 0x8A6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6F33 DUP5 DUP3 DUP6 ADD PUSH2 0x6B71 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F52 JUMPI PUSH2 0x6F51 PUSH2 0x8A6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6F60 DUP5 DUP3 DUP6 ADD PUSH2 0x6B86 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F7F JUMPI PUSH2 0x6F7E PUSH2 0x8A6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6F8D DUP5 DUP3 DUP6 ADD PUSH2 0x6BB0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6FAD JUMPI PUSH2 0x6FAC PUSH2 0x8A6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6FBB DUP6 DUP3 DUP7 ADD PUSH2 0x6BB0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x6FCC DUP6 DUP3 DUP7 ADD PUSH2 0x67D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x6FF2 JUMPI PUSH2 0x6FF1 PUSH2 0x8A6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7000 DUP9 DUP3 DUP10 ADD PUSH2 0x6BC5 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x7011 DUP9 DUP3 DUP10 ADD PUSH2 0x68E4 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x7022 DUP9 DUP3 DUP10 ADD PUSH2 0x6B86 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x7033 DUP9 DUP3 DUP10 ADD PUSH2 0x6B86 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x7044 DUP9 DUP3 DUP10 ADD PUSH2 0x6BC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x705D DUP4 DUP4 PUSH2 0x70B1 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7075 DUP4 DUP4 PUSH2 0x72BD JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x708D DUP4 DUP4 PUSH2 0x7757 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x70A5 DUP4 DUP4 PUSH2 0x7775 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x70BA DUP2 PUSH2 0x85D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x70C9 DUP2 PUSH2 0x85D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x70E0 PUSH2 0x70DB DUP3 PUSH2 0x85D1 JUMP JUMPDEST PUSH2 0x8901 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x70F1 DUP3 PUSH2 0x82FD JUMP JUMPDEST PUSH2 0x70FB DUP2 DUP6 PUSH2 0x8373 JUMP JUMPDEST SWAP4 POP PUSH2 0x7106 DUP4 PUSH2 0x82C3 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7137 JUMPI DUP2 MLOAD PUSH2 0x711E DUP9 DUP3 PUSH2 0x7051 JUMP JUMPDEST SWAP8 POP PUSH2 0x7129 DUP4 PUSH2 0x833F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x710A JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x714F DUP3 PUSH2 0x8308 JUMP JUMPDEST PUSH2 0x7159 DUP2 DUP6 PUSH2 0x8384 JUMP JUMPDEST SWAP4 POP PUSH2 0x7164 DUP4 PUSH2 0x82D3 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7195 JUMPI DUP2 MLOAD PUSH2 0x717C DUP9 DUP3 PUSH2 0x7069 JUMP JUMPDEST SWAP8 POP PUSH2 0x7187 DUP4 PUSH2 0x834C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x7168 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x71AB DUP2 PUSH2 0x8313 JUMP JUMPDEST PUSH2 0x71B5 DUP2 DUP5 PUSH2 0x8395 JUMP JUMPDEST SWAP3 POP PUSH2 0x71C0 DUP3 PUSH2 0x82E3 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x71F1 JUMPI DUP2 MLOAD PUSH2 0x71D8 DUP8 DUP3 PUSH2 0x7081 JUMP JUMPDEST SWAP7 POP PUSH2 0x71E3 DUP4 PUSH2 0x8359 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x71C4 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7202 DUP2 PUSH2 0x8313 JUMP JUMPDEST PUSH2 0x720C DUP2 DUP5 PUSH2 0x83A0 JUMP JUMPDEST SWAP3 POP PUSH2 0x7217 DUP3 PUSH2 0x82E3 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7248 JUMPI DUP2 MLOAD PUSH2 0x722F DUP8 DUP3 PUSH2 0x7099 JUMP JUMPDEST SWAP7 POP PUSH2 0x723A DUP4 PUSH2 0x8359 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x721B JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x725B DUP3 PUSH2 0x831E JUMP JUMPDEST PUSH2 0x7265 DUP2 DUP6 PUSH2 0x83AB JUMP JUMPDEST SWAP4 POP PUSH2 0x7270 DUP4 PUSH2 0x82ED JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x72A1 JUMPI DUP2 MLOAD PUSH2 0x7288 DUP9 DUP3 PUSH2 0x7081 JUMP JUMPDEST SWAP8 POP PUSH2 0x7293 DUP4 PUSH2 0x8366 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x7274 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x72B7 DUP2 PUSH2 0x85E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x72C6 DUP2 PUSH2 0x85EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x72D5 DUP2 PUSH2 0x85EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x72EC PUSH2 0x72E7 DUP3 PUSH2 0x85EF JUMP JUMPDEST PUSH2 0x8913 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x72FD DUP3 PUSH2 0x8329 JUMP JUMPDEST PUSH2 0x7307 DUP2 DUP6 PUSH2 0x83BC JUMP JUMPDEST SWAP4 POP PUSH2 0x7317 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x8739 JUMP JUMPDEST PUSH2 0x7320 DUP2 PUSH2 0x8A73 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7336 DUP3 PUSH2 0x8329 JUMP JUMPDEST PUSH2 0x7340 DUP2 DUP6 PUSH2 0x83CD JUMP JUMPDEST SWAP4 POP PUSH2 0x7350 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x8739 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7365 DUP2 PUSH2 0x86A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7374 DUP2 PUSH2 0x86CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7383 DUP2 PUSH2 0x86F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7392 DUP2 PUSH2 0x85F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A3 DUP3 PUSH2 0x8334 JUMP JUMPDEST PUSH2 0x73AD DUP2 DUP6 PUSH2 0x83D8 JUMP JUMPDEST SWAP4 POP PUSH2 0x73BD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x8739 JUMP JUMPDEST PUSH2 0x73C6 DUP2 PUSH2 0x8A73 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73DE PUSH1 0x16 DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x73E9 DUP3 PUSH2 0x8B06 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7401 PUSH1 0x17 DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x740C DUP3 PUSH2 0x8B2F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7424 PUSH1 0x1E DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x742F DUP3 PUSH2 0x8B58 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7447 PUSH1 0x16 DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x7452 DUP3 PUSH2 0x8B81 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x746A PUSH1 0x12 DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x7475 DUP3 PUSH2 0x8BAA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x748D PUSH1 0x12 DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x7498 DUP3 PUSH2 0x8BD3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74B0 PUSH1 0xB DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x74BB DUP3 PUSH2 0x8BFC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74D3 PUSH1 0x19 DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x74DE DUP3 PUSH2 0x8C25 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74F6 PUSH1 0x19 DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x7501 DUP3 PUSH2 0x8C4E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7519 PUSH1 0x1D DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x7524 DUP3 PUSH2 0x8C77 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x753C PUSH1 0x1A DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x7547 DUP3 PUSH2 0x8CA0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x755F PUSH1 0x15 DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x756A DUP3 PUSH2 0x8CC9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7582 PUSH1 0xD DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x758D DUP3 PUSH2 0x8CF2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75A5 PUSH1 0x17 DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x75B0 DUP3 PUSH2 0x8D1B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75C8 PUSH1 0x16 DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x75D3 DUP3 PUSH2 0x8D44 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75EB PUSH1 0xB DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x75F6 DUP3 PUSH2 0x8D6D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x760E PUSH1 0x12 DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x7619 DUP3 PUSH2 0x8D96 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7631 PUSH1 0x1C DUP4 PUSH2 0x83D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x763C DUP3 PUSH2 0x8DBF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x120 DUP3 ADD PUSH1 0x0 DUP1 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x765D DUP2 PUSH2 0x876C JUMP JUMPDEST PUSH2 0x766A PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x779B JUMP JUMPDEST POP PUSH2 0x7674 DUP2 PUSH2 0x8822 JUMP JUMPDEST PUSH2 0x7681 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x779B JUMP JUMPDEST POP PUSH2 0x768B DUP2 PUSH2 0x883C JUMP JUMPDEST PUSH2 0x7698 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x779B JUMP JUMPDEST POP PUSH2 0x76A2 DUP2 PUSH2 0x8786 JUMP JUMPDEST PUSH2 0x76AF PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x779B JUMP JUMPDEST POP PUSH2 0x76B9 DUP2 PUSH2 0x87A0 JUMP JUMPDEST PUSH2 0x76C6 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x779B JUMP JUMPDEST POP PUSH2 0x76D0 DUP2 PUSH2 0x87BA JUMP JUMPDEST PUSH2 0x76DD PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x7739 JUMP JUMPDEST POP PUSH2 0x76E7 DUP2 PUSH2 0x87D4 JUMP JUMPDEST PUSH2 0x76F4 PUSH1 0xC0 DUP7 ADD DUP3 PUSH2 0x7739 JUMP JUMPDEST POP PUSH2 0x76FE DUP2 PUSH2 0x87EE JUMP JUMPDEST PUSH2 0x770B PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0x7739 JUMP JUMPDEST POP PUSH2 0x7715 DUP2 PUSH2 0x8808 JUMP JUMPDEST PUSH2 0x7723 PUSH2 0x100 DUP7 ADD DUP3 PUSH2 0x7739 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7733 DUP2 PUSH2 0x8603 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7742 DUP2 PUSH2 0x8631 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7751 DUP2 PUSH2 0x8631 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7760 DUP2 PUSH2 0x8640 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x776F DUP2 PUSH2 0x8640 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x777E DUP2 PUSH2 0x8640 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7795 PUSH2 0x7790 DUP3 PUSH2 0x8640 JUMP JUMPDEST PUSH2 0x892F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x77A4 DUP2 PUSH2 0x864A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x77B3 DUP2 PUSH2 0x864A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x77C2 DUP2 PUSH2 0x8715 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x77D1 DUP2 PUSH2 0x865A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x77E0 DUP2 PUSH2 0x866E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x77EF DUP2 PUSH2 0x8727 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x77FE DUP2 PUSH2 0x8691 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7810 DUP3 DUP5 PUSH2 0x71F9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x782B DUP3 DUP6 PUSH2 0x732B JUMP JUMPDEST SWAP2 POP PUSH2 0x7837 DUP3 DUP5 PUSH2 0x732B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x784F DUP3 DUP5 PUSH2 0x7784 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x786A DUP3 DUP10 PUSH2 0x7784 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x787A DUP3 DUP9 PUSH2 0x71F9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP2 POP PUSH2 0x788A DUP3 DUP8 PUSH2 0x71F9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP2 POP PUSH2 0x789A DUP3 DUP7 PUSH2 0x71F9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP2 POP PUSH2 0x78AA DUP3 DUP6 PUSH2 0x71F9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP2 POP PUSH2 0x78BA DUP3 DUP5 PUSH2 0x70CF JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78DA DUP3 DUP7 PUSH2 0x7784 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x78EA DUP3 DUP6 PUSH2 0x71F9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP2 POP PUSH2 0x78FA DUP3 DUP5 PUSH2 0x7784 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7917 DUP3 DUP6 PUSH2 0x7784 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x7927 DUP3 DUP5 PUSH2 0x72DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x794C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x70C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7967 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x70C0 JUMP JUMPDEST PUSH2 0x7974 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x70C0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7990 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x70C0 JUMP JUMPDEST PUSH2 0x799D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7766 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x79B9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x70C0 JUMP JUMPDEST PUSH2 0x79C6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x77E6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x79E2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x71A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x79FD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x72AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7A18 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x72CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x7A33 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x72CC JUMP JUMPDEST PUSH2 0x7A40 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x70C0 JUMP JUMPDEST PUSH2 0x7A4D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x77C8 JUMP JUMPDEST PUSH2 0x7A5A PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x77C8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7A78 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x72CC JUMP JUMPDEST PUSH2 0x7A85 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7766 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x7AA1 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x72CC JUMP JUMPDEST PUSH2 0x7AAE PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x77D7 JUMP JUMPDEST PUSH2 0x7ABB PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x72CC JUMP JUMPDEST PUSH2 0x7AC8 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x72CC JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7AEB DUP2 DUP5 PUSH2 0x72F2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7B08 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x735C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7B23 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x736B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7B3E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x737A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7B59 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7389 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7B79 DUP2 DUP5 PUSH2 0x7398 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7B9A DUP2 PUSH2 0x73D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7BBA DUP2 PUSH2 0x73F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7BDA DUP2 PUSH2 0x7417 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7BFA DUP2 PUSH2 0x743A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7C1A DUP2 PUSH2 0x745D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7C3A DUP2 PUSH2 0x7480 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7C5A DUP2 PUSH2 0x74A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7C7A DUP2 PUSH2 0x74C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7C9A DUP2 PUSH2 0x74E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7CBA DUP2 PUSH2 0x750C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7CDA DUP2 PUSH2 0x752F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7CFA DUP2 PUSH2 0x7552 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7D1A DUP2 PUSH2 0x7575 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7D3A DUP2 PUSH2 0x7598 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7D5A DUP2 PUSH2 0x75BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7D7A DUP2 PUSH2 0x75DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7D9A DUP2 PUSH2 0x7601 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7DBA DUP2 PUSH2 0x7624 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7DD6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x772A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x7DF1 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x772A JUMP JUMPDEST PUSH2 0x7DFE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x772A JUMP JUMPDEST PUSH2 0x7E0B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x772A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x7E28 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x772A JUMP JUMPDEST PUSH2 0x7E35 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x77AA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x7E47 DUP2 DUP5 PUSH2 0x7144 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x7E66 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x772A JUMP JUMPDEST PUSH2 0x7E73 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x77AA JUMP JUMPDEST PUSH2 0x7E80 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x77AA JUMP JUMPDEST PUSH2 0x7E8D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x77AA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 DUP3 ADD SWAP1 POP PUSH2 0x7EAC PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x772A JUMP JUMPDEST PUSH2 0x7EB9 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x77AA JUMP JUMPDEST PUSH2 0x7EC6 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x77AA JUMP JUMPDEST PUSH2 0x7ED3 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x77AA JUMP JUMPDEST PUSH2 0x7EE0 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x7389 JUMP JUMPDEST PUSH2 0x7EED PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x7647 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7F0D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7766 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x7F28 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x7766 JUMP JUMPDEST PUSH2 0x7F35 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x71A2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7F51 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x7766 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x7F63 DUP2 DUP5 PUSH2 0x7250 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7F81 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x7766 JUMP JUMPDEST PUSH2 0x7F8E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7766 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x7FAA PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x7766 JUMP JUMPDEST PUSH2 0x7FB7 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x7766 JUMP JUMPDEST PUSH2 0x7FC4 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x772A JUMP JUMPDEST PUSH2 0x7FD1 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x77AA JUMP JUMPDEST PUSH2 0x7FDE PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x77AA JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x7FFD PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x7766 JUMP JUMPDEST PUSH2 0x800A PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x7766 JUMP JUMPDEST PUSH2 0x8017 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x77C8 JUMP JUMPDEST PUSH2 0x8024 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x77AA JUMP JUMPDEST PUSH2 0x8031 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x77AA JUMP JUMPDEST PUSH2 0x803E PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x70C0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x805E PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x7766 JUMP JUMPDEST PUSH2 0x806B PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x77C8 JUMP JUMPDEST PUSH2 0x8078 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x77C8 JUMP JUMPDEST PUSH2 0x8085 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x77AA JUMP JUMPDEST PUSH2 0x8092 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x77AA JUMP JUMPDEST PUSH2 0x809F PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x70C0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x80BF PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x7766 JUMP JUMPDEST PUSH2 0x80CC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x77F5 JUMP JUMPDEST PUSH2 0x80D9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x72AE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x80F6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x77AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x8111 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x77AA JUMP JUMPDEST PUSH2 0x811E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x77AA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x813B PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x77AA JUMP JUMPDEST PUSH2 0x8148 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x77AA JUMP JUMPDEST PUSH2 0x8155 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x77AA JUMP JUMPDEST PUSH2 0x8162 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x77AA JUMP JUMPDEST PUSH2 0x816F PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x77AA JUMP JUMPDEST PUSH2 0x817C PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x7748 JUMP JUMPDEST PUSH2 0x8189 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x7748 JUMP JUMPDEST PUSH2 0x8196 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x7748 JUMP JUMPDEST PUSH2 0x81A4 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x7748 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x81C7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x77B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x81E2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x77C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x81FD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x77C8 JUMP JUMPDEST PUSH2 0x820A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x70C0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8226 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x77F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x8241 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x77F5 JUMP JUMPDEST PUSH2 0x824E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x77C8 JUMP JUMPDEST PUSH2 0x825B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x70C0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x826D DUP2 DUP5 PUSH2 0x70E6 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8282 PUSH2 0x8293 JUMP JUMPDEST SWAP1 POP PUSH2 0x828E DUP3 DUP3 PUSH2 0x8856 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x82B8 JUMPI PUSH2 0x82B7 PUSH2 0x8A26 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83F4 DUP3 PUSH2 0x8640 JUMP JUMPDEST SWAP2 POP PUSH2 0x83FF DUP4 PUSH2 0x8640 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x8434 JUMPI PUSH2 0x8433 PUSH2 0x896A JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x844A DUP3 PUSH2 0x865A JUMP JUMPDEST SWAP2 POP PUSH2 0x8455 DUP4 PUSH2 0x865A JUMP JUMPDEST SWAP3 POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x8472 JUMPI PUSH2 0x8471 PUSH2 0x896A JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8488 DUP3 PUSH2 0x8691 JUMP JUMPDEST SWAP2 POP PUSH2 0x8493 DUP4 PUSH2 0x8691 JUMP JUMPDEST SWAP3 POP DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x84B4 JUMPI PUSH2 0x84B3 PUSH2 0x896A JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x84CA DUP3 PUSH2 0x8640 JUMP JUMPDEST SWAP2 POP PUSH2 0x84D5 DUP4 PUSH2 0x8640 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x84E5 JUMPI PUSH2 0x84E4 PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x84FB DUP3 PUSH2 0x8640 JUMP JUMPDEST SWAP2 POP PUSH2 0x8506 DUP4 PUSH2 0x8640 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x853F JUMPI PUSH2 0x853E PUSH2 0x896A JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8555 DUP3 PUSH2 0x8640 JUMP JUMPDEST SWAP2 POP PUSH2 0x8560 DUP4 PUSH2 0x8640 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x8573 JUMPI PUSH2 0x8572 PUSH2 0x896A JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8589 DUP3 PUSH2 0x8691 JUMP JUMPDEST SWAP2 POP PUSH2 0x8594 DUP4 PUSH2 0x8691 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x85A7 JUMPI PUSH2 0x85A6 PUSH2 0x896A JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x85DC DUP3 PUSH2 0x8611 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86B4 DUP3 PUSH2 0x86BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86C6 DUP3 PUSH2 0x8611 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86D8 DUP3 PUSH2 0x86DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86EA DUP3 PUSH2 0x8611 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86FC DUP3 PUSH2 0x8703 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x870E DUP3 PUSH2 0x8611 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8720 DUP3 PUSH2 0x865A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8732 DUP3 PUSH2 0x8691 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8757 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x873C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x8766 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x877F PUSH2 0x877A DUP4 PUSH2 0x8A91 JUMP JUMPDEST PUSH2 0x85C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8799 PUSH2 0x8794 DUP4 PUSH2 0x8AF9 JUMP JUMPDEST PUSH2 0x85C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87B3 PUSH2 0x87AE DUP4 PUSH2 0x8A9E JUMP JUMPDEST PUSH2 0x85C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87CD PUSH2 0x87C8 DUP4 PUSH2 0x8AAB JUMP JUMPDEST PUSH2 0x85B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87E7 PUSH2 0x87E2 DUP4 PUSH2 0x8AB8 JUMP JUMPDEST PUSH2 0x85B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8801 PUSH2 0x87FC DUP4 PUSH2 0x8AC5 JUMP JUMPDEST PUSH2 0x85B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x881B PUSH2 0x8816 DUP4 PUSH2 0x8AD2 JUMP JUMPDEST PUSH2 0x85B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8835 PUSH2 0x8830 DUP4 PUSH2 0x8ADF JUMP JUMPDEST PUSH2 0x85C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x884F PUSH2 0x884A DUP4 PUSH2 0x8AEC JUMP JUMPDEST PUSH2 0x85C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x885F DUP3 PUSH2 0x8A73 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x887E JUMPI PUSH2 0x887D PUSH2 0x8A26 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8892 DUP3 PUSH2 0x8640 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x88C5 JUMPI PUSH2 0x88C4 PUSH2 0x896A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x88DB DUP3 PUSH2 0x865A JUMP JUMPDEST SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x88F6 JUMPI PUSH2 0x88F5 PUSH2 0x896A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x890C DUP3 PUSH2 0x891D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8928 DUP3 PUSH2 0x8A84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8944 DUP3 PUSH2 0x8640 JUMP JUMPDEST SWAP2 POP PUSH2 0x894F DUP4 PUSH2 0x8640 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x895F JUMPI PUSH2 0x895E PUSH2 0x8999 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x80 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xA0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xB8 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xD0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE8 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5365636F6E64206D756C20636865636B206661696C6564000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x706F696E747320696E2073756D206D7573742062652064697374696E63740000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6269674D6F64457870206661696C757265210000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x696E76616C696420782D6F7264696E6174650000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x626164207769746E657373000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6164647228632A706B2B732A6729213D5F755769746E65737300000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x696E765A206D75737420626520696E7665727365206F66207A00000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6347616D6D615769746E657373206973206E6F74206F6E206375727665000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x7075626C6963206B6579206973206E6F74206F6E206375727665000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x67616D6D61206973206E6F74206F6E2063757276650000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x696E76616C69642070726F6F6600000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4669727374206D756C20636865636B206661696C656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x7A65726F207363616C6172000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x696E76616C696420792D6F7264696E6174650000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x73486173685769746E657373206973206E6F74206F6E20637572766500000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x8DF1 DUP2 PUSH2 0x85D1 JUMP JUMPDEST DUP2 EQ PUSH2 0x8DFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8E08 DUP2 PUSH2 0x85E3 JUMP JUMPDEST DUP2 EQ PUSH2 0x8E13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8E1F DUP2 PUSH2 0x85EF JUMP JUMPDEST DUP2 EQ PUSH2 0x8E2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8E36 DUP2 PUSH2 0x85F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x8E41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8E4D DUP2 PUSH2 0x8603 JUMP JUMPDEST DUP2 EQ PUSH2 0x8E58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8E64 DUP2 PUSH2 0x8631 JUMP JUMPDEST DUP2 EQ PUSH2 0x8E6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8E7B DUP2 PUSH2 0x8640 JUMP JUMPDEST DUP2 EQ PUSH2 0x8E86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8E92 DUP2 PUSH2 0x864A JUMP JUMPDEST DUP2 EQ PUSH2 0x8E9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8EA9 DUP2 PUSH2 0x865A JUMP JUMPDEST DUP2 EQ PUSH2 0x8EB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8EC0 DUP2 PUSH2 0x867B JUMP JUMPDEST DUP2 EQ PUSH2 0x8ECB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8ED7 DUP2 PUSH2 0x8691 JUMP JUMPDEST DUP2 EQ PUSH2 0x8EE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID ADDRESS PUSH25 0x66666666666666666666666666666666666666666666666666 PUSH7 0x66666666666666 PUSH7 0x66666666666666 PUSH7 0x66666666666666 PUSH7 0x66666666666666 PUSH7 0x66666666666666 PUSH7 0x66666666A26469 PUSH17 0x667358221220E864CDC4BE1FA0737B53AB PUSH18 0xDE666A40AED9395310D61B4B4BEEA341BDE1 0xEA SMOD PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"767:31459:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13684:192;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;12717:247;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;27028:433;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;25801:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8484:657;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12263:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4540:54;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;32101:123;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;973:40;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12358:110;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4598:42;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9961:1112;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13935:2264;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11457:802;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;1503:42;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24703:345;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1241:56;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16348:123;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7980:355;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;29154:680;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1022:312:3;;;:::i;:::-;;27520:590:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1374:81:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;28169:926:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;26455:514;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25950:446;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;25052:745;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1101:52;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20708:2323;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11077:376;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;9287:128;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19737:635;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29893:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13092:533;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;31044:592;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;843:98:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13684:192:13;13744:6;13752;13760:16;13792:8;:36;;;;;;;;;;;;13830:8;:20;;;;;;;;;;;;13852:18;13784:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13684:192;;;:::o;12717:247::-;2059:20:3;:18;:20::i;:::-;12839:1:13::1;12793:48;;:21;:28;12815:5;12793:28;;;;;;;;;;;;;;;:34;;;;;;;;;;;;:48;;;12789:97;;;12858:21;;;;;;;;;;;;;;12789:97;12891:68;12917:5;12924:21;:28;12946:5;12924:28;;;;;;;;;;;;;;;:34;;;;;;;;;;;;12891:25;:68::i;:::-;12717:247:::0;:::o;27028:433::-;27145:5;31682:13;31698:21;:28;31720:5;31698:28;;;;;;;;;;;;;;;:34;;;;;;;;;;;;31682:50;;31759:1;31742:19;;:5;:19;;;31738:68;;;31778:21;;;;;;;;;;;;;;31738:68;31829:5;31815:19;;:10;:19;;;31811:68;;31866:5;31851:21;;;;;;;;;;;:::i;:::-;;;;;;;;31811:68;31928:8:::1;:23;;;;;;;;;;;;31924:62;;;31968:11;;;;;;;;;;;;;;31924:62;27302:8:::2;27255:55;;:21;:28;27277:5;27255:28;;;;;;;;;;;;;;;:43;;;;;;;;;;;;:55;;;27251:206;;27366:8;27320:21;:28;27342:5;27320:28;;;;;;;;;;;;;;;:43;;;:54;;;;;;;;;;;;;;;;;;27422:5;27387:63;;;27429:10;27441:8;27387:63;;;;;;;:::i;:::-;;;;;;;;27251:206;31676:214:::0;27028:433;;;:::o;25801:90::-;25851:6;25872:14;;;;;;;;;;;25865:21;;25801:90;:::o;8484:657::-;2059:20:3;:18;:20::i;:::-;8577:10:13::1;8590:27;8600:16;8590:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:27::i;:::-;8577:40;;8623:14;8640:13;:17;8654:2;8640:17;;;;;;;;;;;;;;;;;;;;;8623:34;;8685:1;8667:20;;:6;:20;;;8663:68;;;8721:2;8704:20;;;;;;;;;;;:::i;:::-;;;;;;;;8663:68;8743:13;:17;8757:2;8743:17;;;;;;;;;;;;8736:24;;;;;;;;;;;8771:9;8766:326;8790:18;:25;;;;8786:1;:29;8766:326;;;8859:2;8834:18;8853:1;8834:21;;;;;;;;:::i;:::-;;;;;;;;;;:27;8830:256;;;8873:12;8888:18;8935:1;8907:18;:25;;;;:29;;;;:::i;:::-;8888:49;;;;;;;;:::i;:::-;;;;;;;;;;8873:64;;9039:4;9015:18;9034:1;9015:21;;;;;;;;:::i;:::-;;;;;;;;;:28;;;;9053:18;:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8863:223;8830:256;8817:3;;;;;:::i;:::-;;;;8766:326;;;;9129:6;9102:34;;;9125:2;9102:34;;;;;;:::i;:::-;;;;;;;;8571:570;;8484:657:::0;:::o;12263:91::-;12313:7;12335:14;;;;;;;;;;;12328:21;;;;12263:91;:::o;4540:54::-;4591:3;4540:54;:::o;32101:123::-;32167:13;32188:31;;;;;;;;;;;;;;;;;;;32101:123;:::o;973:40::-;;;:::o;12358:110::-;12418:6;12439:24;;12432:31;;12358:110;:::o;4598:42::-;4637:3;4598:42;:::o;9961:1112::-;2059:20:3;:18;:20::i;:::-;4591:3:13::1;10212:55;;:27;:55;;;10208:227;;;10321:27;10358;4591:3;10284:144;;;;;;;;;;;;;:::i;:::-;;;;;;;;10208:227;10470:1;10444:22;:27;10440:98;;10508:22;10488:43;;;;;;;;;;;:::i;:::-;;;;;;;;10440:98;10554:243;;;;;;;;10598:27;10554:243;;;;;;10646:11;10554:243;;;;;;10785:5;10554:243;;;;;;10683:16;10554:243;;;;;;10735:26;10554:243;;;;::::0;10543:8:::1;:254;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10817:9;10803:11;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10859:22;10832:24;:49;;;;10892:176;10909:27;10944:11;10963:16;10987:26;11021:22;11051:11;10892:176;;;;;;;;;;;:::i;:::-;;;;;;;;9961:1112:::0;;;;;;:::o;13935:2264::-;14129:7;31928:8;:23;;;;;;;;;;;;31924:62;;;31968:11;;;;;;;;;;;;;;31924:62;14250:1:::1;14204:48;;:21;:28;14226:5;14204:28;;;;;;;;;;;;;;;:34;;;;;;;;;;;;:48;;;14200:97;;;14269:21;;;;;;;;;;;;;;14200:97;14522:19;14544:11;:23;14556:10;14544:23;;;;;;;;;;;;;;;:30;14568:5;14544:30;;;;;;;;;;;;;;;;;;;;;;;;;14522:52;;14600:1;14584:12;:17;;;14580:79;;;14634:5;14641:10;14618:34;;;;;;;;;;;;:::i;:::-;;;;;;;;14580:79;14753:8;:36;;;;;;;;;;;;14730:59;;:20;:59;;;:111;;;;4591:3;14793:48;;:20;:48;;;14730:111;14719:297;;;14900:20;14930:8;:36;;;;;;;;;;;;4591:3;14863:146;;;;;;;;;;;;;:::i;:::-;;;;;;;;14719:297;15249:8;:20;;;;;;;;;;;;15230:39;;:16;:39;;;15226:121;;;15301:16;15319:8;:20;;;;;;;;;;;;15286:54;;;;;;;;;;;;:::i;:::-;;;;;;;;15226:121;4637:3;15356:24;;:8;:24;;;15352:91;;;15412:8;4637:3;15397:39;;;;;;;;;;;;:::i;:::-;;;;;;;;15352:91;15647:12;15677:1;15662:12;:16;;;;:::i;:::-;15647:31;;15685:17;15704:15:::0;15723:52:::1;15741:7;15750:10;15762:5;15769;15723:17;:52::i;:::-;15684:91;;;;15844:9;15855:35;:33;:35::i;:::-;15892:5;15899:16;15917:8;15927:10;15833:105;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;15816:128;;;;;;15782:20;:31;15803:9;15782:31;;;;;;;;;;;:162;;;;16111:10;15955:172;;16030:5;15955:172;;15983:7;15955:172;15998:9;16015:7;16043:20;16071:16;16095:8;15955:172;;;;;;;;;;:::i;:::-;;;;;;;;16166:5;16133:11;:23;16145:10;16133:23;;;;;;;;;;;;;;;:30;16157:5;16133:30;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;16185:9;16178:16;;;;;;13935:2264:::0;;;;;;;:::o;11457:802::-;11523:37;11568;11613;11658;11703;11748:19;11775;11802;11829;11878:11;:42;;;;;;;;;;;;11928:11;:42;;;;;;;;;;;;11978:11;:42;;;;;;;;;;;;12028:11;:42;;;;;;;;;;;;12078:11;:42;;;;;;;;;;;;12128:11;:24;;;;;;;;;;;;12160:11;:24;;;;;;;;;;;;12192:11;:24;;;;;;;;;;;;12224:11;:24;;;;;;;;;;;;11863:391;;;;;;;;;;;;;;;;;;11457:802;;;;;;;;;:::o;1503:42::-;1542:3;1503:42;:::o;24703:345::-;31928:8;:23;;;;;;;;;;;;31924:62;;;31968:11;;;;;;;;;;;;;;31924:62;24828:6:::1;24793:41;;:20;:32;24814:10;24793:32;;;;;;;;;;;;;;;;;;;;;;;;;:41;;;24789:90;;;24851:21;;;;;;;;;;;;;;24789:90;24920:6;24884:20;:32;24905:10;24884:32;;;;;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;24950:6;24932:14;;:24;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;24967:4;:13;;;24981:9;24992:6;24967:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24962:82;;25016:21;;;;;;;;;;;;;;24962:82;24703:345:::0;;:::o;1241:56::-;;;:::o;16348:123::-;16413:7;16435:20;:31;16456:9;16435:31;;;;;;;;;;;;16428:38;;16348:123;;;:::o;7980:355::-;2059:20:3;:18;:20::i;:::-;8087:10:13::1;8100:27;8110:16;8100:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:27::i;:::-;8087:40;;8166:1;8137:31;;:13;:17;8151:2;8137:17;;;;;;;;;;;;;;;;;;;;;:31;;;8133:90;;8213:2;8185:31;;;;;;;;;;;:::i;:::-;;;;;;;;8133:90;8248:6;8228:13;:17;8242:2;8228:17;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;8260:18;8284:2;8260:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8323:6;8298:32;;;8319:2;8298:32;;;;;;:::i;:::-;;;;;;;;8081:254;7980:355:::0;;:::o;29154:680::-;29238:5;31682:13;31698:21;:28;31720:5;31698:28;;;;;;;;;;;;;;;:34;;;;;;;;;;;;31682:50;;31759:1;31742:19;;:5;:19;;;31738:68;;;31778:21;;;;;;;;;;;;;;31738:68;31829:5;31815:19;;:10;:19;;;31811:68;;31866:5;31851:21;;;;;;;;;;;:::i;:::-;;;;;;;;31811:68;31928:8:::1;:23;;;;;;;;;;;;31924:62;;;31968:11;;;;;;;;;;;;;;31924:62;1542:3:::2;29321:62;;:21;:28;29343:5;29321:28;;;;;;;;;;;;;;;:38;;:45;;;;:62;29317:108;;;29400:18;;;;;;;;;;;;;;29317:108;29466:1;29434:11;:21;29446:8;29434:21;;;;;;;;;;;;;;;:28;29456:5;29434:28;;;;;;;;;;;;;;;;;;;;;;;;;:33;;;29430:177;;29594:7;;29430:177;29715:1;29684:11;:21;29696:8;29684:21;;;;;;;;;;;;;;;:28;29706:5;29684:28;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;29722:21;:28;29744:5;29722:28;;;;;;;;;;;;;;;:38;;29766:8;29722:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29813:5;29787:42;;;29820:8;29787:42;;;;;;:::i;:::-;;;;;;;;31991:1;31676:214:::0;29154:680;;;:::o;1022:312:3:-;1142:14;;;;;;;;;;;1128:28;;:10;:28;;;1120:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1190:16;1209:7;;;;;;;;;;;1190:26;;1232:10;1222:7;;:20;;;;;;;;;;;;;;;;;;1273:1;1248:14;;:27;;;;;;;;;;;;;;;;;;1318:10;1287:42;;1308:8;1287:42;;;;;;;;;;;;1067:267;1022:312::o;27520:590:13:-;31928:8;:23;;;;;;;;;;;;31924:62;;;31968:11;;;;;;;;;;;;;;31924:62;27662:1:::1;27616:48;;:21;:28;27638:5;27616:28;;;;;;;;;;;;;;;:34;;;;;;;;;;;;:48;;;27612:97;;;27681:21;;;;;;;;;;;;;;27612:97;27765:10;27718:57;;:21;:28;27740:5;27718:28;;;;;;;;;;;;;;;:43;;;;;;;;;;;;:57;;;27714:150;;27813:21;:28;27835:5;27813:28;;;;;;;;;;;;;;;:43;;;;;;;;;;;;27792:65;;;;;;;;;;;:::i;:::-;;;;;;;;27714:150;27869:16;27888:21;:28;27910:5;27888:28;;;;;;;;;;;;;;;:34;;;;;;;;;;;;27869:53;;27965:10;27928:21;:28;27950:5;27928:28;;;;;;;;;;;;;;;:34;;;:47;;;;;;;;;;;;;;;;;;28035:1;27981:21;:28;28003:5;27981:28;;;;;;;;;;;;;;;:43;;;:56;;;;;;;;;;;;;;;;;;28077:5;28048:57;;;28084:8;28094:10;28048:57;;;;;;;:::i;:::-;;;;;;;;27606:504;27520:590:::0;:::o;1374:81:3:-;1421:7;1443;;;;;;;;;;;1436:14;;1374:81;:::o;28169:926:13:-;28256:5;31682:13;31698:21;:28;31720:5;31698:28;;;;;;;;;;;;;;;:34;;;;;;;;;;;;31682:50;;31759:1;31742:19;;:5;:19;;;31738:68;;;31778:21;;;;;;;;;;;;;;31738:68;31829:5;31815:19;;:10;:19;;;31811:68;;31866:5;31851:21;;;;;;;;;;;:::i;:::-;;;;;;;;31811:68;31928:8:::1;:23;;;;;;;;;;;;31924:62;;;31968:11;;;;;;;;;;;;;;31924:62;28286:27:::2;28307:5;28286:20;:27::i;:::-;28282:77;;;28330:22;;;;;;;;;;;;;;28282:77;28400:1;28368:11;:21;28380:8;28368:21;;;;;;;;;;;;;;;:28;28390:5;28368:28;;;;;;;;;;;;;;;;;;;;;;;;;:33;;;28364:93;;;28434:5;28441:8;28418:32;;;;;;;;;;;;:::i;:::-;;;;;;;;28364:93;28499:26;28528:21;:28;28550:5;28528:28;;;;;;;;;;;;;;;:38;;28499:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28572:25;28619:1;28600:9;:16;:20;;;;:::i;:::-;28572:48;;28631:9;28626:369;28650:9;:16;28646:1;:20;28626:369;;;28701:8;28685:24;;:9;28695:1;28685:12;;;;;;;;:::i;:::-;;;;;;;;:24;;;28681:308;;;28721:12;28736:9;28746:17;28736:28;;;;;;;;:::i;:::-;;;;;;;;28721:43;;28868:4;28824:21;:28;28846:5;28824:28;;;;;;;;;;;;;;;:38;;28863:1;28824:41;;;;;;;;:::i;:::-;;;;;;;;;;:48;;;;;;;;;;;;;;;;;;28921:21;:28;28943:5;28921:28;;;;;;;;;;;;;;;:38;;:44;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;28975:5;;;28681:308;28668:3;;;;;:::i;:::-;;;;28626:369;;;;29007:11;:21;29019:8;29007:21;;;;;;;;;;;;;;;:28;29029:5;29007:28;;;;;;;;;;;;;;;;29000:35;;;;;;;;;;;29074:5;29046:44;;;29081:8;29046:44;;;;;;:::i;:::-;;;;;;;;28276:819;;31676:214:::0;28169:926;;;:::o;26455:514::-;26525:6;31928:8;:23;;;;;;;;;;;;31924:62;;;31968:11;;;;;;;;;;;;;;31924:62;26539:14:::1;;:16;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;26561:19;26583:14;;;;;;;;;;;26561:36;;26603:26;26646:1:::0;26632:16:::1;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26603:45;;26686:39;;;;;;;;26709:1;26686:39;;;;;;26722:1;26686:39;;;;::::0;26654:15:::1;:29;26670:12;26654:29;;;;;;;;;;;;;;;:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26769:113;;;;;;;;26803:10;26769:113;;;;;;26845:1;26769:113;;;;;;26866:9;26769:113;;::::0;26731:21:::1;:35;26753:12;26731:35;;;;;;;;;;;;;;;:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;26914:12;26894:45;;;26928:10;26894:45;;;;;;:::i;:::-;;;;;;;;26952:12;26945:19;;;;26455:514:::0;:::o;25950:446::-;26029:14;26045:15;26062:13;26077:26;26161:1;26115:48;;:21;:28;26137:5;26115:28;;;;;;;;;;;;;;;:34;;;;;;;;;;;;:48;;;26111:97;;;26180:21;;;;;;;;;;;;;;26111:97;26228:15;:22;26244:5;26228:22;;;;;;;;;;;;;;;:30;;;;;;;;;;;;26266:15;:22;26282:5;26266:22;;;;;;;;;;;;;;;:31;;;;;;;;;;;;26305:21;:28;26327:5;26305:28;;;;;;;;;;;;;;;:34;;;;;;;;;;;;26347:21;:28;26369:5;26347:28;;;;;;;;;;;;;;;:38;;26213:178;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25950:446;;;;;:::o;25052:745::-;31928:8;:23;;;;;;;;;;;;31924:62;;;31968:11;;;;;;;;;;;;;;31924:62;25199:4:::1;25177:27;;:10;:27;;;25173:77;;25221:22;;;;;;;;;;;;;;25173:77;25274:2;25259:4;;:11;;:17;25255:62;;25293:17;;;;;;;;;;;;;;25255:62;25322:12;25348:4;;25337:26;;;;;;;:::i;:::-;25322:41;;25419:1;25373:48;;:21;:28;25395:5;25373:28;;;;;;;;;;;;;;;:34;;;;;;;;;;;;:48;;;25369:97;;;25438:21;;;;;;;;;;;;;;25369:97;25580:18;25601:15;:22;25617:5;25601:22;;;;;;;;;;;;;;;:30;;;;;;;;;;;;25580:51;;;;25678:6;25637:15;:22;25653:5;25637:22;;;;;;;;;;;;;;;:30;;;:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;25716:6;25691:14;;:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;25753:5;25734:58;;;25760:10;25785:6;25772:10;:19;;;;:::i;:::-;25734:58;;;;;;;:::i;:::-;;;;;;;;25167:630;;25052:745:::0;;;;:::o;1101:52::-;;;:::o;20708:2323::-;20816:6;31928:8;:23;;;;;;;;;;;;31924:62;;;31968:11;;;;;;;;;;;;;;31924:62;20830:16:::1;20849:9;20830:28;;20865:15;20882:17:::0;20901:18:::1;20923:34;20947:5;20954:2;20923:23;:34::i;:::-;20864:93;;;;;;20964:28;21009:2;:11;;;20995:26;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20964:57;;21032:9;21027:119;21051:2;:11;;;21047:15;;:1;:15;21027:119;;;21123:10;21135:1;21112:25;;;;;;;;;:::i;:::-;;;;;;;;;;;;;21102:36;;;;;;21094:45;;21077:11;21089:1;21077:14;;;;;;;;:::i;:::-;;;;;;;:62;;;::::0;::::1;21064:3;;;;;:::i;:::-;;;;21027:119;;;;21159:20;:31;21180:9;21159:31;;;;;;;;;;;21152:38;;;21196:19;21221:17:::0;21264:32:::1;;;21298:9;21309:11;21241:80;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21221:100;;21769:4;21743:8;:23;;;:30;;;;;;;;;;;;;;;;;;21779:12;21794:55;21812:2;:19;;;21794:55;;21833:2;:9;;;21844:4;21794:17;:55::i;:::-;21779:70;;21881:5;21855:8;:23;;;:31;;;;;;;;;;;;;;;;;;21948:15;21966;:25;21982:2;:8;;;21966:25;;;;;;;;;;;;;;;:34;;;;;;;;;;;;21948:52;;22044:1;22006:15;:25;22022:2;:8;;;22006:25;;;;;;;;;;;;;;;:34;;;:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;22518:14;22535:135;22566:8;22582;:35;;;;;;;;;;;;22535:135;;22625:20;22636:8;22625:10;:20::i;:::-;22653:11;22535:23;:135::i;:::-;22518:152;;22716:7;22680:43;;:15;:25;22696:2;:8;;;22680:25;;;;;;;;;;;;;;;:33;;;;;;;;;;;;:43;;;22676:92;;;22740:21;;;;;;;;;;;;;;22676:92;22810:7;22773:15;:25;22789:2;:8;;;22773:25;;;;;;;;;;;;;;;:33;;;:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;22871:7;22823:20;:44;22844:13;:22;22858:7;22844:22;;;;;;;;;;;;;;;;;;;;;22823:44;;;;;;;;;;;;;;;;:55;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;22966:9;22945:61;22977:10;22989:7;22998;22945:61;;;;;;;;:::i;:::-;;;;;;;;23019:7;23012:14;;;;;;;;;;;;20708:2323:::0;;;;:::o;11077:376::-;11140:34;11182:18;11208:23;11239:33;11302:8;:36;;;;;;;;;;;;11346:8;:20;;;;;;;;;;;;11374:8;:25;;;;;;;;;;;;11407:8;:35;;;;;;;;;;;;11287:161;;;;;;;;11077:376;;;;:::o;9287:128::-;9356:7;9399:9;9388:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;9378:32;;;;;;9371:39;;9287:128;;;:::o;19737:635::-;19795:6;19809:19;19831:11;19809:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19857:8;19852:13;;:1;:13;;:44;;;;;19881:2;:15;;;19869:27;;:8;:27;;;;19852:44;19848:105;;;19913:2;:33;;;19906:40;;;;;19848:105;19980:8;19962:26;;:2;:15;;;:26;;;:57;;;;;20004:2;:15;;;19992:27;;:8;:27;;;;19962:57;19958:118;;;20036:2;:33;;;20029:40;;;;;19958:118;20103:8;20085:26;;:2;:15;;;:26;;;:57;;;;;20127:2;:15;;;20115:27;;:8;:27;;;;20085:57;20081:118;;;20159:2;:33;;;20152:40;;;;;20081:118;20226:8;20208:26;;:2;:15;;;:26;;;:57;;;;;20250:2;:15;;;20238:27;;:8;:27;;;;20208:57;20204:118;;;20282:2;:33;;;20275:40;;;;;20204:118;20334:2;:33;;;20327:40;;;19737:635;;;;:::o;29893:234::-;29978:5;31682:13;31698:21;:28;31720:5;31698:28;;;;;;;;;;;;;;;:34;;;;;;;;;;;;31682:50;;31759:1;31742:19;;:5;:19;;;31738:68;;;31778:21;;;;;;;;;;;;;;31738:68;31829:5;31815:19;;:10;:19;;;31811:68;;31866:5;31851:21;;;;;;;;;;;:::i;:::-;;;;;;;;31811:68;31928:8:::1;:23;;;;;;;;;;;;31924:62;;;31968:11;;;;;;;;;;;;;;31924:62;30008:27:::2;30029:5;30008:20;:27::i;:::-;30004:77;;;30052:22;;;;;;;;;;;;;;30004:77;30086:36;30112:5;30119:2;30086:25;:36::i;:::-;31676:214:::0;29893:234;;;:::o;13092:533::-;2059:20:3;:18;:20::i;:::-;13151:23:13::1;13177:4;:14;;;13200:4;13177:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13151:55;;13212:23;13246:14;;;;;;;;;;;13238:23;;13212:49;;13289:15;13271;:33;13267:119;;;13346:15;13363;13321:58;;;;;;;;;;;;:::i;:::-;;;;;;;;13267:119;13413:15;13395;:33;13391:176;;;13438:14;13473:15;13455;:33;;;;:::i;:::-;13438:50;;13496:4;:13;;;13510:2;13514:6;13496:25;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;13534:26;13549:2;13553:6;13534:26;;;;;;;:::i;:::-;;;;;;;;13430:137;13391:176;13145:480;;13092:533:::0;:::o;31044:592::-;31118:4;31130:35;31168:21;:28;31190:5;31168:28;;;;;;;;;;;;;;;31130:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31207:9;31202:412;31226:9;:19;;;:26;31222:1;:30;31202:412;;;31272:9;31267:341;31291:18;:25;;;;31287:1;:29;31267:341;;;31334:13;31353:165;31382:18;31401:1;31382:21;;;;;;;;:::i;:::-;;;;;;;;;;31415:9;:19;;;31435:1;31415:22;;;;;;;;:::i;:::-;;;;;;;;31449:5;31466:11;:35;31478:9;:19;;;31498:1;31478:22;;;;;;;;:::i;:::-;;;;;;;;31466:35;;;;;;;;;;;;;;;:42;31502:5;31466:42;;;;;;;;;;;;;;;;;;;;;;;;;31353:17;:165::i;:::-;31333:185;;;31563:1;31532:32;;:20;:27;31553:5;31532:27;;;;;;;;;;;;:32;31528:72;;31585:4;31578:11;;;;;;;;31528:72;31323:285;31318:3;;;;;:::i;:::-;;;;31267:341;;;;31254:3;;;;;:::i;:::-;;;;31202:412;;;;31626:5;31619:12;;;31044:592;;;;:::o;843:98:3:-;2059:20;:18;:20::i;:::-;914:22:::1;933:2;914:18;:22::i;:::-;843:98:::0;:::o;1797:158::-;1916:7;;;;;;;;;;1902:21;;:10;:21;;;1894:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1797:158::o;30131:697:13:-;31928:8;:23;;;;;;;;;;;;31924:62;;;31968:11;;;;;;;;;;;;;;31924:62;30219:35:::1;30257:21;:28;30279:5;30257:28;;;;;;;;;;;;;;;30219:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;30291:23;30317:15;:22;30333:5;30317:22;;;;;;;;;;;;;;;30291:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;30345:14;30362:3;:11;;;30345:28;;30460:9;30455:121;30479:9;:19;;;:26;30475:1;:30;30455:121;;;30527:11;:35;30539:9;:19;;;30559:1;30539:22;;;;;;;;:::i;:::-;;;;;;;;30527:35;;;;;;;;;;;;;;;:42;30563:5;30527:42;;;;;;;;;;;;;;;;30520:49;;;;;;;;;;;30507:3;;;;;:::i;:::-;;;;30455:121;;;;30588:21;:28;30610:5;30588:28;;;;;;;;;;;;;;;;30581:35:::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;30629:15;:22;30645:5;30629:22;;;;;;;;;;;;;;;;30622:29:::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30675:7;30657:14;;:25;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;30693:4;:13;;;30707:2;30719:7;30711:16;;30693:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30688:85;;30745:21;;;;;;;;;;;;;;30688:85;30804:5;30783:40;;;30811:2;30815:7;30783:40;;;;;;;:::i;:::-;;;;;;;;30213:615;;;30131:697:::0;;:::o;16475:310::-;16605:7;16614;16629:15;16676:7;16685:6;16693:5;16700;16665:41;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16655:52;;;;;;16647:61;;16629:79;;16751:7;16760;16740:28;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16730:39;;;;;;16722:48;;16772:7;16714:66;;;;;16475:310;;;;;;;:::o;3865:209:0:-;3915:7;3930:15;3948:13;3930:31;;3971:27;3990:7;3971:18;:27::i;:::-;3967:78;;;945:42;4015:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4008:30;;;;;3967:78;4057:12;4050:19;;;3865:209;;:::o;18266:1328:13:-;18382:15;18399:17;18418:18;18454:19;18464:5;:8;;;18454:9;:19::i;:::-;18444:29;;18530:14;18547:13;:22;18561:7;18547:22;;;;;;;;;;;;;;;;;;;;;18530:39;;18597:1;18579:20;;:6;:20;;;18575:73;;;18633:7;18616:25;;;;;;;;;;;:::i;:::-;;;;;;;;18575:73;18694:7;18703:5;:10;;;18683:31;;;;;;;;;:::i;:::-;;;;;;;;;;;;;18673:42;;;;;;18665:51;;18653:63;;18722:18;18743:20;:31;18764:9;18743:31;;;;;;;;;;;;18722:52;;18798:1;18784:15;;:10;:15;18780:67;;;18816:24;;;;;;;;;;;;;;18780:67;18898:9;18909:2;:11;;;18922:2;:8;;;18932:2;:19;;;18953:2;:11;;;18966:2;:9;;;18887:89;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;18877:100;;;;;;18863:10;:114;18852:175;;18999:21;;;;;;;;;;;;;;18852:175;19033:17;19053:44;19085:2;:11;;;19053:31;:44::i;:::-;19033:64;;19128:1;19120:10;;19107:9;:23;19103:191;;;19152:15;:28;;;19181:2;:11;;;19152:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19140:53;;19226:1;19218:10;;19205:9;:23;19201:87;;;19267:2;:11;;;19247:32;;;;;;;;;;;:::i;:::-;;;;;;;;19201:87;19103:191;19376:18;19432:5;:10;;;19444:9;19415:39;;;;;;;;;:::i;:::-;;;;;;;;;;;;;19405:50;;;;;;19397:59;;19376:80;;19475:47;19504:5;19511:10;19475:28;:47::i;:::-;19462:60;;19550:39;;;;18266:1328;;;;;:::o;16940:1322::-;17038:12;17084:5;17573:24;17570:1;17567:31;17564:2;;;17619:1;17616;17609:12;17564:2;17648:24;17645:1;17641:32;17636:37;;17804:9;17798:2;17795:1;17791:10;17788:1;17784:18;17781:33;17771:2;;17836:1;17833;17826:12;17771:2;17975:6;17963:19;17953:2;;18004:1;18001;17994:12;17953:2;18230:1;18227;18220:4;18214:11;18207:4;18201;18197:15;18194:1;18186:6;18175:9;18170:62;18159:73;;17067:1171;16940:1322;;;;;:::o;23083:955::-;23270:6;23284:21;23328:14;:12;:14::i;:::-;23311:31;;23370:1;23352:14;:19;23348:82;;23408:14;23388:35;;;;;;;;;;;:::i;:::-;;;;;;;;23348:82;23496:17;23516:50;23557:8;;23516:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:40;:50::i;:::-;23496:70;;23644:20;23774:14;23746:9;23733;23722:8;23693:26;:37;;;;:::i;:::-;:49;;;;:::i;:::-;23676:13;:67;;;;:::i;:::-;:79;;;;:::i;:::-;23668:4;:88;;;;:::i;:::-;23667:122;;;;:::i;:::-;23644:145;;23795:11;23824:25;23816:34;;23809:4;:41;;;;:::i;:::-;23795:55;;23883:3;23876:4;:10;;;;:::i;:::-;23860:12;:27;23856:139;;;23904:17;;;;;;;;;;;;;;23856:139;24029:3;24014:12;:18;;;;:::i;:::-;24000:33;;;;;;23083:955;;;;;;:::o;1528:235:3:-;1643:10;1637:16;;:2;:16;;;;1629:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1705:2;1688:14;;:19;;;;;;;;;;;;;;;;;;1755:2;1719:39;;1746:7;;;;;;;;;;1719:39;;;;;;;;;;;;1528:235;:::o;5751:226:0:-;5819:4;1454:5;5844:7;:31;:79;;;;1518:6;5885:7;:38;5844:79;:128;;;;1584:6;5933:7;:39;5844:128;5831:141;;5751:226;;;:::o;3180:360::-;3246:7;3261:15;3279:13;3261:31;;3302:27;3321:7;3302:18;:27::i;:::-;3298:203;;;3379:3;3364:11;3344:31;;:17;:15;:17::i;:::-;:31;;;;:::i;:::-;3343:39;:75;;;;3401:17;:15;:17::i;:::-;3386:11;:32;;;;3343:75;3339:109;;;3430:9;;;;;;3339:109;945:42;3462:19;;;3482:11;3462:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3455:39;;;;;3298:203;3523:11;3513:22;;;3506:29;;;3180:360;;;;:::o;26774:417:11:-;26865:14;26887:191;26910:5;:8;;;26926:5;:11;;;26945:5;:7;;;26960:5;:7;;;26975:4;26987:5;:14;;;27009:5;:19;;;27036:5;:18;;;27062:5;:10;;;26887:15;:191::i;:::-;26091:1;27153:5;:11;;;27111:54;;;;;;;;;:::i;:::-;;;;;;;;;;;;;27101:65;;;;;;27093:74;;27084:83;;26774:417;;;;:::o;24042:493:13:-;24088:6;24102:23;24128:8;:25;;;;;;;;;;;;24102:51;;24159:18;24199:1;24180:16;:20;;;24159:41;;24206:17;24229:21;24292:13;:29;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24256:67;;;;;;;;;;;;;;;;;24383:13;:63;;;;;24437:9;24419:15;:27;;;;:::i;:::-;24400:16;:46;;;24383:63;24379:125;;;24473:24;;24456:41;;24379:125;24516:14;24509:21;;;;;;24042:493;:::o;4560:370:0:-;4640:7;4655:15;4673:13;4655:31;;4696:27;4715:7;4696:18;:27::i;:::-;4692:220;;;1294:42;4740:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4733:37;;;;;4692:220;4787:27;4806:7;4787:18;:27::i;:::-;4783:129;;;2194:42;4831:27;;;4872:10;4884:19;;;;;;;;;;;;;;;;;4859:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4831:74;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4824:81;;;;;4783:129;4924:1;4917:8;;;4560:370;;;;:::o;24069:1834:11:-;24409:14;24420:2;24409:10;:14::i;:::-;24401:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;24519:17;24530:5;24519:10;:17::i;:::-;24511:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;24627:25;24638:13;24627:10;:25::i;:::-;24619:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;24751:24;24762:12;24751:10;:24::i;:::-;24743:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;25251:57;25289:1;25292:2;25296:1;25299:8;25251:37;:57::i;:::-;25243:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;25433:22;25458;25471:2;25475:4;25458:12;:22::i;:::-;25433:47;;25572:19;25594:72;25613:1;25616:5;25623:13;25638:1;25641:4;25647:12;25661:4;25594:18;:72::i;:::-;25572:94;;25725:16;25744:52;25767:4;25773:2;25777:5;25784:8;25794:1;25744:22;:52::i;:::-;25725:71;;25866:8;25861:1;:13;25853:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;24334:1565;;;24069:1834;;;;;;;;;:::o;6153:290:0:-;6221:4;2393:2;6246:7;:30;:69;;;;2445:3;6286:7;:29;6246:69;:109;;;;2499:8;6325:7;:30;6246:109;:151;;;;2655:4;6365:7;:32;6246:151;:192;;;;2711:5;6407:7;:31;6246:192;6233:205;;6153:290;;;:::o;9564:459:11:-;9628:4;7586:66;9815:1;9817;9815:4;;;;;;;:::i;:::-;;;;;;:17;9807:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;7586:66;9916:1;9918;9916:4;;;;;;;:::i;:::-;;;;;;:17;9908:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;7586:66;9988:30;;;;;:::i;:::-;;10001:1;10003;10001:4;;;;;;;:::i;:::-;;;;;;9995:1;9997;9995:4;;;;;;;:::i;:::-;;;;;;9988:30;9969:15;9979:1;9981;9979:4;;;;;;;:::i;:::-;;;;;;9969:9;:15::i;:::-;:49;9962:56;;9564:459;;;:::o;19765:1210::-;19917:4;20089:1;20068:23;;:9;:23;;;;20060:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;20115:7;20138:1;20133;20126;20128;20126:4;;;;;;;:::i;:::-;;;;;;:8;;;;;:::i;:::-;;;:13;20125:25;;20148:2;20125:25;;;20143:2;20125:25;20115:35;;20274:18;7352:66;20317:28;;;;;:::i;:::-;;20330:1;20324;20326;20324:4;;;;;;;:::i;:::-;;;;;;20317:28;7352:66;20303:42;20295:51;;20274:72;;20365:23;7352:66;20399:28;;;;;:::i;:::-;;20409:1;20411;20409:4;;;;;;;:::i;:::-;;;;;;20406:1;20399:28;20391:37;;20365:63;;20853:16;20872:56;20882:10;20894:1;20905;20907;20905:4;;;;;;;:::i;:::-;;;;;;20897:13;;20912:15;20872:56;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20853:75;;20955:9;20943:21;;:8;:21;;;20936:28;;;;;;19765:1210;;;;;;:::o;12228:319::-;12310:20;;:::i;:::-;12343:83;11454:1;12415:2;12419:5;12371:54;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12343:27;:83::i;:::-;12338:88;;12432:96;12440:14;12451:2;12440:10;:14::i;:::-;12432:96;;12469:52;12514:2;12517:1;12514:5;;;;;;;:::i;:::-;;;;;;12497:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;12469:27;:52::i;:::-;12464:57;;12432:96;;;12228:319;;;;:::o;21459:786::-;21682:17;;:::i;:::-;7586:66;21868:10;21879:1;21868:13;;;;;;;:::i;:::-;;;;;;:26;;;;;:::i;:::-;;;7586:66;21836:10;21847:1;21836:13;;;;;;;:::i;:::-;;;;;;:26;;;;;:::i;:::-;;;21835:60;;21827:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;21995:31;22008:2;22012:1;22015:10;21995:12;:31::i;:::-;21987:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;22118:31;22131:2;22135:1;22138:10;22118:12;:31::i;:::-;22110:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;22192:42;22205:10;22217;22229:4;22192:12;:42::i;:::-;22185:49;;21459:786;;;;;;;;;:::o;23163:322::-;23352:9;22443:1;23449:4;23455:2;23459:5;23466:1;23469:8;23394:84;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;23384:95;;;;;;23376:104;;23369:111;;23163:322;;;;;;;:::o;9268:260::-;9321:7;9417:14;7586:66;9434:47;;;;;:::i;:::-;;7586:66;9444:24;;;;;:::i;:::-;;9454:1;9451;9444:24;9441:1;9434:47;9417:64;;7586:66;9494:29;;;;;:::i;:::-;;9509:1;9501:6;9494:29;9487:36;;;9268:260;;;:::o;10902:384::-;10978:19;;:::i;:::-;11030:13;11041:1;11030:10;:13::i;:::-;11023:1;11025;11023:4;;;;;;;:::i;:::-;;;;;:20;;;;;11058:28;11070:15;11080:1;11082;11080:4;;;;;;;:::i;:::-;;;;;;11070:9;:15::i;:::-;11058:11;:28::i;:::-;11051:1;11053;11051:4;;;;;;;:::i;:::-;;;;;:35;;;;;11110:1;11105;11098;11100;11098:4;;;;;;;:::i;:::-;;;;;;:8;;;;;:::i;:::-;;;:13;11094:168;;;11249:1;11251;11249:4;;;;;;;:::i;:::-;;;;;;7586:66;11236:17;11229:1;11231;11229:4;;;;;;;:::i;:::-;;;;;:24;;;;;11094:168;10902:384;;;:::o;13039:1061::-;13175:13;13261:1;13251:6;:11;;13243:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;13323:9;13335:12;13348:1;13335:15;;;;;;;:::i;:::-;;;;;;13323:27;;13386:7;13419:1;13414;13396:12;13409:1;13396:15;;;;;;;:::i;:::-;;;;;;:19;;;;:::i;:::-;:24;:34;;13428:2;13396:34;;;13423:2;13396:34;13386:44;;13779:20;7352:66;13810:30;;;;;:::i;:::-;;13825:1;13817:6;13810:30;13802:39;;13779:62;;13847:14;13864:50;13882:1;13874:10;;13886:1;13897;13889:10;;13901:12;13864:50;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13847:67;;13980:16;14050:7;14033:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;14023:36;;;;;;14015:45;;13980:82;;14086:8;14076:18;;:6;:18;;;14068:27;;;;;;;13039:1061;;;;;:::o;19071:575::-;19190:17;;:::i;:::-;19215:9;19230;19245;19272:44;19289:2;19292:1;19289:5;;;;;;;:::i;:::-;;;;;;19296:2;19299:1;19296:5;;;;;;;:::i;:::-;;;;;;19303:2;19306:1;19303:5;;;;;;;:::i;:::-;;;;;;19310:2;19313:1;19310:5;;;;;;;:::i;:::-;;;;;;19272:16;:44::i;:::-;19260:56;;;;;;;;;;;;19408:1;7586:66;19377:27;;;;;:::i;:::-;;19387:4;19384:1;19377:27;:32;19369:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;19576:65;;;;;;;;7586:66;19584:27;;;;;:::i;:::-;;19594:4;19591:1;19584:27;19576:65;;;;7586:66;19613:27;;;;;:::i;:::-;;19623:4;19620:1;19613:27;19576:65;;;;;;;;19071:575;;;;;:::o;10078:410::-;10137:10;10178:1;10168:12;;;;;;10160:21;;10155:26;;10384:85;7586:66;10391:2;:16;10384:85;;10457:2;10440:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;10430:31;;;;;;10422:40;;10417:45;;10384:85;;;10078:410;;;:::o;9101:107::-;9156:7;9178:25;9189:1;9035;9029;7586:66;9016:14;;;;:::i;:::-;9015:21;;9178:10;:25::i;:::-;9171:32;;9101:107;;;:::o;16656:2144::-;16773:10;16785;16797;17505;17517;17532:1;17535;17504:33;;;;17676:10;7586:66;17689:39;;;;;:::i;:::-;;17713:2;7586:66;17700:15;17696:2;17689:39;17676:52;;17736:10;7586:66;17749:39;;;;;:::i;:::-;;17773:2;7586:66;17760:15;17756:2;17749:39;17736:52;;17797:10;17911:30;17926:2;17930;17934;17938;17911:14;:30::i;:::-;17900:41;;;;;;;;17983:30;17998:2;18002;18006;18010;17983:14;:30::i;:::-;17972:41;;;;;;;;18058:30;18073:2;18077;18081;18085;18058:14;:30::i;:::-;18047:41;;;;;;;;18126:10;18242:30;18257:2;18261;18265;18269;18242:14;:30::i;:::-;18231:41;;;;;;;;18300:30;18315:2;18319;18323;18327;18300:14;:30::i;:::-;18289:41;;;;;;;;18377:30;18392:2;18396;18400;18404;18377:14;:30::i;:::-;18366:41;;;;;;;;18457:2;18451;:8;18447:318;;7586:66;18546:26;;;;;:::i;:::-;;18557:2;18553;18546:26;18541:31;;7586:66;18587:26;;;;;:::i;:::-;;18598:2;18594;18587:26;18582:31;;7586:66;18628:26;;;;;:::i;:::-;;18639:2;18635;18628:26;18623:31;;18447:318;;;18754:2;18749:7;;18447:318;16815:1956;;;;;;16656:2144;;;;;;;;:::o;7825:977::-;7900:22;7930:18;7954:41;;:::i;:::-;7701:4;8001:23;8025:1;8001:26;;;;;;;:::i;:::-;;;;;:46;;;;;7701:4;8071:23;8095:1;8071:26;;;;;;;:::i;:::-;;;;;:46;;;;;7701:4;8145:23;8169:1;8145:26;;;;;;;:::i;:::-;;;;;:46;;;;;8247:4;8218:23;8242:1;8218:26;;;;;;;:::i;:::-;;;;;:33;;;;;8286:8;8257:23;8281:1;8257:26;;;;;;;:::i;:::-;;;;;:37;;;;;7586:66;8300:23;8324:1;8300:26;;;;;;;:::i;:::-;;;;;:39;;;;;8345:24;;:::i;:::-;8612:4;8596:6;8541:4;8508:23;8464:4;8430:1;8426:6;8406:246;8392:260;;8681:1;8667:10;:15;8663:113;;;8741:28;;;;;;;;;;:::i;:::-;;;;;;;;8663:113;8788:6;8795:1;8788:9;;;;;;;:::i;:::-;;;;;;8781:16;;;;;7825:977;;;;:::o;14764:238::-;14879:10;14891;7586:66;14921:26;;;;;:::i;:::-;;14932:2;14928;14921:26;7586:66;14949:26;;;;;:::i;:::-;;14960:2;14956;14949:26;14909:67;;;;;;;;14764:238;;;;;;;:::o;14190:488::-;14305:10;14317;14353:12;7586:66;14368:26;;;;;:::i;:::-;;14379:2;14375;14368:26;14353:41;;14513:12;7586:66;14528:39;;;;;:::i;:::-;;14552:2;14548;7586:66;14535:15;14528:39;14513:54;;7586:66;14587:30;;;;;:::i;:::-;;14600:4;14594;14587:30;7586:66;14619:26;;;;;:::i;:::-;;14630:2;14626;14619:26;14575:71;;;;;;;;14335:318;;14190:488;;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;25:655:19:-;119:5;144:79;160:62;215:6;160:62;:::i;:::-;144:79;:::i;:::-;135:88;;243:5;269:6;319:3;311:4;303:6;299:17;294:3;290:27;287:36;284:2;;;338:79;;:::i;:::-;284:2;451:1;436:238;461:6;458:1;455:13;436:238;;;529:3;558:37;591:3;579:10;558:37;:::i;:::-;553:3;546:50;625:4;620:3;616:14;609:21;;659:4;654:3;650:14;643:21;;496:178;483:1;480;476:9;471:14;;436:238;;;440:14;125:555;;;;;;;:::o;686:139::-;732:5;770:6;757:20;748:29;;786:33;813:5;786:33;:::i;:::-;738:87;;;;:::o;849:249::-;920:8;951:6;939:18;;1004:3;996:4;990;986:15;976:8;972:30;969:39;966:2;;;1011:79;;:::i;:::-;966:2;929:169;;;;:::o;1122:339::-;1191:5;1240:3;1233:4;1225:6;1221:17;1217:27;1207:2;;1248:79;;:::i;:::-;1207:2;1352:4;1374:81;1451:3;1443:6;1435;1374:81;:::i;:::-;1365:90;;1197:264;;;;;:::o;1467:137::-;1521:5;1552:6;1546:13;1537:22;;1568:30;1592:5;1568:30;:::i;:::-;1527:77;;;;:::o;1610:139::-;1656:5;1694:6;1681:20;1672:29;;1710:33;1737:5;1710:33;:::i;:::-;1662:87;;;;:::o;1755:143::-;1812:5;1843:6;1837:13;1828:22;;1859:33;1886:5;1859:33;:::i;:::-;1818:80;;;;:::o;1917:552::-;1974:8;1984:6;2034:3;2027:4;2019:6;2015:17;2011:27;2001:2;;2042:79;;:::i;:::-;2001:2;2155:6;2142:20;2132:30;;2185:18;2177:6;2174:30;2171:2;;;2207:79;;:::i;:::-;2171:2;2321:4;2313:6;2309:17;2297:29;;2375:3;2367:4;2359:6;2355:17;2345:8;2341:32;2338:41;2335:2;;;2382:79;;:::i;:::-;2335:2;1991:478;;;;;:::o;2475:137::-;2520:5;2558:6;2545:20;2536:29;;2574:32;2600:5;2574:32;:::i;:::-;2526:86;;;;:::o;2618:141::-;2674:5;2705:6;2699:13;2690:22;;2721:32;2747:5;2721:32;:::i;:::-;2680:79;;;;:::o;2806:1867::-;2882:5;2926:6;2914:9;2909:3;2905:19;2901:32;2898:2;;;2936:79;;:::i;:::-;2898:2;3035:23;3051:6;3035:23;:::i;:::-;3026:32;;3143:1;3183:48;3227:3;3218:6;3207:9;3203:22;3183:48;:::i;:::-;3176:4;3169:5;3165:16;3158:74;3068:175;3328:2;3369:48;3413:3;3404:6;3393:9;3389:22;3369:48;:::i;:::-;3362:4;3355:5;3351:16;3344:74;3253:176;3514:2;3555:48;3599:3;3590:6;3579:9;3575:22;3555:48;:::i;:::-;3548:4;3541:5;3537:16;3530:74;3439:176;3700:2;3741:48;3785:3;3776:6;3765:9;3761:22;3741:48;:::i;:::-;3734:4;3727:5;3723:16;3716:74;3625:176;3886:3;3928:48;3972:3;3963:6;3952:9;3948:22;3928:48;:::i;:::-;3921:4;3914:5;3910:16;3903:74;3811:177;4055:3;4097:48;4141:3;4132:6;4121:9;4117:22;4097:48;:::i;:::-;4090:4;4083:5;4079:16;4072:74;3998:159;4224:3;4266:48;4310:3;4301:6;4290:9;4286:22;4266:48;:::i;:::-;4259:4;4252:5;4248:16;4241:74;4167:159;4393:3;4435:48;4479:3;4470:6;4459:9;4455:22;4435:48;:::i;:::-;4428:4;4421:5;4417:16;4410:74;4336:159;4562:3;4606:48;4650:3;4641:6;4630:9;4626:22;4606:48;:::i;:::-;4597:6;4590:5;4586:18;4579:76;4505:161;2888:1785;;;;:::o;4703:1818::-;4775:5;4819:6;4807:9;4802:3;4798:19;4794:32;4791:2;;;4829:79;;:::i;:::-;4791:2;4928:23;4944:6;4928:23;:::i;:::-;4919:32;;5008:1;5048:72;5116:3;5107:6;5096:9;5092:22;5048:72;:::i;:::-;5041:4;5034:5;5030:16;5023:98;4961:171;5192:2;5233:72;5301:3;5292:6;5281:9;5277:22;5233:72;:::i;:::-;5226:4;5219:5;5215:16;5208:98;5142:175;5373:3;5415:49;5460:3;5451:6;5440:9;5436:22;5415:49;:::i;:::-;5408:4;5401:5;5397:16;5390:75;5327:149;5532:3;5574:49;5619:3;5610:6;5599:9;5595:22;5574:49;:::i;:::-;5567:4;5560:5;5556:16;5549:75;5486:149;5694:3;5736:49;5781:3;5772:6;5761:9;5757:22;5736:49;:::i;:::-;5729:4;5722:5;5718:16;5711:75;5645:152;5860:3;5902:49;5947:3;5938:6;5927:9;5923:22;5902:49;:::i;:::-;5895:4;5888:5;5884:16;5877:75;5807:156;6031:3;6073:72;6141:3;6132:6;6121:9;6117:22;6073:72;:::i;:::-;6066:4;6059:5;6055:16;6048:98;5973:184;6224:3;6266:72;6334:3;6325:6;6314:9;6310:22;6266:72;:::i;:::-;6259:4;6252:5;6248:16;6241:98;6167:183;6409:3;6453:49;6498:3;6489:6;6478:9;6474:22;6453:49;:::i;:::-;6444:6;6437:5;6433:18;6426:77;6360:154;4781:1740;;;;:::o;6576:1087::-;6660:5;6704:4;6692:9;6687:3;6683:19;6679:30;6676:2;;;6712:79;;:::i;:::-;6676:2;6811:21;6827:4;6811:21;:::i;:::-;6802:30;;6895:1;6935:48;6979:3;6970:6;6959:9;6955:22;6935:48;:::i;:::-;6928:4;6921:5;6917:16;6910:74;6842:153;7055:2;7096:48;7140:3;7131:6;7120:9;7116:22;7096:48;:::i;:::-;7089:4;7082:5;7078:16;7071:74;7005:151;7227:2;7268:48;7312:3;7303:6;7292:9;7288:22;7268:48;:::i;:::-;7261:4;7254:5;7250:16;7243:74;7166:162;7391:2;7432:48;7476:3;7467:6;7456:9;7452:22;7432:48;:::i;:::-;7425:4;7418:5;7414:16;7407:74;7338:154;7553:3;7595:49;7640:3;7631:6;7620:9;7616:22;7595:49;:::i;:::-;7588:4;7581:5;7577:16;7570:75;7502:154;6666:997;;;;:::o;7669:137::-;7714:5;7752:6;7739:20;7730:29;;7768:32;7794:5;7768:32;:::i;:::-;7720:86;;;;:::o;7812:137::-;7857:5;7895:6;7882:20;7873:29;;7911:32;7937:5;7911:32;:::i;:::-;7863:86;;;;:::o;7955:139::-;8001:5;8039:6;8026:20;8017:29;;8055:33;8082:5;8055:33;:::i;:::-;8007:87;;;;:::o;8100:143::-;8157:5;8188:6;8182:13;8173:22;;8204:33;8231:5;8204:33;:::i;:::-;8163:80;;;;:::o;8249:137::-;8294:5;8332:6;8319:20;8310:29;;8348:32;8374:5;8348:32;:::i;:::-;8300:86;;;;:::o;8392:137::-;8437:5;8475:6;8462:20;8453:29;;8491:32;8517:5;8491:32;:::i;:::-;8443:86;;;;:::o;8535:141::-;8591:5;8622:6;8616:13;8607:22;;8638:32;8664:5;8638:32;:::i;:::-;8597:79;;;;:::o;8682:137::-;8727:5;8765:6;8752:20;8743:29;;8781:32;8807:5;8781:32;:::i;:::-;8733:86;;;;:::o;8825:329::-;8884:6;8933:2;8921:9;8912:7;8908:23;8904:32;8901:2;;;8939:79;;:::i;:::-;8901:2;9059:1;9084:53;9129:7;9120:6;9109:9;9105:22;9084:53;:::i;:::-;9074:63;;9030:117;8891:263;;;;:::o;9160:524::-;9253:6;9261;9310:2;9298:9;9289:7;9285:23;9281:32;9278:2;;;9316:79;;:::i;:::-;9278:2;9436:1;9461:53;9506:7;9497:6;9486:9;9482:22;9461:53;:::i;:::-;9451:63;;9407:117;9563:2;9589:78;9659:7;9650:6;9639:9;9635:22;9589:78;:::i;:::-;9579:88;;9534:143;9268:416;;;;;:::o;9690:817::-;9778:6;9786;9794;9802;9851:2;9839:9;9830:7;9826:23;9822:32;9819:2;;;9857:79;;:::i;:::-;9819:2;9977:1;10002:53;10047:7;10038:6;10027:9;10023:22;10002:53;:::i;:::-;9992:63;;9948:117;10104:2;10130:53;10175:7;10166:6;10155:9;10151:22;10130:53;:::i;:::-;10120:63;;10075:118;10260:2;10249:9;10245:18;10232:32;10291:18;10283:6;10280:30;10277:2;;;10313:79;;:::i;:::-;10277:2;10426:64;10482:7;10473:6;10462:9;10458:22;10426:64;:::i;:::-;10408:82;;;;10203:297;9809:698;;;;;;;:::o;10513:472::-;10580:6;10588;10637:2;10625:9;10616:7;10612:23;10608:32;10605:2;;;10643:79;;:::i;:::-;10605:2;10763:1;10788:53;10833:7;10824:6;10813:9;10809:22;10788:53;:::i;:::-;10778:63;;10734:117;10890:2;10916:52;10960:7;10951:6;10940:9;10936:22;10916:52;:::i;:::-;10906:62;;10861:117;10595:390;;;;;:::o;10991:379::-;11075:6;11124:2;11112:9;11103:7;11099:23;11095:32;11092:2;;;11130:79;;:::i;:::-;11092:2;11250:1;11275:78;11345:7;11336:6;11325:9;11321:22;11275:78;:::i;:::-;11265:88;;11221:142;11082:288;;;;:::o;11376:375::-;11458:6;11507:2;11495:9;11486:7;11482:23;11478:32;11475:2;;;11513:79;;:::i;:::-;11475:2;11633:1;11658:76;11726:7;11717:6;11706:9;11702:22;11658:76;:::i;:::-;11648:86;;11604:140;11465:286;;;;:::o;11757:345::-;11824:6;11873:2;11861:9;11852:7;11848:23;11844:32;11841:2;;;11879:79;;:::i;:::-;11841:2;11999:1;12024:61;12077:7;12068:6;12057:9;12053:22;12024:61;:::i;:::-;12014:71;;11970:125;11831:271;;;;:::o;12108:351::-;12178:6;12227:2;12215:9;12206:7;12202:23;12198:32;12195:2;;;12233:79;;:::i;:::-;12195:2;12353:1;12378:64;12434:7;12425:6;12414:9;12410:22;12378:64;:::i;:::-;12368:74;;12324:128;12185:274;;;;:::o;12465:903::-;12556:6;12564;12572;12580;12588;12637:3;12625:9;12616:7;12612:23;12608:33;12605:2;;;12644:79;;:::i;:::-;12605:2;12764:1;12789:53;12834:7;12825:6;12814:9;12810:22;12789:53;:::i;:::-;12779:63;;12735:117;12891:2;12917:52;12961:7;12952:6;12941:9;12937:22;12917:52;:::i;:::-;12907:62;;12862:117;13018:2;13044:52;13088:7;13079:6;13068:9;13064:22;13044:52;:::i;:::-;13034:62;;12989:117;13145:2;13171:52;13215:7;13206:6;13195:9;13191:22;13171:52;:::i;:::-;13161:62;;13116:117;13272:3;13299:52;13343:7;13334:6;13323:9;13319:22;13299:52;:::i;:::-;13289:62;;13243:118;12595:773;;;;;;;;:::o;13374:592::-;13500:6;13508;13557:3;13545:9;13536:7;13532:23;13528:33;13525:2;;;13564:79;;:::i;:::-;13525:2;13684:1;13709:76;13777:7;13768:6;13757:9;13753:22;13709:76;:::i;:::-;13699:86;;13655:140;13834:3;13861:88;13941:7;13932:6;13921:9;13917:22;13861:88;:::i;:::-;13851:98;;13805:154;13515:451;;;;;:::o;13972:1101::-;14098:6;14106;14114;14122;14130;14138;14187:3;14175:9;14166:7;14162:23;14158:33;14155:2;;;14194:79;;:::i;:::-;14155:2;14314:1;14339:52;14383:7;14374:6;14363:9;14359:22;14339:52;:::i;:::-;14329:62;;14285:116;14440:2;14466:52;14510:7;14501:6;14490:9;14486:22;14466:52;:::i;:::-;14456:62;;14411:117;14567:2;14593:52;14637:7;14628:6;14617:9;14613:22;14593:52;:::i;:::-;14583:62;;14538:117;14694:2;14720:52;14764:7;14755:6;14744:9;14740:22;14720:52;:::i;:::-;14710:62;;14665:117;14821:3;14848:52;14892:7;14883:6;14872:9;14868:22;14848:52;:::i;:::-;14838:62;;14792:118;14949:3;14976:80;15048:7;15039:6;15028:9;15024:22;14976:80;:::i;:::-;14966:90;;14920:146;14145:928;;;;;;;;:::o;15079:329::-;15138:6;15187:2;15175:9;15166:7;15162:23;15158:32;15155:2;;;15193:79;;:::i;:::-;15155:2;15313:1;15338:53;15383:7;15374:6;15363:9;15359:22;15338:53;:::i;:::-;15328:63;;15284:117;15145:263;;;;:::o;15414:351::-;15484:6;15533:2;15521:9;15512:7;15508:23;15504:32;15501:2;;;15539:79;;:::i;:::-;15501:2;15659:1;15684:64;15740:7;15731:6;15720:9;15716:22;15684:64;:::i;:::-;15674:74;;15630:128;15491:274;;;;:::o;15771:327::-;15829:6;15878:2;15866:9;15857:7;15853:23;15849:32;15846:2;;;15884:79;;:::i;:::-;15846:2;16004:1;16029:52;16073:7;16064:6;16053:9;16049:22;16029:52;:::i;:::-;16019:62;;15975:116;15836:262;;;;:::o;16104:472::-;16171:6;16179;16228:2;16216:9;16207:7;16203:23;16199:32;16196:2;;;16234:79;;:::i;:::-;16196:2;16354:1;16379:52;16423:7;16414:6;16403:9;16399:22;16379:52;:::i;:::-;16369:62;;16325:116;16480:2;16506:53;16551:7;16542:6;16531:9;16527:22;16506:53;:::i;:::-;16496:63;;16451:118;16186:390;;;;;:::o;16582:971::-;16685:6;16693;16701;16709;16717;16766:3;16754:9;16745:7;16741:23;16737:33;16734:2;;;16773:79;;:::i;:::-;16734:2;16893:1;16918:63;16973:7;16964:6;16953:9;16949:22;16918:63;:::i;:::-;16908:73;;16864:127;17030:2;17056:63;17111:7;17102:6;17091:9;17087:22;17056:63;:::i;:::-;17046:73;;17001:128;17168:2;17194:64;17250:7;17241:6;17230:9;17226:22;17194:64;:::i;:::-;17184:74;;17139:129;17307:2;17333:64;17389:7;17380:6;17369:9;17365:22;17333:64;:::i;:::-;17323:74;;17278:129;17446:3;17473:63;17528:7;17519:6;17508:9;17504:22;17473:63;:::i;:::-;17463:73;;17417:129;16724:829;;;;;;;;:::o;17559:179::-;17628:10;17649:46;17691:3;17683:6;17649:46;:::i;:::-;17727:4;17722:3;17718:14;17704:28;;17639:99;;;;:::o;17744:179::-;17813:10;17834:46;17876:3;17868:6;17834:46;:::i;:::-;17912:4;17907:3;17903:14;17889:28;;17824:99;;;;:::o;17929:179::-;17998:10;18019:46;18061:3;18053:6;18019:46;:::i;:::-;18097:4;18092:3;18088:14;18074:28;;18009:99;;;;:::o;18114:195::-;18191:10;18212:54;18262:3;18254:6;18212:54;:::i;:::-;18298:4;18293:3;18289:14;18275:28;;18202:107;;;;:::o;18315:108::-;18392:24;18410:5;18392:24;:::i;:::-;18387:3;18380:37;18370:53;;:::o;18429:118::-;18516:24;18534:5;18516:24;:::i;:::-;18511:3;18504:37;18494:53;;:::o;18553:157::-;18658:45;18678:24;18696:5;18678:24;:::i;:::-;18658:45;:::i;:::-;18653:3;18646:58;18636:74;;:::o;18746:732::-;18865:3;18894:54;18942:5;18894:54;:::i;:::-;18964:86;19043:6;19038:3;18964:86;:::i;:::-;18957:93;;19074:56;19124:5;19074:56;:::i;:::-;19153:7;19184:1;19169:284;19194:6;19191:1;19188:13;19169:284;;;19270:6;19264:13;19297:63;19356:3;19341:13;19297:63;:::i;:::-;19290:70;;19383:60;19436:6;19383:60;:::i;:::-;19373:70;;19229:224;19216:1;19213;19209:9;19204:14;;19169:284;;;19173:14;19469:3;19462:10;;18870:608;;;;;;;:::o;19514:732::-;19633:3;19662:54;19710:5;19662:54;:::i;:::-;19732:86;19811:6;19806:3;19732:86;:::i;:::-;19725:93;;19842:56;19892:5;19842:56;:::i;:::-;19921:7;19952:1;19937:284;19962:6;19959:1;19956:13;19937:284;;;20038:6;20032:13;20065:63;20124:3;20109:13;20065:63;:::i;:::-;20058:70;;20151:60;20204:6;20151:60;:::i;:::-;20141:70;;19997:224;19984:1;19981;19977:9;19972:14;;19937:284;;;19941:14;20237:3;20230:10;;19638:608;;;;;;;:::o;20284:694::-;20420:52;20466:5;20420:52;:::i;:::-;20488:84;20565:6;20560:3;20488:84;:::i;:::-;20481:91;;20596:54;20644:5;20596:54;:::i;:::-;20673:7;20704:1;20689:282;20714:6;20711:1;20708:13;20689:282;;;20790:6;20784:13;20817:63;20876:3;20861:13;20817:63;:::i;:::-;20810:70;;20903:58;20954:6;20903:58;:::i;:::-;20893:68;;20749:222;20736:1;20733;20729:9;20724:14;;20689:282;;;20693:14;20396:582;;;;;:::o;21016:738::-;21170:52;21216:5;21170:52;:::i;:::-;21238:102;21333:6;21328:3;21238:102;:::i;:::-;21231:109;;21364:54;21412:5;21364:54;:::i;:::-;21441:7;21472:1;21457:290;21482:6;21479:1;21476:13;21457:290;;;21558:6;21552:13;21585:71;21652:3;21637:13;21585:71;:::i;:::-;21578:78;;21679:58;21730:6;21679:58;:::i;:::-;21669:68;;21517:230;21504:1;21501;21497:9;21492:14;;21457:290;;;21461:14;21146:608;;;;;:::o;21790:732::-;21909:3;21938:54;21986:5;21938:54;:::i;:::-;22008:86;22087:6;22082:3;22008:86;:::i;:::-;22001:93;;22118:56;22168:5;22118:56;:::i;:::-;22197:7;22228:1;22213:284;22238:6;22235:1;22232:13;22213:284;;;22314:6;22308:13;22341:63;22400:3;22385:13;22341:63;:::i;:::-;22334:70;;22427:60;22480:6;22427:60;:::i;:::-;22417:70;;22273:224;22260:1;22257;22253:9;22248:14;;22213:284;;;22217:14;22513:3;22506:10;;21914:608;;;;;;;:::o;22528:109::-;22609:21;22624:5;22609:21;:::i;:::-;22604:3;22597:34;22587:50;;:::o;22643:108::-;22720:24;22738:5;22720:24;:::i;:::-;22715:3;22708:37;22698:53;;:::o;22757:118::-;22844:24;22862:5;22844:24;:::i;:::-;22839:3;22832:37;22822:53;;:::o;22881:157::-;22986:45;23006:24;23024:5;23006:24;:::i;:::-;22986:45;:::i;:::-;22981:3;22974:58;22964:74;;:::o;23044:360::-;23130:3;23158:38;23190:5;23158:38;:::i;:::-;23212:70;23275:6;23270:3;23212:70;:::i;:::-;23205:77;;23291:52;23336:6;23331:3;23324:4;23317:5;23313:16;23291:52;:::i;:::-;23368:29;23390:6;23368:29;:::i;:::-;23363:3;23359:39;23352:46;;23134:270;;;;;:::o;23410:373::-;23514:3;23542:38;23574:5;23542:38;:::i;:::-;23596:88;23677:6;23672:3;23596:88;:::i;:::-;23589:95;;23693:52;23738:6;23733:3;23726:4;23719:5;23715:16;23693:52;:::i;:::-;23770:6;23765:3;23761:16;23754:23;;23518:265;;;;;:::o;23789:189::-;23905:66;23965:5;23905:66;:::i;:::-;23900:3;23893:79;23883:95;;:::o;23984:195::-;24103:69;24166:5;24103:69;:::i;:::-;24098:3;24091:82;24081:98;;:::o;24185:183::-;24298:63;24355:5;24298:63;:::i;:::-;24293:3;24286:76;24276:92;;:::o;24374:115::-;24459:23;24476:5;24459:23;:::i;:::-;24454:3;24447:36;24437:52;;:::o;24495:364::-;24583:3;24611:39;24644:5;24611:39;:::i;:::-;24666:71;24730:6;24725:3;24666:71;:::i;:::-;24659:78;;24746:52;24791:6;24786:3;24779:4;24772:5;24768:16;24746:52;:::i;:::-;24823:29;24845:6;24823:29;:::i;:::-;24818:3;24814:39;24807:46;;24587:272;;;;;:::o;24865:366::-;25007:3;25028:67;25092:2;25087:3;25028:67;:::i;:::-;25021:74;;25104:93;25193:3;25104:93;:::i;:::-;25222:2;25217:3;25213:12;25206:19;;25011:220;;;:::o;25237:366::-;25379:3;25400:67;25464:2;25459:3;25400:67;:::i;:::-;25393:74;;25476:93;25565:3;25476:93;:::i;:::-;25594:2;25589:3;25585:12;25578:19;;25383:220;;;:::o;25609:366::-;25751:3;25772:67;25836:2;25831:3;25772:67;:::i;:::-;25765:74;;25848:93;25937:3;25848:93;:::i;:::-;25966:2;25961:3;25957:12;25950:19;;25755:220;;;:::o;25981:366::-;26123:3;26144:67;26208:2;26203:3;26144:67;:::i;:::-;26137:74;;26220:93;26309:3;26220:93;:::i;:::-;26338:2;26333:3;26329:12;26322:19;;26127:220;;;:::o;26353:366::-;26495:3;26516:67;26580:2;26575:3;26516:67;:::i;:::-;26509:74;;26592:93;26681:3;26592:93;:::i;:::-;26710:2;26705:3;26701:12;26694:19;;26499:220;;;:::o;26725:366::-;26867:3;26888:67;26952:2;26947:3;26888:67;:::i;:::-;26881:74;;26964:93;27053:3;26964:93;:::i;:::-;27082:2;27077:3;27073:12;27066:19;;26871:220;;;:::o;27097:366::-;27239:3;27260:67;27324:2;27319:3;27260:67;:::i;:::-;27253:74;;27336:93;27425:3;27336:93;:::i;:::-;27454:2;27449:3;27445:12;27438:19;;27243:220;;;:::o;27469:366::-;27611:3;27632:67;27696:2;27691:3;27632:67;:::i;:::-;27625:74;;27708:93;27797:3;27708:93;:::i;:::-;27826:2;27821:3;27817:12;27810:19;;27615:220;;;:::o;27841:366::-;27983:3;28004:67;28068:2;28063:3;28004:67;:::i;:::-;27997:74;;28080:93;28169:3;28080:93;:::i;:::-;28198:2;28193:3;28189:12;28182:19;;27987:220;;;:::o;28213:366::-;28355:3;28376:67;28440:2;28435:3;28376:67;:::i;:::-;28369:74;;28452:93;28541:3;28452:93;:::i;:::-;28570:2;28565:3;28561:12;28554:19;;28359:220;;;:::o;28585:366::-;28727:3;28748:67;28812:2;28807:3;28748:67;:::i;:::-;28741:74;;28824:93;28913:3;28824:93;:::i;:::-;28942:2;28937:3;28933:12;28926:19;;28731:220;;;:::o;28957:366::-;29099:3;29120:67;29184:2;29179:3;29120:67;:::i;:::-;29113:74;;29196:93;29285:3;29196:93;:::i;:::-;29314:2;29309:3;29305:12;29298:19;;29103:220;;;:::o;29329:366::-;29471:3;29492:67;29556:2;29551:3;29492:67;:::i;:::-;29485:74;;29568:93;29657:3;29568:93;:::i;:::-;29686:2;29681:3;29677:12;29670:19;;29475:220;;;:::o;29701:366::-;29843:3;29864:67;29928:2;29923:3;29864:67;:::i;:::-;29857:74;;29940:93;30029:3;29940:93;:::i;:::-;30058:2;30053:3;30049:12;30042:19;;29847:220;;;:::o;30073:366::-;30215:3;30236:67;30300:2;30295:3;30236:67;:::i;:::-;30229:74;;30312:93;30401:3;30312:93;:::i;:::-;30430:2;30425:3;30421:12;30414:19;;30219:220;;;:::o;30445:366::-;30587:3;30608:67;30672:2;30667:3;30608:67;:::i;:::-;30601:74;;30684:93;30773:3;30684:93;:::i;:::-;30802:2;30797:3;30793:12;30786:19;;30591:220;;;:::o;30817:366::-;30959:3;30980:67;31044:2;31039:3;30980:67;:::i;:::-;30973:74;;31056:93;31145:3;31056:93;:::i;:::-;31174:2;31169:3;31165:12;31158:19;;30963:220;;;:::o;31189:366::-;31331:3;31352:67;31416:2;31411:3;31352:67;:::i;:::-;31345:74;;31428:93;31517:3;31428:93;:::i;:::-;31546:2;31541:3;31537:12;31530:19;;31335:220;;;:::o;31639:2234::-;31787:6;31782:3;31778:16;31820:1;31921:4;31914:5;31910:16;31904:23;31891:36;;31960:54;32004:9;31960:54;:::i;:::-;32027:61;32082:4;32077:3;32073:14;32059:12;32027:61;:::i;:::-;31831:267;32189:54;32233:9;32189:54;:::i;:::-;32256:61;32311:4;32306:3;32302:14;32288:12;32256:61;:::i;:::-;32108:219;32418:54;32462:9;32418:54;:::i;:::-;32485:61;32540:4;32535:3;32531:14;32517:12;32485:61;:::i;:::-;32337:219;32647:55;32692:9;32647:55;:::i;:::-;32715:61;32770:4;32765:3;32761:14;32747:12;32715:61;:::i;:::-;32566:220;32877:55;32922:9;32877:55;:::i;:::-;32945:61;33000:4;32995:3;32991:14;32977:12;32945:61;:::i;:::-;32796:220;33089:55;33134:9;33089:55;:::i;:::-;33157:61;33212:4;33207:3;33203:14;33189:12;33157:61;:::i;:::-;33026:202;33301:55;33346:9;33301:55;:::i;:::-;33369:61;33424:4;33419:3;33415:14;33401:12;33369:61;:::i;:::-;33238:202;33513:55;33558:9;33513:55;:::i;:::-;33581:61;33636:4;33631:3;33627:14;33613:12;33581:61;:::i;:::-;33450:202;33725:55;33770:9;33725:55;:::i;:::-;33793:63;33848:6;33843:3;33839:16;33825:12;33793:63;:::i;:::-;33662:204;31756:2117;;;;:::o;33879:115::-;33964:23;33981:5;33964:23;:::i;:::-;33959:3;33952:36;33942:52;;:::o;34000:105::-;34075:23;34092:5;34075:23;:::i;:::-;34070:3;34063:36;34053:52;;:::o;34111:115::-;34196:23;34213:5;34196:23;:::i;:::-;34191:3;34184:36;34174:52;;:::o;34232:108::-;34309:24;34327:5;34309:24;:::i;:::-;34304:3;34297:37;34287:53;;:::o;34346:118::-;34433:24;34451:5;34433:24;:::i;:::-;34428:3;34421:37;34411:53;;:::o;34470:116::-;34555:24;34573:5;34555:24;:::i;:::-;34550:3;34543:37;34533:53;;:::o;34592:157::-;34697:45;34717:24;34735:5;34717:24;:::i;:::-;34697:45;:::i;:::-;34692:3;34685:58;34675:74;;:::o;34755:105::-;34830:23;34847:5;34830:23;:::i;:::-;34825:3;34818:36;34808:52;;:::o;34866:115::-;34951:23;34968:5;34951:23;:::i;:::-;34946:3;34939:36;34929:52;;:::o;34987:129::-;35073:36;35103:5;35073:36;:::i;:::-;35068:3;35061:49;35051:65;;:::o;35122:115::-;35207:23;35224:5;35207:23;:::i;:::-;35202:3;35195:36;35185:52;;:::o;35243:112::-;35326:22;35342:5;35326:22;:::i;:::-;35321:3;35314:35;35304:51;;:::o;35361:129::-;35447:36;35477:5;35447:36;:::i;:::-;35442:3;35435:49;35425:65;;:::o;35496:115::-;35581:23;35598:5;35581:23;:::i;:::-;35576:3;35569:36;35559:52;;:::o;35617:348::-;35775:3;35790:121;35907:3;35898:6;35790:121;:::i;:::-;35936:2;35931:3;35927:12;35920:19;;35956:3;35949:10;;35779:186;;;;:::o;35971:427::-;36147:3;36169:93;36258:3;36249:6;36169:93;:::i;:::-;36162:100;;36279:93;36368:3;36359:6;36279:93;:::i;:::-;36272:100;;36389:3;36382:10;;36151:247;;;;;:::o;36404:256::-;36516:3;36531:75;36602:3;36593:6;36531:75;:::i;:::-;36631:2;36626:3;36622:12;36615:19;;36651:3;36644:10;;36520:140;;;;:::o;36666:1329::-;37102:3;37117:75;37188:3;37179:6;37117:75;:::i;:::-;37217:2;37212:3;37208:12;37201:19;;37230:121;37347:3;37338:6;37230:121;:::i;:::-;37376:2;37371:3;37367:12;37360:19;;37389:121;37506:3;37497:6;37389:121;:::i;:::-;37535:2;37530:3;37526:12;37519:19;;37548:121;37665:3;37656:6;37548:121;:::i;:::-;37694:2;37689:3;37685:12;37678:19;;37707:121;37824:3;37815:6;37707:121;:::i;:::-;37853:2;37848:3;37844:12;37837:19;;37866:75;37937:3;37928:6;37866:75;:::i;:::-;37966:2;37961:3;37957:12;37950:19;;37986:3;37979:10;;37106:889;;;;;;;;;:::o;38001:630::-;38215:3;38230:75;38301:3;38292:6;38230:75;:::i;:::-;38330:2;38325:3;38321:12;38314:19;;38343:121;38460:3;38451:6;38343:121;:::i;:::-;38489:2;38484:3;38480:12;38473:19;;38502:75;38573:3;38564:6;38502:75;:::i;:::-;38602:2;38597:3;38593:12;38586:19;;38622:3;38615:10;;38219:412;;;;;;:::o;38637:397::-;38777:3;38792:75;38863:3;38854:6;38792:75;:::i;:::-;38892:2;38887:3;38883:12;38876:19;;38905:75;38976:3;38967:6;38905:75;:::i;:::-;39005:2;39000:3;38996:12;38989:19;;39025:3;39018:10;;38781:253;;;;;:::o;39040:222::-;39133:4;39171:2;39160:9;39156:18;39148:26;;39184:71;39252:1;39241:9;39237:17;39228:6;39184:71;:::i;:::-;39138:124;;;;:::o;39268:332::-;39389:4;39427:2;39416:9;39412:18;39404:26;;39440:71;39508:1;39497:9;39493:17;39484:6;39440:71;:::i;:::-;39521:72;39589:2;39578:9;39574:18;39565:6;39521:72;:::i;:::-;39394:206;;;;;:::o;39606:332::-;39727:4;39765:2;39754:9;39750:18;39742:26;;39778:71;39846:1;39835:9;39831:17;39822:6;39778:71;:::i;:::-;39859:72;39927:2;39916:9;39912:18;39903:6;39859:72;:::i;:::-;39732:206;;;;;:::o;39944:330::-;40064:4;40102:2;40091:9;40087:18;40079:26;;40115:71;40183:1;40172:9;40168:17;40159:6;40115:71;:::i;:::-;40196;40263:2;40252:9;40248:18;40239:6;40196:71;:::i;:::-;40069:205;;;;;:::o;40280:314::-;40419:4;40457:2;40446:9;40442:18;40434:26;;40470:117;40584:1;40573:9;40569:17;40560:6;40470:117;:::i;:::-;40424:170;;;;:::o;40600:210::-;40687:4;40725:2;40714:9;40710:18;40702:26;;40738:65;40800:1;40789:9;40785:17;40776:6;40738:65;:::i;:::-;40692:118;;;;:::o;40816:222::-;40909:4;40947:2;40936:9;40932:18;40924:26;;40960:71;41028:1;41017:9;41013:17;41004:6;40960:71;:::i;:::-;40914:124;;;;:::o;41044:545::-;41217:4;41255:3;41244:9;41240:19;41232:27;;41269:71;41337:1;41326:9;41322:17;41313:6;41269:71;:::i;:::-;41350:72;41418:2;41407:9;41403:18;41394:6;41350:72;:::i;:::-;41432:70;41498:2;41487:9;41483:18;41474:6;41432:70;:::i;:::-;41512;41578:2;41567:9;41563:18;41554:6;41512:70;:::i;:::-;41222:367;;;;;;;:::o;41595:332::-;41716:4;41754:2;41743:9;41739:18;41731:26;;41767:71;41835:1;41824:9;41820:17;41811:6;41767:71;:::i;:::-;41848:72;41916:2;41905:9;41901:18;41892:6;41848:72;:::i;:::-;41721:206;;;;;:::o;41933:545::-;42106:4;42144:3;42133:9;42129:19;42121:27;;42158:71;42226:1;42215:9;42211:17;42202:6;42158:71;:::i;:::-;42239:68;42303:2;42292:9;42288:18;42279:6;42239:68;:::i;:::-;42317:72;42385:2;42374:9;42370:18;42361:6;42317:72;:::i;:::-;42399;42467:2;42456:9;42452:18;42443:6;42399:72;:::i;:::-;42111:367;;;;;;;:::o;42484:309::-;42595:4;42633:2;42622:9;42618:18;42610:26;;42682:9;42676:4;42672:20;42668:1;42657:9;42653:17;42646:47;42710:76;42781:4;42772:6;42710:76;:::i;:::-;42702:84;;42600:193;;;;:::o;42799:280::-;42921:4;42959:2;42948:9;42944:18;42936:26;;42972:100;43069:1;43058:9;43054:17;43045:6;42972:100;:::i;:::-;42926:153;;;;:::o;43085:286::-;43210:4;43248:2;43237:9;43233:18;43225:26;;43261:103;43361:1;43350:9;43346:17;43337:6;43261:103;:::i;:::-;43215:156;;;;:::o;43377:274::-;43496:4;43534:2;43523:9;43519:18;43511:26;;43547:97;43641:1;43630:9;43626:17;43617:6;43547:97;:::i;:::-;43501:150;;;;:::o;43657:218::-;43748:4;43786:2;43775:9;43771:18;43763:26;;43799:69;43865:1;43854:9;43850:17;43841:6;43799:69;:::i;:::-;43753:122;;;;:::o;43881:313::-;43994:4;44032:2;44021:9;44017:18;44009:26;;44081:9;44075:4;44071:20;44067:1;44056:9;44052:17;44045:47;44109:78;44182:4;44173:6;44109:78;:::i;:::-;44101:86;;43999:195;;;;:::o;44200:419::-;44366:4;44404:2;44393:9;44389:18;44381:26;;44453:9;44447:4;44443:20;44439:1;44428:9;44424:17;44417:47;44481:131;44607:4;44481:131;:::i;:::-;44473:139;;44371:248;;;:::o;44625:419::-;44791:4;44829:2;44818:9;44814:18;44806:26;;44878:9;44872:4;44868:20;44864:1;44853:9;44849:17;44842:47;44906:131;45032:4;44906:131;:::i;:::-;44898:139;;44796:248;;;:::o;45050:419::-;45216:4;45254:2;45243:9;45239:18;45231:26;;45303:9;45297:4;45293:20;45289:1;45278:9;45274:17;45267:47;45331:131;45457:4;45331:131;:::i;:::-;45323:139;;45221:248;;;:::o;45475:419::-;45641:4;45679:2;45668:9;45664:18;45656:26;;45728:9;45722:4;45718:20;45714:1;45703:9;45699:17;45692:47;45756:131;45882:4;45756:131;:::i;:::-;45748:139;;45646:248;;;:::o;45900:419::-;46066:4;46104:2;46093:9;46089:18;46081:26;;46153:9;46147:4;46143:20;46139:1;46128:9;46124:17;46117:47;46181:131;46307:4;46181:131;:::i;:::-;46173:139;;46071:248;;;:::o;46325:419::-;46491:4;46529:2;46518:9;46514:18;46506:26;;46578:9;46572:4;46568:20;46564:1;46553:9;46549:17;46542:47;46606:131;46732:4;46606:131;:::i;:::-;46598:139;;46496:248;;;:::o;46750:419::-;46916:4;46954:2;46943:9;46939:18;46931:26;;47003:9;46997:4;46993:20;46989:1;46978:9;46974:17;46967:47;47031:131;47157:4;47031:131;:::i;:::-;47023:139;;46921:248;;;:::o;47175:419::-;47341:4;47379:2;47368:9;47364:18;47356:26;;47428:9;47422:4;47418:20;47414:1;47403:9;47399:17;47392:47;47456:131;47582:4;47456:131;:::i;:::-;47448:139;;47346:248;;;:::o;47600:419::-;47766:4;47804:2;47793:9;47789:18;47781:26;;47853:9;47847:4;47843:20;47839:1;47828:9;47824:17;47817:47;47881:131;48007:4;47881:131;:::i;:::-;47873:139;;47771:248;;;:::o;48025:419::-;48191:4;48229:2;48218:9;48214:18;48206:26;;48278:9;48272:4;48268:20;48264:1;48253:9;48249:17;48242:47;48306:131;48432:4;48306:131;:::i;:::-;48298:139;;48196:248;;;:::o;48450:419::-;48616:4;48654:2;48643:9;48639:18;48631:26;;48703:9;48697:4;48693:20;48689:1;48678:9;48674:17;48667:47;48731:131;48857:4;48731:131;:::i;:::-;48723:139;;48621:248;;;:::o;48875:419::-;49041:4;49079:2;49068:9;49064:18;49056:26;;49128:9;49122:4;49118:20;49114:1;49103:9;49099:17;49092:47;49156:131;49282:4;49156:131;:::i;:::-;49148:139;;49046:248;;;:::o;49300:419::-;49466:4;49504:2;49493:9;49489:18;49481:26;;49553:9;49547:4;49543:20;49539:1;49528:9;49524:17;49517:47;49581:131;49707:4;49581:131;:::i;:::-;49573:139;;49471:248;;;:::o;49725:419::-;49891:4;49929:2;49918:9;49914:18;49906:26;;49978:9;49972:4;49968:20;49964:1;49953:9;49949:17;49942:47;50006:131;50132:4;50006:131;:::i;:::-;49998:139;;49896:248;;;:::o;50150:419::-;50316:4;50354:2;50343:9;50339:18;50331:26;;50403:9;50397:4;50393:20;50389:1;50378:9;50374:17;50367:47;50431:131;50557:4;50431:131;:::i;:::-;50423:139;;50321:248;;;:::o;50575:419::-;50741:4;50779:2;50768:9;50764:18;50756:26;;50828:9;50822:4;50818:20;50814:1;50803:9;50799:17;50792:47;50856:131;50982:4;50856:131;:::i;:::-;50848:139;;50746:248;;;:::o;51000:419::-;51166:4;51204:2;51193:9;51189:18;51181:26;;51253:9;51247:4;51243:20;51239:1;51228:9;51224:17;51217:47;51281:131;51407:4;51281:131;:::i;:::-;51273:139;;51171:248;;;:::o;51425:419::-;51591:4;51629:2;51618:9;51614:18;51606:26;;51678:9;51672:4;51668:20;51664:1;51653:9;51649:17;51642:47;51706:131;51832:4;51706:131;:::i;:::-;51698:139;;51596:248;;;:::o;51850:218::-;51941:4;51979:2;51968:9;51964:18;51956:26;;51992:69;52058:1;52047:9;52043:17;52034:6;51992:69;:::i;:::-;51946:122;;;;:::o;52074:430::-;52217:4;52255:2;52244:9;52240:18;52232:26;;52268:69;52334:1;52323:9;52319:17;52310:6;52268:69;:::i;:::-;52347:70;52413:2;52402:9;52398:18;52389:6;52347:70;:::i;:::-;52427;52493:2;52482:9;52478:18;52469:6;52427:70;:::i;:::-;52222:282;;;;;;:::o;52510:585::-;52705:4;52743:2;52732:9;52728:18;52720:26;;52756:69;52822:1;52811:9;52807:17;52798:6;52756:69;:::i;:::-;52835:70;52901:2;52890:9;52886:18;52877:6;52835:70;:::i;:::-;52952:9;52946:4;52942:20;52937:2;52926:9;52922:18;52915:48;52980:108;53083:4;53074:6;52980:108;:::i;:::-;52972:116;;52710:385;;;;;;:::o;53101:537::-;53270:4;53308:3;53297:9;53293:19;53285:27;;53322:69;53388:1;53377:9;53373:17;53364:6;53322:69;:::i;:::-;53401:70;53467:2;53456:9;53452:18;53443:6;53401:70;:::i;:::-;53481;53547:2;53536:9;53532:18;53523:6;53481:70;:::i;:::-;53561;53627:2;53616:9;53612:18;53603:6;53561:70;:::i;:::-;53275:363;;;;;;;:::o;53644:857::-;53918:4;53956:3;53945:9;53941:19;53933:27;;53970:69;54036:1;54025:9;54021:17;54012:6;53970:69;:::i;:::-;54049:70;54115:2;54104:9;54100:18;54091:6;54049:70;:::i;:::-;54129;54195:2;54184:9;54180:18;54171:6;54129:70;:::i;:::-;54209;54275:2;54264:9;54260:18;54251:6;54209:70;:::i;:::-;54289:71;54355:3;54344:9;54340:19;54331:6;54289:71;:::i;:::-;54370:124;54489:3;54478:9;54474:19;54465:6;54370:124;:::i;:::-;53923:578;;;;;;;;;:::o;54507:222::-;54600:4;54638:2;54627:9;54623:18;54615:26;;54651:71;54719:1;54708:9;54704:17;54695:6;54651:71;:::i;:::-;54605:124;;;;:::o;54735:424::-;54902:4;54940:2;54929:9;54925:18;54917:26;;54953:71;55021:1;55010:9;55006:17;54997:6;54953:71;:::i;:::-;55034:118;55148:2;55137:9;55133:18;55124:6;55034:118;:::i;:::-;54907:252;;;;;:::o;55165:483::-;55336:4;55374:2;55363:9;55359:18;55351:26;;55387:71;55455:1;55444:9;55440:17;55431:6;55387:71;:::i;:::-;55505:9;55499:4;55495:20;55490:2;55479:9;55475:18;55468:48;55533:108;55636:4;55627:6;55533:108;:::i;:::-;55525:116;;55341:307;;;;;:::o;55654:332::-;55775:4;55813:2;55802:9;55798:18;55790:26;;55826:71;55894:1;55883:9;55879:17;55870:6;55826:71;:::i;:::-;55907:72;55975:2;55964:9;55960:18;55951:6;55907:72;:::i;:::-;55780:206;;;;;:::o;55992:652::-;56191:4;56229:3;56218:9;56214:19;56206:27;;56243:71;56311:1;56300:9;56296:17;56287:6;56243:71;:::i;:::-;56324:72;56392:2;56381:9;56377:18;56368:6;56324:72;:::i;:::-;56406:70;56472:2;56461:9;56457:18;56448:6;56406:70;:::i;:::-;56486;56552:2;56541:9;56537:18;56528:6;56486:70;:::i;:::-;56566:71;56632:3;56621:9;56617:19;56608:6;56566:71;:::i;:::-;56196:448;;;;;;;;:::o;56650:763::-;56877:4;56915:3;56904:9;56900:19;56892:27;;56929:71;56997:1;56986:9;56982:17;56973:6;56929:71;:::i;:::-;57010:72;57078:2;57067:9;57063:18;57054:6;57010:72;:::i;:::-;57092:70;57158:2;57147:9;57143:18;57134:6;57092:70;:::i;:::-;57172;57238:2;57227:9;57223:18;57214:6;57172:70;:::i;:::-;57252:71;57318:3;57307:9;57303:19;57294:6;57252:71;:::i;:::-;57333:73;57401:3;57390:9;57386:19;57377:6;57333:73;:::i;:::-;56882:531;;;;;;;;;:::o;57419:759::-;57644:4;57682:3;57671:9;57667:19;57659:27;;57696:71;57764:1;57753:9;57749:17;57740:6;57696:71;:::i;:::-;57777:70;57843:2;57832:9;57828:18;57819:6;57777:70;:::i;:::-;57857;57923:2;57912:9;57908:18;57899:6;57857:70;:::i;:::-;57937;58003:2;57992:9;57988:18;57979:6;57937:70;:::i;:::-;58017:71;58083:3;58072:9;58068:19;58059:6;58017:71;:::i;:::-;58098:73;58166:3;58155:9;58151:19;58142:6;58098:73;:::i;:::-;57649:529;;;;;;;;;:::o;58184:426::-;58325:4;58363:2;58352:9;58348:18;58340:26;;58376:71;58444:1;58433:9;58429:17;58420:6;58376:71;:::i;:::-;58457:70;58523:2;58512:9;58508:18;58499:6;58457:70;:::i;:::-;58537:66;58599:2;58588:9;58584:18;58575:6;58537:66;:::i;:::-;58330:280;;;;;;:::o;58616:218::-;58707:4;58745:2;58734:9;58730:18;58722:26;;58758:69;58824:1;58813:9;58809:17;58800:6;58758:69;:::i;:::-;58712:122;;;;:::o;58840:324::-;58957:4;58995:2;58984:9;58980:18;58972:26;;59008:69;59074:1;59063:9;59059:17;59050:6;59008:69;:::i;:::-;59087:70;59153:2;59142:9;59138:18;59129:6;59087:70;:::i;:::-;58962:202;;;;;:::o;59170:1072::-;59469:4;59507:3;59496:9;59492:19;59484:27;;59521:69;59587:1;59576:9;59572:17;59563:6;59521:69;:::i;:::-;59600:70;59666:2;59655:9;59651:18;59642:6;59600:70;:::i;:::-;59680;59746:2;59735:9;59731:18;59722:6;59680:70;:::i;:::-;59760;59826:2;59815:9;59811:18;59802:6;59760:70;:::i;:::-;59840:71;59906:3;59895:9;59891:19;59882:6;59840:71;:::i;:::-;59921;59987:3;59976:9;59972:19;59963:6;59921:71;:::i;:::-;60002;60068:3;60057:9;60053:19;60044:6;60002:71;:::i;:::-;60083;60149:3;60138:9;60134:19;60125:6;60083:71;:::i;:::-;60164;60230:3;60219:9;60215:19;60206:6;60164:71;:::i;:::-;59474:768;;;;;;;;;;;;:::o;60248:220::-;60340:4;60378:2;60367:9;60363:18;60355:26;;60391:70;60458:1;60447:9;60443:17;60434:6;60391:70;:::i;:::-;60345:123;;;;:::o;60474:218::-;60565:4;60603:2;60592:9;60588:18;60580:26;;60616:69;60682:1;60671:9;60667:17;60658:6;60616:69;:::i;:::-;60570:122;;;;:::o;60698:328::-;60817:4;60855:2;60844:9;60840:18;60832:26;;60868:69;60934:1;60923:9;60919:17;60910:6;60868:69;:::i;:::-;60947:72;61015:2;61004:9;61000:18;60991:6;60947:72;:::i;:::-;60822:204;;;;;:::o;61032:218::-;61123:4;61161:2;61150:9;61146:18;61138:26;;61174:69;61240:1;61229:9;61225:17;61216:6;61174:69;:::i;:::-;61128:122;;;;:::o;61256:696::-;61479:4;61517:3;61506:9;61502:19;61494:27;;61531:69;61597:1;61586:9;61582:17;61573:6;61531:69;:::i;:::-;61610:70;61676:2;61665:9;61661:18;61652:6;61610:70;:::i;:::-;61690:72;61758:2;61747:9;61743:18;61734:6;61690:72;:::i;:::-;61809:9;61803:4;61799:20;61794:2;61783:9;61779:18;61772:48;61837:108;61940:4;61931:6;61837:108;:::i;:::-;61829:116;;61484:468;;;;;;;:::o;61958:129::-;61992:6;62019:20;;:::i;:::-;62009:30;;62048:33;62076:4;62068:6;62048:33;:::i;:::-;61999:88;;;:::o;62093:75::-;62126:6;62159:2;62153:9;62143:19;;62133:35;:::o;62174:249::-;62249:4;62339:18;62331:6;62328:30;62325:2;;;62361:18;;:::i;:::-;62325:2;62411:4;62403:6;62399:17;62391:25;;62254:169;;;:::o;62429:132::-;62496:4;62519:3;62511:11;;62549:4;62544:3;62540:14;62532:22;;62501:60;;;:::o;62567:132::-;62634:4;62657:3;62649:11;;62687:4;62682:3;62678:14;62670:22;;62639:60;;;:::o;62705:98::-;62770:4;62793:3;62785:11;;62775:28;;;:::o;62809:132::-;62876:4;62899:3;62891:11;;62929:4;62924:3;62920:14;62912:22;;62881:60;;;:::o;62947:114::-;63014:6;63048:5;63042:12;63032:22;;63021:40;;;:::o;63067:114::-;63134:6;63168:5;63162:12;63152:22;;63141:40;;;:::o;63187:104::-;63252:6;63280:4;63270:14;;63259:32;;;:::o;63297:114::-;63364:6;63398:5;63392:12;63382:22;;63371:40;;;:::o;63417:98::-;63468:6;63502:5;63496:12;63486:22;;63475:40;;;:::o;63521:99::-;63573:6;63607:5;63601:12;63591:22;;63580:40;;;:::o;63626:113::-;63696:4;63728;63723:3;63719:14;63711:22;;63701:38;;;:::o;63745:113::-;63815:4;63847;63842:3;63838:14;63830:22;;63820:38;;;:::o;63864:111::-;63932:4;63964;63959:3;63955:14;63947:22;;63937:38;;;:::o;63981:113::-;64051:4;64083;64078:3;64074:14;64066:22;;64056:38;;;:::o;64100:184::-;64199:11;64233:6;64228:3;64221:19;64273:4;64268:3;64264:14;64249:29;;64211:73;;;;:::o;64290:184::-;64389:11;64423:6;64418:3;64411:19;64463:4;64458:3;64454:14;64439:29;;64401:73;;;;:::o;64480:143::-;64577:11;64614:3;64599:18;;64589:34;;;;:::o;64629:161::-;64744:11;64781:3;64766:18;;64756:34;;;;:::o;64796:184::-;64895:11;64929:6;64924:3;64917:19;64969:4;64964:3;64960:14;64945:29;;64907:73;;;;:::o;64986:168::-;65069:11;65103:6;65098:3;65091:19;65143:4;65138:3;65134:14;65119:29;;65081:73;;;;:::o;65160:147::-;65261:11;65298:3;65283:18;;65273:34;;;;:::o;65313:169::-;65397:11;65431:6;65426:3;65419:19;65471:4;65466:3;65462:14;65447:29;;65409:73;;;;:::o;65488:305::-;65528:3;65547:20;65565:1;65547:20;:::i;:::-;65542:25;;65581:20;65599:1;65581:20;:::i;:::-;65576:25;;65735:1;65667:66;65663:74;65660:1;65657:81;65654:2;;;65741:18;;:::i;:::-;65654:2;65785:1;65782;65778:9;65771:16;;65532:261;;;;:::o;65799:254::-;65838:3;65857:19;65874:1;65857:19;:::i;:::-;65852:24;;65890:19;65907:1;65890:19;:::i;:::-;65885:24;;65995:1;65975:18;65971:26;65968:1;65965:33;65962:2;;;66001:18;;:::i;:::-;65962:2;66045:1;66042;66038:9;66031:16;;65842:211;;;;:::o;66059:262::-;66098:3;66117:19;66134:1;66117:19;:::i;:::-;66112:24;;66150:19;66167:1;66150:19;:::i;:::-;66145:24;;66263:1;66235:26;66231:34;66228:1;66225:41;66222:2;;;66269:18;;:::i;:::-;66222:2;66313:1;66310;66306:9;66299:16;;66102:219;;;;:::o;66327:185::-;66367:1;66384:20;66402:1;66384:20;:::i;:::-;66379:25;;66418:20;66436:1;66418:20;:::i;:::-;66413:25;;66457:1;66447:2;;66462:18;;:::i;:::-;66447:2;66504:1;66501;66497:9;66492:14;;66369:143;;;;:::o;66518:348::-;66558:7;66581:20;66599:1;66581:20;:::i;:::-;66576:25;;66615:20;66633:1;66615:20;:::i;:::-;66610:25;;66803:1;66735:66;66731:74;66728:1;66725:81;66720:1;66713:9;66706:17;66702:105;66699:2;;;66810:18;;:::i;:::-;66699:2;66858:1;66855;66851:9;66840:20;;66566:300;;;;:::o;66872:191::-;66912:4;66932:20;66950:1;66932:20;:::i;:::-;66927:25;;66966:20;66984:1;66966:20;:::i;:::-;66961:25;;67005:1;67002;66999:8;66996:2;;;67010:18;;:::i;:::-;66996:2;67055:1;67052;67048:9;67040:17;;66917:146;;;;:::o;67069:188::-;67108:4;67128:19;67145:1;67128:19;:::i;:::-;67123:24;;67161:19;67178:1;67161:19;:::i;:::-;67156:24;;67199:1;67196;67193:8;67190:2;;;67204:18;;:::i;:::-;67190:2;67249:1;67246;67242:9;67234:17;;67113:144;;;;:::o;67263:104::-;67312:7;67352:8;67345:5;67341:20;67330:31;;67320:47;;;:::o;67373:106::-;67422:7;67462:10;67455:5;67451:22;67440:33;;67430:49;;;:::o;67485:96::-;67522:7;67551:24;67569:5;67551:24;:::i;:::-;67540:35;;67530:51;;;:::o;67587:90::-;67621:7;67664:5;67657:13;67650:21;67639:32;;67629:48;;;:::o;67683:77::-;67720:7;67749:5;67738:16;;67728:32;;;:::o;67766:76::-;67802:7;67831:5;67820:16;;67810:32;;;:::o;67848:89::-;67884:7;67924:6;67917:5;67913:18;67902:29;;67892:45;;;:::o;67943:126::-;67980:7;68020:42;68013:5;68009:54;67998:65;;67988:81;;;:::o;68075:91::-;68111:7;68151:8;68144:5;68140:20;68129:31;;68119:47;;;:::o;68172:77::-;68209:7;68238:5;68227:16;;68217:32;;;:::o;68255:93::-;68291:7;68331:10;68324:5;68320:22;68309:33;;68299:49;;;:::o;68354:101::-;68390:7;68430:18;68423:5;68419:30;68408:41;;68398:57;;;:::o;68461:86::-;68496:7;68536:4;68529:5;68525:16;68514:27;;68504:43;;;:::o;68553:105::-;68589:7;68629:22;68622:5;68618:34;68607:45;;68597:61;;;:::o;68664:109::-;68700:7;68740:26;68733:5;68729:38;68718:49;;68708:65;;;:::o;68779:184::-;68858:9;68891:66;68951:5;68891:66;:::i;:::-;68878:79;;68868:95;;;:::o;68969:142::-;69048:9;69081:24;69099:5;69081:24;:::i;:::-;69068:37;;69058:53;;;:::o;69117:190::-;69199:9;69232:69;69295:5;69232:69;:::i;:::-;69219:82;;69209:98;;;:::o;69313:145::-;69395:9;69428:24;69446:5;69428:24;:::i;:::-;69415:37;;69405:53;;;:::o;69464:178::-;69540:9;69573:63;69630:5;69573:63;:::i;:::-;69560:76;;69550:92;;;:::o;69648:139::-;69724:9;69757:24;69775:5;69757:24;:::i;:::-;69744:37;;69734:53;;;:::o;69793:111::-;69842:9;69875:23;69892:5;69875:23;:::i;:::-;69862:36;;69852:52;;;:::o;69910:111::-;69959:9;69992:23;70009:5;69992:23;:::i;:::-;69979:36;;69969:52;;;:::o;70027:307::-;70095:1;70105:113;70119:6;70116:1;70113:13;70105:113;;;70204:1;70199:3;70195:11;70189:18;70185:1;70180:3;70176:11;70169:39;70141:2;70138:1;70134:10;70129:15;;70105:113;;;70236:6;70233:1;70230:13;70227:2;;;70316:1;70307:6;70302:3;70298:16;70291:27;70227:2;70076:258;;;;:::o;70340:164::-;70408:5;70433:65;70463:34;70486:10;70463:34;:::i;:::-;70433:65;:::i;:::-;70424:74;;70414:90;;;:::o;70510:166::-;70579:5;70604:66;70634:35;70658:10;70634:35;:::i;:::-;70604:66;:::i;:::-;70595:75;;70585:91;;;:::o;70682:167::-;70751:5;70776:67;70806:36;70831:10;70806:36;:::i;:::-;70776:67;:::i;:::-;70767:76;;70757:92;;;:::o;70855:167::-;70924:5;70949:67;70979:36;71004:10;70979:36;:::i;:::-;70949:67;:::i;:::-;70940:76;;70930:92;;;:::o;71028:167::-;71097:5;71122:67;71152:36;71177:10;71152:36;:::i;:::-;71122:67;:::i;:::-;71113:76;;71103:92;;;:::o;71201:167::-;71270:5;71295:67;71325:36;71350:10;71325:36;:::i;:::-;71295:67;:::i;:::-;71286:76;;71276:92;;;:::o;71374:167::-;71443:5;71468:67;71498:36;71523:10;71498:36;:::i;:::-;71468:67;:::i;:::-;71459:76;;71449:92;;;:::o;71547:165::-;71615:5;71640:66;71670:35;71694:10;71670:35;:::i;:::-;71640:66;:::i;:::-;71631:75;;71621:91;;;:::o;71718:165::-;71786:5;71811:66;71841:35;71865:10;71841:35;:::i;:::-;71811:66;:::i;:::-;71802:75;;71792:91;;;:::o;71889:281::-;71972:27;71994:4;71972:27;:::i;:::-;71964:6;71960:40;72102:6;72090:10;72087:22;72066:18;72054:10;72051:34;72048:62;72045:2;;;72113:18;;:::i;:::-;72045:2;72153:10;72149:2;72142:22;71932:238;;;:::o;72176:233::-;72215:3;72238:24;72256:5;72238:24;:::i;:::-;72229:33;;72284:66;72277:5;72274:77;72271:2;;;72354:18;;:::i;:::-;72271:2;72401:1;72394:5;72390:13;72383:20;;72219:190;;;:::o;72415:183::-;72453:3;72476:23;72493:5;72476:23;:::i;:::-;72467:32;;72521:18;72514:5;72511:29;72508:2;;;72543:18;;:::i;:::-;72508:2;72590:1;72583:5;72579:13;72572:20;;72457:141;;;:::o;72604:100::-;72643:7;72672:26;72692:5;72672:26;:::i;:::-;72661:37;;72651:53;;;:::o;72710:79::-;72749:7;72778:5;72767:16;;72757:32;;;:::o;72795:94::-;72834:7;72863:20;72877:5;72863:20;:::i;:::-;72852:31;;72842:47;;;:::o;72895:79::-;72934:7;72963:5;72952:16;;72942:32;;;:::o;72980:176::-;73012:1;73029:20;73047:1;73029:20;:::i;:::-;73024:25;;73063:20;73081:1;73063:20;:::i;:::-;73058:25;;73102:1;73092:2;;73107:18;;:::i;:::-;73092:2;73148:1;73145;73141:9;73136:14;;73014:142;;;;:::o;73162:180::-;73210:77;73207:1;73200:88;73307:4;73304:1;73297:15;73331:4;73328:1;73321:15;73348:180;73396:77;73393:1;73386:88;73493:4;73490:1;73483:15;73517:4;73514:1;73507:15;73534:180;73582:77;73579:1;73572:88;73679:4;73676:1;73669:15;73703:4;73700:1;73693:15;73720:180;73768:77;73765:1;73758:88;73865:4;73862:1;73855:15;73889:4;73886:1;73879:15;73906:180;73954:77;73951:1;73944:88;74051:4;74048:1;74041:15;74075:4;74072:1;74065:15;74092:117;74201:1;74198;74191:12;74215:117;74324:1;74321;74314:12;74338:117;74447:1;74444;74437:12;74584:117;74693:1;74690;74683:12;74707:117;74816:1;74813;74806:12;74830:117;74939:1;74936;74929:12;74953:102;74994:6;75045:2;75041:7;75036:2;75029:5;75025:14;75021:28;75011:38;;75001:54;;;:::o;75061:94::-;75094:8;75142:5;75138:2;75134:14;75113:35;;75103:52;;;:::o;75161:102::-;75203:8;75250:5;75247:1;75243:13;75222:34;;75212:51;;;:::o;75269:106::-;75313:8;75362:5;75357:3;75353:15;75332:36;;75322:53;;;:::o;75381:106::-;75425:8;75474:5;75469:3;75465:15;75444:36;;75434:53;;;:::o;75493:106::-;75537:8;75586:5;75581:3;75577:15;75556:36;;75546:53;;;:::o;75605:106::-;75649:8;75698:5;75693:3;75689:15;75668:36;;75658:53;;;:::o;75717:106::-;75761:8;75810:5;75805:3;75801:15;75780:36;;75770:53;;;:::o;75829:104::-;75872:8;75920:5;75916:2;75912:14;75891:35;;75881:52;;;:::o;75939:104::-;75982:8;76030:5;76026:2;76022:14;76001:35;;75991:52;;;:::o;76049:104::-;76092:8;76140:5;76136:2;76132:14;76111:35;;76101:52;;;:::o;76159:172::-;76299:24;76295:1;76287:6;76283:14;76276:48;76265:66;:::o;76337:173::-;76477:25;76473:1;76465:6;76461:14;76454:49;76443:67;:::o;76516:180::-;76656:32;76652:1;76644:6;76640:14;76633:56;76622:74;:::o;76702:172::-;76842:24;76838:1;76830:6;76826:14;76819:48;76808:66;:::o;76880:168::-;77020:20;77016:1;77008:6;77004:14;76997:44;76986:62;:::o;77054:168::-;77194:20;77190:1;77182:6;77178:14;77171:44;77160:62;:::o;77228:161::-;77368:13;77364:1;77356:6;77352:14;77345:37;77334:55;:::o;77395:175::-;77535:27;77531:1;77523:6;77519:14;77512:51;77501:69;:::o;77576:175::-;77716:27;77712:1;77704:6;77700:14;77693:51;77682:69;:::o;77757:179::-;77897:31;77893:1;77885:6;77881:14;77874:55;77863:73;:::o;77942:176::-;78082:28;78078:1;78070:6;78066:14;78059:52;78048:70;:::o;78124:171::-;78264:23;78260:1;78252:6;78248:14;78241:47;78230:65;:::o;78301:163::-;78441:15;78437:1;78429:6;78425:14;78418:39;78407:57;:::o;78470:173::-;78610:25;78606:1;78598:6;78594:14;78587:49;78576:67;:::o;78649:172::-;78789:24;78785:1;78777:6;78773:14;78766:48;78755:66;:::o;78827:161::-;78967:13;78963:1;78955:6;78951:14;78944:37;78933:55;:::o;78994:168::-;79134:20;79130:1;79122:6;79118:14;79111:44;79100:62;:::o;79168:178::-;79308:30;79304:1;79296:6;79292:14;79285:54;79274:72;:::o;79352:122::-;79425:24;79443:5;79425:24;:::i;:::-;79418:5;79415:35;79405:2;;79464:1;79461;79454:12;79405:2;79395:79;:::o;79480:116::-;79550:21;79565:5;79550:21;:::i;:::-;79543:5;79540:32;79530:2;;79586:1;79583;79576:12;79530:2;79520:76;:::o;79602:122::-;79675:24;79693:5;79675:24;:::i;:::-;79668:5;79665:35;79655:2;;79714:1;79711;79704:12;79655:2;79645:79;:::o;79730:120::-;79802:23;79819:5;79802:23;:::i;:::-;79795:5;79792:34;79782:2;;79840:1;79837;79830:12;79782:2;79772:78;:::o;79856:120::-;79928:23;79945:5;79928:23;:::i;:::-;79921:5;79918:34;79908:2;;79966:1;79963;79956:12;79908:2;79898:78;:::o;79982:120::-;80054:23;80071:5;80054:23;:::i;:::-;80047:5;80044:34;80034:2;;80092:1;80089;80082:12;80034:2;80024:78;:::o;80108:122::-;80181:24;80199:5;80181:24;:::i;:::-;80174:5;80171:35;80161:2;;80220:1;80217;80210:12;80161:2;80151:79;:::o;80236:120::-;80308:23;80325:5;80308:23;:::i;:::-;80301:5;80298:34;80288:2;;80346:1;80343;80336:12;80288:2;80278:78;:::o;80362:120::-;80434:23;80451:5;80434:23;:::i;:::-;80427:5;80424:34;80414:2;;80472:1;80469;80462:12;80414:2;80404:78;:::o;80488:120::-;80560:23;80577:5;80560:23;:::i;:::-;80553:5;80550:34;80540:2;;80598:1;80595;80588:12;80540:2;80530:78;:::o;80614:120::-;80686:23;80703:5;80686:23;:::i;:::-;80679:5;80676:34;80666:2;;80724:1;80721;80714:12;80666:2;80656:78;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"7341400","executionCost":"infinite","totalCost":"infinite"},"external":{"BLOCKHASH_STORE()":"infinite","LINK()":"infinite","LINK_ETH_FEED()":"infinite","MAX_CONSUMERS()":"402","MAX_NUM_WORDS()":"403","MAX_REQUEST_CONFIRMATIONS()":"425","acceptOwnership()":"54630","acceptSubscriptionOwnerTransfer(uint64)":"infinite","addConsumer(uint64,address)":"infinite","cancelSubscription(uint64,address)":"infinite","createSubscription()":"infinite","deregisterProvingKey(uint256[2])":"infinite","fulfillRandomWords((uint256[2],uint256[2],uint256,uint256,uint256,address,uint256[2],uint256[2],uint256),(uint64,uint64,uint32,uint32,address))":"infinite","getCommitment(uint256)":"2913","getConfig()":"infinite","getCurrentSubId()":"2592","getFallbackWeiPerUnitLink()":"2483","getFeeConfig()":"infinite","getFeeTier(uint64)":"21060","getRequestConfig()":"infinite","getSubscription(uint64)":"infinite","getTotalBalance()":"2597","hashOfKey(uint256[2])":"infinite","onTokenTransfer(address,uint256,bytes)":"infinite","oracleWithdraw(address,uint96)":"infinite","owner()":"2567","ownerCancelSubscription(uint64)":"infinite","pendingRequestExists(uint64)":"infinite","recoverFunds(address)":"infinite","registerProvingKey(address,uint256[2])":"infinite","removeConsumer(uint64,address)":"infinite","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"infinite","requestSubscriptionOwnerTransfer(uint64,address)":"infinite","setConfig(uint16,uint32,uint32,uint32,int256,(uint32,uint32,uint32,uint32,uint32,uint24,uint24,uint24,uint24))":"infinite","transferOwnership(address)":"30789","typeAndVersion()":"infinite"},"internal":{"_calculatePaymentAmount(uint256,uint256,uint32,uint256)":"infinite","_callWithExactGas(uint256,address,bytes memory)":"infinite","_cancelSubscriptionHelper(uint64,address)":"infinite","_computeRequestId(bytes32,address,uint64,uint64)":"infinite","_getFeedData()":"infinite","_getRandomnessFromProof(struct VRF.Proof memory,struct VRFCoordinatorV2.RequestCommitment memory)":"infinite"}},"methodIdentifiers":{"BLOCKHASH_STORE()":"689c4517","LINK()":"1b6b6d23","LINK_ETH_FEED()":"ad178361","MAX_CONSUMERS()":"64d51a2a","MAX_NUM_WORDS()":"40d6bb82","MAX_REQUEST_CONFIRMATIONS()":"15c48b84","acceptOwnership()":"79ba5097","acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","createSubscription()":"a21a23e4","deregisterProvingKey(uint256[2])":"08821d58","fulfillRandomWords((uint256[2],uint256[2],uint256,uint256,uint256,address,uint256[2],uint256[2],uint256),(uint64,uint64,uint32,uint32,address))":"af198b97","getCommitment(uint256)":"69bcdb7d","getConfig()":"c3f909d4","getCurrentSubId()":"06bfa637","getFallbackWeiPerUnitLink()":"356dac71","getFeeConfig()":"5fbbc0d2","getFeeTier(uint64)":"d2f9f9a7","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","getTotalBalance()":"12b58349","hashOfKey(uint256[2])":"caf70c4a","onTokenTransfer(address,uint256,bytes)":"a4c0ed36","oracleWithdraw(address,uint96)":"66316d8d","owner()":"8da5cb5b","ownerCancelSubscription(uint64)":"02bcc5b6","pendingRequestExists(uint64)":"e82ad7d4","recoverFunds(address)":"e72f6e30","registerProvingKey(address,uint256[2])":"6f64f03f","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb","setConfig(uint16,uint32,uint32,uint32,int256,(uint32,uint32,uint32,uint32,uint32,uint24,uint24,uint24,uint24))":"4cb48a54","transferOwnership(address)":"f2fde38b","typeAndVersion()":"181f5a77"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"link\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"blockhashStore\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkEthFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"internalBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"externalBalance\",\"type\":\"uint256\"}],\"name\":\"BalanceInvariantViolated\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNum\",\"type\":\"uint256\"}],\"name\":\"BlockhashNotInStore\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"have\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"want\",\"type\":\"uint32\"}],\"name\":\"GasLimitTooBig\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectCommitment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"have\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"want\",\"type\":\"uint256\"}],\"name\":\"InsufficientGasForConsumer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCalldata\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"InvalidConsumer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"linkWei\",\"type\":\"int256\"}],\"name\":\"InvalidLinkWeiPrice\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"have\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"min\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"max\",\"type\":\"uint16\"}],\"name\":\"InvalidRequestConfirmations\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSubscription\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proposedOwner\",\"type\":\"address\"}],\"name\":\"MustBeRequestedOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"MustBeSubOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoCorrespondingRequest\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"}],\"name\":\"NoSuchProvingKey\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"have\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"want\",\"type\":\"uint32\"}],\"name\":\"NumWordsTooBig\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyCallableFromLink\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PaymentTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PendingRequestExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"}],\"name\":\"ProvingKeyAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Reentrant\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooManyConsumers\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"maxGasLimit\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"stalenessSeconds\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"gasAfterPaymentCalculation\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"fallbackWeiPerUnitLink\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier1\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier2\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier3\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier4\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier5\",\"type\":\"uint32\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier2\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier3\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier4\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier5\",\"type\":\"uint24\"}],\"indexed\":false,\"internalType\":\"struct VRFCoordinatorV2.FeeConfig\",\"name\":\"feeConfig\",\"type\":\"tuple\"}],\"name\":\"ConfigSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsRecovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"ProvingKeyDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"ProvingKeyRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outputSeed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"payment\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"RandomWordsFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"preSeed\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RandomWordsRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SubscriptionCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"SubscriptionConsumerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"SubscriptionConsumerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"SubscriptionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"SubscriptionFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"SubscriptionOwnerTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"SubscriptionOwnerTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BLOCKHASH_STORE\",\"outputs\":[{\"internalType\":\"contract BlockhashStoreInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LINK\",\"outputs\":[{\"internalType\":\"contract LinkTokenInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LINK_ETH_FEED\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_CONSUMERS\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_NUM_WORDS\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_REQUEST_CONFIRMATIONS\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"publicProvingKey\",\"type\":\"uint256[2]\"}],\"name\":\"deregisterProvingKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"pk\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"gamma\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"s\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"uWitness\",\"type\":\"address\"},{\"internalType\":\"uint256[2]\",\"name\":\"cGammaWitness\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"sHashWitness\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256\",\"name\":\"zInv\",\"type\":\"uint256\"}],\"internalType\":\"struct VRF.Proof\",\"name\":\"proof\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"blockNum\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"internalType\":\"struct VRFCoordinatorV2.RequestCommitment\",\"name\":\"rc\",\"type\":\"tuple\"}],\"name\":\"fulfillRandomWords\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"getCommitment\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"maxGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"stalenessSeconds\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"gasAfterPaymentCalculation\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentSubId\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFallbackWeiPerUnitLink\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeConfig\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier1\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier2\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier3\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier4\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier5\",\"type\":\"uint32\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier2\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier3\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier4\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier5\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"}],\"name\":\"getFeeTier\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"publicKey\",\"type\":\"uint256[2]\"}],\"name\":\"hashOfKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"}],\"name\":\"oracleWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"ownerCancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"recoverFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"uint256[2]\",\"name\":\"publicProvingKey\",\"type\":\"uint256[2]\"}],\"name\":\"registerProvingKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"requestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"maxGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"stalenessSeconds\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"gasAfterPaymentCalculation\",\"type\":\"uint32\"},{\"internalType\":\"int256\",\"name\":\"fallbackWeiPerUnitLink\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier1\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier2\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier3\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier4\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier5\",\"type\":\"uint32\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier2\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier3\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier4\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier5\",\"type\":\"uint24\"}],\"internalType\":\"struct VRFCoordinatorV2.FeeConfig\",\"name\":\"feeConfig\",\"type\":\"tuple\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"typeAndVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"_0\":\"- A unique subscription id.\"}},\"deregisterProvingKey(uint256[2])\":{\"params\":{\"publicProvingKey\":\"key that oracle can use to submit vrf fulfillments\"}},\"getCommitment(uint256)\":{\"details\":\"used to determine if a request is fulfilled or not\",\"params\":{\"requestId\":\"id of request\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"hashOfKey(uint256[2])\":{\"params\":{\"publicKey\":\"the key to return the hash of\"}},\"ownerCancelSubscription(uint64)\":{\"details\":\"notably can be called even if there are pending requests, outstanding ones may fail onchain\",\"params\":{\"subId\":\"subscription id\"}},\"pendingRequestExists(uint64)\":{\"details\":\"Looping is bounded to MAX_CONSUMERS*(number of keyhashes).Used to disable subscription canceling while outstanding request are present.\"},\"recoverFunds(address)\":{\"params\":{\"to\":\"address to send link to\"}},\"registerProvingKey(address,uint256[2])\":{\"params\":{\"oracle\":\"address of the oracle\",\"publicProvingKey\":\"key that oracle can use to submit vrf fulfillments\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"_0\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}},\"setConfig(uint16,uint32,uint32,uint32,int256,(uint32,uint32,uint32,uint32,uint32,uint24,uint24,uint24,uint24))\":{\"params\":{\"fallbackWeiPerUnitLink\":\"fallback eth/link price in the case of a stale feed\",\"feeConfig\":\"fee tier configuration\",\"gasAfterPaymentCalculation\":\"gas used in doing accounting after completing the gas measurement\",\"maxGasLimit\":\"global max for request gas limit\",\"minimumRequestConfirmations\":\"global min for request confirmations\",\"stalenessSeconds\":\"if the eth/link feed is more stale then this, use the fallback price\"}},\"typeAndVersion()\":{\"returns\":{\"_0\":\"Type and version string\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"deregisterProvingKey(uint256[2])\":{\"notice\":\"Deregisters a proving key to an oracle.\"},\"getCommitment(uint256)\":{\"notice\":\"Get request commitment\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"hashOfKey(uint256[2])\":{\"notice\":\"Returns the proving key hash key associated with this public key\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"ownerCancelSubscription(uint64)\":{\"notice\":\"Owner cancel subscription, sends remaining link directly to the subscription owner.\"},\"recoverFunds(address)\":{\"notice\":\"Recover link sent with transfer instead of transferAndCall.\"},\"registerProvingKey(address,uint256[2])\":{\"notice\":\"Registers a proving key to an oracle.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"},\"setConfig(uint16,uint32,uint32,uint32,int256,(uint32,uint32,uint32,uint32,uint32,uint24,uint24,uint24,uint24))\":{\"notice\":\"Sets the configuration of the vrfv2 coordinator\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"},\"typeAndVersion()\":{\"notice\":\"The type and version of this contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol\":\"VRFCoordinatorV2\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/ChainSpecificUtil.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport {ArbSys} from \\\"./vendor/@arbitrum/nitro-contracts/src/precompiles/ArbSys.sol\\\";\\nimport {ArbGasInfo} from \\\"./vendor/@arbitrum/nitro-contracts/src/precompiles/ArbGasInfo.sol\\\";\\nimport {OVM_GasPriceOracle} from \\\"./vendor/@eth-optimism/contracts/v0.8.6/contracts/L2/predeploys/OVM_GasPriceOracle.sol\\\";\\n\\n/// @dev A library that abstracts out opcodes that behave differently across chains.\\n/// @dev The methods below return values that are pertinent to the given chain.\\n/// @dev For instance, ChainSpecificUtil.getBlockNumber() returns L2 block number in L2 chains\\nlibrary ChainSpecificUtil {\\n  // ------------ Start Arbitrum Constants ------------\\n\\n  /// @dev ARBSYS_ADDR is the address of the ArbSys precompile on Arbitrum.\\n  /// @dev reference: https://github.com/OffchainLabs/nitro/blob/v2.0.14/contracts/src/precompiles/ArbSys.sol#L10\\n  address private constant ARBSYS_ADDR = address(0x0000000000000000000000000000000000000064);\\n  ArbSys private constant ARBSYS = ArbSys(ARBSYS_ADDR);\\n\\n  /// @dev ARBGAS_ADDR is the address of the ArbGasInfo precompile on Arbitrum.\\n  /// @dev reference: https://github.com/OffchainLabs/nitro/blob/v2.0.14/contracts/src/precompiles/ArbGasInfo.sol#L10\\n  address private constant ARBGAS_ADDR = address(0x000000000000000000000000000000000000006C);\\n  ArbGasInfo private constant ARBGAS = ArbGasInfo(ARBGAS_ADDR);\\n\\n  uint256 private constant ARB_MAINNET_CHAIN_ID = 42161;\\n  uint256 private constant ARB_GOERLI_TESTNET_CHAIN_ID = 421613;\\n  uint256 private constant ARB_SEPOLIA_TESTNET_CHAIN_ID = 421614;\\n\\n  // ------------ End Arbitrum Constants ------------\\n\\n  // ------------ Start Optimism Constants ------------\\n  /// @dev L1_FEE_DATA_PADDING includes 35 bytes for L1 data padding for Optimism\\n  bytes internal constant L1_FEE_DATA_PADDING =\\n    \\\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\\\";\\n  /// @dev OVM_GASPRICEORACLE_ADDR is the address of the OVM_GasPriceOracle precompile on Optimism.\\n  /// @dev reference: https://community.optimism.io/docs/developers/build/transaction-fees/#estimating-the-l1-data-fee\\n  address private constant OVM_GASPRICEORACLE_ADDR = address(0x420000000000000000000000000000000000000F);\\n  OVM_GasPriceOracle private constant OVM_GASPRICEORACLE = OVM_GasPriceOracle(OVM_GASPRICEORACLE_ADDR);\\n\\n  uint256 private constant OP_MAINNET_CHAIN_ID = 10;\\n  uint256 private constant OP_GOERLI_CHAIN_ID = 420;\\n  uint256 private constant OP_SEPOLIA_CHAIN_ID = 11155420;\\n\\n  /// @dev Base is a OP stack based rollup and follows the same L1 pricing logic as Optimism.\\n  uint256 private constant BASE_MAINNET_CHAIN_ID = 8453;\\n  uint256 private constant BASE_GOERLI_CHAIN_ID = 84531;\\n\\n  // ------------ End Optimism Constants ------------\\n\\n  /**\\n   * @notice Returns the blockhash for the given blockNumber.\\n   * @notice If the blockNumber is more than 256 blocks in the past, returns the empty string.\\n   * @notice When on a known Arbitrum chain, it uses ArbSys.arbBlockHash to get the blockhash.\\n   * @notice Otherwise, it uses the blockhash opcode.\\n   * @notice Note that the blockhash opcode will return the L2 blockhash on Optimism.\\n   */\\n  function _getBlockhash(uint64 blockNumber) internal view returns (bytes32) {\\n    uint256 chainid = block.chainid;\\n    if (_isArbitrumChainId(chainid)) {\\n      if ((_getBlockNumber() - blockNumber) > 256 || blockNumber >= _getBlockNumber()) {\\n        return \\\"\\\";\\n      }\\n      return ARBSYS.arbBlockHash(blockNumber);\\n    }\\n    return blockhash(blockNumber);\\n  }\\n\\n  /**\\n   * @notice Returns the block number of the current block.\\n   * @notice When on a known Arbitrum chain, it uses ArbSys.arbBlockNumber to get the block number.\\n   * @notice Otherwise, it uses the block.number opcode.\\n   * @notice Note that the block.number opcode will return the L2 block number on Optimism.\\n   */\\n  function _getBlockNumber() internal view returns (uint256) {\\n    uint256 chainid = block.chainid;\\n    if (_isArbitrumChainId(chainid)) {\\n      return ARBSYS.arbBlockNumber();\\n    }\\n    return block.number;\\n  }\\n\\n  /**\\n   * @notice Returns the L1 fees that will be paid for the current transaction, given any calldata\\n   * @notice for the current transaction.\\n   * @notice When on a known Arbitrum chain, it uses ArbGas.getCurrentTxL1GasFees to get the fees.\\n   * @notice On Arbitrum, the provided calldata is not used to calculate the fees.\\n   * @notice On Optimism, the provided calldata is passed to the OVM_GasPriceOracle predeploy\\n   * @notice and getL1Fee is called to get the fees.\\n   */\\n  function _getCurrentTxL1GasFees(bytes memory txCallData) internal view returns (uint256) {\\n    uint256 chainid = block.chainid;\\n    if (_isArbitrumChainId(chainid)) {\\n      return ARBGAS.getCurrentTxL1GasFees();\\n    } else if (_isOptimismChainId(chainid)) {\\n      return OVM_GASPRICEORACLE.getL1Fee(bytes.concat(txCallData, L1_FEE_DATA_PADDING));\\n    }\\n    return 0;\\n  }\\n\\n  /**\\n   * @notice Returns the gas cost in wei of calldataSizeBytes of calldata being posted\\n   * @notice to L1.\\n   */\\n  function _getL1CalldataGasCost(uint256 calldataSizeBytes) internal view returns (uint256) {\\n    uint256 chainid = block.chainid;\\n    if (_isArbitrumChainId(chainid)) {\\n      (, uint256 l1PricePerByte, , , , ) = ARBGAS.getPricesInWei();\\n      // see https://developer.arbitrum.io/devs-how-tos/how-to-estimate-gas#where-do-we-get-all-this-information-from\\n      // for the justification behind the 140 number.\\n      return l1PricePerByte * (calldataSizeBytes + 140);\\n    } else if (_isOptimismChainId(chainid)) {\\n      return _calculateOptimismL1DataFee(calldataSizeBytes);\\n    }\\n    return 0;\\n  }\\n\\n  /**\\n   * @notice Return true if and only if the provided chain ID is an Arbitrum chain ID.\\n   */\\n  function _isArbitrumChainId(uint256 chainId) internal pure returns (bool) {\\n    return\\n      chainId == ARB_MAINNET_CHAIN_ID ||\\n      chainId == ARB_GOERLI_TESTNET_CHAIN_ID ||\\n      chainId == ARB_SEPOLIA_TESTNET_CHAIN_ID;\\n  }\\n\\n  /**\\n   * @notice Return true if and only if the provided chain ID is an Optimism chain ID.\\n   * @notice Note that optimism chain id's are also OP stack chain id's.\\n   */\\n  function _isOptimismChainId(uint256 chainId) internal pure returns (bool) {\\n    return\\n      chainId == OP_MAINNET_CHAIN_ID ||\\n      chainId == OP_GOERLI_CHAIN_ID ||\\n      chainId == OP_SEPOLIA_CHAIN_ID ||\\n      chainId == BASE_MAINNET_CHAIN_ID ||\\n      chainId == BASE_GOERLI_CHAIN_ID;\\n  }\\n\\n  function _calculateOptimismL1DataFee(uint256 calldataSizeBytes) internal view returns (uint256) {\\n    // from: https://community.optimism.io/docs/developers/build/transaction-fees/#the-l1-data-fee\\n    // l1_data_fee = l1_gas_price * (tx_data_gas + fixed_overhead) * dynamic_overhead\\n    // tx_data_gas = count_zero_bytes(tx_data) * 4 + count_non_zero_bytes(tx_data) * 16\\n    // note we conservatively assume all non-zero bytes.\\n    uint256 l1BaseFeeWei = OVM_GASPRICEORACLE.l1BaseFee();\\n    uint256 numZeroBytes = 0;\\n    uint256 numNonzeroBytes = calldataSizeBytes - numZeroBytes;\\n    uint256 txDataGas = numZeroBytes * 4 + numNonzeroBytes * 16;\\n    uint256 fixedOverhead = OVM_GASPRICEORACLE.overhead();\\n\\n    // The scalar is some value like 0.684, but is represented as\\n    // that times 10 ^ number of scalar decimals.\\n    // e.g scalar = 0.684 * 10^6\\n    // The divisor is used to divide that and have a net result of the true scalar.\\n    uint256 scalar = OVM_GASPRICEORACLE.scalar();\\n    uint256 scalarDecimals = OVM_GASPRICEORACLE.decimals();\\n    uint256 divisor = 10 ** scalarDecimals;\\n\\n    uint256 l1DataFee = (l1BaseFeeWei * (txDataGas + fixedOverhead) * scalar) / divisor;\\n    return l1DataFee;\\n  }\\n}\\n\",\"keccak256\":\"0x2f12816c4070308f58ccdd8102733a0bb031d945d1500fcd2297492d7ae674fe\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nabstract contract TypeAndVersionInterface {\\n  function typeAndVersion() external pure virtual returns (string memory);\\n}\\n\",\"keccak256\":\"0x805cc9a91d54db1bea60cb19f38364f1eac2735bddb3476294fb803c2f6b7097\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {ConfirmedOwnerWithProposal} from \\\"./ConfirmedOwnerWithProposal.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\\n}\\n\",\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IOwnable} from \\\"../interfaces/IOwnable.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    // solhint-disable-next-line custom-errors\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /// @notice Allows an owner to begin transferring ownership to a new address.\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /// @notice Allows an ownership transfer to be completed by the recipient.\\n  function acceptOwnership() external override {\\n    // solhint-disable-next-line custom-errors\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /// @notice Get the current owner\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /// @notice validate, transfer ownership, and emit relevant events\\n  function _transferOwnership(address to) private {\\n    // solhint-disable-next-line custom-errors\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /// @notice validate access\\n  function _validateOwnership() internal view {\\n    // solhint-disable-next-line custom-errors\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /// @notice Reverts if called by anyone other than the contract owner.\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x927e505bb87a58ea04d1a9efe945f4bf4093e88b618b6fede3b9c68e1e63d989\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\ninterface IERC677Receiver {\\n  function onTokenTransfer(address sender, uint256 amount, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x5f9ee31598e2250815033c2f4e1e7e747f917815378938505063df1d4ae603ec\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool success);\\n\\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xac02fbc0c7d194e525a71f524d1f7c472df73e19c2b527d7b529badaeaf0ec51\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbGasInfo.sol\":{\"content\":\"// Copyright 2021-2022, Offchain Labs, Inc.\\n// For license information, see https://github.com/OffchainLabs/nitro-contracts/blob/main/LICENSE\\n// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.4.21 <0.9.0;\\n\\n/// @title Provides insight into the cost of using the chain.\\n/// @notice These methods have been adjusted to account for Nitro's heavy use of calldata compression.\\n/// Of note to end-users, we no longer make a distinction between non-zero and zero-valued calldata bytes.\\n/// Precompiled contract that exists in every Arbitrum chain at 0x000000000000000000000000000000000000006c.\\ninterface ArbGasInfo {\\n    /// @notice Get gas prices for a provided aggregator\\n    /// @return return gas prices in wei\\n    ///        (\\n    ///            per L2 tx,\\n    ///            per L1 calldata byte\\n    ///            per storage allocation,\\n    ///            per ArbGas base,\\n    ///            per ArbGas congestion,\\n    ///            per ArbGas total\\n    ///        )\\n    function getPricesInWeiWithAggregator(address aggregator)\\n    external\\n    view\\n    returns (\\n        uint256,\\n        uint256,\\n        uint256,\\n        uint256,\\n        uint256,\\n        uint256\\n    );\\n\\n    /// @notice Get gas prices. Uses the caller's preferred aggregator, or the default if the caller doesn't have a preferred one.\\n    /// @return return gas prices in wei\\n    ///        (\\n    ///            per L2 tx,\\n    ///            per L1 calldata byte\\n    ///            per storage allocation,\\n    ///            per ArbGas base,\\n    ///            per ArbGas congestion,\\n    ///            per ArbGas total\\n    ///        )\\n    function getPricesInWei()\\n    external\\n    view\\n    returns (\\n        uint256,\\n        uint256,\\n        uint256,\\n        uint256,\\n        uint256,\\n        uint256\\n    );\\n\\n    /// @notice Get prices in ArbGas for the supplied aggregator\\n    /// @return (per L2 tx, per L1 calldata byte, per storage allocation)\\n    function getPricesInArbGasWithAggregator(address aggregator)\\n    external\\n    view\\n    returns (\\n        uint256,\\n        uint256,\\n        uint256\\n    );\\n\\n    /// @notice Get prices in ArbGas. Assumes the callers preferred validator, or the default if caller doesn't have a preferred one.\\n    /// @return (per L2 tx, per L1 calldata byte, per storage allocation)\\n    function getPricesInArbGas()\\n    external\\n    view\\n    returns (\\n        uint256,\\n        uint256,\\n        uint256\\n    );\\n\\n    /// @notice Get the gas accounting parameters. `gasPoolMax` is always zero, as the exponential pricing model has no such notion.\\n    /// @return (speedLimitPerSecond, gasPoolMax, maxTxGasLimit)\\n    function getGasAccountingParams()\\n    external\\n    view\\n    returns (\\n        uint256,\\n        uint256,\\n        uint256\\n    );\\n\\n    /// @notice Get the minimum gas price needed for a tx to succeed\\n    function getMinimumGasPrice() external view returns (uint256);\\n\\n    /// @notice Get ArbOS's estimate of the L1 basefee in wei\\n    function getL1BaseFeeEstimate() external view returns (uint256);\\n\\n    /// @notice Get how slowly ArbOS updates its estimate of the L1 basefee\\n    function getL1BaseFeeEstimateInertia() external view returns (uint64);\\n\\n    /// @notice Get the L1 pricer reward rate, in wei per unit\\n    /// Available in ArbOS version 11\\n    function getL1RewardRate() external view returns (uint64);\\n\\n    /// @notice Get the L1 pricer reward recipient\\n    /// Available in ArbOS version 11\\n    function getL1RewardRecipient() external view returns (address);\\n\\n    /// @notice Deprecated -- Same as getL1BaseFeeEstimate()\\n    function getL1GasPriceEstimate() external view returns (uint256);\\n\\n    /// @notice Get L1 gas fees paid by the current transaction\\n    function getCurrentTxL1GasFees() external view returns (uint256);\\n\\n    /// @notice Get the backlogged amount of gas burnt in excess of the speed limit\\n    function getGasBacklog() external view returns (uint64);\\n\\n    /// @notice Get how slowly ArbOS updates the L2 basefee in response to backlogged gas\\n    function getPricingInertia() external view returns (uint64);\\n\\n    /// @notice Get the forgivable amount of backlogged gas ArbOS will ignore when raising the basefee\\n    function getGasBacklogTolerance() external view returns (uint64);\\n\\n    /// @notice Returns the surplus of funds for L1 batch posting payments (may be negative).\\n    function getL1PricingSurplus() external view returns (int256);\\n\\n    /// @notice Returns the base charge (in L1 gas) attributed to each data batch in the calldata pricer\\n    function getPerBatchGasCharge() external view returns (int64);\\n\\n    /// @notice Returns the cost amortization cap in basis points\\n    function getAmortizedCostCapBips() external view returns (uint64);\\n\\n    /// @notice Returns the available funds from L1 fees\\n    function getL1FeesAvailable() external view returns (uint256);\\n\\n    /// @notice Returns the equilibration units parameter for L1 price adjustment algorithm\\n    /// Available in ArbOS version 20\\n    function getL1PricingEquilibrationUnits() external view returns (uint256);\\n\\n    /// @notice Returns the last time the L1 calldata pricer was updated.\\n    /// Available in ArbOS version 20\\n    function getLastL1PricingUpdateTime() external view returns (uint64);\\n\\n    /// @notice Returns the amount of L1 calldata payments due for rewards (per the L1 reward rate)\\n    /// Available in ArbOS version 20\\n    function getL1PricingFundsDueForRewards() external view returns (uint256);\\n\\n    /// @notice Returns the amount of L1 calldata posted since the last update.\\n    /// Available in ArbOS version 20\\n    function getL1PricingUnitsSinceUpdate() external view returns (uint64);\\n\\n    /// @notice Returns the L1 pricing surplus as of the last update (may be negative).\\n    /// Available in ArbOS version 20\\n    function getLastL1PricingSurplus() external view returns (int256);\\n}\",\"keccak256\":\"0x7c51d93494afd02b5336e88d8738341758340f2befe698b4458a916905691bd6\",\"license\":\"BUSL-1.1\"},\"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbSys.sol\":{\"content\":\"// Copyright 2021-2022, Offchain Labs, Inc.\\n// For license information, see https://github.com/nitro/blob/master/LICENSE\\n// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.4.21 <0.9.0;\\n\\n/**\\n * @title System level functionality\\n * @notice For use by contracts to interact with core L2-specific functionality.\\n * Precompiled contract that exists in every Arbitrum chain at address(100), 0x0000000000000000000000000000000000000064.\\n */\\ninterface ArbSys {\\n    /**\\n     * @notice Get Arbitrum block number (distinct from L1 block number; Arbitrum genesis block has block number 0)\\n     * @return block number as int\\n     */\\n    function arbBlockNumber() external view returns (uint256);\\n\\n    /**\\n     * @notice Get Arbitrum block hash (reverts unless currentBlockNum-256 <= arbBlockNum < currentBlockNum)\\n     * @return block hash\\n     */\\n    function arbBlockHash(uint256 arbBlockNum) external view returns (bytes32);\\n\\n    /**\\n     * @notice Gets the rollup's unique chain identifier\\n     * @return Chain identifier as int\\n     */\\n    function arbChainID() external view returns (uint256);\\n\\n    /**\\n     * @notice Get internal version number identifying an ArbOS build\\n     * @return version number as int\\n     */\\n    function arbOSVersion() external view returns (uint256);\\n\\n    /**\\n     * @notice Returns 0 since Nitro has no concept of storage gas\\n     * @return uint 0\\n     */\\n    function getStorageGasAvailable() external view returns (uint256);\\n\\n    /**\\n     * @notice (deprecated) check if current call is top level (meaning it was triggered by an EoA or a L1 contract)\\n     * @dev this call has been deprecated and may be removed in a future release\\n     * @return true if current execution frame is not a call by another L2 contract\\n     */\\n    function isTopLevelCall() external view returns (bool);\\n\\n    /**\\n     * @notice map L1 sender contract address to its L2 alias\\n     * @param sender sender address\\n     * @param unused argument no longer used\\n     * @return aliased sender address\\n     */\\n    function mapL1SenderContractAddressToL2Alias(address sender, address unused)\\n        external\\n        pure\\n        returns (address);\\n\\n    /**\\n     * @notice check if the caller (of this caller of this) is an aliased L1 contract address\\n     * @return true iff the caller's address is an alias for an L1 contract address\\n     */\\n    function wasMyCallersAddressAliased() external view returns (bool);\\n\\n    /**\\n     * @notice return the address of the caller (of this caller of this), without applying L1 contract address aliasing\\n     * @return address of the caller's caller, without applying L1 contract address aliasing\\n     */\\n    function myCallersAddressWithoutAliasing() external view returns (address);\\n\\n    /**\\n     * @notice Send given amount of Eth to dest from sender.\\n     * This is a convenience function, which is equivalent to calling sendTxToL1 with empty data.\\n     * @param destination recipient address on L1\\n     * @return unique identifier for this L2-to-L1 transaction.\\n     */\\n    function withdrawEth(address destination)\\n        external\\n        payable\\n        returns (uint256);\\n\\n    /**\\n     * @notice Send a transaction to L1\\n     * @dev it is not possible to execute on the L1 any L2-to-L1 transaction which contains data\\n     * to a contract address without any code (as enforced by the Bridge contract).\\n     * @param destination recipient address on L1\\n     * @param data (optional) calldata for L1 contract call\\n     * @return a unique identifier for this L2-to-L1 transaction.\\n     */\\n    function sendTxToL1(address destination, bytes calldata data)\\n        external\\n        payable\\n        returns (uint256);\\n\\n    /**\\n     * @notice Get send Merkle tree state\\n     * @return size number of sends in the history\\n     * @return root root hash of the send history\\n     * @return partials hashes of partial subtrees in the send history tree\\n     */\\n    function sendMerkleTreeState()\\n        external\\n        view\\n        returns (\\n            uint256 size,\\n            bytes32 root,\\n            bytes32[] memory partials\\n        );\\n\\n    /**\\n     * @notice creates a send txn from L2 to L1\\n     * @param position = (level << 192) + leaf = (0 << 192) + leaf = leaf\\n     */\\n    event L2ToL1Tx(\\n        address caller,\\n        address indexed destination,\\n        uint256 indexed hash,\\n        uint256 indexed position,\\n        uint256 arbBlockNum,\\n        uint256 ethBlockNum,\\n        uint256 timestamp,\\n        uint256 callvalue,\\n        bytes data\\n    );\\n\\n    /// @dev DEPRECATED in favour of the new L2ToL1Tx event above after the nitro upgrade\\n    event L2ToL1Transaction(\\n        address caller,\\n        address indexed destination,\\n        uint256 indexed uniqueId,\\n        uint256 indexed batchNumber,\\n        uint256 indexInBatch,\\n        uint256 arbBlockNum,\\n        uint256 ethBlockNum,\\n        uint256 timestamp,\\n        uint256 callvalue,\\n        bytes data\\n    );\\n\\n    /**\\n     * @notice logs a merkle branch for proof synthesis\\n     * @param reserved an index meant only to align the 4th index with L2ToL1Transaction's 4th event\\n     * @param hash the merkle hash\\n     * @param position = (level << 192) + leaf\\n     */\\n    event SendMerkleUpdate(\\n        uint256 indexed reserved,\\n        bytes32 indexed hash,\\n        uint256 indexed position\\n    );\\n}\\n\",\"keccak256\":\"0xa8461b373712cb0f4950ef9cad1d12fb38442da76cd57ff916baa7920f7b5077\",\"license\":\"BUSL-1.1\"},\"@chainlink/contracts/src/v0.8/vendor/@eth-optimism/contracts/v0.8.6/contracts/L2/predeploys/OVM_GasPriceOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\n/* External Imports */\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/**\\n * @title OVM_GasPriceOracle\\n * @dev This contract exposes the current l2 gas price, a measure of how congested the network\\n * currently is. This measure is used by the Sequencer to determine what fee to charge for\\n * transactions. When the system is more congested, the l2 gas price will increase and fees\\n * will also increase as a result.\\n *\\n * All public variables are set while generating the initial L2 state. The\\n * constructor doesn't run in practice as the L2 state generation script uses\\n * the deployed bytecode instead of running the initcode.\\n */\\ncontract OVM_GasPriceOracle is Ownable {\\n    /*************\\n     * Variables *\\n     *************/\\n\\n    // Current L2 gas price\\n    uint256 public gasPrice;\\n    // Current L1 base fee\\n    uint256 public l1BaseFee;\\n    // Amortized cost of batch submission per transaction\\n    uint256 public overhead;\\n    // Value to scale the fee up by\\n    uint256 public scalar;\\n    // Number of decimals of the scalar\\n    uint256 public decimals;\\n\\n    /***************\\n     * Constructor *\\n     ***************/\\n\\n    /**\\n     * @param _owner Address that will initially own this contract.\\n     */\\n    constructor(address _owner) Ownable() {\\n        transferOwnership(_owner);\\n    }\\n\\n    /**********\\n     * Events *\\n     **********/\\n\\n    event GasPriceUpdated(uint256);\\n    event L1BaseFeeUpdated(uint256);\\n    event OverheadUpdated(uint256);\\n    event ScalarUpdated(uint256);\\n    event DecimalsUpdated(uint256);\\n\\n    /********************\\n     * Public Functions *\\n     ********************/\\n\\n    /**\\n     * Allows the owner to modify the l2 gas price.\\n     * @param _gasPrice New l2 gas price.\\n     */\\n    // slither-disable-next-line external-function\\n    function setGasPrice(uint256 _gasPrice) public onlyOwner {\\n        gasPrice = _gasPrice;\\n        emit GasPriceUpdated(_gasPrice);\\n    }\\n\\n    /**\\n     * Allows the owner to modify the l1 base fee.\\n     * @param _baseFee New l1 base fee\\n     */\\n    // slither-disable-next-line external-function\\n    function setL1BaseFee(uint256 _baseFee) public onlyOwner {\\n        l1BaseFee = _baseFee;\\n        emit L1BaseFeeUpdated(_baseFee);\\n    }\\n\\n    /**\\n     * Allows the owner to modify the overhead.\\n     * @param _overhead New overhead\\n     */\\n    // slither-disable-next-line external-function\\n    function setOverhead(uint256 _overhead) public onlyOwner {\\n        overhead = _overhead;\\n        emit OverheadUpdated(_overhead);\\n    }\\n\\n    /**\\n     * Allows the owner to modify the scalar.\\n     * @param _scalar New scalar\\n     */\\n    // slither-disable-next-line external-function\\n    function setScalar(uint256 _scalar) public onlyOwner {\\n        scalar = _scalar;\\n        emit ScalarUpdated(_scalar);\\n    }\\n\\n    /**\\n     * Allows the owner to modify the decimals.\\n     * @param _decimals New decimals\\n     */\\n    // slither-disable-next-line external-function\\n    function setDecimals(uint256 _decimals) public onlyOwner {\\n        decimals = _decimals;\\n        emit DecimalsUpdated(_decimals);\\n    }\\n\\n    /**\\n     * Computes the L1 portion of the fee\\n     * based on the size of the RLP encoded tx\\n     * and the current l1BaseFee\\n     * @param _data Unsigned RLP encoded tx, 6 elements\\n     * @return L1 fee that should be paid for the tx\\n     */\\n    // slither-disable-next-line external-function\\n    function getL1Fee(bytes memory _data) public view returns (uint256) {\\n        uint256 l1GasUsed = getL1GasUsed(_data);\\n        uint256 l1Fee = l1GasUsed * l1BaseFee;\\n        uint256 divisor = 10**decimals;\\n        uint256 unscaled = l1Fee * scalar;\\n        uint256 scaled = unscaled / divisor;\\n        return scaled;\\n    }\\n\\n    // solhint-disable max-line-length\\n    /**\\n     * Computes the amount of L1 gas used for a transaction\\n     * The overhead represents the per batch gas overhead of\\n     * posting both transaction and state roots to L1 given larger\\n     * batch sizes.\\n     * 4 gas for 0 byte\\n     * https://github.com/ethereum/go-ethereum/blob/9ada4a2e2c415e6b0b51c50e901336872e028872/params/protocol_params.go#L33\\n     * 16 gas for non zero byte\\n     * https://github.com/ethereum/go-ethereum/blob/9ada4a2e2c415e6b0b51c50e901336872e028872/params/protocol_params.go#L87\\n     * This will need to be updated if calldata gas prices change\\n     * Account for the transaction being unsigned\\n     * Padding is added to account for lack of signature on transaction\\n     * 1 byte for RLP V prefix\\n     * 1 byte for V\\n     * 1 byte for RLP R prefix\\n     * 32 bytes for R\\n     * 1 byte for RLP S prefix\\n     * 32 bytes for S\\n     * Total: 68 bytes of padding\\n     * @param _data Unsigned RLP encoded tx, 6 elements\\n     * @return Amount of L1 gas used for a transaction\\n     */\\n    // solhint-enable max-line-length\\n    function getL1GasUsed(bytes memory _data) public view returns (uint256) {\\n        uint256 total = 0;\\n        for (uint256 i = 0; i < _data.length; i++) {\\n            if (_data[i] == 0) {\\n                total += 4;\\n            } else {\\n                total += 16;\\n            }\\n        }\\n        uint256 unsigned = total + overhead;\\n        return unsigned + (68 * 16);\\n    }\\n}\\n\",\"keccak256\":\"0x9c8c09504619b7da966921c82e9376f46ea7579ad9a764d674666f3e923fdd25\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/VRF.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/** ****************************************************************************\\n  * @notice Verification of verifiable-random-function (VRF) proofs, following\\n  * @notice https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3\\n  * @notice See https://eprint.iacr.org/2017/099.pdf for security proofs.\\n\\n  * @dev Bibliographic references:\\n\\n  * @dev Goldberg, et al., \\\"Verifiable Random Functions (VRFs)\\\", Internet Draft\\n  * @dev draft-irtf-cfrg-vrf-05, IETF, Aug 11 2019,\\n  * @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05\\n\\n  * @dev Papadopoulos, et al., \\\"Making NSEC5 Practical for DNSSEC\\\", Cryptology\\n  * @dev ePrint Archive, Report 2017/099, https://eprint.iacr.org/2017/099.pdf\\n  * ****************************************************************************\\n  * @dev USAGE\\n\\n  * @dev The main entry point is _randomValueFromVRFProof. See its docstring.\\n  * ****************************************************************************\\n  * @dev PURPOSE\\n\\n  * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n  * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n  * @dev making his output up to suit himself. Reggie provides Vera a public key\\n  * @dev to which he knows the secret key. Each time Vera provides a seed to\\n  * @dev Reggie, he gives back a value which is computed completely\\n  * @dev deterministically from the seed and the secret key.\\n\\n  * @dev Reggie provides a proof by which Vera can verify that the output was\\n  * @dev correctly computed once Reggie tells it to her, but without that proof,\\n  * @dev the output is computationally indistinguishable to her from a uniform\\n  * @dev random sample from the output space.\\n\\n  * @dev The purpose of this contract is to perform that verification.\\n  * ****************************************************************************\\n  * @dev DESIGN NOTES\\n\\n  * @dev The VRF algorithm verified here satisfies the full uniqueness, full\\n  * @dev collision resistance, and full pseudo-randomness security properties.\\n  * @dev See \\\"SECURITY PROPERTIES\\\" below, and\\n  * @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-3\\n\\n  * @dev An elliptic curve point is generally represented in the solidity code\\n  * @dev as a uint256[2], corresponding to its affine coordinates in\\n  * @dev GF(FIELD_SIZE).\\n\\n  * @dev For the sake of efficiency, this implementation deviates from the spec\\n  * @dev in some minor ways:\\n\\n  * @dev - Keccak hash rather than the SHA256 hash recommended in\\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5\\n  * @dev   Keccak costs much less gas on the EVM, and provides similar security.\\n\\n  * @dev - Secp256k1 curve instead of the P-256 or ED25519 curves recommended in\\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5\\n  * @dev   For curve-point multiplication, it's much cheaper to abuse ECRECOVER\\n\\n  * @dev - _hashToCurve recursively hashes until it finds a curve x-ordinate. On\\n  * @dev   the EVM, this is slightly more efficient than the recommendation in\\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.1.1\\n  * @dev   step 5, to concatenate with a nonce then hash, and rehash with the\\n  * @dev   nonce updated until a valid x-ordinate is found.\\n\\n  * @dev - _hashToCurve does not include a cipher version string or the byte 0x1\\n  * @dev   in the hash message, as recommended in step 5.B of the draft\\n  * @dev   standard. They are unnecessary here because no variation in the\\n  * @dev   cipher suite is allowed.\\n\\n  * @dev - Similarly, the hash input in _scalarFromCurvePoints does not include a\\n  * @dev   commitment to the cipher suite, either, which differs from step 2 of\\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.3\\n  * @dev   . Also, the hash input is the concatenation of the uncompressed\\n  * @dev   points, not the compressed points as recommended in step 3.\\n\\n  * @dev - In the calculation of the challenge value \\\"c\\\", the \\\"u\\\" value (i.e.\\n  * @dev   the value computed by Reggie as the nonce times the secp256k1\\n  * @dev   generator point, see steps 5 and 7 of\\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3\\n  * @dev   ) is replaced by its ethereum address, i.e. the lower 160 bits of the\\n  * @dev   keccak hash of the original u. This is because we only verify the\\n  * @dev   calculation of u up to its address, by abusing ECRECOVER.\\n  * ****************************************************************************\\n  * @dev   SECURITY PROPERTIES\\n\\n  * @dev Here are the security properties for this VRF:\\n\\n  * @dev Full uniqueness: For any seed and valid VRF public key, there is\\n  * @dev   exactly one VRF output which can be proved to come from that seed, in\\n  * @dev   the sense that the proof will pass _verifyVRFProof.\\n\\n  * @dev Full collision resistance: It's cryptographically infeasible to find\\n  * @dev   two seeds with same VRF output from a fixed, valid VRF key\\n\\n  * @dev Full pseudorandomness: Absent the proofs that the VRF outputs are\\n  * @dev   derived from a given seed, the outputs are computationally\\n  * @dev   indistinguishable from randomness.\\n\\n  * @dev https://eprint.iacr.org/2017/099.pdf, Appendix B contains the proofs\\n  * @dev for these properties.\\n\\n  * @dev For secp256k1, the key validation described in section\\n  * @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.6\\n  * @dev is unnecessary, because secp256k1 has cofactor 1, and the\\n  * @dev representation of the public key used here (affine x- and y-ordinates\\n  * @dev of the secp256k1 point on the standard y^2=x^3+7 curve) cannot refer to\\n  * @dev the point at infinity.\\n  * ****************************************************************************\\n  * @dev OTHER SECURITY CONSIDERATIONS\\n  *\\n  * @dev The seed input to the VRF could in principle force an arbitrary amount\\n  * @dev of work in _hashToCurve, by requiring extra rounds of hashing and\\n  * @dev checking whether that's yielded the x ordinate of a secp256k1 point.\\n  * @dev However, under the Random Oracle Model the probability of choosing a\\n  * @dev point which forces n extra rounds in _hashToCurve is 2\\u207b\\u207f. The base cost\\n  * @dev for calling _hashToCurve is about 25,000 gas, and each round of checking\\n  * @dev for a valid x ordinate costs about 15,555 gas, so to find a seed for\\n  * @dev which _hashToCurve would cost more than 2,017,000 gas, one would have to\\n  * @dev try, in expectation, about 2\\u00b9\\u00b2\\u2078 seeds, which is infeasible for any\\n  * @dev foreseeable computational resources. (25,000 + 128 * 15,555 < 2,017,000.)\\n\\n  * @dev Since the gas block limit for the Ethereum main net is 10,000,000 gas,\\n  * @dev this means it is infeasible for an adversary to prevent correct\\n  * @dev operation of this contract by choosing an adverse seed.\\n\\n  * @dev (See TestMeasureHashToCurveGasCost for verification of the gas cost for\\n  * @dev _hashToCurve.)\\n\\n  * @dev It may be possible to make a secure constant-time _hashToCurve function.\\n  * @dev See notes in _hashToCurve docstring.\\n*/\\ncontract VRF {\\n  // See https://www.secg.org/sec2-v2.pdf, section 2.4.1, for these constants.\\n  // Number of points in Secp256k1\\n  uint256 private constant GROUP_ORDER = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141;\\n  // Prime characteristic of the galois field over which Secp256k1 is defined\\n  uint256 private constant FIELD_SIZE =\\n    // solium-disable-next-line indentation\\n    0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F;\\n  uint256 private constant WORD_LENGTH_BYTES = 0x20;\\n\\n  // (base^exponent) % FIELD_SIZE\\n  // Cribbed from https://medium.com/@rbkhmrcr/precompiles-solidity-e5d29bd428c4\\n  function _bigModExp(uint256 base, uint256 exponent) internal view returns (uint256 exponentiation) {\\n    uint256 callResult;\\n    uint256[6] memory bigModExpContractInputs;\\n    bigModExpContractInputs[0] = WORD_LENGTH_BYTES; // Length of base\\n    bigModExpContractInputs[1] = WORD_LENGTH_BYTES; // Length of exponent\\n    bigModExpContractInputs[2] = WORD_LENGTH_BYTES; // Length of modulus\\n    bigModExpContractInputs[3] = base;\\n    bigModExpContractInputs[4] = exponent;\\n    bigModExpContractInputs[5] = FIELD_SIZE;\\n    uint256[1] memory output;\\n    assembly {\\n      callResult := staticcall(\\n        not(0), // Gas cost: no limit\\n        0x05, // Bigmodexp contract address\\n        bigModExpContractInputs,\\n        0xc0, // Length of input segment: 6*0x20-bytes\\n        output,\\n        0x20 // Length of output segment\\n      )\\n    }\\n    if (callResult == 0) {\\n      // solhint-disable-next-line custom-errors\\n      revert(\\\"bigModExp failure!\\\");\\n    }\\n    return output[0];\\n  }\\n\\n  // Let q=FIELD_SIZE. q % 4 = 3, \\u2234 x\\u2261r^2 mod q \\u21d2 x^SQRT_POWER\\u2261\\u00b1r mod q.  See\\n  // https://en.wikipedia.org/wiki/Modular_square_root#Prime_or_prime_power_modulus\\n  uint256 private constant SQRT_POWER = (FIELD_SIZE + 1) >> 2;\\n\\n  // Computes a s.t. a^2 = x in the field. Assumes a exists\\n  function _squareRoot(uint256 x) internal view returns (uint256) {\\n    return _bigModExp(x, SQRT_POWER);\\n  }\\n\\n  // The value of y^2 given that (x,y) is on secp256k1.\\n  function _ySquared(uint256 x) internal pure returns (uint256) {\\n    // Curve is y^2=x^3+7. See section 2.4.1 of https://www.secg.org/sec2-v2.pdf\\n    uint256 xCubed = mulmod(x, mulmod(x, x, FIELD_SIZE), FIELD_SIZE);\\n    return addmod(xCubed, 7, FIELD_SIZE);\\n  }\\n\\n  // True iff p is on secp256k1\\n  function _isOnCurve(uint256[2] memory p) internal pure returns (bool) {\\n    // Section 2.3.6. in https://www.secg.org/sec1-v2.pdf\\n    // requires each ordinate to be in [0, ..., FIELD_SIZE-1]\\n    // solhint-disable-next-line custom-errors\\n    require(p[0] < FIELD_SIZE, \\\"invalid x-ordinate\\\");\\n    // solhint-disable-next-line custom-errors\\n    require(p[1] < FIELD_SIZE, \\\"invalid y-ordinate\\\");\\n    return _ySquared(p[0]) == mulmod(p[1], p[1], FIELD_SIZE);\\n  }\\n\\n  // Hash x uniformly into {0, ..., FIELD_SIZE-1}.\\n  function _fieldHash(bytes memory b) internal pure returns (uint256 x_) {\\n    x_ = uint256(keccak256(b));\\n    // Rejecting if x >= FIELD_SIZE corresponds to step 2.1 in section 2.3.4 of\\n    // http://www.secg.org/sec1-v2.pdf , which is part of the definition of\\n    // string_to_point in the IETF draft\\n    while (x_ >= FIELD_SIZE) {\\n      x_ = uint256(keccak256(abi.encodePacked(x_)));\\n    }\\n    return x_;\\n  }\\n\\n  // Hash b to a random point which hopefully lies on secp256k1. The y ordinate\\n  // is always even, due to\\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.1.1\\n  // step 5.C, which references arbitrary_string_to_point, defined in\\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5 as\\n  // returning the point with given x ordinate, and even y ordinate.\\n  function _newCandidateSecp256k1Point(bytes memory b) internal view returns (uint256[2] memory p) {\\n    unchecked {\\n      p[0] = _fieldHash(b);\\n      p[1] = _squareRoot(_ySquared(p[0]));\\n      if (p[1] % 2 == 1) {\\n        // Note that 0 <= p[1] < FIELD_SIZE\\n        // so this cannot wrap, we use unchecked to save gas.\\n        p[1] = FIELD_SIZE - p[1];\\n      }\\n    }\\n    return p;\\n  }\\n\\n  // Domain-separation tag for initial hash in _hashToCurve. Corresponds to\\n  // vrf.go/hashToCurveHashPrefix\\n  uint256 internal constant HASH_TO_CURVE_HASH_PREFIX = 1;\\n\\n  // Cryptographic hash function onto the curve.\\n  //\\n  // Corresponds to algorithm in section 5.4.1.1 of the draft standard. (But see\\n  // DESIGN NOTES above for slight differences.)\\n  //\\n  // TODO(alx): Implement a bounded-computation hash-to-curve, as described in\\n  // \\\"Construction of Rational Points on Elliptic Curves over Finite Fields\\\"\\n  // http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.831.5299&rep=rep1&type=pdf\\n  // and suggested by\\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-01#section-5.2.2\\n  // (Though we can't used exactly that because secp256k1's j-invariant is 0.)\\n  //\\n  // This would greatly simplify the analysis in \\\"OTHER SECURITY CONSIDERATIONS\\\"\\n  // https://www.pivotaltracker.com/story/show/171120900\\n  function _hashToCurve(uint256[2] memory pk, uint256 input) internal view returns (uint256[2] memory rv) {\\n    rv = _newCandidateSecp256k1Point(abi.encodePacked(HASH_TO_CURVE_HASH_PREFIX, pk, input));\\n    while (!_isOnCurve(rv)) {\\n      rv = _newCandidateSecp256k1Point(abi.encodePacked(rv[0]));\\n    }\\n    return rv;\\n  }\\n\\n  /** *********************************************************************\\n   * @notice Check that product==scalar*multiplicand\\n   *\\n   * @dev Based on Vitalik Buterin's idea in ethresear.ch post cited below.\\n   *\\n   * @param multiplicand: secp256k1 point\\n   * @param scalar: non-zero GF(GROUP_ORDER) scalar\\n   * @param product: secp256k1 expected to be multiplier * multiplicand\\n   * @return verifies true iff product==scalar*multiplicand, with cryptographically high probability\\n   */\\n  function _ecmulVerify(\\n    uint256[2] memory multiplicand,\\n    uint256 scalar,\\n    uint256[2] memory product\\n  ) internal pure returns (bool verifies) {\\n    // solhint-disable-next-line custom-errors\\n    require(scalar != 0, \\\"zero scalar\\\"); // Rules out an ecrecover failure case\\n    uint256 x = multiplicand[0]; // x ordinate of multiplicand\\n    uint8 v = multiplicand[1] % 2 == 0 ? 27 : 28; // parity of y ordinate\\n    // https://ethresear.ch/t/you-can-kinda-abuse-ecrecover-to-do-ecmul-in-secp256k1-today/2384/9\\n    // Point corresponding to address ecrecover(0, v, x, s=scalar*x) is\\n    // (x\\u207b\\u00b9 mod GROUP_ORDER) * (scalar * x * multiplicand - 0 * g), i.e.\\n    // scalar*multiplicand. See https://crypto.stackexchange.com/a/18106\\n    bytes32 scalarTimesX = bytes32(mulmod(scalar, x, GROUP_ORDER));\\n    address actual = ecrecover(bytes32(0), v, bytes32(x), scalarTimesX);\\n    // Explicit conversion to address takes bottom 160 bits\\n    address expected = address(uint160(uint256(keccak256(abi.encodePacked(product)))));\\n    return (actual == expected);\\n  }\\n\\n  // Returns x1/z1-x2/z2=(x1z2-x2z1)/(z1z2) in projective coordinates on P\\u00b9(\\ud835\\udd3d\\u2099)\\n  function _projectiveSub(\\n    uint256 x1,\\n    uint256 z1,\\n    uint256 x2,\\n    uint256 z2\\n  ) internal pure returns (uint256 x3, uint256 z3) {\\n    unchecked {\\n      uint256 num1 = mulmod(z2, x1, FIELD_SIZE);\\n      // Note this cannot wrap since x2 is a point in [0, FIELD_SIZE-1]\\n      // we use unchecked to save gas.\\n      uint256 num2 = mulmod(FIELD_SIZE - x2, z1, FIELD_SIZE);\\n      (x3, z3) = (addmod(num1, num2, FIELD_SIZE), mulmod(z1, z2, FIELD_SIZE));\\n    }\\n    return (x3, z3);\\n  }\\n\\n  // Returns x1/z1*x2/z2=(x1x2)/(z1z2), in projective coordinates on P\\u00b9(\\ud835\\udd3d\\u2099)\\n  function _projectiveMul(\\n    uint256 x1,\\n    uint256 z1,\\n    uint256 x2,\\n    uint256 z2\\n  ) internal pure returns (uint256 x3, uint256 z3) {\\n    (x3, z3) = (mulmod(x1, x2, FIELD_SIZE), mulmod(z1, z2, FIELD_SIZE));\\n    return (x3, z3);\\n  }\\n\\n  /** **************************************************************************\\n        @notice Computes elliptic-curve sum, in projective co-ordinates\\n\\n        @dev Using projective coordinates avoids costly divisions\\n\\n        @dev To use this with p and q in affine coordinates, call\\n        @dev _projectiveECAdd(px, py, qx, qy). This will return\\n        @dev the addition of (px, py, 1) and (qx, qy, 1), in the\\n        @dev secp256k1 group.\\n\\n        @dev This can be used to calculate the z which is the inverse to zInv\\n        @dev in isValidVRFOutput. But consider using a faster\\n        @dev re-implementation such as ProjectiveECAdd in the golang vrf package.\\n\\n        @dev This function assumes [px,py,1],[qx,qy,1] are valid projective\\n             coordinates of secp256k1 points. That is safe in this contract,\\n             because this method is only used by _linearCombination, which checks\\n             points are on the curve via ecrecover.\\n        **************************************************************************\\n        @param px The first affine coordinate of the first summand\\n        @param py The second affine coordinate of the first summand\\n        @param qx The first affine coordinate of the second summand\\n        @param qy The second affine coordinate of the second summand\\n\\n        (px,py) and (qx,qy) must be distinct, valid secp256k1 points.\\n        **************************************************************************\\n        Return values are projective coordinates of [px,py,1]+[qx,qy,1] as points\\n        on secp256k1, in P\\u00b2(\\ud835\\udd3d\\u2099)\\n        @return sx\\n        @return sy\\n        @return sz\\n    */\\n  function _projectiveECAdd(\\n    uint256 px,\\n    uint256 py,\\n    uint256 qx,\\n    uint256 qy\\n  ) internal pure returns (uint256 sx, uint256 sy, uint256 sz) {\\n    unchecked {\\n      // See \\\"Group law for E/K : y^2 = x^3 + ax + b\\\", in section 3.1.2, p. 80,\\n      // \\\"Guide to Elliptic Curve Cryptography\\\" by Hankerson, Menezes and Vanstone\\n      // We take the equations there for (sx,sy), and homogenize them to\\n      // projective coordinates. That way, no inverses are required, here, and we\\n      // only need the one inverse in _affineECAdd.\\n\\n      // We only need the \\\"point addition\\\" equations from Hankerson et al. Can\\n      // skip the \\\"point doubling\\\" equations because p1 == p2 is cryptographically\\n      // impossible, and required not to be the case in _linearCombination.\\n\\n      // Add extra \\\"projective coordinate\\\" to the two points\\n      (uint256 z1, uint256 z2) = (1, 1);\\n\\n      // (lx, lz) = (qy-py)/(qx-px), i.e., gradient of secant line.\\n      // Cannot wrap since px and py are in [0, FIELD_SIZE-1]\\n      uint256 lx = addmod(qy, FIELD_SIZE - py, FIELD_SIZE);\\n      uint256 lz = addmod(qx, FIELD_SIZE - px, FIELD_SIZE);\\n\\n      uint256 dx; // Accumulates denominator from sx calculation\\n      // sx=((qy-py)/(qx-px))^2-px-qx\\n      (sx, dx) = _projectiveMul(lx, lz, lx, lz); // ((qy-py)/(qx-px))^2\\n      (sx, dx) = _projectiveSub(sx, dx, px, z1); // ((qy-py)/(qx-px))^2-px\\n      (sx, dx) = _projectiveSub(sx, dx, qx, z2); // ((qy-py)/(qx-px))^2-px-qx\\n\\n      uint256 dy; // Accumulates denominator from sy calculation\\n      // sy=((qy-py)/(qx-px))(px-sx)-py\\n      (sy, dy) = _projectiveSub(px, z1, sx, dx); // px-sx\\n      (sy, dy) = _projectiveMul(sy, dy, lx, lz); // ((qy-py)/(qx-px))(px-sx)\\n      (sy, dy) = _projectiveSub(sy, dy, py, z1); // ((qy-py)/(qx-px))(px-sx)-py\\n\\n      if (dx != dy) {\\n        // Cross-multiply to put everything over a common denominator\\n        sx = mulmod(sx, dy, FIELD_SIZE);\\n        sy = mulmod(sy, dx, FIELD_SIZE);\\n        sz = mulmod(dx, dy, FIELD_SIZE);\\n      } else {\\n        // Already over a common denominator, use that for z ordinate\\n        sz = dx;\\n      }\\n    }\\n    return (sx, sy, sz);\\n  }\\n\\n  // p1+p2, as affine points on secp256k1.\\n  //\\n  // invZ must be the inverse of the z returned by _projectiveECAdd(p1, p2).\\n  // It is computed off-chain to save gas.\\n  //\\n  // p1 and p2 must be distinct, because _projectiveECAdd doesn't handle\\n  // point doubling.\\n  function _affineECAdd(\\n    uint256[2] memory p1,\\n    uint256[2] memory p2,\\n    uint256 invZ\\n  ) internal pure returns (uint256[2] memory) {\\n    uint256 x;\\n    uint256 y;\\n    uint256 z;\\n    (x, y, z) = _projectiveECAdd(p1[0], p1[1], p2[0], p2[1]);\\n    // solhint-disable-next-line custom-errors\\n    require(mulmod(z, invZ, FIELD_SIZE) == 1, \\\"invZ must be inverse of z\\\");\\n    // Clear the z ordinate of the projective representation by dividing through\\n    // by it, to obtain the affine representation\\n    return [mulmod(x, invZ, FIELD_SIZE), mulmod(y, invZ, FIELD_SIZE)];\\n  }\\n\\n  // True iff address(c*p+s*g) == lcWitness, where g is generator. (With\\n  // cryptographically high probability.)\\n  function _verifyLinearCombinationWithGenerator(\\n    uint256 c,\\n    uint256[2] memory p,\\n    uint256 s,\\n    address lcWitness\\n  ) internal pure returns (bool) {\\n    // Rule out ecrecover failure modes which return address 0.\\n    unchecked {\\n      // solhint-disable-next-line custom-errors\\n      require(lcWitness != address(0), \\\"bad witness\\\");\\n      uint8 v = (p[1] % 2 == 0) ? 27 : 28; // parity of y-ordinate of p\\n      // Note this cannot wrap (X - Y % X), but we use unchecked to save\\n      // gas.\\n      bytes32 pseudoHash = bytes32(GROUP_ORDER - mulmod(p[0], s, GROUP_ORDER)); // -s*p[0]\\n      bytes32 pseudoSignature = bytes32(mulmod(c, p[0], GROUP_ORDER)); // c*p[0]\\n      // https://ethresear.ch/t/you-can-kinda-abuse-ecrecover-to-do-ecmul-in-secp256k1-today/2384/9\\n      // The point corresponding to the address returned by\\n      // ecrecover(-s*p[0],v,p[0],c*p[0]) is\\n      // (p[0]\\u207b\\u00b9 mod GROUP_ORDER)*(c*p[0]-(-s)*p[0]*g)=c*p+s*g.\\n      // See https://crypto.stackexchange.com/a/18106\\n      // https://bitcoin.stackexchange.com/questions/38351/ecdsa-v-r-s-what-is-v\\n      address computed = ecrecover(pseudoHash, v, bytes32(p[0]), pseudoSignature);\\n      return computed == lcWitness;\\n    }\\n  }\\n\\n  // c*p1 + s*p2. Requires cp1Witness=c*p1 and sp2Witness=s*p2. Also\\n  // requires cp1Witness != sp2Witness (which is fine for this application,\\n  // since it is cryptographically impossible for them to be equal. In the\\n  // (cryptographically impossible) case that a prover accidentally derives\\n  // a proof with equal c*p1 and s*p2, they should retry with a different\\n  // proof nonce.) Assumes that all points are on secp256k1\\n  // (which is checked in _verifyVRFProof below.)\\n  function _linearCombination(\\n    uint256 c,\\n    uint256[2] memory p1,\\n    uint256[2] memory cp1Witness,\\n    uint256 s,\\n    uint256[2] memory p2,\\n    uint256[2] memory sp2Witness,\\n    uint256 zInv\\n  ) internal pure returns (uint256[2] memory) {\\n    unchecked {\\n      // Note we are relying on the wrap around here\\n      // solhint-disable-next-line custom-errors\\n      require((cp1Witness[0] % FIELD_SIZE) != (sp2Witness[0] % FIELD_SIZE), \\\"points in sum must be distinct\\\");\\n      // solhint-disable-next-line custom-errors\\n      require(_ecmulVerify(p1, c, cp1Witness), \\\"First mul check failed\\\");\\n      // solhint-disable-next-line custom-errors\\n      require(_ecmulVerify(p2, s, sp2Witness), \\\"Second mul check failed\\\");\\n      return _affineECAdd(cp1Witness, sp2Witness, zInv);\\n    }\\n  }\\n\\n  // Domain-separation tag for the hash taken in _scalarFromCurvePoints.\\n  // Corresponds to scalarFromCurveHashPrefix in vrf.go\\n  uint256 internal constant SCALAR_FROM_CURVE_POINTS_HASH_PREFIX = 2;\\n\\n  // Pseudo-random number from inputs. Matches vrf.go/_scalarFromCurvePoints, and\\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.3\\n  // The draft calls (in step 7, via the definition of string_to_int, in\\n  // https://datatracker.ietf.org/doc/html/rfc8017#section-4.2 ) for taking the\\n  // first hash without checking that it corresponds to a number less than the\\n  // group order, which will lead to a slight bias in the sample.\\n  //\\n  // TODO(alx): We could save a bit of gas by following the standard here and\\n  // using the compressed representation of the points, if we collated the y\\n  // parities into a single bytes32.\\n  // https://www.pivotaltracker.com/story/show/171120588\\n  function _scalarFromCurvePoints(\\n    uint256[2] memory hash,\\n    uint256[2] memory pk,\\n    uint256[2] memory gamma,\\n    address uWitness,\\n    uint256[2] memory v\\n  ) internal pure returns (uint256 s) {\\n    return uint256(keccak256(abi.encodePacked(SCALAR_FROM_CURVE_POINTS_HASH_PREFIX, hash, pk, gamma, v, uWitness)));\\n  }\\n\\n  // True if (gamma, c, s) is a correctly constructed randomness proof from pk\\n  // and seed. zInv must be the inverse of the third ordinate from\\n  // _projectiveECAdd applied to cGammaWitness and sHashWitness. Corresponds to\\n  // section 5.3 of the IETF draft.\\n  //\\n  // TODO(alx): Since I'm only using pk in the ecrecover call, I could only pass\\n  // the x ordinate, and the parity of the y ordinate in the top bit of uWitness\\n  // (which I could make a uint256 without using any extra space.) Would save\\n  // about 2000 gas. https://www.pivotaltracker.com/story/show/170828567\\n  function _verifyVRFProof(\\n    uint256[2] memory pk,\\n    uint256[2] memory gamma,\\n    uint256 c,\\n    uint256 s,\\n    uint256 seed,\\n    address uWitness,\\n    uint256[2] memory cGammaWitness,\\n    uint256[2] memory sHashWitness,\\n    uint256 zInv\\n  ) internal view {\\n    unchecked {\\n      // solhint-disable-next-line custom-errors\\n      require(_isOnCurve(pk), \\\"public key is not on curve\\\");\\n      // solhint-disable-next-line custom-errors\\n      require(_isOnCurve(gamma), \\\"gamma is not on curve\\\");\\n      // solhint-disable-next-line custom-errors\\n      require(_isOnCurve(cGammaWitness), \\\"cGammaWitness is not on curve\\\");\\n      // solhint-disable-next-line custom-errors\\n      require(_isOnCurve(sHashWitness), \\\"sHashWitness is not on curve\\\");\\n      // Step 5. of IETF draft section 5.3 (pk corresponds to 5.3's Y, and here\\n      // we use the address of u instead of u itself. Also, here we add the\\n      // terms instead of taking the difference, and in the proof construction in\\n      // vrf.GenerateProof, we correspondingly take the difference instead of\\n      // taking the sum as they do in step 7 of section 5.1.)\\n      // solhint-disable-next-line custom-errors\\n      require(_verifyLinearCombinationWithGenerator(c, pk, s, uWitness), \\\"addr(c*pk+s*g)!=_uWitness\\\");\\n      // Step 4. of IETF draft section 5.3 (pk corresponds to Y, seed to alpha_string)\\n      uint256[2] memory hash = _hashToCurve(pk, seed);\\n      // Step 6. of IETF draft section 5.3, but see note for step 5 about +/- terms\\n      uint256[2] memory v = _linearCombination(c, gamma, cGammaWitness, s, hash, sHashWitness, zInv);\\n      // Steps 7. and 8. of IETF draft section 5.3\\n      uint256 derivedC = _scalarFromCurvePoints(hash, pk, gamma, uWitness, v);\\n      // solhint-disable-next-line custom-errors\\n      require(c == derivedC, \\\"invalid proof\\\");\\n    }\\n  }\\n\\n  // Domain-separation tag for the hash used as the final VRF output.\\n  // Corresponds to vrfRandomOutputHashPrefix in vrf.go\\n  uint256 internal constant VRF_RANDOM_OUTPUT_HASH_PREFIX = 3;\\n\\n  struct Proof {\\n    uint256[2] pk;\\n    uint256[2] gamma;\\n    uint256 c;\\n    uint256 s;\\n    uint256 seed;\\n    address uWitness;\\n    uint256[2] cGammaWitness;\\n    uint256[2] sHashWitness;\\n    uint256 zInv;\\n  }\\n\\n  /* ***************************************************************************\\n     * @notice Returns proof's output, if proof is valid. Otherwise reverts\\n\\n     * @param proof vrf proof components\\n     * @param seed  seed used to generate the vrf output\\n     *\\n     * Throws if proof is invalid, otherwise:\\n     * @return output i.e., the random output implied by the proof\\n     * ***************************************************************************\\n     */\\n  function _randomValueFromVRFProof(Proof memory proof, uint256 seed) internal view returns (uint256 output) {\\n    _verifyVRFProof(\\n      proof.pk,\\n      proof.gamma,\\n      proof.c,\\n      proof.s,\\n      seed,\\n      proof.uWitness,\\n      proof.cGammaWitness,\\n      proof.sHashWitness,\\n      proof.zInv\\n    );\\n    output = uint256(keccak256(abi.encode(VRF_RANDOM_OUTPUT_HASH_PREFIX, proof.gamma)));\\n    return output;\\n  }\\n}\\n\",\"keccak256\":\"0xef481c806ec0cfbe6498690789590887df3324f8c62f26d1022b9ad74193ee7e\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  // solhint-disable-next-line chainlink-solidity/prefix-immutable-variables-with-i\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x5a502a5ce16796565815b295bb2d18a0d26d6f23621f733918c971047c6091d7\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport {LinkTokenInterface} from \\\"../shared/interfaces/LinkTokenInterface.sol\\\";\\nimport {BlockhashStoreInterface} from \\\"./interfaces/BlockhashStoreInterface.sol\\\";\\nimport {AggregatorV3Interface} from \\\"../shared/interfaces/AggregatorV3Interface.sol\\\";\\nimport {VRFCoordinatorV2Interface} from \\\"./interfaces/VRFCoordinatorV2Interface.sol\\\";\\nimport {TypeAndVersionInterface} from \\\"../interfaces/TypeAndVersionInterface.sol\\\";\\nimport {IERC677Receiver} from \\\"../shared/interfaces/IERC677Receiver.sol\\\";\\nimport {VRF} from \\\"./VRF.sol\\\";\\nimport {ConfirmedOwner} from \\\"../shared/access/ConfirmedOwner.sol\\\";\\nimport {VRFConsumerBaseV2} from \\\"./VRFConsumerBaseV2.sol\\\";\\nimport {ChainSpecificUtil} from \\\"../ChainSpecificUtil.sol\\\";\\n\\ncontract VRFCoordinatorV2 is VRF, ConfirmedOwner, TypeAndVersionInterface, VRFCoordinatorV2Interface, IERC677Receiver {\\n  // solhint-disable-next-line chainlink-solidity/prefix-immutable-variables-with-i\\n  LinkTokenInterface public immutable LINK;\\n  // solhint-disable-next-line chainlink-solidity/prefix-immutable-variables-with-i\\n  AggregatorV3Interface public immutable LINK_ETH_FEED;\\n  // solhint-disable-next-line chainlink-solidity/prefix-immutable-variables-with-i\\n  BlockhashStoreInterface public immutable BLOCKHASH_STORE;\\n\\n  // We need to maintain a list of consuming addresses.\\n  // This bound ensures we are able to loop over them as needed.\\n  // Should a user require more consumers, they can use multiple subscriptions.\\n  uint16 public constant MAX_CONSUMERS = 100;\\n  error TooManyConsumers();\\n  error InsufficientBalance();\\n  error InvalidConsumer(uint64 subId, address consumer);\\n  error InvalidSubscription();\\n  error OnlyCallableFromLink();\\n  error InvalidCalldata();\\n  error MustBeSubOwner(address owner);\\n  error PendingRequestExists();\\n  error MustBeRequestedOwner(address proposedOwner);\\n  error BalanceInvariantViolated(uint256 internalBalance, uint256 externalBalance); // Should never happen\\n  event FundsRecovered(address to, uint256 amount);\\n  // We use the subscription struct (1 word)\\n  // at fulfillment time.\\n  struct Subscription {\\n    // There are only 1e9*1e18 = 1e27 juels in existence, so the balance can fit in uint96 (2^96 ~ 7e28)\\n    uint96 balance; // Common link balance used for all consumer requests.\\n    uint64 reqCount; // For fee tiers\\n  }\\n  // We use the config for the mgmt APIs\\n  struct SubscriptionConfig {\\n    address owner; // Owner can fund/withdraw/cancel the sub.\\n    address requestedOwner; // For safely transferring sub ownership.\\n    // Maintains the list of keys in s_consumers.\\n    // We do this for 2 reasons:\\n    // 1. To be able to clean up all keys from s_consumers when canceling a subscription.\\n    // 2. To be able to return the list of all consumers in getSubscription.\\n    // Note that we need the s_consumers map to be able to directly check if a\\n    // consumer is valid without reading all the consumers from storage.\\n    address[] consumers;\\n  }\\n  // Note a nonce of 0 indicates an the consumer is not assigned to that subscription.\\n  mapping(address => mapping(uint64 => uint64)) /* consumer */ /* subId */ /* nonce */ private s_consumers;\\n  mapping(uint64 => SubscriptionConfig) /* subId */ /* subscriptionConfig */ private s_subscriptionConfigs;\\n  mapping(uint64 => Subscription) /* subId */ /* subscription */ private s_subscriptions;\\n  // We make the sub count public so that its possible to\\n  // get all the current subscriptions via getSubscription.\\n  uint64 private s_currentSubId;\\n  // s_totalBalance tracks the total link sent to/from\\n  // this contract through onTokenTransfer, cancelSubscription and oracleWithdraw.\\n  // A discrepancy with this contract's link balance indicates someone\\n  // sent tokens using transfer and so we may need to use recoverFunds.\\n  uint96 private s_totalBalance;\\n  event SubscriptionCreated(uint64 indexed subId, address owner);\\n  event SubscriptionFunded(uint64 indexed subId, uint256 oldBalance, uint256 newBalance);\\n  event SubscriptionConsumerAdded(uint64 indexed subId, address consumer);\\n  event SubscriptionConsumerRemoved(uint64 indexed subId, address consumer);\\n  event SubscriptionCanceled(uint64 indexed subId, address to, uint256 amount);\\n  event SubscriptionOwnerTransferRequested(uint64 indexed subId, address from, address to);\\n  event SubscriptionOwnerTransferred(uint64 indexed subId, address from, address to);\\n\\n  // Set this maximum to 200 to give us a 56 block window to fulfill\\n  // the request before requiring the block hash feeder.\\n  uint16 public constant MAX_REQUEST_CONFIRMATIONS = 200;\\n  uint32 public constant MAX_NUM_WORDS = 500;\\n  // 5k is plenty for an EXTCODESIZE call (2600) + warm CALL (100)\\n  // and some arithmetic operations.\\n  uint256 private constant GAS_FOR_CALL_EXACT_CHECK = 5_000;\\n  error InvalidRequestConfirmations(uint16 have, uint16 min, uint16 max);\\n  error GasLimitTooBig(uint32 have, uint32 want);\\n  error NumWordsTooBig(uint32 have, uint32 want);\\n  error ProvingKeyAlreadyRegistered(bytes32 keyHash);\\n  error NoSuchProvingKey(bytes32 keyHash);\\n  error InvalidLinkWeiPrice(int256 linkWei);\\n  error InsufficientGasForConsumer(uint256 have, uint256 want);\\n  error NoCorrespondingRequest();\\n  error IncorrectCommitment();\\n  error BlockhashNotInStore(uint256 blockNum);\\n  error PaymentTooLarge();\\n  error Reentrant();\\n  struct RequestCommitment {\\n    uint64 blockNum;\\n    uint64 subId;\\n    uint32 callbackGasLimit;\\n    uint32 numWords;\\n    address sender;\\n  }\\n  mapping(bytes32 => address) /* keyHash */ /* oracle */ private s_provingKeys;\\n  bytes32[] private s_provingKeyHashes;\\n  mapping(address => uint96) /* oracle */ /* LINK balance */ private s_withdrawableTokens;\\n  mapping(uint256 => bytes32) /* requestID */ /* commitment */ private s_requestCommitments;\\n  event ProvingKeyRegistered(bytes32 keyHash, address indexed oracle);\\n  event ProvingKeyDeregistered(bytes32 keyHash, address indexed oracle);\\n  event RandomWordsRequested(\\n    bytes32 indexed keyHash,\\n    uint256 requestId,\\n    uint256 preSeed,\\n    uint64 indexed subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords,\\n    address indexed sender\\n  );\\n  event RandomWordsFulfilled(uint256 indexed requestId, uint256 outputSeed, uint96 payment, bool success);\\n\\n  struct Config {\\n    uint16 minimumRequestConfirmations;\\n    uint32 maxGasLimit;\\n    // Reentrancy protection.\\n    bool reentrancyLock;\\n    // stalenessSeconds is how long before we consider the feed price to be stale\\n    // and fallback to fallbackWeiPerUnitLink.\\n    uint32 stalenessSeconds;\\n    // Gas to cover oracle payment after we calculate the payment.\\n    // We make it configurable in case those operations are repriced.\\n    uint32 gasAfterPaymentCalculation;\\n  }\\n  int256 private s_fallbackWeiPerUnitLink;\\n  Config private s_config;\\n  FeeConfig private s_feeConfig;\\n  struct FeeConfig {\\n    // Flat fee charged per fulfillment in millionths of link\\n    // So fee range is [0, 2^32/10^6].\\n    uint32 fulfillmentFlatFeeLinkPPMTier1;\\n    uint32 fulfillmentFlatFeeLinkPPMTier2;\\n    uint32 fulfillmentFlatFeeLinkPPMTier3;\\n    uint32 fulfillmentFlatFeeLinkPPMTier4;\\n    uint32 fulfillmentFlatFeeLinkPPMTier5;\\n    uint24 reqsForTier2;\\n    uint24 reqsForTier3;\\n    uint24 reqsForTier4;\\n    uint24 reqsForTier5;\\n  }\\n  event ConfigSet(\\n    uint16 minimumRequestConfirmations,\\n    uint32 maxGasLimit,\\n    uint32 stalenessSeconds,\\n    uint32 gasAfterPaymentCalculation,\\n    int256 fallbackWeiPerUnitLink,\\n    FeeConfig feeConfig\\n  );\\n\\n  constructor(address link, address blockhashStore, address linkEthFeed) ConfirmedOwner(msg.sender) {\\n    LINK = LinkTokenInterface(link);\\n    LINK_ETH_FEED = AggregatorV3Interface(linkEthFeed);\\n    BLOCKHASH_STORE = BlockhashStoreInterface(blockhashStore);\\n  }\\n\\n  /**\\n   * @notice Registers a proving key to an oracle.\\n   * @param oracle address of the oracle\\n   * @param publicProvingKey key that oracle can use to submit vrf fulfillments\\n   */\\n  function registerProvingKey(address oracle, uint256[2] calldata publicProvingKey) external onlyOwner {\\n    bytes32 kh = hashOfKey(publicProvingKey);\\n    if (s_provingKeys[kh] != address(0)) {\\n      revert ProvingKeyAlreadyRegistered(kh);\\n    }\\n    s_provingKeys[kh] = oracle;\\n    s_provingKeyHashes.push(kh);\\n    emit ProvingKeyRegistered(kh, oracle);\\n  }\\n\\n  /**\\n   * @notice Deregisters a proving key to an oracle.\\n   * @param publicProvingKey key that oracle can use to submit vrf fulfillments\\n   */\\n  function deregisterProvingKey(uint256[2] calldata publicProvingKey) external onlyOwner {\\n    bytes32 kh = hashOfKey(publicProvingKey);\\n    address oracle = s_provingKeys[kh];\\n    if (oracle == address(0)) {\\n      revert NoSuchProvingKey(kh);\\n    }\\n    delete s_provingKeys[kh];\\n    for (uint256 i = 0; i < s_provingKeyHashes.length; i++) {\\n      if (s_provingKeyHashes[i] == kh) {\\n        bytes32 last = s_provingKeyHashes[s_provingKeyHashes.length - 1];\\n        // Copy last element and overwrite kh to be deleted with it\\n        s_provingKeyHashes[i] = last;\\n        s_provingKeyHashes.pop();\\n      }\\n    }\\n    emit ProvingKeyDeregistered(kh, oracle);\\n  }\\n\\n  /**\\n   * @notice Returns the proving key hash key associated with this public key\\n   * @param publicKey the key to return the hash of\\n   */\\n  function hashOfKey(uint256[2] memory publicKey) public pure returns (bytes32) {\\n    return keccak256(abi.encode(publicKey));\\n  }\\n\\n  /**\\n   * @notice Sets the configuration of the vrfv2 coordinator\\n   * @param minimumRequestConfirmations global min for request confirmations\\n   * @param maxGasLimit global max for request gas limit\\n   * @param stalenessSeconds if the eth/link feed is more stale then this, use the fallback price\\n   * @param gasAfterPaymentCalculation gas used in doing accounting after completing the gas measurement\\n   * @param fallbackWeiPerUnitLink fallback eth/link price in the case of a stale feed\\n   * @param feeConfig fee tier configuration\\n   */\\n  function setConfig(\\n    uint16 minimumRequestConfirmations,\\n    uint32 maxGasLimit,\\n    uint32 stalenessSeconds,\\n    uint32 gasAfterPaymentCalculation,\\n    int256 fallbackWeiPerUnitLink,\\n    FeeConfig memory feeConfig\\n  ) external onlyOwner {\\n    if (minimumRequestConfirmations > MAX_REQUEST_CONFIRMATIONS) {\\n      revert InvalidRequestConfirmations(\\n        minimumRequestConfirmations,\\n        minimumRequestConfirmations,\\n        MAX_REQUEST_CONFIRMATIONS\\n      );\\n    }\\n    if (fallbackWeiPerUnitLink <= 0) {\\n      revert InvalidLinkWeiPrice(fallbackWeiPerUnitLink);\\n    }\\n    s_config = Config({\\n      minimumRequestConfirmations: minimumRequestConfirmations,\\n      maxGasLimit: maxGasLimit,\\n      stalenessSeconds: stalenessSeconds,\\n      gasAfterPaymentCalculation: gasAfterPaymentCalculation,\\n      reentrancyLock: false\\n    });\\n    s_feeConfig = feeConfig;\\n    s_fallbackWeiPerUnitLink = fallbackWeiPerUnitLink;\\n    emit ConfigSet(\\n      minimumRequestConfirmations,\\n      maxGasLimit,\\n      stalenessSeconds,\\n      gasAfterPaymentCalculation,\\n      fallbackWeiPerUnitLink,\\n      s_feeConfig\\n    );\\n  }\\n\\n  function getConfig()\\n    external\\n    view\\n    returns (\\n      uint16 minimumRequestConfirmations,\\n      uint32 maxGasLimit,\\n      uint32 stalenessSeconds,\\n      uint32 gasAfterPaymentCalculation\\n    )\\n  {\\n    return (\\n      s_config.minimumRequestConfirmations,\\n      s_config.maxGasLimit,\\n      s_config.stalenessSeconds,\\n      s_config.gasAfterPaymentCalculation\\n    );\\n  }\\n\\n  function getFeeConfig()\\n    external\\n    view\\n    returns (\\n      uint32 fulfillmentFlatFeeLinkPPMTier1,\\n      uint32 fulfillmentFlatFeeLinkPPMTier2,\\n      uint32 fulfillmentFlatFeeLinkPPMTier3,\\n      uint32 fulfillmentFlatFeeLinkPPMTier4,\\n      uint32 fulfillmentFlatFeeLinkPPMTier5,\\n      uint24 reqsForTier2,\\n      uint24 reqsForTier3,\\n      uint24 reqsForTier4,\\n      uint24 reqsForTier5\\n    )\\n  {\\n    return (\\n      s_feeConfig.fulfillmentFlatFeeLinkPPMTier1,\\n      s_feeConfig.fulfillmentFlatFeeLinkPPMTier2,\\n      s_feeConfig.fulfillmentFlatFeeLinkPPMTier3,\\n      s_feeConfig.fulfillmentFlatFeeLinkPPMTier4,\\n      s_feeConfig.fulfillmentFlatFeeLinkPPMTier5,\\n      s_feeConfig.reqsForTier2,\\n      s_feeConfig.reqsForTier3,\\n      s_feeConfig.reqsForTier4,\\n      s_feeConfig.reqsForTier5\\n    );\\n  }\\n\\n  function getTotalBalance() external view returns (uint256) {\\n    return s_totalBalance;\\n  }\\n\\n  function getFallbackWeiPerUnitLink() external view returns (int256) {\\n    return s_fallbackWeiPerUnitLink;\\n  }\\n\\n  /**\\n   * @notice Owner cancel subscription, sends remaining link directly to the subscription owner.\\n   * @param subId subscription id\\n   * @dev notably can be called even if there are pending requests, outstanding ones may fail onchain\\n   */\\n  function ownerCancelSubscription(uint64 subId) external onlyOwner {\\n    if (s_subscriptionConfigs[subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    _cancelSubscriptionHelper(subId, s_subscriptionConfigs[subId].owner);\\n  }\\n\\n  /**\\n   * @notice Recover link sent with transfer instead of transferAndCall.\\n   * @param to address to send link to\\n   */\\n  function recoverFunds(address to) external onlyOwner {\\n    uint256 externalBalance = LINK.balanceOf(address(this));\\n    uint256 internalBalance = uint256(s_totalBalance);\\n    if (internalBalance > externalBalance) {\\n      revert BalanceInvariantViolated(internalBalance, externalBalance);\\n    }\\n    if (internalBalance < externalBalance) {\\n      uint256 amount = externalBalance - internalBalance;\\n      LINK.transfer(to, amount);\\n      emit FundsRecovered(to, amount);\\n    }\\n    // If the balances are equal, nothing to be done.\\n  }\\n\\n  /**\\n   * @inheritdoc VRFCoordinatorV2Interface\\n   */\\n  function getRequestConfig() external view override returns (uint16, uint32, bytes32[] memory) {\\n    return (s_config.minimumRequestConfirmations, s_config.maxGasLimit, s_provingKeyHashes);\\n  }\\n\\n  /**\\n   * @inheritdoc VRFCoordinatorV2Interface\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 requestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external override nonReentrant returns (uint256) {\\n    // Input validation using the subscription storage.\\n    if (s_subscriptionConfigs[subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    // Its important to ensure that the consumer is in fact who they say they\\n    // are, otherwise they could use someone else's subscription balance.\\n    // A nonce of 0 indicates consumer is not allocated to the sub.\\n    uint64 currentNonce = s_consumers[msg.sender][subId];\\n    if (currentNonce == 0) {\\n      revert InvalidConsumer(subId, msg.sender);\\n    }\\n    // Input validation using the config storage word.\\n    if (\\n      requestConfirmations < s_config.minimumRequestConfirmations || requestConfirmations > MAX_REQUEST_CONFIRMATIONS\\n    ) {\\n      revert InvalidRequestConfirmations(\\n        requestConfirmations,\\n        s_config.minimumRequestConfirmations,\\n        MAX_REQUEST_CONFIRMATIONS\\n      );\\n    }\\n    // No lower bound on the requested gas limit. A user could request 0\\n    // and they would simply be billed for the proof verification and wouldn't be\\n    // able to do anything with the random value.\\n    if (callbackGasLimit > s_config.maxGasLimit) {\\n      revert GasLimitTooBig(callbackGasLimit, s_config.maxGasLimit);\\n    }\\n    if (numWords > MAX_NUM_WORDS) {\\n      revert NumWordsTooBig(numWords, MAX_NUM_WORDS);\\n    }\\n    // Note we do not check whether the keyHash is valid to save gas.\\n    // The consequence for users is that they can send requests\\n    // for invalid keyHashes which will simply not be fulfilled.\\n    uint64 nonce = currentNonce + 1;\\n    (uint256 requestId, uint256 preSeed) = _computeRequestId(keyHash, msg.sender, subId, nonce);\\n\\n    s_requestCommitments[requestId] = keccak256(\\n      abi.encode(requestId, ChainSpecificUtil._getBlockNumber(), subId, callbackGasLimit, numWords, msg.sender)\\n    );\\n    emit RandomWordsRequested(\\n      keyHash,\\n      requestId,\\n      preSeed,\\n      subId,\\n      requestConfirmations,\\n      callbackGasLimit,\\n      numWords,\\n      msg.sender\\n    );\\n    s_consumers[msg.sender][subId] = nonce;\\n\\n    return requestId;\\n  }\\n\\n  /**\\n   * @notice Get request commitment\\n   * @param requestId id of request\\n   * @dev used to determine if a request is fulfilled or not\\n   */\\n  function getCommitment(uint256 requestId) external view returns (bytes32) {\\n    return s_requestCommitments[requestId];\\n  }\\n\\n  function _computeRequestId(\\n    bytes32 keyHash,\\n    address sender,\\n    uint64 subId,\\n    uint64 nonce\\n  ) private pure returns (uint256, uint256) {\\n    uint256 preSeed = uint256(keccak256(abi.encode(keyHash, sender, subId, nonce)));\\n    return (uint256(keccak256(abi.encode(keyHash, preSeed))), preSeed);\\n  }\\n\\n  /**\\n   * @dev calls target address with exactly gasAmount gas and data as calldata\\n   * or reverts if at least gasAmount gas is not available.\\n   */\\n  function _callWithExactGas(uint256 gasAmount, address target, bytes memory data) private returns (bool success) {\\n    assembly {\\n      let g := gas()\\n      // Compute g -= GAS_FOR_CALL_EXACT_CHECK and check for underflow\\n      // The gas actually passed to the callee is min(gasAmount, 63//64*gas available).\\n      // We want to ensure that we revert if gasAmount >  63//64*gas available\\n      // as we do not want to provide them with less, however that check itself costs\\n      // gas.  GAS_FOR_CALL_EXACT_CHECK ensures we have at least enough gas to be able\\n      // to revert if gasAmount >  63//64*gas available.\\n      if lt(g, GAS_FOR_CALL_EXACT_CHECK) {\\n        revert(0, 0)\\n      }\\n      g := sub(g, GAS_FOR_CALL_EXACT_CHECK)\\n      // if g - g//64 <= gasAmount, revert\\n      // (we subtract g//64 because of EIP-150)\\n      if iszero(gt(sub(g, div(g, 64)), gasAmount)) {\\n        revert(0, 0)\\n      }\\n      // solidity calls check that a contract actually exists at the destination, so we do the same\\n      if iszero(extcodesize(target)) {\\n        revert(0, 0)\\n      }\\n      // call and return whether we succeeded. ignore return data\\n      // call(gas,addr,value,argsOffset,argsLength,retOffset,retLength)\\n      success := call(gasAmount, target, 0, add(data, 0x20), mload(data), 0, 0)\\n    }\\n    return success;\\n  }\\n\\n  function _getRandomnessFromProof(\\n    Proof memory proof,\\n    RequestCommitment memory rc\\n  ) private view returns (bytes32 keyHash, uint256 requestId, uint256 randomness) {\\n    keyHash = hashOfKey(proof.pk);\\n    // Only registered proving keys are permitted.\\n    address oracle = s_provingKeys[keyHash];\\n    if (oracle == address(0)) {\\n      revert NoSuchProvingKey(keyHash);\\n    }\\n    requestId = uint256(keccak256(abi.encode(keyHash, proof.seed)));\\n    bytes32 commitment = s_requestCommitments[requestId];\\n    if (commitment == 0) {\\n      revert NoCorrespondingRequest();\\n    }\\n    if (\\n      commitment != keccak256(abi.encode(requestId, rc.blockNum, rc.subId, rc.callbackGasLimit, rc.numWords, rc.sender))\\n    ) {\\n      revert IncorrectCommitment();\\n    }\\n\\n    bytes32 blockHash = ChainSpecificUtil._getBlockhash(rc.blockNum);\\n    if (blockHash == bytes32(0)) {\\n      blockHash = BLOCKHASH_STORE.getBlockhash(rc.blockNum);\\n      if (blockHash == bytes32(0)) {\\n        revert BlockhashNotInStore(rc.blockNum);\\n      }\\n    }\\n\\n    // The seed actually used by the VRF machinery, mixing in the blockhash\\n    uint256 actualSeed = uint256(keccak256(abi.encodePacked(proof.seed, blockHash)));\\n    randomness = VRF._randomValueFromVRFProof(proof, actualSeed); // Reverts on failure\\n    return (keyHash, requestId, randomness);\\n  }\\n\\n  /*\\n   * @notice Compute fee based on the request count\\n   * @param reqCount number of requests\\n   * @return feePPM fee in LINK PPM\\n   */\\n  function getFeeTier(uint64 reqCount) public view returns (uint32) {\\n    FeeConfig memory fc = s_feeConfig;\\n    if (0 <= reqCount && reqCount <= fc.reqsForTier2) {\\n      return fc.fulfillmentFlatFeeLinkPPMTier1;\\n    }\\n    if (fc.reqsForTier2 < reqCount && reqCount <= fc.reqsForTier3) {\\n      return fc.fulfillmentFlatFeeLinkPPMTier2;\\n    }\\n    if (fc.reqsForTier3 < reqCount && reqCount <= fc.reqsForTier4) {\\n      return fc.fulfillmentFlatFeeLinkPPMTier3;\\n    }\\n    if (fc.reqsForTier4 < reqCount && reqCount <= fc.reqsForTier5) {\\n      return fc.fulfillmentFlatFeeLinkPPMTier4;\\n    }\\n    return fc.fulfillmentFlatFeeLinkPPMTier5;\\n  }\\n\\n  /*\\n   * @notice Fulfill a randomness request\\n   * @param proof contains the proof and randomness\\n   * @param rc request commitment pre-image, committed to at request time\\n   * @return payment amount billed to the subscription\\n   * @dev simulated offchain to determine if sufficient balance is present to fulfill the request\\n   */\\n  function fulfillRandomWords(Proof memory proof, RequestCommitment memory rc) external nonReentrant returns (uint96) {\\n    uint256 startGas = gasleft();\\n    (bytes32 keyHash, uint256 requestId, uint256 randomness) = _getRandomnessFromProof(proof, rc);\\n\\n    uint256[] memory randomWords = new uint256[](rc.numWords);\\n    for (uint256 i = 0; i < rc.numWords; i++) {\\n      randomWords[i] = uint256(keccak256(abi.encode(randomness, i)));\\n    }\\n\\n    delete s_requestCommitments[requestId];\\n    VRFConsumerBaseV2 v;\\n    bytes memory resp = abi.encodeWithSelector(v.rawFulfillRandomWords.selector, requestId, randomWords);\\n    // Call with explicitly the amount of callback gas requested\\n    // Important to not let them exhaust the gas budget and avoid oracle payment.\\n    // Do not allow any non-view/non-pure coordinator functions to be called\\n    // during the consumers callback code via reentrancyLock.\\n    // Note that _callWithExactGas will revert if we do not have sufficient gas\\n    // to give the callee their requested amount.\\n    s_config.reentrancyLock = true;\\n    bool success = _callWithExactGas(rc.callbackGasLimit, rc.sender, resp);\\n    s_config.reentrancyLock = false;\\n\\n    // Increment the req count for fee tier selection.\\n    uint64 reqCount = s_subscriptions[rc.subId].reqCount;\\n    s_subscriptions[rc.subId].reqCount += 1;\\n\\n    // We want to charge users exactly for how much gas they use in their callback.\\n    // The gasAfterPaymentCalculation is meant to cover these additional operations where we\\n    // decrement the subscription balance and increment the oracles withdrawable balance.\\n    // We also add the flat link fee to the payment amount.\\n    // Its specified in millionths of link, if s_config.fulfillmentFlatFeeLinkPPM = 1\\n    // 1 link / 1e6 = 1e18 juels / 1e6 = 1e12 juels.\\n    uint96 payment = _calculatePaymentAmount(\\n      startGas,\\n      s_config.gasAfterPaymentCalculation,\\n      getFeeTier(reqCount),\\n      tx.gasprice\\n    );\\n    if (s_subscriptions[rc.subId].balance < payment) {\\n      revert InsufficientBalance();\\n    }\\n    s_subscriptions[rc.subId].balance -= payment;\\n    s_withdrawableTokens[s_provingKeys[keyHash]] += payment;\\n    // Include payment in the event for tracking costs.\\n    emit RandomWordsFulfilled(requestId, randomness, payment, success);\\n    return payment;\\n  }\\n\\n  // Get the amount of gas used for fulfillment\\n  function _calculatePaymentAmount(\\n    uint256 startGas,\\n    uint256 gasAfterPaymentCalculation,\\n    uint32 fulfillmentFlatFeeLinkPPM,\\n    uint256 weiPerUnitGas\\n  ) internal view returns (uint96) {\\n    int256 weiPerUnitLink;\\n    weiPerUnitLink = _getFeedData();\\n    if (weiPerUnitLink <= 0) {\\n      revert InvalidLinkWeiPrice(weiPerUnitLink);\\n    }\\n    // Will return non-zero on chains that have this enabled\\n    uint256 l1CostWei = ChainSpecificUtil._getCurrentTxL1GasFees(msg.data);\\n    // (1e18 juels/link) ((wei/gas * gas) + l1wei) / (wei/link) = juels\\n    uint256 paymentNoFee = (1e18 * (weiPerUnitGas * (gasAfterPaymentCalculation + startGas - gasleft()) + l1CostWei)) /\\n      uint256(weiPerUnitLink);\\n    uint256 fee = 1e12 * uint256(fulfillmentFlatFeeLinkPPM);\\n    if (paymentNoFee > (1e27 - fee)) {\\n      revert PaymentTooLarge(); // Payment + fee cannot be more than all of the link in existence.\\n    }\\n    return uint96(paymentNoFee + fee);\\n  }\\n\\n  function _getFeedData() private view returns (int256) {\\n    uint32 stalenessSeconds = s_config.stalenessSeconds;\\n    bool staleFallback = stalenessSeconds > 0;\\n    uint256 timestamp;\\n    int256 weiPerUnitLink;\\n    (, weiPerUnitLink, , timestamp, ) = LINK_ETH_FEED.latestRoundData();\\n    // solhint-disable-next-line not-rely-on-time\\n    if (staleFallback && stalenessSeconds < block.timestamp - timestamp) {\\n      weiPerUnitLink = s_fallbackWeiPerUnitLink;\\n    }\\n    return weiPerUnitLink;\\n  }\\n\\n  /*\\n   * @notice Oracle withdraw LINK earned through fulfilling requests\\n   * @param recipient where to send the funds\\n   * @param amount amount to withdraw\\n   */\\n  function oracleWithdraw(address recipient, uint96 amount) external nonReentrant {\\n    if (s_withdrawableTokens[msg.sender] < amount) {\\n      revert InsufficientBalance();\\n    }\\n    s_withdrawableTokens[msg.sender] -= amount;\\n    s_totalBalance -= amount;\\n    if (!LINK.transfer(recipient, amount)) {\\n      revert InsufficientBalance();\\n    }\\n  }\\n\\n  function onTokenTransfer(address /* sender */, uint256 amount, bytes calldata data) external override nonReentrant {\\n    if (msg.sender != address(LINK)) {\\n      revert OnlyCallableFromLink();\\n    }\\n    if (data.length != 32) {\\n      revert InvalidCalldata();\\n    }\\n    uint64 subId = abi.decode(data, (uint64));\\n    if (s_subscriptionConfigs[subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    // We do not check that the msg.sender is the subscription owner,\\n    // anyone can fund a subscription.\\n    uint256 oldBalance = s_subscriptions[subId].balance;\\n    s_subscriptions[subId].balance += uint96(amount);\\n    s_totalBalance += uint96(amount);\\n    emit SubscriptionFunded(subId, oldBalance, oldBalance + amount);\\n  }\\n\\n  function getCurrentSubId() external view returns (uint64) {\\n    return s_currentSubId;\\n  }\\n\\n  /**\\n   * @inheritdoc VRFCoordinatorV2Interface\\n   */\\n  function getSubscription(\\n    uint64 subId\\n  ) external view override returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers) {\\n    if (s_subscriptionConfigs[subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    return (\\n      s_subscriptions[subId].balance,\\n      s_subscriptions[subId].reqCount,\\n      s_subscriptionConfigs[subId].owner,\\n      s_subscriptionConfigs[subId].consumers\\n    );\\n  }\\n\\n  /**\\n   * @inheritdoc VRFCoordinatorV2Interface\\n   */\\n  function createSubscription() external override nonReentrant returns (uint64) {\\n    s_currentSubId++;\\n    uint64 currentSubId = s_currentSubId;\\n    address[] memory consumers = new address[](0);\\n    s_subscriptions[currentSubId] = Subscription({balance: 0, reqCount: 0});\\n    s_subscriptionConfigs[currentSubId] = SubscriptionConfig({\\n      owner: msg.sender,\\n      requestedOwner: address(0),\\n      consumers: consumers\\n    });\\n\\n    emit SubscriptionCreated(currentSubId, msg.sender);\\n    return currentSubId;\\n  }\\n\\n  /**\\n   * @inheritdoc VRFCoordinatorV2Interface\\n   */\\n  function requestSubscriptionOwnerTransfer(\\n    uint64 subId,\\n    address newOwner\\n  ) external override onlySubOwner(subId) nonReentrant {\\n    // Proposing to address(0) would never be claimable so don't need to check.\\n    if (s_subscriptionConfigs[subId].requestedOwner != newOwner) {\\n      s_subscriptionConfigs[subId].requestedOwner = newOwner;\\n      emit SubscriptionOwnerTransferRequested(subId, msg.sender, newOwner);\\n    }\\n  }\\n\\n  /**\\n   * @inheritdoc VRFCoordinatorV2Interface\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external override nonReentrant {\\n    if (s_subscriptionConfigs[subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    if (s_subscriptionConfigs[subId].requestedOwner != msg.sender) {\\n      revert MustBeRequestedOwner(s_subscriptionConfigs[subId].requestedOwner);\\n    }\\n    address oldOwner = s_subscriptionConfigs[subId].owner;\\n    s_subscriptionConfigs[subId].owner = msg.sender;\\n    s_subscriptionConfigs[subId].requestedOwner = address(0);\\n    emit SubscriptionOwnerTransferred(subId, oldOwner, msg.sender);\\n  }\\n\\n  /**\\n   * @inheritdoc VRFCoordinatorV2Interface\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external override onlySubOwner(subId) nonReentrant {\\n    if (pendingRequestExists(subId)) {\\n      revert PendingRequestExists();\\n    }\\n    if (s_consumers[consumer][subId] == 0) {\\n      revert InvalidConsumer(subId, consumer);\\n    }\\n    // Note bounded by MAX_CONSUMERS\\n    address[] memory consumers = s_subscriptionConfigs[subId].consumers;\\n    uint256 lastConsumerIndex = consumers.length - 1;\\n    for (uint256 i = 0; i < consumers.length; i++) {\\n      if (consumers[i] == consumer) {\\n        address last = consumers[lastConsumerIndex];\\n        // Storage write to preserve last element\\n        s_subscriptionConfigs[subId].consumers[i] = last;\\n        // Storage remove last element\\n        s_subscriptionConfigs[subId].consumers.pop();\\n        break;\\n      }\\n    }\\n    delete s_consumers[consumer][subId];\\n    emit SubscriptionConsumerRemoved(subId, consumer);\\n  }\\n\\n  /**\\n   * @inheritdoc VRFCoordinatorV2Interface\\n   */\\n  function addConsumer(uint64 subId, address consumer) external override onlySubOwner(subId) nonReentrant {\\n    // Already maxed, cannot add any more consumers.\\n    if (s_subscriptionConfigs[subId].consumers.length == MAX_CONSUMERS) {\\n      revert TooManyConsumers();\\n    }\\n    if (s_consumers[consumer][subId] != 0) {\\n      // Idempotence - do nothing if already added.\\n      // Ensures uniqueness in s_subscriptions[subId].consumers.\\n      return;\\n    }\\n    // Initialize the nonce to 1, indicating the consumer is allocated.\\n    s_consumers[consumer][subId] = 1;\\n    s_subscriptionConfigs[subId].consumers.push(consumer);\\n\\n    emit SubscriptionConsumerAdded(subId, consumer);\\n  }\\n\\n  /**\\n   * @inheritdoc VRFCoordinatorV2Interface\\n   */\\n  function cancelSubscription(uint64 subId, address to) external override onlySubOwner(subId) nonReentrant {\\n    if (pendingRequestExists(subId)) {\\n      revert PendingRequestExists();\\n    }\\n    _cancelSubscriptionHelper(subId, to);\\n  }\\n\\n  function _cancelSubscriptionHelper(uint64 subId, address to) private nonReentrant {\\n    SubscriptionConfig memory subConfig = s_subscriptionConfigs[subId];\\n    Subscription memory sub = s_subscriptions[subId];\\n    uint96 balance = sub.balance;\\n    // Note bounded by MAX_CONSUMERS;\\n    // If no consumers, does nothing.\\n    for (uint256 i = 0; i < subConfig.consumers.length; i++) {\\n      delete s_consumers[subConfig.consumers[i]][subId];\\n    }\\n    delete s_subscriptionConfigs[subId];\\n    delete s_subscriptions[subId];\\n    s_totalBalance -= balance;\\n    if (!LINK.transfer(to, uint256(balance))) {\\n      revert InsufficientBalance();\\n    }\\n    emit SubscriptionCanceled(subId, to, balance);\\n  }\\n\\n  /**\\n   * @inheritdoc VRFCoordinatorV2Interface\\n   * @dev Looping is bounded to MAX_CONSUMERS*(number of keyhashes).\\n   * @dev Used to disable subscription canceling while outstanding request are present.\\n   */\\n  function pendingRequestExists(uint64 subId) public view override returns (bool) {\\n    SubscriptionConfig memory subConfig = s_subscriptionConfigs[subId];\\n    for (uint256 i = 0; i < subConfig.consumers.length; i++) {\\n      for (uint256 j = 0; j < s_provingKeyHashes.length; j++) {\\n        (uint256 reqId, ) = _computeRequestId(\\n          s_provingKeyHashes[j],\\n          subConfig.consumers[i],\\n          subId,\\n          s_consumers[subConfig.consumers[i]][subId]\\n        );\\n        if (s_requestCommitments[reqId] != 0) {\\n          return true;\\n        }\\n      }\\n    }\\n    return false;\\n  }\\n\\n  modifier onlySubOwner(uint64 subId) {\\n    address owner = s_subscriptionConfigs[subId].owner;\\n    if (owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    if (msg.sender != owner) {\\n      revert MustBeSubOwner(owner);\\n    }\\n    _;\\n  }\\n\\n  modifier nonReentrant() {\\n    if (s_config.reentrancyLock) {\\n      revert Reentrant();\\n    }\\n    _;\\n  }\\n\\n  /**\\n   * @notice The type and version of this contract\\n   * @return Type and version string\\n   */\\n  function typeAndVersion() external pure virtual override returns (string memory) {\\n    return \\\"VRFCoordinatorV2 1.0.0\\\";\\n  }\\n}\\n\",\"keccak256\":\"0x717e3c362b4ec5f7fd951ebca93bdadc4200415e46411f19f2b7d6e4857156fe\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/interfaces/BlockhashStoreInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface BlockhashStoreInterface {\\n  function getBlockhash(uint256 number) external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x0d39e3be84000b35faa198e8c4fcc1cfd65a876275c776f45b4e0d48c852b4cc\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint64 subId\\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa9f8b7e09811f4ac9f421116b5d6bcf50b5748025c0cb012aaf5ff7c39a6b46a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":390,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":392,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"},{"astId":2553,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"s_consumers","offset":0,"slot":"2","type":"t_mapping(t_address,t_mapping(t_uint64,t_uint64))"},{"astId":2558,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"s_subscriptionConfigs","offset":0,"slot":"3","type":"t_mapping(t_uint64,t_struct(SubscriptionConfig)2547_storage)"},{"astId":2563,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"s_subscriptions","offset":0,"slot":"4","type":"t_mapping(t_uint64,t_struct(Subscription)2539_storage)"},{"astId":2565,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"s_currentSubId","offset":0,"slot":"5","type":"t_uint64"},{"astId":2567,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"s_totalBalance","offset":8,"slot":"5","type":"t_uint96"},{"astId":2691,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"s_provingKeys","offset":0,"slot":"6","type":"t_mapping(t_bytes32,t_address)"},{"astId":2694,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"s_provingKeyHashes","offset":0,"slot":"7","type":"t_array(t_bytes32)dyn_storage"},{"astId":2698,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"s_withdrawableTokens","offset":0,"slot":"8","type":"t_mapping(t_address,t_uint96)"},{"astId":2702,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"s_requestCommitments","offset":0,"slot":"9","type":"t_mapping(t_uint256,t_bytes32)"},{"astId":2755,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"s_fallbackWeiPerUnitLink","offset":0,"slot":"10","type":"t_int256"},{"astId":2758,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"s_config","offset":0,"slot":"11","type":"t_struct(Config)2753_storage"},{"astId":2761,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"s_feeConfig","offset":0,"slot":"12","type":"t_struct(FeeConfig)2780_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_int256":{"encoding":"inplace","label":"int256","numberOfBytes":"32"},"t_mapping(t_address,t_mapping(t_uint64,t_uint64))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint64 => uint64))","numberOfBytes":"32","value":"t_mapping(t_uint64,t_uint64)"},"t_mapping(t_address,t_uint96)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint96)","numberOfBytes":"32","value":"t_uint96"},"t_mapping(t_bytes32,t_address)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_bytes32)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_mapping(t_uint64,t_struct(Subscription)2539_storage)":{"encoding":"mapping","key":"t_uint64","label":"mapping(uint64 => struct VRFCoordinatorV2.Subscription)","numberOfBytes":"32","value":"t_struct(Subscription)2539_storage"},"t_mapping(t_uint64,t_struct(SubscriptionConfig)2547_storage)":{"encoding":"mapping","key":"t_uint64","label":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig)","numberOfBytes":"32","value":"t_struct(SubscriptionConfig)2547_storage"},"t_mapping(t_uint64,t_uint64)":{"encoding":"mapping","key":"t_uint64","label":"mapping(uint64 => uint64)","numberOfBytes":"32","value":"t_uint64"},"t_struct(Config)2753_storage":{"encoding":"inplace","label":"struct VRFCoordinatorV2.Config","members":[{"astId":2744,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"minimumRequestConfirmations","offset":0,"slot":"0","type":"t_uint16"},{"astId":2746,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"maxGasLimit","offset":2,"slot":"0","type":"t_uint32"},{"astId":2748,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"reentrancyLock","offset":6,"slot":"0","type":"t_bool"},{"astId":2750,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"stalenessSeconds","offset":7,"slot":"0","type":"t_uint32"},{"astId":2752,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"gasAfterPaymentCalculation","offset":11,"slot":"0","type":"t_uint32"}],"numberOfBytes":"32"},"t_struct(FeeConfig)2780_storage":{"encoding":"inplace","label":"struct VRFCoordinatorV2.FeeConfig","members":[{"astId":2763,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"fulfillmentFlatFeeLinkPPMTier1","offset":0,"slot":"0","type":"t_uint32"},{"astId":2765,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"fulfillmentFlatFeeLinkPPMTier2","offset":4,"slot":"0","type":"t_uint32"},{"astId":2767,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"fulfillmentFlatFeeLinkPPMTier3","offset":8,"slot":"0","type":"t_uint32"},{"astId":2769,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"fulfillmentFlatFeeLinkPPMTier4","offset":12,"slot":"0","type":"t_uint32"},{"astId":2771,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"fulfillmentFlatFeeLinkPPMTier5","offset":16,"slot":"0","type":"t_uint32"},{"astId":2773,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"reqsForTier2","offset":20,"slot":"0","type":"t_uint24"},{"astId":2775,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"reqsForTier3","offset":23,"slot":"0","type":"t_uint24"},{"astId":2777,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"reqsForTier4","offset":26,"slot":"0","type":"t_uint24"},{"astId":2779,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"reqsForTier5","offset":29,"slot":"0","type":"t_uint24"}],"numberOfBytes":"32"},"t_struct(Subscription)2539_storage":{"encoding":"inplace","label":"struct VRFCoordinatorV2.Subscription","members":[{"astId":2536,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"balance","offset":0,"slot":"0","type":"t_uint96"},{"astId":2538,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"reqCount","offset":12,"slot":"0","type":"t_uint64"}],"numberOfBytes":"32"},"t_struct(SubscriptionConfig)2547_storage":{"encoding":"inplace","label":"struct VRFCoordinatorV2.SubscriptionConfig","members":[{"astId":2541,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":2543,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"requestedOwner","offset":0,"slot":"1","type":"t_address"},{"astId":2546,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"consumers","offset":0,"slot":"2","type":"t_array(t_address)dyn_storage"}],"numberOfBytes":"96"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint24":{"encoding":"inplace","label":"uint24","numberOfBytes":"3"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"},"t_uint96":{"encoding":"inplace","label":"uint96","numberOfBytes":"12"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"acceptSubscriptionOwnerTransfer(uint64)":{"notice":"Request subscription owner transfer."},"addConsumer(uint64,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint64,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"deregisterProvingKey(uint256[2])":{"notice":"Deregisters a proving key to an oracle."},"getCommitment(uint256)":{"notice":"Get request commitment"},"getRequestConfig()":{"notice":"Get configuration relevant for making requests"},"getSubscription(uint64)":{"notice":"Get a VRF subscription."},"hashOfKey(uint256[2])":{"notice":"Returns the proving key hash key associated with this public key"},"owner()":{"notice":"Get the current owner"},"ownerCancelSubscription(uint64)":{"notice":"Owner cancel subscription, sends remaining link directly to the subscription owner."},"recoverFunds(address)":{"notice":"Recover link sent with transfer instead of transferAndCall."},"registerProvingKey(address,uint256[2])":{"notice":"Registers a proving key to an oracle."},"removeConsumer(uint64,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"notice":"Request a set of random words."},"requestSubscriptionOwnerTransfer(uint64,address)":{"notice":"Request subscription owner transfer."},"setConfig(uint16,uint32,uint32,uint32,int256,(uint32,uint32,uint32,uint32,uint32,uint24,uint24,uint24,uint24))":{"notice":"Sets the configuration of the vrfv2 coordinator"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address."},"typeAndVersion()":{"notice":"The type and version of this contract"}},"version":1}}},"@chainlink/contracts/src/v0.8/vrf/interfaces/BlockhashStoreInterface.sol":{"BlockhashStoreInterface":{"abi":[{"inputs":[{"internalType":"uint256","name":"number","type":"uint256"}],"name":"getBlockhash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getBlockhash(uint256)":"e9413d38"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"getBlockhash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/interfaces/BlockhashStoreInterface.sol\":\"BlockhashStoreInterface\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/interfaces/BlockhashStoreInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface BlockhashStoreInterface {\\n  function getBlockhash(uint256 number) external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x0d39e3be84000b35faa198e8c4fcc1cfd65a876275c776f45b4e0d48c852b4cc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol":{"VRFCoordinatorV2Interface":{"abi":[{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint64,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint64,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));","returns":{"subId":"- A unique subscription id."}},"getRequestConfig()":{"returns":{"_0":"minimumRequestConfirmations global min for request confirmations","_1":"maxGasLimit global max for request gas limit","_2":"s_provingKeyHashes list of registered key hashes"}},"getSubscription(uint64)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","owner":"- owner of the subscription.","reqCount":"- number of requests for this subscription, determines fee tier."}},"removeConsumer(uint64,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"params":{"callbackGasLimit":"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]","keyHash":"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.","minimumRequestConfirmations":"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].","numWords":"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.","subId":"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash."},"returns":{"requestId":"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."}},"requestSubscriptionOwnerTransfer(uint64,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","createSubscription()":"a21a23e4","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","pendingRequestExists(uint64)":"e82ad7d4","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol\":\"VRFCoordinatorV2Interface\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint64 subId\\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa9f8b7e09811f4ac9f421116b5d6bcf50b5748025c0cb012aaf5ff7c39a6b46a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"notice":"Request subscription owner transfer."},"addConsumer(uint64,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint64,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"getRequestConfig()":{"notice":"Get configuration relevant for making requests"},"getSubscription(uint64)":{"notice":"Get a VRF subscription."},"removeConsumer(uint64,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"notice":"Request a set of random words."},"requestSubscriptionOwnerTransfer(uint64,address)":{"notice":"Request subscription owner transfer."}},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":4890,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Raffle.sol":{"Raffle":{"abi":[{"inputs":[{"internalType":"address","name":"VRFCoordinatorV2","type":"address"},{"internalType":"uint256","name":"entranceFee","type":"uint256"},{"internalType":"bytes32","name":"gasLane","type":"bytes32"},{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[],"name":"Raffle__NotEnoughETHEntered","type":"error"},{"inputs":[],"name":"Raffle__TransferFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"player","type":"address"}],"name":"RaffleEntered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"}],"name":"RequestedRaffleWinner","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"winner","type":"address"}],"name":"WinnerPicked","type":"event"},{"inputs":[],"name":"enterRaffle","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"getEntranceFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getPlayer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRecentWinner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"requestRandomWinner","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2416":{"entryPoint":null,"id":2416,"parameterSlots":1,"returnSlots":0},"@_5100":{"entryPoint":null,"id":5100,"parameterSlots":5,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":251,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":274,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":297,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32_fromMemory":{"entryPoint":320,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64_fromMemory":{"entryPoint":343,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256t_bytes32t_uint64t_uint32_fromMemory":{"entryPoint":366,"id":null,"parameterSlots":2,"returnSlots":5},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":502,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":522,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":532,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":564,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":574,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":590,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":610,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":615,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":641,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":667,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":693,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":719,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3293:19","statements":[{"body":{"nodeType":"YulBlock","src":"70:80:19","statements":[{"nodeType":"YulAssignment","src":"80:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"89:5:19"},"nodeType":"YulFunctionCall","src":"89:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"80:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"138:5:19"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"111:26:19"},"nodeType":"YulFunctionCall","src":"111:33:19"},"nodeType":"YulExpressionStatement","src":"111:33:19"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"48:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"56:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:19","type":""}],"src":"7:143:19"},{"body":{"nodeType":"YulBlock","src":"219:80:19","statements":[{"nodeType":"YulAssignment","src":"229:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"244:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"238:5:19"},"nodeType":"YulFunctionCall","src":"238:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"229:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"287:5:19"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"260:26:19"},"nodeType":"YulFunctionCall","src":"260:33:19"},"nodeType":"YulExpressionStatement","src":"260:33:19"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"197:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"205:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"213:5:19","type":""}],"src":"156:143:19"},{"body":{"nodeType":"YulBlock","src":"368:80:19","statements":[{"nodeType":"YulAssignment","src":"378:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"393:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"387:5:19"},"nodeType":"YulFunctionCall","src":"387:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"378:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"436:5:19"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"409:26:19"},"nodeType":"YulFunctionCall","src":"409:33:19"},"nodeType":"YulExpressionStatement","src":"409:33:19"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"346:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"354:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"362:5:19","type":""}],"src":"305:143:19"},{"body":{"nodeType":"YulBlock","src":"516:79:19","statements":[{"nodeType":"YulAssignment","src":"526:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"541:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"535:5:19"},"nodeType":"YulFunctionCall","src":"535:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"526:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"583:5:19"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"557:25:19"},"nodeType":"YulFunctionCall","src":"557:32:19"},"nodeType":"YulExpressionStatement","src":"557:32:19"}]},"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"494:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"502:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"510:5:19","type":""}],"src":"454:141:19"},{"body":{"nodeType":"YulBlock","src":"663:79:19","statements":[{"nodeType":"YulAssignment","src":"673:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"688:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"682:5:19"},"nodeType":"YulFunctionCall","src":"682:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"673:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"730:5:19"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"704:25:19"},"nodeType":"YulFunctionCall","src":"704:32:19"},"nodeType":"YulExpressionStatement","src":"704:32:19"}]},"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"641:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"649:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"657:5:19","type":""}],"src":"601:141:19"},{"body":{"nodeType":"YulBlock","src":"891:830:19","statements":[{"body":{"nodeType":"YulBlock","src":"938:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"940:77:19"},"nodeType":"YulFunctionCall","src":"940:79:19"},"nodeType":"YulExpressionStatement","src":"940:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"912:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"921:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"908:3:19"},"nodeType":"YulFunctionCall","src":"908:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"933:3:19","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"904:3:19"},"nodeType":"YulFunctionCall","src":"904:33:19"},"nodeType":"YulIf","src":"901:2:19"},{"nodeType":"YulBlock","src":"1031:128:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1046:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1060:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1050:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1075:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1121:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1132:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1117:3:19"},"nodeType":"YulFunctionCall","src":"1117:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1141:7:19"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1085:31:19"},"nodeType":"YulFunctionCall","src":"1085:64:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1075:6:19"}]}]},{"nodeType":"YulBlock","src":"1169:129:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1184:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1198:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1188:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1214:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1260:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1271:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1256:3:19"},"nodeType":"YulFunctionCall","src":"1256:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1280:7:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"1224:31:19"},"nodeType":"YulFunctionCall","src":"1224:64:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1214:6:19"}]}]},{"nodeType":"YulBlock","src":"1308:129:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1323:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1337:2:19","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1327:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1353:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1399:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1410:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1395:3:19"},"nodeType":"YulFunctionCall","src":"1395:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1419:7:19"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"1363:31:19"},"nodeType":"YulFunctionCall","src":"1363:64:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1353:6:19"}]}]},{"nodeType":"YulBlock","src":"1447:128:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1462:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1476:2:19","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1466:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1492:73:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1537:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1548:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1533:3:19"},"nodeType":"YulFunctionCall","src":"1533:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1557:7:19"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulIdentifier","src":"1502:30:19"},"nodeType":"YulFunctionCall","src":"1502:63:19"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1492:6:19"}]}]},{"nodeType":"YulBlock","src":"1585:129:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1600:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1614:3:19","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1604:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1631:73:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1676:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1687:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1672:3:19"},"nodeType":"YulFunctionCall","src":"1672:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1696:7:19"}],"functionName":{"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulIdentifier","src":"1641:30:19"},"nodeType":"YulFunctionCall","src":"1641:63:19"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1631:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes32t_uint64t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"829:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"840:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"852:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"860:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"868:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"876:6:19","type":""},{"name":"value4","nodeType":"YulTypedName","src":"884:6:19","type":""}],"src":"748:973:19"},{"body":{"nodeType":"YulBlock","src":"1767:35:19","statements":[{"nodeType":"YulAssignment","src":"1777:19:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1793:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1787:5:19"},"nodeType":"YulFunctionCall","src":"1787:9:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1777:6:19"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1760:6:19","type":""}],"src":"1727:75:19"},{"body":{"nodeType":"YulBlock","src":"1853:51:19","statements":[{"nodeType":"YulAssignment","src":"1863:35:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:19"},"nodeType":"YulFunctionCall","src":"1874:24:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:19"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:19","type":""}],"src":"1808:96:19"},{"body":{"nodeType":"YulBlock","src":"1955:32:19","statements":[{"nodeType":"YulAssignment","src":"1965:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"1976:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1965:7:19"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1937:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1947:7:19","type":""}],"src":"1910:77:19"},{"body":{"nodeType":"YulBlock","src":"2038:81:19","statements":[{"nodeType":"YulAssignment","src":"2048:65:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2063:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"2070:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2059:3:19"},"nodeType":"YulFunctionCall","src":"2059:54:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2048:7:19"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2020:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2030:7:19","type":""}],"src":"1993:126:19"},{"body":{"nodeType":"YulBlock","src":"2170:32:19","statements":[{"nodeType":"YulAssignment","src":"2180:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"2191:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2180:7:19"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2152:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2162:7:19","type":""}],"src":"2125:77:19"},{"body":{"nodeType":"YulBlock","src":"2252:49:19","statements":[{"nodeType":"YulAssignment","src":"2262:33:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2277:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"2284:10:19","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2273:3:19"},"nodeType":"YulFunctionCall","src":"2273:22:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2262:7:19"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2234:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2244:7:19","type":""}],"src":"2208:93:19"},{"body":{"nodeType":"YulBlock","src":"2351:57:19","statements":[{"nodeType":"YulAssignment","src":"2361:41:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2376:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"2383:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2372:3:19"},"nodeType":"YulFunctionCall","src":"2372:30:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2361:7:19"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2333:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2343:7:19","type":""}],"src":"2307:101:19"},{"body":{"nodeType":"YulBlock","src":"2503:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2520:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2523:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2513:6:19"},"nodeType":"YulFunctionCall","src":"2513:12:19"},"nodeType":"YulExpressionStatement","src":"2513:12:19"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"2414:117:19"},{"body":{"nodeType":"YulBlock","src":"2626:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2643:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2646:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2636:6:19"},"nodeType":"YulFunctionCall","src":"2636:12:19"},"nodeType":"YulExpressionStatement","src":"2636:12:19"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"2537:117:19"},{"body":{"nodeType":"YulBlock","src":"2703:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"2760:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2769:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2772:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2762:6:19"},"nodeType":"YulFunctionCall","src":"2762:12:19"},"nodeType":"YulExpressionStatement","src":"2762:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2726:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2751:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2733:17:19"},"nodeType":"YulFunctionCall","src":"2733:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2723:2:19"},"nodeType":"YulFunctionCall","src":"2723:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2716:6:19"},"nodeType":"YulFunctionCall","src":"2716:43:19"},"nodeType":"YulIf","src":"2713:2:19"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2696:5:19","type":""}],"src":"2660:122:19"},{"body":{"nodeType":"YulBlock","src":"2831:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"2888:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2897:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2900:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2890:6:19"},"nodeType":"YulFunctionCall","src":"2890:12:19"},"nodeType":"YulExpressionStatement","src":"2890:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2854:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2879:5:19"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"2861:17:19"},"nodeType":"YulFunctionCall","src":"2861:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2851:2:19"},"nodeType":"YulFunctionCall","src":"2851:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2844:6:19"},"nodeType":"YulFunctionCall","src":"2844:43:19"},"nodeType":"YulIf","src":"2841:2:19"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2824:5:19","type":""}],"src":"2788:122:19"},{"body":{"nodeType":"YulBlock","src":"2959:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"3016:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3025:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3028:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3018:6:19"},"nodeType":"YulFunctionCall","src":"3018:12:19"},"nodeType":"YulExpressionStatement","src":"3018:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2982:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3007:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2989:17:19"},"nodeType":"YulFunctionCall","src":"2989:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2979:2:19"},"nodeType":"YulFunctionCall","src":"2979:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2972:6:19"},"nodeType":"YulFunctionCall","src":"2972:43:19"},"nodeType":"YulIf","src":"2969:2:19"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2952:5:19","type":""}],"src":"2916:122:19"},{"body":{"nodeType":"YulBlock","src":"3086:78:19","statements":[{"body":{"nodeType":"YulBlock","src":"3142:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3151:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3154:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3144:6:19"},"nodeType":"YulFunctionCall","src":"3144:12:19"},"nodeType":"YulExpressionStatement","src":"3144:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3109:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3133:5:19"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"3116:16:19"},"nodeType":"YulFunctionCall","src":"3116:23:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3106:2:19"},"nodeType":"YulFunctionCall","src":"3106:34:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3099:6:19"},"nodeType":"YulFunctionCall","src":"3099:42:19"},"nodeType":"YulIf","src":"3096:2:19"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3079:5:19","type":""}],"src":"3044:120:19"},{"body":{"nodeType":"YulBlock","src":"3212:78:19","statements":[{"body":{"nodeType":"YulBlock","src":"3268:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3277:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3280:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3270:6:19"},"nodeType":"YulFunctionCall","src":"3270:12:19"},"nodeType":"YulExpressionStatement","src":"3270:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3235:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3259:5:19"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"3242:16:19"},"nodeType":"YulFunctionCall","src":"3242:23:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3232:2:19"},"nodeType":"YulFunctionCall","src":"3232:34:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3225:6:19"},"nodeType":"YulFunctionCall","src":"3225:42:19"},"nodeType":"YulIf","src":"3222:2:19"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3205:5:19","type":""}],"src":"3170:120:19"}]},"contents":"{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes32t_uint64t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101406040523480156200001257600080fd5b5060405162000ec738038062000ec783398181016040528101906200003891906200016e565b848073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050508360a081815250508473ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508260e081815250508167ffffffffffffffff166101008167ffffffffffffffff1660c01b815250508063ffffffff166101208163ffffffff1660e01b815250505050505050620002e9565b6000815190506200010c8162000267565b92915050565b600081519050620001238162000281565b92915050565b6000815190506200013a816200029b565b92915050565b6000815190506200015181620002b5565b92915050565b6000815190506200016881620002cf565b92915050565b600080600080600060a086880312156200018d576200018c62000262565b5b60006200019d88828901620000fb565b9550506020620001b08882890162000129565b9450506040620001c38882890162000112565b9350506060620001d68882890162000157565b9250506080620001e98882890162000140565b9150509295509295909350565b6000620002038262000214565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b600080fd5b6200027281620001f6565b81146200027e57600080fd5b50565b6200028c816200020a565b81146200029857600080fd5b50565b620002a68162000234565b8114620002b257600080fd5b50565b620002c0816200023e565b8114620002cc57600080fd5b50565b620002da816200024e565b8114620002e657600080fd5b50565b60805160601c60a05160c05160601c60e0516101005160c01c6101205160e01c610b746200035360003960006103cf015260006103ac0152600061038b0152600061034f01526000818161013b015261022101526000818161016101526101b50152610b746000f3fe6080604052600436106100555760003560e01c806309bc33a71461005a5780631fe543e3146100855780632cfcc539146100ae578063473f1ddc146100b8578063522a1f0b146100e3578063e55ae4e8146100fa575b600080fd5b34801561006657600080fd5b5061006f610137565b60405161007c9190610921565b60405180910390f35b34801561009157600080fd5b506100ac60048036038101906100a7919061079c565b61015f565b005b6100b661021f565b005b3480156100c457600080fd5b506100cd610321565b6040516100da919061088a565b60405180910390f35b3480156100ef57600080fd5b506100f861034b565b005b34801561010657600080fd5b50610121600480360381019061011c9190610742565b610494565b60405161012e919061088a565b60405180910390f35b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461021157337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f40000000000000000000000000000000000000000000000000000000081526004016102089291906108a5565b60405180910390fd5b61021b82826104db565b5050565b7f0000000000000000000000000000000000000000000000000000000000000000341015610279576040517fbd4e069500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f634f3211e3a4e43fee5a21ad9f87ca153b300fc78b1c557a2057dbe9c63bcb4760405160405180910390a2565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635d3b1d307f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060037f000000000000000000000000000000000000000000000000000000000000000060016040518663ffffffff1660e01b81526004016104109594939291906108ce565b602060405180830381600087803b15801561042a57600080fd5b505af115801561043e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610462919061076f565b9050807fcd6e45c8998311cab7e9d4385596cac867e20a0587194b954fa3a731c93ce78b60405160405180910390a250565b60008082815481106104a9576104a8610aa1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008080549050826000815181106104f6576104f5610aa1565b5b60200260200101516105089190610a41565b9050600080828154811061051f5761051e610aa1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008173ffffffffffffffffffffffffffffffffffffffff16476040516105b390610875565b60006040518083038185875af1925050503d80600081146105f0576040519150601f19603f3d011682016040523d82523d6000602084013e6105f5565b606091505b5050905080610630576040517fa1d04b3900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f5b690ec4a06fe979403046eaeea5b3ce38524683c3001f662c8b5a829632f7df60405160405180910390a25050505050565b600061068d61068884610961565b61093c565b905080838252602082019050828560208602820111156106b0576106af610b04565b5b60005b858110156106e057816106c68882610718565b8452602084019350602083019250506001810190506106b3565b5050509392505050565b600082601f8301126106ff576106fe610aff565b5b813561070f84826020860161067a565b91505092915050565b60008135905061072781610b27565b92915050565b60008151905061073c81610b27565b92915050565b60006020828403121561075857610757610b0e565b5b600061076684828501610718565b91505092915050565b60006020828403121561078557610784610b0e565b5b60006107938482850161072d565b91505092915050565b600080604083850312156107b3576107b2610b0e565b5b60006107c185828601610718565b925050602083013567ffffffffffffffff8111156107e2576107e1610b09565b5b6107ee858286016106ea565b9150509250929050565b61080181610998565b82525050565b610810816109aa565b82525050565b600061082360008361098d565b915061082e82610b24565b600082019050919050565b610842816109b4565b82525050565b610851816109e2565b82525050565b610860816109ec565b82525050565b61086f816109fc565b82525050565b600061088082610816565b9150819050919050565b600060208201905061089f60008301846107f8565b92915050565b60006040820190506108ba60008301856107f8565b6108c760208301846107f8565b9392505050565b600060a0820190506108e36000830188610807565b6108f06020830187610866565b6108fd6040830186610839565b61090a6060830185610857565b6109176080830184610857565b9695505050505050565b60006020820190506109366000830184610848565b92915050565b6000610946610957565b90506109528282610a10565b919050565b6000604051905090565b600067ffffffffffffffff82111561097c5761097b610ad0565b5b602082029050602081019050919050565b600081905092915050565b60006109a3826109c2565b9050919050565b6000819050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b610a1982610b13565b810181811067ffffffffffffffff82111715610a3857610a37610ad0565b5b80604052505050565b6000610a4c826109e2565b9150610a57836109e2565b925082610a6757610a66610a72565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b50565b610b30816109e2565b8114610b3b57600080fd5b5056fea2646970667358221220055e5c8954902e190b23223ee1e1f67f8baf634c2886c1823298a13507fad04a64736f6c63430008060033","opcodes":"PUSH2 0x140 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xEC7 CODESIZE SUB DUP1 PUSH3 0xEC7 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x16E JUMP JUMPDEST DUP5 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP DUP4 PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP3 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x100 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xC0 SHL DUP2 MSTORE POP POP DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x120 DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE POP POP POP POP POP POP POP PUSH3 0x2E9 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x10C DUP2 PUSH3 0x267 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x123 DUP2 PUSH3 0x281 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x13A DUP2 PUSH3 0x29B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x151 DUP2 PUSH3 0x2B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x168 DUP2 PUSH3 0x2CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x18D JUMPI PUSH3 0x18C PUSH3 0x262 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x19D DUP9 DUP3 DUP10 ADD PUSH3 0xFB JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH3 0x1B0 DUP9 DUP3 DUP10 ADD PUSH3 0x129 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH3 0x1C3 DUP9 DUP3 DUP10 ADD PUSH3 0x112 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH3 0x1D6 DUP9 DUP3 DUP10 ADD PUSH3 0x157 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH3 0x1E9 DUP9 DUP3 DUP10 ADD PUSH3 0x140 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x203 DUP3 PUSH3 0x214 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x272 DUP2 PUSH3 0x1F6 JUMP JUMPDEST DUP2 EQ PUSH3 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x28C DUP2 PUSH3 0x20A JUMP JUMPDEST DUP2 EQ PUSH3 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x2A6 DUP2 PUSH3 0x234 JUMP JUMPDEST DUP2 EQ PUSH3 0x2B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x2C0 DUP2 PUSH3 0x23E JUMP JUMPDEST DUP2 EQ PUSH3 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x2DA DUP2 PUSH3 0x24E JUMP JUMPDEST DUP2 EQ PUSH3 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0xC0 SHR PUSH2 0x120 MLOAD PUSH1 0xE0 SHR PUSH2 0xB74 PUSH3 0x353 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x3CF ADD MSTORE PUSH1 0x0 PUSH2 0x3AC ADD MSTORE PUSH1 0x0 PUSH2 0x38B ADD MSTORE PUSH1 0x0 PUSH2 0x34F ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x13B ADD MSTORE PUSH2 0x221 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x161 ADD MSTORE PUSH2 0x1B5 ADD MSTORE PUSH2 0xB74 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9BC33A7 EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x2CFCC539 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x473F1DDC EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x522A1F0B EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0xE55AE4E8 EQ PUSH2 0xFA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x137 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x921 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA7 SWAP2 SWAP1 PUSH2 0x79C JUMP JUMPDEST PUSH2 0x15F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB6 PUSH2 0x21F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCD PUSH2 0x321 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x88A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF8 PUSH2 0x34B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x742 JUMP JUMPDEST PUSH2 0x494 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x88A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x211 JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x208 SWAP3 SWAP2 SWAP1 PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x21B DUP3 DUP3 PUSH2 0x4DB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x279 JUMPI PUSH1 0x40 MLOAD PUSH32 0xBD4E069500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x634F3211E3A4E43FEE5A21AD9F87CA153B300FC78B1C557A2057DBE9C63BCB47 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x410 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x43E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x462 SWAP2 SWAP1 PUSH2 0x76F JUMP JUMPDEST SWAP1 POP DUP1 PUSH32 0xCD6E45C8998311CAB7E9D4385596CAC867E20A0587194B954FA3A731C93CE78B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4A9 JUMPI PUSH2 0x4A8 PUSH2 0xAA1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x4F6 JUMPI PUSH2 0x4F5 PUSH2 0xAA1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x508 SWAP2 SWAP1 PUSH2 0xA41 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x51F JUMPI PUSH2 0x51E PUSH2 0xAA1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0x5B3 SWAP1 PUSH2 0x875 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x5F0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5F5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x630 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA1D04B3900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5B690EC4A06FE979403046EAEEA5B3CE38524683C3001F662C8B5A829632F7DF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x68D PUSH2 0x688 DUP5 PUSH2 0x961 JUMP JUMPDEST PUSH2 0x93C JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x6B0 JUMPI PUSH2 0x6AF PUSH2 0xB04 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x6E0 JUMPI DUP2 PUSH2 0x6C6 DUP9 DUP3 PUSH2 0x718 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x6B3 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6FF JUMPI PUSH2 0x6FE PUSH2 0xAFF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x70F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x67A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x727 DUP2 PUSH2 0xB27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x73C DUP2 PUSH2 0xB27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x758 JUMPI PUSH2 0x757 PUSH2 0xB0E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x766 DUP5 DUP3 DUP6 ADD PUSH2 0x718 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x785 JUMPI PUSH2 0x784 PUSH2 0xB0E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x793 DUP5 DUP3 DUP6 ADD PUSH2 0x72D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7B3 JUMPI PUSH2 0x7B2 PUSH2 0xB0E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7C1 DUP6 DUP3 DUP7 ADD PUSH2 0x718 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7E2 JUMPI PUSH2 0x7E1 PUSH2 0xB09 JUMP JUMPDEST JUMPDEST PUSH2 0x7EE DUP6 DUP3 DUP7 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x801 DUP2 PUSH2 0x998 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x810 DUP2 PUSH2 0x9AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x823 PUSH1 0x0 DUP4 PUSH2 0x98D JUMP JUMPDEST SWAP2 POP PUSH2 0x82E DUP3 PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x842 DUP2 PUSH2 0x9B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x851 DUP2 PUSH2 0x9E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x860 DUP2 PUSH2 0x9EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x86F DUP2 PUSH2 0x9FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x880 DUP3 PUSH2 0x816 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x89F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x8BA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x8C7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7F8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x8E3 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x807 JUMP JUMPDEST PUSH2 0x8F0 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x866 JUMP JUMPDEST PUSH2 0x8FD PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x839 JUMP JUMPDEST PUSH2 0x90A PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x857 JUMP JUMPDEST PUSH2 0x917 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x857 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x936 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x848 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x946 PUSH2 0x957 JUMP JUMPDEST SWAP1 POP PUSH2 0x952 DUP3 DUP3 PUSH2 0xA10 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x97C JUMPI PUSH2 0x97B PUSH2 0xAD0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A3 DUP3 PUSH2 0x9C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA19 DUP3 PUSH2 0xB13 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xA38 JUMPI PUSH2 0xA37 PUSH2 0xAD0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA4C DUP3 PUSH2 0x9E2 JUMP JUMPDEST SWAP2 POP PUSH2 0xA57 DUP4 PUSH2 0x9E2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xA67 JUMPI PUSH2 0xA66 PUSH2 0xA72 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xB30 DUP2 PUSH2 0x9E2 JUMP JUMPDEST DUP2 EQ PUSH2 0xB3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV 0x5E 0x5C DUP10 SLOAD SWAP1 0x2E NOT SIGNEXTEND 0x23 0x22 RETURNDATACOPY 0xE1 0xE1 0xF6 PUSH32 0x8BAF634C2886C1823298A13507FAD04A64736F6C634300080600330000000000 ","sourceMap":"259:2772:18:-:0;;;956:441;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1144:16;5700:15:12;5683:32;;;;;;;;;;;;5640:80;1188:11:18::1;1172:27;;;;::::0;::::1;1254:16;1209:62;;;;;;;;;;::::0;::::1;1293:7;1281:19;;;;::::0;::::1;1329:14;1310:33;;;;;;;;;;::::0;::::1;1374:16;1353:37;;;;;;;;;;::::0;::::1;956:441:::0;;;;;259:2772;;7:143:19;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:143::-;213:5;244:6;238:13;229:22;;260:33;287:5;260:33;:::i;:::-;219:80;;;;:::o;305:143::-;362:5;393:6;387:13;378:22;;409:33;436:5;409:33;:::i;:::-;368:80;;;;:::o;454:141::-;510:5;541:6;535:13;526:22;;557:32;583:5;557:32;:::i;:::-;516:79;;;;:::o;601:141::-;657:5;688:6;682:13;673:22;;704:32;730:5;704:32;:::i;:::-;663:79;;;;:::o;748:973::-;852:6;860;868;876;884;933:3;921:9;912:7;908:23;904:33;901:2;;;940:79;;:::i;:::-;901:2;1060:1;1085:64;1141:7;1132:6;1121:9;1117:22;1085:64;:::i;:::-;1075:74;;1031:128;1198:2;1224:64;1280:7;1271:6;1260:9;1256:22;1224:64;:::i;:::-;1214:74;;1169:129;1337:2;1363:64;1419:7;1410:6;1399:9;1395:22;1363:64;:::i;:::-;1353:74;;1308:129;1476:2;1502:63;1557:7;1548:6;1537:9;1533:22;1502:63;:::i;:::-;1492:73;;1447:128;1614:3;1641:63;1696:7;1687:6;1676:9;1672:22;1641:63;:::i;:::-;1631:73;;1585:129;891:830;;;;;;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1853:51;;;:::o;1910:77::-;1947:7;1976:5;1965:16;;1955:32;;;:::o;1993:126::-;2030:7;2070:42;2063:5;2059:54;2048:65;;2038:81;;;:::o;2125:77::-;2162:7;2191:5;2180:16;;2170:32;;;:::o;2208:93::-;2244:7;2284:10;2277:5;2273:22;2262:33;;2252:49;;;:::o;2307:101::-;2343:7;2383:18;2376:5;2372:30;2361:41;;2351:57;;;:::o;2537:117::-;2646:1;2643;2636:12;2660:122;2733:24;2751:5;2733:24;:::i;:::-;2726:5;2723:35;2713:2;;2772:1;2769;2762:12;2713:2;2703:79;:::o;2788:122::-;2861:24;2879:5;2861:24;:::i;:::-;2854:5;2851:35;2841:2;;2900:1;2897;2890:12;2841:2;2831:79;:::o;2916:122::-;2989:24;3007:5;2989:24;:::i;:::-;2982:5;2979:35;2969:2;;3028:1;3025;3018:12;2969:2;2959:79;:::o;3044:120::-;3116:23;3133:5;3116:23;:::i;:::-;3109:5;3106:34;3096:2;;3154:1;3151;3144:12;3096:2;3086:78;:::o;3170:120::-;3242:23;3259:5;3242:23;:::i;:::-;3235:5;3232:34;3222:2;;3280:1;3277;3270:12;3222:2;3212:78;:::o;259:2772:18:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@enterRaffle_5128":{"entryPoint":543,"id":5128,"parameterSlots":0,"returnSlots":0},"@fulfillRandomWords_5200":{"entryPoint":1243,"id":5200,"parameterSlots":2,"returnSlots":0},"@getEntranceFee_5208":{"entryPoint":311,"id":5208,"parameterSlots":0,"returnSlots":1},"@getPlayer_5220":{"entryPoint":1172,"id":5220,"parameterSlots":1,"returnSlots":1},"@getRecentWinner_5228":{"entryPoint":801,"id":5228,"parameterSlots":0,"returnSlots":1},"@rawFulfillRandomWords_2451":{"entryPoint":351,"id":2451,"parameterSlots":2,"returnSlots":0},"@requestRandomWinner_5147":{"entryPoint":843,"id":5147,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":1658,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":1770,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":1816,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":1837,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":1858,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":1903,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":1948,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2040,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":2055,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2070,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":2105,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2120,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":2135,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":2150,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":2165,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2186,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":2213,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":2254,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2337,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":2364,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":2391,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":2401,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2445,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2456,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":2474,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":2484,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2498,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2530,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":2540,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":2556,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":2576,"id":null,"parameterSlots":2,"returnSlots":0},"mod_t_uint256":{"entryPoint":2625,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x12":{"entryPoint":2674,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":2721,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2768,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":2815,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":2820,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":2825,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2830,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2835,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":2852,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2855,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9052:19","statements":[{"body":{"nodeType":"YulBlock","src":"126:620:19","statements":[{"nodeType":"YulAssignment","src":"136:90:19","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"218:6:19"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"161:56:19"},"nodeType":"YulFunctionCall","src":"161:64:19"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"145:15:19"},"nodeType":"YulFunctionCall","src":"145:81:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"136:5:19"}]},{"nodeType":"YulVariableDeclaration","src":"235:16:19","value":{"name":"array","nodeType":"YulIdentifier","src":"246:5:19"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"239:3:19","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"268:5:19"},{"name":"length","nodeType":"YulIdentifier","src":"275:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"261:6:19"},"nodeType":"YulFunctionCall","src":"261:21:19"},"nodeType":"YulExpressionStatement","src":"261:21:19"},{"nodeType":"YulAssignment","src":"291:23:19","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"302:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"309:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"298:3:19"},"nodeType":"YulFunctionCall","src":"298:16:19"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"291:3:19"}]},{"nodeType":"YulVariableDeclaration","src":"324:17:19","value":{"name":"offset","nodeType":"YulIdentifier","src":"335:6:19"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"328:3:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"390:103:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"404:77:19"},"nodeType":"YulFunctionCall","src":"404:79:19"},"nodeType":"YulExpressionStatement","src":"404:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"360:3:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"369:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"377:4:19","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"365:3:19"},"nodeType":"YulFunctionCall","src":"365:17:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"356:3:19"},"nodeType":"YulFunctionCall","src":"356:27:19"},{"name":"end","nodeType":"YulIdentifier","src":"385:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"353:2:19"},"nodeType":"YulFunctionCall","src":"353:36:19"},"nodeType":"YulIf","src":"350:2:19"},{"body":{"nodeType":"YulBlock","src":"562:178:19","statements":[{"nodeType":"YulVariableDeclaration","src":"577:21:19","value":{"name":"src","nodeType":"YulIdentifier","src":"595:3:19"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"581:10:19","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"619:3:19"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"645:10:19"},{"name":"end","nodeType":"YulIdentifier","src":"657:3:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"624:20:19"},"nodeType":"YulFunctionCall","src":"624:37:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"612:6:19"},"nodeType":"YulFunctionCall","src":"612:50:19"},"nodeType":"YulExpressionStatement","src":"612:50:19"},{"nodeType":"YulAssignment","src":"675:21:19","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"686:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"691:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"682:3:19"},"nodeType":"YulFunctionCall","src":"682:14:19"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"675:3:19"}]},{"nodeType":"YulAssignment","src":"709:21:19","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"720:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"725:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"716:3:19"},"nodeType":"YulFunctionCall","src":"716:14:19"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"709:3:19"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"524:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"527:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"521:2:19"},"nodeType":"YulFunctionCall","src":"521:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"535:18:19","statements":[{"nodeType":"YulAssignment","src":"537:14:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"546:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"549:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"542:3:19"},"nodeType":"YulFunctionCall","src":"542:9:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"537:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"506:14:19","statements":[{"nodeType":"YulVariableDeclaration","src":"508:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"517:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"512:1:19","type":""}]}]},"src":"502:238:19"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"96:6:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"104:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"112:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"120:5:19","type":""}],"src":"24:722:19"},{"body":{"nodeType":"YulBlock","src":"846:293:19","statements":[{"body":{"nodeType":"YulBlock","src":"895:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"897:77:19"},"nodeType":"YulFunctionCall","src":"897:79:19"},"nodeType":"YulExpressionStatement","src":"897:79:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"874:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"882:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"870:3:19"},"nodeType":"YulFunctionCall","src":"870:17:19"},{"name":"end","nodeType":"YulIdentifier","src":"889:3:19"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"866:3:19"},"nodeType":"YulFunctionCall","src":"866:27:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"859:6:19"},"nodeType":"YulFunctionCall","src":"859:35:19"},"nodeType":"YulIf","src":"856:2:19"},{"nodeType":"YulVariableDeclaration","src":"987:34:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1014:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1001:12:19"},"nodeType":"YulFunctionCall","src":"1001:20:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"991:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1030:103:19","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1106:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"1114:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1102:3:19"},"nodeType":"YulFunctionCall","src":"1102:17:19"},{"name":"length","nodeType":"YulIdentifier","src":"1121:6:19"},{"name":"end","nodeType":"YulIdentifier","src":"1129:3:19"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"1039:62:19"},"nodeType":"YulFunctionCall","src":"1039:94:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1030:5:19"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"824:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"832:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"840:5:19","type":""}],"src":"769:370:19"},{"body":{"nodeType":"YulBlock","src":"1197:87:19","statements":[{"nodeType":"YulAssignment","src":"1207:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1229:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1216:12:19"},"nodeType":"YulFunctionCall","src":"1216:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1207:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1272:5:19"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1245:26:19"},"nodeType":"YulFunctionCall","src":"1245:33:19"},"nodeType":"YulExpressionStatement","src":"1245:33:19"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1175:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"1183:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1191:5:19","type":""}],"src":"1145:139:19"},{"body":{"nodeType":"YulBlock","src":"1353:80:19","statements":[{"nodeType":"YulAssignment","src":"1363:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1378:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1372:5:19"},"nodeType":"YulFunctionCall","src":"1372:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1363:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1421:5:19"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1394:26:19"},"nodeType":"YulFunctionCall","src":"1394:33:19"},"nodeType":"YulExpressionStatement","src":"1394:33:19"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1331:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"1339:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1347:5:19","type":""}],"src":"1290:143:19"},{"body":{"nodeType":"YulBlock","src":"1505:263:19","statements":[{"body":{"nodeType":"YulBlock","src":"1551:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1553:77:19"},"nodeType":"YulFunctionCall","src":"1553:79:19"},"nodeType":"YulExpressionStatement","src":"1553:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1526:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"1535:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1522:3:19"},"nodeType":"YulFunctionCall","src":"1522:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"1547:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1518:3:19"},"nodeType":"YulFunctionCall","src":"1518:32:19"},"nodeType":"YulIf","src":"1515:2:19"},{"nodeType":"YulBlock","src":"1644:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1659:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1673:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1663:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1688:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1723:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1734:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1719:3:19"},"nodeType":"YulFunctionCall","src":"1719:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1743:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1698:20:19"},"nodeType":"YulFunctionCall","src":"1698:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1688:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1475:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1486:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1498:6:19","type":""}],"src":"1439:329:19"},{"body":{"nodeType":"YulBlock","src":"1851:274:19","statements":[{"body":{"nodeType":"YulBlock","src":"1897:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1899:77:19"},"nodeType":"YulFunctionCall","src":"1899:79:19"},"nodeType":"YulExpressionStatement","src":"1899:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1872:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"1881:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1868:3:19"},"nodeType":"YulFunctionCall","src":"1868:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"1893:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1864:3:19"},"nodeType":"YulFunctionCall","src":"1864:32:19"},"nodeType":"YulIf","src":"1861:2:19"},{"nodeType":"YulBlock","src":"1990:128:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2005:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"2019:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2009:6:19","type":""}]},{"nodeType":"YulAssignment","src":"2034:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2080:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"2091:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2076:3:19"},"nodeType":"YulFunctionCall","src":"2076:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2100:7:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"2044:31:19"},"nodeType":"YulFunctionCall","src":"2044:64:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2034:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1821:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1832:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1844:6:19","type":""}],"src":"1774:351:19"},{"body":{"nodeType":"YulBlock","src":"2239:576:19","statements":[{"body":{"nodeType":"YulBlock","src":"2285:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2287:77:19"},"nodeType":"YulFunctionCall","src":"2287:79:19"},"nodeType":"YulExpressionStatement","src":"2287:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2260:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"2269:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2256:3:19"},"nodeType":"YulFunctionCall","src":"2256:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"2281:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2252:3:19"},"nodeType":"YulFunctionCall","src":"2252:32:19"},"nodeType":"YulIf","src":"2249:2:19"},{"nodeType":"YulBlock","src":"2378:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2393:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"2407:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2397:6:19","type":""}]},{"nodeType":"YulAssignment","src":"2422:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2457:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"2468:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2453:3:19"},"nodeType":"YulFunctionCall","src":"2453:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2477:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2432:20:19"},"nodeType":"YulFunctionCall","src":"2432:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2422:6:19"}]}]},{"nodeType":"YulBlock","src":"2505:303:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2520:46:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2551:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2562:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2547:3:19"},"nodeType":"YulFunctionCall","src":"2547:18:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2534:12:19"},"nodeType":"YulFunctionCall","src":"2534:32:19"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2524:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"2613:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"2615:77:19"},"nodeType":"YulFunctionCall","src":"2615:79:19"},"nodeType":"YulExpressionStatement","src":"2615:79:19"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2585:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"2593:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2582:2:19"},"nodeType":"YulFunctionCall","src":"2582:30:19"},"nodeType":"YulIf","src":"2579:2:19"},{"nodeType":"YulAssignment","src":"2710:88:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2770:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"2781:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2766:3:19"},"nodeType":"YulFunctionCall","src":"2766:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2790:7:19"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"2720:45:19"},"nodeType":"YulFunctionCall","src":"2720:78:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2710:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2201:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2212:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2224:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2232:6:19","type":""}],"src":"2131:684:19"},{"body":{"nodeType":"YulBlock","src":"2886:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2903:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2926:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2908:17:19"},"nodeType":"YulFunctionCall","src":"2908:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2896:6:19"},"nodeType":"YulFunctionCall","src":"2896:37:19"},"nodeType":"YulExpressionStatement","src":"2896:37:19"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2874:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2881:3:19","type":""}],"src":"2821:118:19"},{"body":{"nodeType":"YulBlock","src":"3010:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3027:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3050:5:19"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"3032:17:19"},"nodeType":"YulFunctionCall","src":"3032:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3020:6:19"},"nodeType":"YulFunctionCall","src":"3020:37:19"},"nodeType":"YulExpressionStatement","src":"3020:37:19"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2998:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3005:3:19","type":""}],"src":"2945:118:19"},{"body":{"nodeType":"YulBlock","src":"3232:235:19","statements":[{"nodeType":"YulAssignment","src":"3242:90:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3325:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"3330:1:19","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"3249:75:19"},"nodeType":"YulFunctionCall","src":"3249:83:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3242:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3430:3:19"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"3341:88:19"},"nodeType":"YulFunctionCall","src":"3341:93:19"},"nodeType":"YulExpressionStatement","src":"3341:93:19"},{"nodeType":"YulAssignment","src":"3443:18:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3454:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"3459:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3450:3:19"},"nodeType":"YulFunctionCall","src":"3450:11:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3443:3:19"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3220:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3228:3:19","type":""}],"src":"3069:398:19"},{"body":{"nodeType":"YulBlock","src":"3536:52:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3553:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3575:5:19"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"3558:16:19"},"nodeType":"YulFunctionCall","src":"3558:23:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3546:6:19"},"nodeType":"YulFunctionCall","src":"3546:36:19"},"nodeType":"YulExpressionStatement","src":"3546:36:19"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3524:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3531:3:19","type":""}],"src":"3473:115:19"},{"body":{"nodeType":"YulBlock","src":"3659:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3676:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3699:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3681:17:19"},"nodeType":"YulFunctionCall","src":"3681:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3669:6:19"},"nodeType":"YulFunctionCall","src":"3669:37:19"},"nodeType":"YulExpressionStatement","src":"3669:37:19"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3647:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3654:3:19","type":""}],"src":"3594:118:19"},{"body":{"nodeType":"YulBlock","src":"3781:52:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3798:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3820:5:19"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"3803:16:19"},"nodeType":"YulFunctionCall","src":"3803:23:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3791:6:19"},"nodeType":"YulFunctionCall","src":"3791:36:19"},"nodeType":"YulExpressionStatement","src":"3791:36:19"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3769:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3776:3:19","type":""}],"src":"3718:115:19"},{"body":{"nodeType":"YulBlock","src":"3902:52:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3919:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3941:5:19"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"3924:16:19"},"nodeType":"YulFunctionCall","src":"3924:23:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3912:6:19"},"nodeType":"YulFunctionCall","src":"3912:36:19"},"nodeType":"YulExpressionStatement","src":"3912:36:19"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3890:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3897:3:19","type":""}],"src":"3839:115:19"},{"body":{"nodeType":"YulBlock","src":"4148:191:19","statements":[{"nodeType":"YulAssignment","src":"4159:154:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4309:3:19"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"4166:141:19"},"nodeType":"YulFunctionCall","src":"4166:147:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4159:3:19"}]},{"nodeType":"YulAssignment","src":"4323:10:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"4330:3:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4323:3:19"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4135:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4144:3:19","type":""}],"src":"3960:379:19"},{"body":{"nodeType":"YulBlock","src":"4443:124:19","statements":[{"nodeType":"YulAssignment","src":"4453:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4465:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4476:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4461:3:19"},"nodeType":"YulFunctionCall","src":"4461:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4453:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4533:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4546:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4557:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4542:3:19"},"nodeType":"YulFunctionCall","src":"4542:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4489:43:19"},"nodeType":"YulFunctionCall","src":"4489:71:19"},"nodeType":"YulExpressionStatement","src":"4489:71:19"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4415:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4427:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4438:4:19","type":""}],"src":"4345:222:19"},{"body":{"nodeType":"YulBlock","src":"4699:206:19","statements":[{"nodeType":"YulAssignment","src":"4709:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4721:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4732:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4717:3:19"},"nodeType":"YulFunctionCall","src":"4717:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4709:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4789:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4802:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4813:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4798:3:19"},"nodeType":"YulFunctionCall","src":"4798:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4745:43:19"},"nodeType":"YulFunctionCall","src":"4745:71:19"},"nodeType":"YulExpressionStatement","src":"4745:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4870:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4883:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4894:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4879:3:19"},"nodeType":"YulFunctionCall","src":"4879:18:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4826:43:19"},"nodeType":"YulFunctionCall","src":"4826:72:19"},"nodeType":"YulExpressionStatement","src":"4826:72:19"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4663:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4675:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4683:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4694:4:19","type":""}],"src":"4573:332:19"},{"body":{"nodeType":"YulBlock","src":"5113:446:19","statements":[{"nodeType":"YulAssignment","src":"5123:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5135:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5146:3:19","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5131:3:19"},"nodeType":"YulFunctionCall","src":"5131:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5123:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5204:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5217:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5228:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5213:3:19"},"nodeType":"YulFunctionCall","src":"5213:17:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"5160:43:19"},"nodeType":"YulFunctionCall","src":"5160:71:19"},"nodeType":"YulExpressionStatement","src":"5160:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5283:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5296:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5307:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5292:3:19"},"nodeType":"YulFunctionCall","src":"5292:18:19"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"5241:41:19"},"nodeType":"YulFunctionCall","src":"5241:70:19"},"nodeType":"YulExpressionStatement","src":"5241:70:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5363:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5376:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5387:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5372:3:19"},"nodeType":"YulFunctionCall","src":"5372:18:19"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"5321:41:19"},"nodeType":"YulFunctionCall","src":"5321:70:19"},"nodeType":"YulExpressionStatement","src":"5321:70:19"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"5443:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5456:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5467:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5452:3:19"},"nodeType":"YulFunctionCall","src":"5452:18:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"5401:41:19"},"nodeType":"YulFunctionCall","src":"5401:70:19"},"nodeType":"YulExpressionStatement","src":"5401:70:19"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"5523:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5536:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5547:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5532:3:19"},"nodeType":"YulFunctionCall","src":"5532:19:19"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"5481:41:19"},"nodeType":"YulFunctionCall","src":"5481:71:19"},"nodeType":"YulExpressionStatement","src":"5481:71:19"}]},"name":"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5053:9:19","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5065:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5073:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5081:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5089:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5097:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5108:4:19","type":""}],"src":"4911:648:19"},{"body":{"nodeType":"YulBlock","src":"5663:124:19","statements":[{"nodeType":"YulAssignment","src":"5673:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5685:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5696:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5681:3:19"},"nodeType":"YulFunctionCall","src":"5681:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5673:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5753:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5766:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5777:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5762:3:19"},"nodeType":"YulFunctionCall","src":"5762:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5709:43:19"},"nodeType":"YulFunctionCall","src":"5709:71:19"},"nodeType":"YulExpressionStatement","src":"5709:71:19"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5635:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5647:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5658:4:19","type":""}],"src":"5565:222:19"},{"body":{"nodeType":"YulBlock","src":"5834:88:19","statements":[{"nodeType":"YulAssignment","src":"5844:30:19","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"5854:18:19"},"nodeType":"YulFunctionCall","src":"5854:20:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5844:6:19"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5903:6:19"},{"name":"size","nodeType":"YulIdentifier","src":"5911:4:19"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"5883:19:19"},"nodeType":"YulFunctionCall","src":"5883:33:19"},"nodeType":"YulExpressionStatement","src":"5883:33:19"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"5818:4:19","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5827:6:19","type":""}],"src":"5793:129:19"},{"body":{"nodeType":"YulBlock","src":"5968:35:19","statements":[{"nodeType":"YulAssignment","src":"5978:19:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5994:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5988:5:19"},"nodeType":"YulFunctionCall","src":"5988:9:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5978:6:19"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5961:6:19","type":""}],"src":"5928:75:19"},{"body":{"nodeType":"YulBlock","src":"6091:229:19","statements":[{"body":{"nodeType":"YulBlock","src":"6196:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6198:16:19"},"nodeType":"YulFunctionCall","src":"6198:18:19"},"nodeType":"YulExpressionStatement","src":"6198:18:19"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6168:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"6176:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6165:2:19"},"nodeType":"YulFunctionCall","src":"6165:30:19"},"nodeType":"YulIf","src":"6162:2:19"},{"nodeType":"YulAssignment","src":"6228:25:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6240:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"6248:4:19","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6236:3:19"},"nodeType":"YulFunctionCall","src":"6236:17:19"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6228:4:19"}]},{"nodeType":"YulAssignment","src":"6290:23:19","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6302:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"6308:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6298:3:19"},"nodeType":"YulFunctionCall","src":"6298:15:19"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6290:4:19"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"6075:6:19","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"6086:4:19","type":""}],"src":"6009:311:19"},{"body":{"nodeType":"YulBlock","src":"6439:34:19","statements":[{"nodeType":"YulAssignment","src":"6449:18:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"6464:3:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6449:11:19"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6411:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"6416:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6427:11:19","type":""}],"src":"6326:147:19"},{"body":{"nodeType":"YulBlock","src":"6524:51:19","statements":[{"nodeType":"YulAssignment","src":"6534:35:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6563:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"6545:17:19"},"nodeType":"YulFunctionCall","src":"6545:24:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6534:7:19"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6506:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6516:7:19","type":""}],"src":"6479:96:19"},{"body":{"nodeType":"YulBlock","src":"6626:32:19","statements":[{"nodeType":"YulAssignment","src":"6636:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"6647:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6636:7:19"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6608:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6618:7:19","type":""}],"src":"6581:77:19"},{"body":{"nodeType":"YulBlock","src":"6708:45:19","statements":[{"nodeType":"YulAssignment","src":"6718:29:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6733:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"6740:6:19","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6729:3:19"},"nodeType":"YulFunctionCall","src":"6729:18:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6718:7:19"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6690:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6700:7:19","type":""}],"src":"6664:89:19"},{"body":{"nodeType":"YulBlock","src":"6804:81:19","statements":[{"nodeType":"YulAssignment","src":"6814:65:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6829:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"6836:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6825:3:19"},"nodeType":"YulFunctionCall","src":"6825:54:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6814:7:19"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6786:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6796:7:19","type":""}],"src":"6759:126:19"},{"body":{"nodeType":"YulBlock","src":"6936:32:19","statements":[{"nodeType":"YulAssignment","src":"6946:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"6957:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6946:7:19"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6918:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6928:7:19","type":""}],"src":"6891:77:19"},{"body":{"nodeType":"YulBlock","src":"7018:49:19","statements":[{"nodeType":"YulAssignment","src":"7028:33:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7043:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"7050:10:19","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7039:3:19"},"nodeType":"YulFunctionCall","src":"7039:22:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7028:7:19"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7000:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7010:7:19","type":""}],"src":"6974:93:19"},{"body":{"nodeType":"YulBlock","src":"7117:57:19","statements":[{"nodeType":"YulAssignment","src":"7127:41:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7142:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"7149:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7138:3:19"},"nodeType":"YulFunctionCall","src":"7138:30:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7127:7:19"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7099:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7109:7:19","type":""}],"src":"7073:101:19"},{"body":{"nodeType":"YulBlock","src":"7223:238:19","statements":[{"nodeType":"YulVariableDeclaration","src":"7233:58:19","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7255:6:19"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7285:4:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7263:21:19"},"nodeType":"YulFunctionCall","src":"7263:27:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7251:3:19"},"nodeType":"YulFunctionCall","src":"7251:40:19"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7237:10:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"7402:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7404:16:19"},"nodeType":"YulFunctionCall","src":"7404:18:19"},"nodeType":"YulExpressionStatement","src":"7404:18:19"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7345:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"7357:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7342:2:19"},"nodeType":"YulFunctionCall","src":"7342:34:19"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7381:10:19"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7393:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7378:2:19"},"nodeType":"YulFunctionCall","src":"7378:22:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7339:2:19"},"nodeType":"YulFunctionCall","src":"7339:62:19"},"nodeType":"YulIf","src":"7336:2:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7440:2:19","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7444:10:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7433:6:19"},"nodeType":"YulFunctionCall","src":"7433:22:19"},"nodeType":"YulExpressionStatement","src":"7433:22:19"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7209:6:19","type":""},{"name":"size","nodeType":"YulTypedName","src":"7217:4:19","type":""}],"src":"7180:281:19"},{"body":{"nodeType":"YulBlock","src":"7501:142:19","statements":[{"nodeType":"YulAssignment","src":"7511:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7534:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7516:17:19"},"nodeType":"YulFunctionCall","src":"7516:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"7511:1:19"}]},{"nodeType":"YulAssignment","src":"7545:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7568:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7550:17:19"},"nodeType":"YulFunctionCall","src":"7550:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"7545:1:19"}]},{"body":{"nodeType":"YulBlock","src":"7592:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"7594:16:19"},"nodeType":"YulFunctionCall","src":"7594:18:19"},"nodeType":"YulExpressionStatement","src":"7594:18:19"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7589:1:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7582:6:19"},"nodeType":"YulFunctionCall","src":"7582:9:19"},"nodeType":"YulIf","src":"7579:2:19"},{"nodeType":"YulAssignment","src":"7623:14:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7632:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"7635:1:19"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"7628:3:19"},"nodeType":"YulFunctionCall","src":"7628:9:19"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7623:1:19"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7490:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"7493:1:19","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"7499:1:19","type":""}],"src":"7467:176:19"},{"body":{"nodeType":"YulBlock","src":"7677:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7694:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7697:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7687:6:19"},"nodeType":"YulFunctionCall","src":"7687:88:19"},"nodeType":"YulExpressionStatement","src":"7687:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7791:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7794:4:19","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7784:6:19"},"nodeType":"YulFunctionCall","src":"7784:15:19"},"nodeType":"YulExpressionStatement","src":"7784:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7815:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7818:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7808:6:19"},"nodeType":"YulFunctionCall","src":"7808:15:19"},"nodeType":"YulExpressionStatement","src":"7808:15:19"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"7649:180:19"},{"body":{"nodeType":"YulBlock","src":"7863:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7880:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7883:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7873:6:19"},"nodeType":"YulFunctionCall","src":"7873:88:19"},"nodeType":"YulExpressionStatement","src":"7873:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7977:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7980:4:19","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7970:6:19"},"nodeType":"YulFunctionCall","src":"7970:15:19"},"nodeType":"YulExpressionStatement","src":"7970:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8001:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8004:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7994:6:19"},"nodeType":"YulFunctionCall","src":"7994:15:19"},"nodeType":"YulExpressionStatement","src":"7994:15:19"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"7835:180:19"},{"body":{"nodeType":"YulBlock","src":"8049:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8066:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8069:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8059:6:19"},"nodeType":"YulFunctionCall","src":"8059:88:19"},"nodeType":"YulExpressionStatement","src":"8059:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8163:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8166:4:19","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8156:6:19"},"nodeType":"YulFunctionCall","src":"8156:15:19"},"nodeType":"YulExpressionStatement","src":"8156:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8187:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8190:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8180:6:19"},"nodeType":"YulFunctionCall","src":"8180:15:19"},"nodeType":"YulExpressionStatement","src":"8180:15:19"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"8021:180:19"},{"body":{"nodeType":"YulBlock","src":"8296:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8313:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8316:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8306:6:19"},"nodeType":"YulFunctionCall","src":"8306:12:19"},"nodeType":"YulExpressionStatement","src":"8306:12:19"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"8207:117:19"},{"body":{"nodeType":"YulBlock","src":"8419:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8436:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8439:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8429:6:19"},"nodeType":"YulFunctionCall","src":"8429:12:19"},"nodeType":"YulExpressionStatement","src":"8429:12:19"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"8330:117:19"},{"body":{"nodeType":"YulBlock","src":"8542:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8559:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8562:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8552:6:19"},"nodeType":"YulFunctionCall","src":"8552:12:19"},"nodeType":"YulExpressionStatement","src":"8552:12:19"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"8453:117:19"},{"body":{"nodeType":"YulBlock","src":"8665:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8682:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8685:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8675:6:19"},"nodeType":"YulFunctionCall","src":"8675:12:19"},"nodeType":"YulExpressionStatement","src":"8675:12:19"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"8576:117:19"},{"body":{"nodeType":"YulBlock","src":"8747:54:19","statements":[{"nodeType":"YulAssignment","src":"8757:38:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8775:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"8782:2:19","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8771:3:19"},"nodeType":"YulFunctionCall","src":"8771:14:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8791:2:19","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8787:3:19"},"nodeType":"YulFunctionCall","src":"8787:7:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8767:3:19"},"nodeType":"YulFunctionCall","src":"8767:28:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8757:6:19"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8730:5:19","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"8740:6:19","type":""}],"src":"8699:102:19"},{"body":{"nodeType":"YulBlock","src":"8913:8:19","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8905:6:19","type":""}],"src":"8807:114:19"},{"body":{"nodeType":"YulBlock","src":"8970:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"9027:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9036:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9039:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9029:6:19"},"nodeType":"YulFunctionCall","src":"9029:12:19"},"nodeType":"YulExpressionStatement","src":"9029:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8993:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9018:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9000:17:19"},"nodeType":"YulFunctionCall","src":"9000:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8990:2:19"},"nodeType":"YulFunctionCall","src":"8990:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8983:6:19"},"nodeType":"YulFunctionCall","src":"8983:43:19"},"nodeType":"YulIf","src":"8980:2:19"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8963:5:19","type":""}],"src":"8927:122:19"}]},"contents":"{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2405":[{"length":32,"start":353},{"length":32,"start":437}],"5029":[{"length":32,"start":315},{"length":32,"start":545}],"5035":[{"length":32,"start":847}],"5037":[{"length":32,"start":907}],"5039":[{"length":32,"start":940}],"5041":[{"length":32,"start":975}]},"linkReferences":{},"object":"6080604052600436106100555760003560e01c806309bc33a71461005a5780631fe543e3146100855780632cfcc539146100ae578063473f1ddc146100b8578063522a1f0b146100e3578063e55ae4e8146100fa575b600080fd5b34801561006657600080fd5b5061006f610137565b60405161007c9190610921565b60405180910390f35b34801561009157600080fd5b506100ac60048036038101906100a7919061079c565b61015f565b005b6100b661021f565b005b3480156100c457600080fd5b506100cd610321565b6040516100da919061088a565b60405180910390f35b3480156100ef57600080fd5b506100f861034b565b005b34801561010657600080fd5b50610121600480360381019061011c9190610742565b610494565b60405161012e919061088a565b60405180910390f35b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461021157337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f40000000000000000000000000000000000000000000000000000000081526004016102089291906108a5565b60405180910390fd5b61021b82826104db565b5050565b7f0000000000000000000000000000000000000000000000000000000000000000341015610279576040517fbd4e069500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f634f3211e3a4e43fee5a21ad9f87ca153b300fc78b1c557a2057dbe9c63bcb4760405160405180910390a2565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635d3b1d307f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060037f000000000000000000000000000000000000000000000000000000000000000060016040518663ffffffff1660e01b81526004016104109594939291906108ce565b602060405180830381600087803b15801561042a57600080fd5b505af115801561043e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610462919061076f565b9050807fcd6e45c8998311cab7e9d4385596cac867e20a0587194b954fa3a731c93ce78b60405160405180910390a250565b60008082815481106104a9576104a8610aa1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008080549050826000815181106104f6576104f5610aa1565b5b60200260200101516105089190610a41565b9050600080828154811061051f5761051e610aa1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008173ffffffffffffffffffffffffffffffffffffffff16476040516105b390610875565b60006040518083038185875af1925050503d80600081146105f0576040519150601f19603f3d011682016040523d82523d6000602084013e6105f5565b606091505b5050905080610630576040517fa1d04b3900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f5b690ec4a06fe979403046eaeea5b3ce38524683c3001f662c8b5a829632f7df60405160405180910390a25050505050565b600061068d61068884610961565b61093c565b905080838252602082019050828560208602820111156106b0576106af610b04565b5b60005b858110156106e057816106c68882610718565b8452602084019350602083019250506001810190506106b3565b5050509392505050565b600082601f8301126106ff576106fe610aff565b5b813561070f84826020860161067a565b91505092915050565b60008135905061072781610b27565b92915050565b60008151905061073c81610b27565b92915050565b60006020828403121561075857610757610b0e565b5b600061076684828501610718565b91505092915050565b60006020828403121561078557610784610b0e565b5b60006107938482850161072d565b91505092915050565b600080604083850312156107b3576107b2610b0e565b5b60006107c185828601610718565b925050602083013567ffffffffffffffff8111156107e2576107e1610b09565b5b6107ee858286016106ea565b9150509250929050565b61080181610998565b82525050565b610810816109aa565b82525050565b600061082360008361098d565b915061082e82610b24565b600082019050919050565b610842816109b4565b82525050565b610851816109e2565b82525050565b610860816109ec565b82525050565b61086f816109fc565b82525050565b600061088082610816565b9150819050919050565b600060208201905061089f60008301846107f8565b92915050565b60006040820190506108ba60008301856107f8565b6108c760208301846107f8565b9392505050565b600060a0820190506108e36000830188610807565b6108f06020830187610866565b6108fd6040830186610839565b61090a6060830185610857565b6109176080830184610857565b9695505050505050565b60006020820190506109366000830184610848565b92915050565b6000610946610957565b90506109528282610a10565b919050565b6000604051905090565b600067ffffffffffffffff82111561097c5761097b610ad0565b5b602082029050602081019050919050565b600081905092915050565b60006109a3826109c2565b9050919050565b6000819050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b610a1982610b13565b810181811067ffffffffffffffff82111715610a3857610a37610ad0565b5b80604052505050565b6000610a4c826109e2565b9150610a57836109e2565b925082610a6757610a66610a72565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b50565b610b30816109e2565b8114610b3b57600080fd5b5056fea2646970667358221220055e5c8954902e190b23223ee1e1f67f8baf634c2886c1823298a13507fad04a64736f6c63430008060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9BC33A7 EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x2CFCC539 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x473F1DDC EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x522A1F0B EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0xE55AE4E8 EQ PUSH2 0xFA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x137 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x921 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA7 SWAP2 SWAP1 PUSH2 0x79C JUMP JUMPDEST PUSH2 0x15F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB6 PUSH2 0x21F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCD PUSH2 0x321 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x88A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF8 PUSH2 0x34B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x742 JUMP JUMPDEST PUSH2 0x494 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x88A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x211 JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x208 SWAP3 SWAP2 SWAP1 PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x21B DUP3 DUP3 PUSH2 0x4DB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x279 JUMPI PUSH1 0x40 MLOAD PUSH32 0xBD4E069500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x634F3211E3A4E43FEE5A21AD9F87CA153B300FC78B1C557A2057DBE9C63BCB47 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x410 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x43E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x462 SWAP2 SWAP1 PUSH2 0x76F JUMP JUMPDEST SWAP1 POP DUP1 PUSH32 0xCD6E45C8998311CAB7E9D4385596CAC867E20A0587194B954FA3A731C93CE78B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4A9 JUMPI PUSH2 0x4A8 PUSH2 0xAA1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x4F6 JUMPI PUSH2 0x4F5 PUSH2 0xAA1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x508 SWAP2 SWAP1 PUSH2 0xA41 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x51F JUMPI PUSH2 0x51E PUSH2 0xAA1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0x5B3 SWAP1 PUSH2 0x875 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x5F0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5F5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x630 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA1D04B3900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5B690EC4A06FE979403046EAEEA5B3CE38524683C3001F662C8B5A829632F7DF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x68D PUSH2 0x688 DUP5 PUSH2 0x961 JUMP JUMPDEST PUSH2 0x93C JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x6B0 JUMPI PUSH2 0x6AF PUSH2 0xB04 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x6E0 JUMPI DUP2 PUSH2 0x6C6 DUP9 DUP3 PUSH2 0x718 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x6B3 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6FF JUMPI PUSH2 0x6FE PUSH2 0xAFF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x70F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x67A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x727 DUP2 PUSH2 0xB27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x73C DUP2 PUSH2 0xB27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x758 JUMPI PUSH2 0x757 PUSH2 0xB0E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x766 DUP5 DUP3 DUP6 ADD PUSH2 0x718 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x785 JUMPI PUSH2 0x784 PUSH2 0xB0E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x793 DUP5 DUP3 DUP6 ADD PUSH2 0x72D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7B3 JUMPI PUSH2 0x7B2 PUSH2 0xB0E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7C1 DUP6 DUP3 DUP7 ADD PUSH2 0x718 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7E2 JUMPI PUSH2 0x7E1 PUSH2 0xB09 JUMP JUMPDEST JUMPDEST PUSH2 0x7EE DUP6 DUP3 DUP7 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x801 DUP2 PUSH2 0x998 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x810 DUP2 PUSH2 0x9AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x823 PUSH1 0x0 DUP4 PUSH2 0x98D JUMP JUMPDEST SWAP2 POP PUSH2 0x82E DUP3 PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x842 DUP2 PUSH2 0x9B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x851 DUP2 PUSH2 0x9E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x860 DUP2 PUSH2 0x9EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x86F DUP2 PUSH2 0x9FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x880 DUP3 PUSH2 0x816 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x89F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x8BA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x8C7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7F8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x8E3 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x807 JUMP JUMPDEST PUSH2 0x8F0 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x866 JUMP JUMPDEST PUSH2 0x8FD PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x839 JUMP JUMPDEST PUSH2 0x90A PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x857 JUMP JUMPDEST PUSH2 0x917 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x857 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x936 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x848 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x946 PUSH2 0x957 JUMP JUMPDEST SWAP1 POP PUSH2 0x952 DUP3 DUP3 PUSH2 0xA10 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x97C JUMPI PUSH2 0x97B PUSH2 0xAD0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A3 DUP3 PUSH2 0x9C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA19 DUP3 PUSH2 0xB13 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xA38 JUMPI PUSH2 0xA37 PUSH2 0xAD0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA4C DUP3 PUSH2 0x9E2 JUMP JUMPDEST SWAP2 POP PUSH2 0xA57 DUP4 PUSH2 0x9E2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xA67 JUMPI PUSH2 0xA66 PUSH2 0xA72 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xB30 DUP2 PUSH2 0x9E2 JUMP JUMPDEST DUP2 EQ PUSH2 0xB3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV 0x5E 0x5C DUP10 SLOAD SWAP1 0x2E NOT SIGNEXTEND 0x23 0x22 RETURNDATACOPY 0xE1 0xE1 0xF6 PUSH32 0x8BAF634C2886C1823298A13507FAD04A64736F6C634300080600330000000000 ","sourceMap":"259:2772:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2725:93;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6794:256:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1403:419:18;;;:::i;:::-;;2934:95;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1828:323;;;;;;;;;;;;;:::i;:::-;;2824:104;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2725:93;2772:7;2798:13;2791:20;;2725:93;:::o;6794:256:12:-;6907:14;6893:28;;:10;:28;;;6889:109;;6964:10;6976:14;6938:53;;;;;;;;;;;;:::i;:::-;;;;;;;;6889:109;7003:42;7022:9;7033:11;7003:18;:42::i;:::-;6794:256;;:::o;1403:419:18:-;1635:13;1623:9;:25;1619:92;;;1671:29;;;;;;;;;;;;;;1619:92;1721:9;1744:10;1721:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1804:10;1790:25;;;;;;;;;;;;1403:419::o;2934:95::-;2982:7;3008:14;;;;;;;;;;;3001:21;;2934:95;:::o;1828:323::-;1878:17;1898:16;:35;;;1947:9;1981:16;665:1;2046:18;708:1;1898:199;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1878:219;;2134:9;2112:32;;;;;;;;;;1868:283;1828:323::o;2824:104::-;2879:7;2905:9;2915:5;2905:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2898:23;;2824:104;;;:::o;2157:529::-;2290:21;2331:9;:16;;;;2314:11;2326:1;2314:14;;;;;;;;:::i;:::-;;;;;;;;:33;;;;:::i;:::-;2290:57;;2357:28;2388:9;2398:13;2388:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2357:55;;2439:12;2422:14;;:29;;;;;;;;;;;;;;;;;;2462:12;2480;:17;;2505:21;2480:51;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2461:70;;;2574:7;2569:70;;2604:24;;;;;;;;;;;;;;2569:70;2666:12;2653:26;;;;;;;;;;;;2280:406;;;2157:529;;:::o;24:722:19:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:2;;;404:79;;:::i;:::-;350:2;517:1;502:238;527:6;524:1;521:13;502:238;;;595:3;624:37;657:3;645:10;624:37;:::i;:::-;619:3;612:50;691:4;686:3;682:14;675:21;;725:4;720:3;716:14;709:21;;562:178;549:1;546;542:9;537:14;;502:238;;;506:14;126:620;;;;;;;:::o;769:370::-;840:5;889:3;882:4;874:6;870:17;866:27;856:2;;897:79;;:::i;:::-;856:2;1014:6;1001:20;1039:94;1129:3;1121:6;1114:4;1106:6;1102:17;1039:94;:::i;:::-;1030:103;;846:293;;;;;:::o;1145:139::-;1191:5;1229:6;1216:20;1207:29;;1245:33;1272:5;1245:33;:::i;:::-;1197:87;;;;:::o;1290:143::-;1347:5;1378:6;1372:13;1363:22;;1394:33;1421:5;1394:33;:::i;:::-;1353:80;;;;:::o;1439:329::-;1498:6;1547:2;1535:9;1526:7;1522:23;1518:32;1515:2;;;1553:79;;:::i;:::-;1515:2;1673:1;1698:53;1743:7;1734:6;1723:9;1719:22;1698:53;:::i;:::-;1688:63;;1644:117;1505:263;;;;:::o;1774:351::-;1844:6;1893:2;1881:9;1872:7;1868:23;1864:32;1861:2;;;1899:79;;:::i;:::-;1861:2;2019:1;2044:64;2100:7;2091:6;2080:9;2076:22;2044:64;:::i;:::-;2034:74;;1990:128;1851:274;;;;:::o;2131:684::-;2224:6;2232;2281:2;2269:9;2260:7;2256:23;2252:32;2249:2;;;2287:79;;:::i;:::-;2249:2;2407:1;2432:53;2477:7;2468:6;2457:9;2453:22;2432:53;:::i;:::-;2422:63;;2378:117;2562:2;2551:9;2547:18;2534:32;2593:18;2585:6;2582:30;2579:2;;;2615:79;;:::i;:::-;2579:2;2720:78;2790:7;2781:6;2770:9;2766:22;2720:78;:::i;:::-;2710:88;;2505:303;2239:576;;;;;:::o;2821:118::-;2908:24;2926:5;2908:24;:::i;:::-;2903:3;2896:37;2886:53;;:::o;2945:118::-;3032:24;3050:5;3032:24;:::i;:::-;3027:3;3020:37;3010:53;;:::o;3069:398::-;3228:3;3249:83;3330:1;3325:3;3249:83;:::i;:::-;3242:90;;3341:93;3430:3;3341:93;:::i;:::-;3459:1;3454:3;3450:11;3443:18;;3232:235;;;:::o;3473:115::-;3558:23;3575:5;3558:23;:::i;:::-;3553:3;3546:36;3536:52;;:::o;3594:118::-;3681:24;3699:5;3681:24;:::i;:::-;3676:3;3669:37;3659:53;;:::o;3718:115::-;3803:23;3820:5;3803:23;:::i;:::-;3798:3;3791:36;3781:52;;:::o;3839:115::-;3924:23;3941:5;3924:23;:::i;:::-;3919:3;3912:36;3902:52;;:::o;3960:379::-;4144:3;4166:147;4309:3;4166:147;:::i;:::-;4159:154;;4330:3;4323:10;;4148:191;;;:::o;4345:222::-;4438:4;4476:2;4465:9;4461:18;4453:26;;4489:71;4557:1;4546:9;4542:17;4533:6;4489:71;:::i;:::-;4443:124;;;;:::o;4573:332::-;4694:4;4732:2;4721:9;4717:18;4709:26;;4745:71;4813:1;4802:9;4798:17;4789:6;4745:71;:::i;:::-;4826:72;4894:2;4883:9;4879:18;4870:6;4826:72;:::i;:::-;4699:206;;;;;:::o;4911:648::-;5108:4;5146:3;5135:9;5131:19;5123:27;;5160:71;5228:1;5217:9;5213:17;5204:6;5160:71;:::i;:::-;5241:70;5307:2;5296:9;5292:18;5283:6;5241:70;:::i;:::-;5321;5387:2;5376:9;5372:18;5363:6;5321:70;:::i;:::-;5401;5467:2;5456:9;5452:18;5443:6;5401:70;:::i;:::-;5481:71;5547:3;5536:9;5532:19;5523:6;5481:71;:::i;:::-;5113:446;;;;;;;;:::o;5565:222::-;5658:4;5696:2;5685:9;5681:18;5673:26;;5709:71;5777:1;5766:9;5762:17;5753:6;5709:71;:::i;:::-;5663:124;;;;:::o;5793:129::-;5827:6;5854:20;;:::i;:::-;5844:30;;5883:33;5911:4;5903:6;5883:33;:::i;:::-;5834:88;;;:::o;5928:75::-;5961:6;5994:2;5988:9;5978:19;;5968:35;:::o;6009:311::-;6086:4;6176:18;6168:6;6165:30;6162:2;;;6198:18;;:::i;:::-;6162:2;6248:4;6240:6;6236:17;6228:25;;6308:4;6302;6298:15;6290:23;;6091:229;;;:::o;6326:147::-;6427:11;6464:3;6449:18;;6439:34;;;;:::o;6479:96::-;6516:7;6545:24;6563:5;6545:24;:::i;:::-;6534:35;;6524:51;;;:::o;6581:77::-;6618:7;6647:5;6636:16;;6626:32;;;:::o;6664:89::-;6700:7;6740:6;6733:5;6729:18;6718:29;;6708:45;;;:::o;6759:126::-;6796:7;6836:42;6829:5;6825:54;6814:65;;6804:81;;;:::o;6891:77::-;6928:7;6957:5;6946:16;;6936:32;;;:::o;6974:93::-;7010:7;7050:10;7043:5;7039:22;7028:33;;7018:49;;;:::o;7073:101::-;7109:7;7149:18;7142:5;7138:30;7127:41;;7117:57;;;:::o;7180:281::-;7263:27;7285:4;7263:27;:::i;:::-;7255:6;7251:40;7393:6;7381:10;7378:22;7357:18;7345:10;7342:34;7339:62;7336:2;;;7404:18;;:::i;:::-;7336:2;7444:10;7440:2;7433:22;7223:238;;;:::o;7467:176::-;7499:1;7516:20;7534:1;7516:20;:::i;:::-;7511:25;;7550:20;7568:1;7550:20;:::i;:::-;7545:25;;7589:1;7579:2;;7594:18;;:::i;:::-;7579:2;7635:1;7632;7628:9;7623:14;;7501:142;;;;:::o;7649:180::-;7697:77;7694:1;7687:88;7794:4;7791:1;7784:15;7818:4;7815:1;7808:15;7835:180;7883:77;7880:1;7873:88;7980:4;7977:1;7970:15;8004:4;8001:1;7994:15;8021:180;8069:77;8066:1;8059:88;8166:4;8163:1;8156:15;8190:4;8187:1;8180:15;8207:117;8316:1;8313;8306:12;8330:117;8439:1;8436;8429:12;8453:117;8562:1;8559;8552:12;8576:117;8685:1;8682;8675:12;8699:102;8740:6;8791:2;8787:7;8782:2;8775:5;8771:14;8767:28;8757:38;;8747:54;;;:::o;8807:114::-;8913:8;:::o;8927:122::-;9000:24;9018:5;9000:24;:::i;:::-;8993:5;8990:35;8980:2;;9039:1;9036;9029:12;8980:2;8970:79;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"586400","executionCost":"infinite","totalCost":"infinite"},"external":{"enterRaffle()":"infinite","getEntranceFee()":"infinite","getPlayer(uint256)":"5055","getRecentWinner()":"2566","rawFulfillRandomWords(uint256,uint256[])":"infinite","requestRandomWinner()":"infinite"},"internal":{"fulfillRandomWords(uint256,uint256[] memory)":"infinite"}},"methodIdentifiers":{"enterRaffle()":"2cfcc539","getEntranceFee()":"09bc33a7","getPlayer(uint256)":"e55ae4e8","getRecentWinner()":"473f1ddc","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3","requestRandomWinner()":"522a1f0b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"VRFCoordinatorV2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"entranceFee\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasLane\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Raffle__NotEnoughETHEntered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Raffle__TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"RaffleEntered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"RequestedRaffleWinner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"WinnerPicked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"enterRaffle\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntranceFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getPlayer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecentWinner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestRandomWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Raffle.sol\":\"Raffle\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/ChainSpecificUtil.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport {ArbSys} from \\\"./vendor/@arbitrum/nitro-contracts/src/precompiles/ArbSys.sol\\\";\\nimport {ArbGasInfo} from \\\"./vendor/@arbitrum/nitro-contracts/src/precompiles/ArbGasInfo.sol\\\";\\nimport {OVM_GasPriceOracle} from \\\"./vendor/@eth-optimism/contracts/v0.8.6/contracts/L2/predeploys/OVM_GasPriceOracle.sol\\\";\\n\\n/// @dev A library that abstracts out opcodes that behave differently across chains.\\n/// @dev The methods below return values that are pertinent to the given chain.\\n/// @dev For instance, ChainSpecificUtil.getBlockNumber() returns L2 block number in L2 chains\\nlibrary ChainSpecificUtil {\\n  // ------------ Start Arbitrum Constants ------------\\n\\n  /// @dev ARBSYS_ADDR is the address of the ArbSys precompile on Arbitrum.\\n  /// @dev reference: https://github.com/OffchainLabs/nitro/blob/v2.0.14/contracts/src/precompiles/ArbSys.sol#L10\\n  address private constant ARBSYS_ADDR = address(0x0000000000000000000000000000000000000064);\\n  ArbSys private constant ARBSYS = ArbSys(ARBSYS_ADDR);\\n\\n  /// @dev ARBGAS_ADDR is the address of the ArbGasInfo precompile on Arbitrum.\\n  /// @dev reference: https://github.com/OffchainLabs/nitro/blob/v2.0.14/contracts/src/precompiles/ArbGasInfo.sol#L10\\n  address private constant ARBGAS_ADDR = address(0x000000000000000000000000000000000000006C);\\n  ArbGasInfo private constant ARBGAS = ArbGasInfo(ARBGAS_ADDR);\\n\\n  uint256 private constant ARB_MAINNET_CHAIN_ID = 42161;\\n  uint256 private constant ARB_GOERLI_TESTNET_CHAIN_ID = 421613;\\n  uint256 private constant ARB_SEPOLIA_TESTNET_CHAIN_ID = 421614;\\n\\n  // ------------ End Arbitrum Constants ------------\\n\\n  // ------------ Start Optimism Constants ------------\\n  /// @dev L1_FEE_DATA_PADDING includes 35 bytes for L1 data padding for Optimism\\n  bytes internal constant L1_FEE_DATA_PADDING =\\n    \\\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\\\";\\n  /// @dev OVM_GASPRICEORACLE_ADDR is the address of the OVM_GasPriceOracle precompile on Optimism.\\n  /// @dev reference: https://community.optimism.io/docs/developers/build/transaction-fees/#estimating-the-l1-data-fee\\n  address private constant OVM_GASPRICEORACLE_ADDR = address(0x420000000000000000000000000000000000000F);\\n  OVM_GasPriceOracle private constant OVM_GASPRICEORACLE = OVM_GasPriceOracle(OVM_GASPRICEORACLE_ADDR);\\n\\n  uint256 private constant OP_MAINNET_CHAIN_ID = 10;\\n  uint256 private constant OP_GOERLI_CHAIN_ID = 420;\\n  uint256 private constant OP_SEPOLIA_CHAIN_ID = 11155420;\\n\\n  /// @dev Base is a OP stack based rollup and follows the same L1 pricing logic as Optimism.\\n  uint256 private constant BASE_MAINNET_CHAIN_ID = 8453;\\n  uint256 private constant BASE_GOERLI_CHAIN_ID = 84531;\\n\\n  // ------------ End Optimism Constants ------------\\n\\n  /**\\n   * @notice Returns the blockhash for the given blockNumber.\\n   * @notice If the blockNumber is more than 256 blocks in the past, returns the empty string.\\n   * @notice When on a known Arbitrum chain, it uses ArbSys.arbBlockHash to get the blockhash.\\n   * @notice Otherwise, it uses the blockhash opcode.\\n   * @notice Note that the blockhash opcode will return the L2 blockhash on Optimism.\\n   */\\n  function _getBlockhash(uint64 blockNumber) internal view returns (bytes32) {\\n    uint256 chainid = block.chainid;\\n    if (_isArbitrumChainId(chainid)) {\\n      if ((_getBlockNumber() - blockNumber) > 256 || blockNumber >= _getBlockNumber()) {\\n        return \\\"\\\";\\n      }\\n      return ARBSYS.arbBlockHash(blockNumber);\\n    }\\n    return blockhash(blockNumber);\\n  }\\n\\n  /**\\n   * @notice Returns the block number of the current block.\\n   * @notice When on a known Arbitrum chain, it uses ArbSys.arbBlockNumber to get the block number.\\n   * @notice Otherwise, it uses the block.number opcode.\\n   * @notice Note that the block.number opcode will return the L2 block number on Optimism.\\n   */\\n  function _getBlockNumber() internal view returns (uint256) {\\n    uint256 chainid = block.chainid;\\n    if (_isArbitrumChainId(chainid)) {\\n      return ARBSYS.arbBlockNumber();\\n    }\\n    return block.number;\\n  }\\n\\n  /**\\n   * @notice Returns the L1 fees that will be paid for the current transaction, given any calldata\\n   * @notice for the current transaction.\\n   * @notice When on a known Arbitrum chain, it uses ArbGas.getCurrentTxL1GasFees to get the fees.\\n   * @notice On Arbitrum, the provided calldata is not used to calculate the fees.\\n   * @notice On Optimism, the provided calldata is passed to the OVM_GasPriceOracle predeploy\\n   * @notice and getL1Fee is called to get the fees.\\n   */\\n  function _getCurrentTxL1GasFees(bytes memory txCallData) internal view returns (uint256) {\\n    uint256 chainid = block.chainid;\\n    if (_isArbitrumChainId(chainid)) {\\n      return ARBGAS.getCurrentTxL1GasFees();\\n    } else if (_isOptimismChainId(chainid)) {\\n      return OVM_GASPRICEORACLE.getL1Fee(bytes.concat(txCallData, L1_FEE_DATA_PADDING));\\n    }\\n    return 0;\\n  }\\n\\n  /**\\n   * @notice Returns the gas cost in wei of calldataSizeBytes of calldata being posted\\n   * @notice to L1.\\n   */\\n  function _getL1CalldataGasCost(uint256 calldataSizeBytes) internal view returns (uint256) {\\n    uint256 chainid = block.chainid;\\n    if (_isArbitrumChainId(chainid)) {\\n      (, uint256 l1PricePerByte, , , , ) = ARBGAS.getPricesInWei();\\n      // see https://developer.arbitrum.io/devs-how-tos/how-to-estimate-gas#where-do-we-get-all-this-information-from\\n      // for the justification behind the 140 number.\\n      return l1PricePerByte * (calldataSizeBytes + 140);\\n    } else if (_isOptimismChainId(chainid)) {\\n      return _calculateOptimismL1DataFee(calldataSizeBytes);\\n    }\\n    return 0;\\n  }\\n\\n  /**\\n   * @notice Return true if and only if the provided chain ID is an Arbitrum chain ID.\\n   */\\n  function _isArbitrumChainId(uint256 chainId) internal pure returns (bool) {\\n    return\\n      chainId == ARB_MAINNET_CHAIN_ID ||\\n      chainId == ARB_GOERLI_TESTNET_CHAIN_ID ||\\n      chainId == ARB_SEPOLIA_TESTNET_CHAIN_ID;\\n  }\\n\\n  /**\\n   * @notice Return true if and only if the provided chain ID is an Optimism chain ID.\\n   * @notice Note that optimism chain id's are also OP stack chain id's.\\n   */\\n  function _isOptimismChainId(uint256 chainId) internal pure returns (bool) {\\n    return\\n      chainId == OP_MAINNET_CHAIN_ID ||\\n      chainId == OP_GOERLI_CHAIN_ID ||\\n      chainId == OP_SEPOLIA_CHAIN_ID ||\\n      chainId == BASE_MAINNET_CHAIN_ID ||\\n      chainId == BASE_GOERLI_CHAIN_ID;\\n  }\\n\\n  function _calculateOptimismL1DataFee(uint256 calldataSizeBytes) internal view returns (uint256) {\\n    // from: https://community.optimism.io/docs/developers/build/transaction-fees/#the-l1-data-fee\\n    // l1_data_fee = l1_gas_price * (tx_data_gas + fixed_overhead) * dynamic_overhead\\n    // tx_data_gas = count_zero_bytes(tx_data) * 4 + count_non_zero_bytes(tx_data) * 16\\n    // note we conservatively assume all non-zero bytes.\\n    uint256 l1BaseFeeWei = OVM_GASPRICEORACLE.l1BaseFee();\\n    uint256 numZeroBytes = 0;\\n    uint256 numNonzeroBytes = calldataSizeBytes - numZeroBytes;\\n    uint256 txDataGas = numZeroBytes * 4 + numNonzeroBytes * 16;\\n    uint256 fixedOverhead = OVM_GASPRICEORACLE.overhead();\\n\\n    // The scalar is some value like 0.684, but is represented as\\n    // that times 10 ^ number of scalar decimals.\\n    // e.g scalar = 0.684 * 10^6\\n    // The divisor is used to divide that and have a net result of the true scalar.\\n    uint256 scalar = OVM_GASPRICEORACLE.scalar();\\n    uint256 scalarDecimals = OVM_GASPRICEORACLE.decimals();\\n    uint256 divisor = 10 ** scalarDecimals;\\n\\n    uint256 l1DataFee = (l1BaseFeeWei * (txDataGas + fixedOverhead) * scalar) / divisor;\\n    return l1DataFee;\\n  }\\n}\\n\",\"keccak256\":\"0x2f12816c4070308f58ccdd8102733a0bb031d945d1500fcd2297492d7ae674fe\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nabstract contract TypeAndVersionInterface {\\n  function typeAndVersion() external pure virtual returns (string memory);\\n}\\n\",\"keccak256\":\"0x805cc9a91d54db1bea60cb19f38364f1eac2735bddb3476294fb803c2f6b7097\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {ConfirmedOwnerWithProposal} from \\\"./ConfirmedOwnerWithProposal.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\\n}\\n\",\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IOwnable} from \\\"../interfaces/IOwnable.sol\\\";\\n\\n/// @title The ConfirmedOwner contract\\n/// @notice A contract with helpers for basic contract ownership.\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    // solhint-disable-next-line custom-errors\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /// @notice Allows an owner to begin transferring ownership to a new address.\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /// @notice Allows an ownership transfer to be completed by the recipient.\\n  function acceptOwnership() external override {\\n    // solhint-disable-next-line custom-errors\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /// @notice Get the current owner\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /// @notice validate, transfer ownership, and emit relevant events\\n  function _transferOwnership(address to) private {\\n    // solhint-disable-next-line custom-errors\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /// @notice validate access\\n  function _validateOwnership() internal view {\\n    // solhint-disable-next-line custom-errors\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /// @notice Reverts if called by anyone other than the contract owner.\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x927e505bb87a58ea04d1a9efe945f4bf4093e88b618b6fede3b9c68e1e63d989\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\ninterface IERC677Receiver {\\n  function onTokenTransfer(address sender, uint256 amount, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x5f9ee31598e2250815033c2f4e1e7e747f917815378938505063df1d4ae603ec\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool success);\\n\\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xac02fbc0c7d194e525a71f524d1f7c472df73e19c2b527d7b529badaeaf0ec51\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbGasInfo.sol\":{\"content\":\"// Copyright 2021-2022, Offchain Labs, Inc.\\n// For license information, see https://github.com/OffchainLabs/nitro-contracts/blob/main/LICENSE\\n// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.4.21 <0.9.0;\\n\\n/// @title Provides insight into the cost of using the chain.\\n/// @notice These methods have been adjusted to account for Nitro's heavy use of calldata compression.\\n/// Of note to end-users, we no longer make a distinction between non-zero and zero-valued calldata bytes.\\n/// Precompiled contract that exists in every Arbitrum chain at 0x000000000000000000000000000000000000006c.\\ninterface ArbGasInfo {\\n    /// @notice Get gas prices for a provided aggregator\\n    /// @return return gas prices in wei\\n    ///        (\\n    ///            per L2 tx,\\n    ///            per L1 calldata byte\\n    ///            per storage allocation,\\n    ///            per ArbGas base,\\n    ///            per ArbGas congestion,\\n    ///            per ArbGas total\\n    ///        )\\n    function getPricesInWeiWithAggregator(address aggregator)\\n    external\\n    view\\n    returns (\\n        uint256,\\n        uint256,\\n        uint256,\\n        uint256,\\n        uint256,\\n        uint256\\n    );\\n\\n    /// @notice Get gas prices. Uses the caller's preferred aggregator, or the default if the caller doesn't have a preferred one.\\n    /// @return return gas prices in wei\\n    ///        (\\n    ///            per L2 tx,\\n    ///            per L1 calldata byte\\n    ///            per storage allocation,\\n    ///            per ArbGas base,\\n    ///            per ArbGas congestion,\\n    ///            per ArbGas total\\n    ///        )\\n    function getPricesInWei()\\n    external\\n    view\\n    returns (\\n        uint256,\\n        uint256,\\n        uint256,\\n        uint256,\\n        uint256,\\n        uint256\\n    );\\n\\n    /// @notice Get prices in ArbGas for the supplied aggregator\\n    /// @return (per L2 tx, per L1 calldata byte, per storage allocation)\\n    function getPricesInArbGasWithAggregator(address aggregator)\\n    external\\n    view\\n    returns (\\n        uint256,\\n        uint256,\\n        uint256\\n    );\\n\\n    /// @notice Get prices in ArbGas. Assumes the callers preferred validator, or the default if caller doesn't have a preferred one.\\n    /// @return (per L2 tx, per L1 calldata byte, per storage allocation)\\n    function getPricesInArbGas()\\n    external\\n    view\\n    returns (\\n        uint256,\\n        uint256,\\n        uint256\\n    );\\n\\n    /// @notice Get the gas accounting parameters. `gasPoolMax` is always zero, as the exponential pricing model has no such notion.\\n    /// @return (speedLimitPerSecond, gasPoolMax, maxTxGasLimit)\\n    function getGasAccountingParams()\\n    external\\n    view\\n    returns (\\n        uint256,\\n        uint256,\\n        uint256\\n    );\\n\\n    /// @notice Get the minimum gas price needed for a tx to succeed\\n    function getMinimumGasPrice() external view returns (uint256);\\n\\n    /// @notice Get ArbOS's estimate of the L1 basefee in wei\\n    function getL1BaseFeeEstimate() external view returns (uint256);\\n\\n    /// @notice Get how slowly ArbOS updates its estimate of the L1 basefee\\n    function getL1BaseFeeEstimateInertia() external view returns (uint64);\\n\\n    /// @notice Get the L1 pricer reward rate, in wei per unit\\n    /// Available in ArbOS version 11\\n    function getL1RewardRate() external view returns (uint64);\\n\\n    /// @notice Get the L1 pricer reward recipient\\n    /// Available in ArbOS version 11\\n    function getL1RewardRecipient() external view returns (address);\\n\\n    /// @notice Deprecated -- Same as getL1BaseFeeEstimate()\\n    function getL1GasPriceEstimate() external view returns (uint256);\\n\\n    /// @notice Get L1 gas fees paid by the current transaction\\n    function getCurrentTxL1GasFees() external view returns (uint256);\\n\\n    /// @notice Get the backlogged amount of gas burnt in excess of the speed limit\\n    function getGasBacklog() external view returns (uint64);\\n\\n    /// @notice Get how slowly ArbOS updates the L2 basefee in response to backlogged gas\\n    function getPricingInertia() external view returns (uint64);\\n\\n    /// @notice Get the forgivable amount of backlogged gas ArbOS will ignore when raising the basefee\\n    function getGasBacklogTolerance() external view returns (uint64);\\n\\n    /// @notice Returns the surplus of funds for L1 batch posting payments (may be negative).\\n    function getL1PricingSurplus() external view returns (int256);\\n\\n    /// @notice Returns the base charge (in L1 gas) attributed to each data batch in the calldata pricer\\n    function getPerBatchGasCharge() external view returns (int64);\\n\\n    /// @notice Returns the cost amortization cap in basis points\\n    function getAmortizedCostCapBips() external view returns (uint64);\\n\\n    /// @notice Returns the available funds from L1 fees\\n    function getL1FeesAvailable() external view returns (uint256);\\n\\n    /// @notice Returns the equilibration units parameter for L1 price adjustment algorithm\\n    /// Available in ArbOS version 20\\n    function getL1PricingEquilibrationUnits() external view returns (uint256);\\n\\n    /// @notice Returns the last time the L1 calldata pricer was updated.\\n    /// Available in ArbOS version 20\\n    function getLastL1PricingUpdateTime() external view returns (uint64);\\n\\n    /// @notice Returns the amount of L1 calldata payments due for rewards (per the L1 reward rate)\\n    /// Available in ArbOS version 20\\n    function getL1PricingFundsDueForRewards() external view returns (uint256);\\n\\n    /// @notice Returns the amount of L1 calldata posted since the last update.\\n    /// Available in ArbOS version 20\\n    function getL1PricingUnitsSinceUpdate() external view returns (uint64);\\n\\n    /// @notice Returns the L1 pricing surplus as of the last update (may be negative).\\n    /// Available in ArbOS version 20\\n    function getLastL1PricingSurplus() external view returns (int256);\\n}\",\"keccak256\":\"0x7c51d93494afd02b5336e88d8738341758340f2befe698b4458a916905691bd6\",\"license\":\"BUSL-1.1\"},\"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbSys.sol\":{\"content\":\"// Copyright 2021-2022, Offchain Labs, Inc.\\n// For license information, see https://github.com/nitro/blob/master/LICENSE\\n// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.4.21 <0.9.0;\\n\\n/**\\n * @title System level functionality\\n * @notice For use by contracts to interact with core L2-specific functionality.\\n * Precompiled contract that exists in every Arbitrum chain at address(100), 0x0000000000000000000000000000000000000064.\\n */\\ninterface ArbSys {\\n    /**\\n     * @notice Get Arbitrum block number (distinct from L1 block number; Arbitrum genesis block has block number 0)\\n     * @return block number as int\\n     */\\n    function arbBlockNumber() external view returns (uint256);\\n\\n    /**\\n     * @notice Get Arbitrum block hash (reverts unless currentBlockNum-256 <= arbBlockNum < currentBlockNum)\\n     * @return block hash\\n     */\\n    function arbBlockHash(uint256 arbBlockNum) external view returns (bytes32);\\n\\n    /**\\n     * @notice Gets the rollup's unique chain identifier\\n     * @return Chain identifier as int\\n     */\\n    function arbChainID() external view returns (uint256);\\n\\n    /**\\n     * @notice Get internal version number identifying an ArbOS build\\n     * @return version number as int\\n     */\\n    function arbOSVersion() external view returns (uint256);\\n\\n    /**\\n     * @notice Returns 0 since Nitro has no concept of storage gas\\n     * @return uint 0\\n     */\\n    function getStorageGasAvailable() external view returns (uint256);\\n\\n    /**\\n     * @notice (deprecated) check if current call is top level (meaning it was triggered by an EoA or a L1 contract)\\n     * @dev this call has been deprecated and may be removed in a future release\\n     * @return true if current execution frame is not a call by another L2 contract\\n     */\\n    function isTopLevelCall() external view returns (bool);\\n\\n    /**\\n     * @notice map L1 sender contract address to its L2 alias\\n     * @param sender sender address\\n     * @param unused argument no longer used\\n     * @return aliased sender address\\n     */\\n    function mapL1SenderContractAddressToL2Alias(address sender, address unused)\\n        external\\n        pure\\n        returns (address);\\n\\n    /**\\n     * @notice check if the caller (of this caller of this) is an aliased L1 contract address\\n     * @return true iff the caller's address is an alias for an L1 contract address\\n     */\\n    function wasMyCallersAddressAliased() external view returns (bool);\\n\\n    /**\\n     * @notice return the address of the caller (of this caller of this), without applying L1 contract address aliasing\\n     * @return address of the caller's caller, without applying L1 contract address aliasing\\n     */\\n    function myCallersAddressWithoutAliasing() external view returns (address);\\n\\n    /**\\n     * @notice Send given amount of Eth to dest from sender.\\n     * This is a convenience function, which is equivalent to calling sendTxToL1 with empty data.\\n     * @param destination recipient address on L1\\n     * @return unique identifier for this L2-to-L1 transaction.\\n     */\\n    function withdrawEth(address destination)\\n        external\\n        payable\\n        returns (uint256);\\n\\n    /**\\n     * @notice Send a transaction to L1\\n     * @dev it is not possible to execute on the L1 any L2-to-L1 transaction which contains data\\n     * to a contract address without any code (as enforced by the Bridge contract).\\n     * @param destination recipient address on L1\\n     * @param data (optional) calldata for L1 contract call\\n     * @return a unique identifier for this L2-to-L1 transaction.\\n     */\\n    function sendTxToL1(address destination, bytes calldata data)\\n        external\\n        payable\\n        returns (uint256);\\n\\n    /**\\n     * @notice Get send Merkle tree state\\n     * @return size number of sends in the history\\n     * @return root root hash of the send history\\n     * @return partials hashes of partial subtrees in the send history tree\\n     */\\n    function sendMerkleTreeState()\\n        external\\n        view\\n        returns (\\n            uint256 size,\\n            bytes32 root,\\n            bytes32[] memory partials\\n        );\\n\\n    /**\\n     * @notice creates a send txn from L2 to L1\\n     * @param position = (level << 192) + leaf = (0 << 192) + leaf = leaf\\n     */\\n    event L2ToL1Tx(\\n        address caller,\\n        address indexed destination,\\n        uint256 indexed hash,\\n        uint256 indexed position,\\n        uint256 arbBlockNum,\\n        uint256 ethBlockNum,\\n        uint256 timestamp,\\n        uint256 callvalue,\\n        bytes data\\n    );\\n\\n    /// @dev DEPRECATED in favour of the new L2ToL1Tx event above after the nitro upgrade\\n    event L2ToL1Transaction(\\n        address caller,\\n        address indexed destination,\\n        uint256 indexed uniqueId,\\n        uint256 indexed batchNumber,\\n        uint256 indexInBatch,\\n        uint256 arbBlockNum,\\n        uint256 ethBlockNum,\\n        uint256 timestamp,\\n        uint256 callvalue,\\n        bytes data\\n    );\\n\\n    /**\\n     * @notice logs a merkle branch for proof synthesis\\n     * @param reserved an index meant only to align the 4th index with L2ToL1Transaction's 4th event\\n     * @param hash the merkle hash\\n     * @param position = (level << 192) + leaf\\n     */\\n    event SendMerkleUpdate(\\n        uint256 indexed reserved,\\n        bytes32 indexed hash,\\n        uint256 indexed position\\n    );\\n}\\n\",\"keccak256\":\"0xa8461b373712cb0f4950ef9cad1d12fb38442da76cd57ff916baa7920f7b5077\",\"license\":\"BUSL-1.1\"},\"@chainlink/contracts/src/v0.8/vendor/@eth-optimism/contracts/v0.8.6/contracts/L2/predeploys/OVM_GasPriceOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\n/* External Imports */\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/**\\n * @title OVM_GasPriceOracle\\n * @dev This contract exposes the current l2 gas price, a measure of how congested the network\\n * currently is. This measure is used by the Sequencer to determine what fee to charge for\\n * transactions. When the system is more congested, the l2 gas price will increase and fees\\n * will also increase as a result.\\n *\\n * All public variables are set while generating the initial L2 state. The\\n * constructor doesn't run in practice as the L2 state generation script uses\\n * the deployed bytecode instead of running the initcode.\\n */\\ncontract OVM_GasPriceOracle is Ownable {\\n    /*************\\n     * Variables *\\n     *************/\\n\\n    // Current L2 gas price\\n    uint256 public gasPrice;\\n    // Current L1 base fee\\n    uint256 public l1BaseFee;\\n    // Amortized cost of batch submission per transaction\\n    uint256 public overhead;\\n    // Value to scale the fee up by\\n    uint256 public scalar;\\n    // Number of decimals of the scalar\\n    uint256 public decimals;\\n\\n    /***************\\n     * Constructor *\\n     ***************/\\n\\n    /**\\n     * @param _owner Address that will initially own this contract.\\n     */\\n    constructor(address _owner) Ownable() {\\n        transferOwnership(_owner);\\n    }\\n\\n    /**********\\n     * Events *\\n     **********/\\n\\n    event GasPriceUpdated(uint256);\\n    event L1BaseFeeUpdated(uint256);\\n    event OverheadUpdated(uint256);\\n    event ScalarUpdated(uint256);\\n    event DecimalsUpdated(uint256);\\n\\n    /********************\\n     * Public Functions *\\n     ********************/\\n\\n    /**\\n     * Allows the owner to modify the l2 gas price.\\n     * @param _gasPrice New l2 gas price.\\n     */\\n    // slither-disable-next-line external-function\\n    function setGasPrice(uint256 _gasPrice) public onlyOwner {\\n        gasPrice = _gasPrice;\\n        emit GasPriceUpdated(_gasPrice);\\n    }\\n\\n    /**\\n     * Allows the owner to modify the l1 base fee.\\n     * @param _baseFee New l1 base fee\\n     */\\n    // slither-disable-next-line external-function\\n    function setL1BaseFee(uint256 _baseFee) public onlyOwner {\\n        l1BaseFee = _baseFee;\\n        emit L1BaseFeeUpdated(_baseFee);\\n    }\\n\\n    /**\\n     * Allows the owner to modify the overhead.\\n     * @param _overhead New overhead\\n     */\\n    // slither-disable-next-line external-function\\n    function setOverhead(uint256 _overhead) public onlyOwner {\\n        overhead = _overhead;\\n        emit OverheadUpdated(_overhead);\\n    }\\n\\n    /**\\n     * Allows the owner to modify the scalar.\\n     * @param _scalar New scalar\\n     */\\n    // slither-disable-next-line external-function\\n    function setScalar(uint256 _scalar) public onlyOwner {\\n        scalar = _scalar;\\n        emit ScalarUpdated(_scalar);\\n    }\\n\\n    /**\\n     * Allows the owner to modify the decimals.\\n     * @param _decimals New decimals\\n     */\\n    // slither-disable-next-line external-function\\n    function setDecimals(uint256 _decimals) public onlyOwner {\\n        decimals = _decimals;\\n        emit DecimalsUpdated(_decimals);\\n    }\\n\\n    /**\\n     * Computes the L1 portion of the fee\\n     * based on the size of the RLP encoded tx\\n     * and the current l1BaseFee\\n     * @param _data Unsigned RLP encoded tx, 6 elements\\n     * @return L1 fee that should be paid for the tx\\n     */\\n    // slither-disable-next-line external-function\\n    function getL1Fee(bytes memory _data) public view returns (uint256) {\\n        uint256 l1GasUsed = getL1GasUsed(_data);\\n        uint256 l1Fee = l1GasUsed * l1BaseFee;\\n        uint256 divisor = 10**decimals;\\n        uint256 unscaled = l1Fee * scalar;\\n        uint256 scaled = unscaled / divisor;\\n        return scaled;\\n    }\\n\\n    // solhint-disable max-line-length\\n    /**\\n     * Computes the amount of L1 gas used for a transaction\\n     * The overhead represents the per batch gas overhead of\\n     * posting both transaction and state roots to L1 given larger\\n     * batch sizes.\\n     * 4 gas for 0 byte\\n     * https://github.com/ethereum/go-ethereum/blob/9ada4a2e2c415e6b0b51c50e901336872e028872/params/protocol_params.go#L33\\n     * 16 gas for non zero byte\\n     * https://github.com/ethereum/go-ethereum/blob/9ada4a2e2c415e6b0b51c50e901336872e028872/params/protocol_params.go#L87\\n     * This will need to be updated if calldata gas prices change\\n     * Account for the transaction being unsigned\\n     * Padding is added to account for lack of signature on transaction\\n     * 1 byte for RLP V prefix\\n     * 1 byte for V\\n     * 1 byte for RLP R prefix\\n     * 32 bytes for R\\n     * 1 byte for RLP S prefix\\n     * 32 bytes for S\\n     * Total: 68 bytes of padding\\n     * @param _data Unsigned RLP encoded tx, 6 elements\\n     * @return Amount of L1 gas used for a transaction\\n     */\\n    // solhint-enable max-line-length\\n    function getL1GasUsed(bytes memory _data) public view returns (uint256) {\\n        uint256 total = 0;\\n        for (uint256 i = 0; i < _data.length; i++) {\\n            if (_data[i] == 0) {\\n                total += 4;\\n            } else {\\n                total += 16;\\n            }\\n        }\\n        uint256 unsigned = total + overhead;\\n        return unsigned + (68 * 16);\\n    }\\n}\\n\",\"keccak256\":\"0x9c8c09504619b7da966921c82e9376f46ea7579ad9a764d674666f3e923fdd25\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/VRF.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/** ****************************************************************************\\n  * @notice Verification of verifiable-random-function (VRF) proofs, following\\n  * @notice https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3\\n  * @notice See https://eprint.iacr.org/2017/099.pdf for security proofs.\\n\\n  * @dev Bibliographic references:\\n\\n  * @dev Goldberg, et al., \\\"Verifiable Random Functions (VRFs)\\\", Internet Draft\\n  * @dev draft-irtf-cfrg-vrf-05, IETF, Aug 11 2019,\\n  * @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05\\n\\n  * @dev Papadopoulos, et al., \\\"Making NSEC5 Practical for DNSSEC\\\", Cryptology\\n  * @dev ePrint Archive, Report 2017/099, https://eprint.iacr.org/2017/099.pdf\\n  * ****************************************************************************\\n  * @dev USAGE\\n\\n  * @dev The main entry point is _randomValueFromVRFProof. See its docstring.\\n  * ****************************************************************************\\n  * @dev PURPOSE\\n\\n  * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n  * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n  * @dev making his output up to suit himself. Reggie provides Vera a public key\\n  * @dev to which he knows the secret key. Each time Vera provides a seed to\\n  * @dev Reggie, he gives back a value which is computed completely\\n  * @dev deterministically from the seed and the secret key.\\n\\n  * @dev Reggie provides a proof by which Vera can verify that the output was\\n  * @dev correctly computed once Reggie tells it to her, but without that proof,\\n  * @dev the output is computationally indistinguishable to her from a uniform\\n  * @dev random sample from the output space.\\n\\n  * @dev The purpose of this contract is to perform that verification.\\n  * ****************************************************************************\\n  * @dev DESIGN NOTES\\n\\n  * @dev The VRF algorithm verified here satisfies the full uniqueness, full\\n  * @dev collision resistance, and full pseudo-randomness security properties.\\n  * @dev See \\\"SECURITY PROPERTIES\\\" below, and\\n  * @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-3\\n\\n  * @dev An elliptic curve point is generally represented in the solidity code\\n  * @dev as a uint256[2], corresponding to its affine coordinates in\\n  * @dev GF(FIELD_SIZE).\\n\\n  * @dev For the sake of efficiency, this implementation deviates from the spec\\n  * @dev in some minor ways:\\n\\n  * @dev - Keccak hash rather than the SHA256 hash recommended in\\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5\\n  * @dev   Keccak costs much less gas on the EVM, and provides similar security.\\n\\n  * @dev - Secp256k1 curve instead of the P-256 or ED25519 curves recommended in\\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5\\n  * @dev   For curve-point multiplication, it's much cheaper to abuse ECRECOVER\\n\\n  * @dev - _hashToCurve recursively hashes until it finds a curve x-ordinate. On\\n  * @dev   the EVM, this is slightly more efficient than the recommendation in\\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.1.1\\n  * @dev   step 5, to concatenate with a nonce then hash, and rehash with the\\n  * @dev   nonce updated until a valid x-ordinate is found.\\n\\n  * @dev - _hashToCurve does not include a cipher version string or the byte 0x1\\n  * @dev   in the hash message, as recommended in step 5.B of the draft\\n  * @dev   standard. They are unnecessary here because no variation in the\\n  * @dev   cipher suite is allowed.\\n\\n  * @dev - Similarly, the hash input in _scalarFromCurvePoints does not include a\\n  * @dev   commitment to the cipher suite, either, which differs from step 2 of\\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.3\\n  * @dev   . Also, the hash input is the concatenation of the uncompressed\\n  * @dev   points, not the compressed points as recommended in step 3.\\n\\n  * @dev - In the calculation of the challenge value \\\"c\\\", the \\\"u\\\" value (i.e.\\n  * @dev   the value computed by Reggie as the nonce times the secp256k1\\n  * @dev   generator point, see steps 5 and 7 of\\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3\\n  * @dev   ) is replaced by its ethereum address, i.e. the lower 160 bits of the\\n  * @dev   keccak hash of the original u. This is because we only verify the\\n  * @dev   calculation of u up to its address, by abusing ECRECOVER.\\n  * ****************************************************************************\\n  * @dev   SECURITY PROPERTIES\\n\\n  * @dev Here are the security properties for this VRF:\\n\\n  * @dev Full uniqueness: For any seed and valid VRF public key, there is\\n  * @dev   exactly one VRF output which can be proved to come from that seed, in\\n  * @dev   the sense that the proof will pass _verifyVRFProof.\\n\\n  * @dev Full collision resistance: It's cryptographically infeasible to find\\n  * @dev   two seeds with same VRF output from a fixed, valid VRF key\\n\\n  * @dev Full pseudorandomness: Absent the proofs that the VRF outputs are\\n  * @dev   derived from a given seed, the outputs are computationally\\n  * @dev   indistinguishable from randomness.\\n\\n  * @dev https://eprint.iacr.org/2017/099.pdf, Appendix B contains the proofs\\n  * @dev for these properties.\\n\\n  * @dev For secp256k1, the key validation described in section\\n  * @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.6\\n  * @dev is unnecessary, because secp256k1 has cofactor 1, and the\\n  * @dev representation of the public key used here (affine x- and y-ordinates\\n  * @dev of the secp256k1 point on the standard y^2=x^3+7 curve) cannot refer to\\n  * @dev the point at infinity.\\n  * ****************************************************************************\\n  * @dev OTHER SECURITY CONSIDERATIONS\\n  *\\n  * @dev The seed input to the VRF could in principle force an arbitrary amount\\n  * @dev of work in _hashToCurve, by requiring extra rounds of hashing and\\n  * @dev checking whether that's yielded the x ordinate of a secp256k1 point.\\n  * @dev However, under the Random Oracle Model the probability of choosing a\\n  * @dev point which forces n extra rounds in _hashToCurve is 2\\u207b\\u207f. The base cost\\n  * @dev for calling _hashToCurve is about 25,000 gas, and each round of checking\\n  * @dev for a valid x ordinate costs about 15,555 gas, so to find a seed for\\n  * @dev which _hashToCurve would cost more than 2,017,000 gas, one would have to\\n  * @dev try, in expectation, about 2\\u00b9\\u00b2\\u2078 seeds, which is infeasible for any\\n  * @dev foreseeable computational resources. (25,000 + 128 * 15,555 < 2,017,000.)\\n\\n  * @dev Since the gas block limit for the Ethereum main net is 10,000,000 gas,\\n  * @dev this means it is infeasible for an adversary to prevent correct\\n  * @dev operation of this contract by choosing an adverse seed.\\n\\n  * @dev (See TestMeasureHashToCurveGasCost for verification of the gas cost for\\n  * @dev _hashToCurve.)\\n\\n  * @dev It may be possible to make a secure constant-time _hashToCurve function.\\n  * @dev See notes in _hashToCurve docstring.\\n*/\\ncontract VRF {\\n  // See https://www.secg.org/sec2-v2.pdf, section 2.4.1, for these constants.\\n  // Number of points in Secp256k1\\n  uint256 private constant GROUP_ORDER = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141;\\n  // Prime characteristic of the galois field over which Secp256k1 is defined\\n  uint256 private constant FIELD_SIZE =\\n    // solium-disable-next-line indentation\\n    0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F;\\n  uint256 private constant WORD_LENGTH_BYTES = 0x20;\\n\\n  // (base^exponent) % FIELD_SIZE\\n  // Cribbed from https://medium.com/@rbkhmrcr/precompiles-solidity-e5d29bd428c4\\n  function _bigModExp(uint256 base, uint256 exponent) internal view returns (uint256 exponentiation) {\\n    uint256 callResult;\\n    uint256[6] memory bigModExpContractInputs;\\n    bigModExpContractInputs[0] = WORD_LENGTH_BYTES; // Length of base\\n    bigModExpContractInputs[1] = WORD_LENGTH_BYTES; // Length of exponent\\n    bigModExpContractInputs[2] = WORD_LENGTH_BYTES; // Length of modulus\\n    bigModExpContractInputs[3] = base;\\n    bigModExpContractInputs[4] = exponent;\\n    bigModExpContractInputs[5] = FIELD_SIZE;\\n    uint256[1] memory output;\\n    assembly {\\n      callResult := staticcall(\\n        not(0), // Gas cost: no limit\\n        0x05, // Bigmodexp contract address\\n        bigModExpContractInputs,\\n        0xc0, // Length of input segment: 6*0x20-bytes\\n        output,\\n        0x20 // Length of output segment\\n      )\\n    }\\n    if (callResult == 0) {\\n      // solhint-disable-next-line custom-errors\\n      revert(\\\"bigModExp failure!\\\");\\n    }\\n    return output[0];\\n  }\\n\\n  // Let q=FIELD_SIZE. q % 4 = 3, \\u2234 x\\u2261r^2 mod q \\u21d2 x^SQRT_POWER\\u2261\\u00b1r mod q.  See\\n  // https://en.wikipedia.org/wiki/Modular_square_root#Prime_or_prime_power_modulus\\n  uint256 private constant SQRT_POWER = (FIELD_SIZE + 1) >> 2;\\n\\n  // Computes a s.t. a^2 = x in the field. Assumes a exists\\n  function _squareRoot(uint256 x) internal view returns (uint256) {\\n    return _bigModExp(x, SQRT_POWER);\\n  }\\n\\n  // The value of y^2 given that (x,y) is on secp256k1.\\n  function _ySquared(uint256 x) internal pure returns (uint256) {\\n    // Curve is y^2=x^3+7. See section 2.4.1 of https://www.secg.org/sec2-v2.pdf\\n    uint256 xCubed = mulmod(x, mulmod(x, x, FIELD_SIZE), FIELD_SIZE);\\n    return addmod(xCubed, 7, FIELD_SIZE);\\n  }\\n\\n  // True iff p is on secp256k1\\n  function _isOnCurve(uint256[2] memory p) internal pure returns (bool) {\\n    // Section 2.3.6. in https://www.secg.org/sec1-v2.pdf\\n    // requires each ordinate to be in [0, ..., FIELD_SIZE-1]\\n    // solhint-disable-next-line custom-errors\\n    require(p[0] < FIELD_SIZE, \\\"invalid x-ordinate\\\");\\n    // solhint-disable-next-line custom-errors\\n    require(p[1] < FIELD_SIZE, \\\"invalid y-ordinate\\\");\\n    return _ySquared(p[0]) == mulmod(p[1], p[1], FIELD_SIZE);\\n  }\\n\\n  // Hash x uniformly into {0, ..., FIELD_SIZE-1}.\\n  function _fieldHash(bytes memory b) internal pure returns (uint256 x_) {\\n    x_ = uint256(keccak256(b));\\n    // Rejecting if x >= FIELD_SIZE corresponds to step 2.1 in section 2.3.4 of\\n    // http://www.secg.org/sec1-v2.pdf , which is part of the definition of\\n    // string_to_point in the IETF draft\\n    while (x_ >= FIELD_SIZE) {\\n      x_ = uint256(keccak256(abi.encodePacked(x_)));\\n    }\\n    return x_;\\n  }\\n\\n  // Hash b to a random point which hopefully lies on secp256k1. The y ordinate\\n  // is always even, due to\\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.1.1\\n  // step 5.C, which references arbitrary_string_to_point, defined in\\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5 as\\n  // returning the point with given x ordinate, and even y ordinate.\\n  function _newCandidateSecp256k1Point(bytes memory b) internal view returns (uint256[2] memory p) {\\n    unchecked {\\n      p[0] = _fieldHash(b);\\n      p[1] = _squareRoot(_ySquared(p[0]));\\n      if (p[1] % 2 == 1) {\\n        // Note that 0 <= p[1] < FIELD_SIZE\\n        // so this cannot wrap, we use unchecked to save gas.\\n        p[1] = FIELD_SIZE - p[1];\\n      }\\n    }\\n    return p;\\n  }\\n\\n  // Domain-separation tag for initial hash in _hashToCurve. Corresponds to\\n  // vrf.go/hashToCurveHashPrefix\\n  uint256 internal constant HASH_TO_CURVE_HASH_PREFIX = 1;\\n\\n  // Cryptographic hash function onto the curve.\\n  //\\n  // Corresponds to algorithm in section 5.4.1.1 of the draft standard. (But see\\n  // DESIGN NOTES above for slight differences.)\\n  //\\n  // TODO(alx): Implement a bounded-computation hash-to-curve, as described in\\n  // \\\"Construction of Rational Points on Elliptic Curves over Finite Fields\\\"\\n  // http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.831.5299&rep=rep1&type=pdf\\n  // and suggested by\\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-01#section-5.2.2\\n  // (Though we can't used exactly that because secp256k1's j-invariant is 0.)\\n  //\\n  // This would greatly simplify the analysis in \\\"OTHER SECURITY CONSIDERATIONS\\\"\\n  // https://www.pivotaltracker.com/story/show/171120900\\n  function _hashToCurve(uint256[2] memory pk, uint256 input) internal view returns (uint256[2] memory rv) {\\n    rv = _newCandidateSecp256k1Point(abi.encodePacked(HASH_TO_CURVE_HASH_PREFIX, pk, input));\\n    while (!_isOnCurve(rv)) {\\n      rv = _newCandidateSecp256k1Point(abi.encodePacked(rv[0]));\\n    }\\n    return rv;\\n  }\\n\\n  /** *********************************************************************\\n   * @notice Check that product==scalar*multiplicand\\n   *\\n   * @dev Based on Vitalik Buterin's idea in ethresear.ch post cited below.\\n   *\\n   * @param multiplicand: secp256k1 point\\n   * @param scalar: non-zero GF(GROUP_ORDER) scalar\\n   * @param product: secp256k1 expected to be multiplier * multiplicand\\n   * @return verifies true iff product==scalar*multiplicand, with cryptographically high probability\\n   */\\n  function _ecmulVerify(\\n    uint256[2] memory multiplicand,\\n    uint256 scalar,\\n    uint256[2] memory product\\n  ) internal pure returns (bool verifies) {\\n    // solhint-disable-next-line custom-errors\\n    require(scalar != 0, \\\"zero scalar\\\"); // Rules out an ecrecover failure case\\n    uint256 x = multiplicand[0]; // x ordinate of multiplicand\\n    uint8 v = multiplicand[1] % 2 == 0 ? 27 : 28; // parity of y ordinate\\n    // https://ethresear.ch/t/you-can-kinda-abuse-ecrecover-to-do-ecmul-in-secp256k1-today/2384/9\\n    // Point corresponding to address ecrecover(0, v, x, s=scalar*x) is\\n    // (x\\u207b\\u00b9 mod GROUP_ORDER) * (scalar * x * multiplicand - 0 * g), i.e.\\n    // scalar*multiplicand. See https://crypto.stackexchange.com/a/18106\\n    bytes32 scalarTimesX = bytes32(mulmod(scalar, x, GROUP_ORDER));\\n    address actual = ecrecover(bytes32(0), v, bytes32(x), scalarTimesX);\\n    // Explicit conversion to address takes bottom 160 bits\\n    address expected = address(uint160(uint256(keccak256(abi.encodePacked(product)))));\\n    return (actual == expected);\\n  }\\n\\n  // Returns x1/z1-x2/z2=(x1z2-x2z1)/(z1z2) in projective coordinates on P\\u00b9(\\ud835\\udd3d\\u2099)\\n  function _projectiveSub(\\n    uint256 x1,\\n    uint256 z1,\\n    uint256 x2,\\n    uint256 z2\\n  ) internal pure returns (uint256 x3, uint256 z3) {\\n    unchecked {\\n      uint256 num1 = mulmod(z2, x1, FIELD_SIZE);\\n      // Note this cannot wrap since x2 is a point in [0, FIELD_SIZE-1]\\n      // we use unchecked to save gas.\\n      uint256 num2 = mulmod(FIELD_SIZE - x2, z1, FIELD_SIZE);\\n      (x3, z3) = (addmod(num1, num2, FIELD_SIZE), mulmod(z1, z2, FIELD_SIZE));\\n    }\\n    return (x3, z3);\\n  }\\n\\n  // Returns x1/z1*x2/z2=(x1x2)/(z1z2), in projective coordinates on P\\u00b9(\\ud835\\udd3d\\u2099)\\n  function _projectiveMul(\\n    uint256 x1,\\n    uint256 z1,\\n    uint256 x2,\\n    uint256 z2\\n  ) internal pure returns (uint256 x3, uint256 z3) {\\n    (x3, z3) = (mulmod(x1, x2, FIELD_SIZE), mulmod(z1, z2, FIELD_SIZE));\\n    return (x3, z3);\\n  }\\n\\n  /** **************************************************************************\\n        @notice Computes elliptic-curve sum, in projective co-ordinates\\n\\n        @dev Using projective coordinates avoids costly divisions\\n\\n        @dev To use this with p and q in affine coordinates, call\\n        @dev _projectiveECAdd(px, py, qx, qy). This will return\\n        @dev the addition of (px, py, 1) and (qx, qy, 1), in the\\n        @dev secp256k1 group.\\n\\n        @dev This can be used to calculate the z which is the inverse to zInv\\n        @dev in isValidVRFOutput. But consider using a faster\\n        @dev re-implementation such as ProjectiveECAdd in the golang vrf package.\\n\\n        @dev This function assumes [px,py,1],[qx,qy,1] are valid projective\\n             coordinates of secp256k1 points. That is safe in this contract,\\n             because this method is only used by _linearCombination, which checks\\n             points are on the curve via ecrecover.\\n        **************************************************************************\\n        @param px The first affine coordinate of the first summand\\n        @param py The second affine coordinate of the first summand\\n        @param qx The first affine coordinate of the second summand\\n        @param qy The second affine coordinate of the second summand\\n\\n        (px,py) and (qx,qy) must be distinct, valid secp256k1 points.\\n        **************************************************************************\\n        Return values are projective coordinates of [px,py,1]+[qx,qy,1] as points\\n        on secp256k1, in P\\u00b2(\\ud835\\udd3d\\u2099)\\n        @return sx\\n        @return sy\\n        @return sz\\n    */\\n  function _projectiveECAdd(\\n    uint256 px,\\n    uint256 py,\\n    uint256 qx,\\n    uint256 qy\\n  ) internal pure returns (uint256 sx, uint256 sy, uint256 sz) {\\n    unchecked {\\n      // See \\\"Group law for E/K : y^2 = x^3 + ax + b\\\", in section 3.1.2, p. 80,\\n      // \\\"Guide to Elliptic Curve Cryptography\\\" by Hankerson, Menezes and Vanstone\\n      // We take the equations there for (sx,sy), and homogenize them to\\n      // projective coordinates. That way, no inverses are required, here, and we\\n      // only need the one inverse in _affineECAdd.\\n\\n      // We only need the \\\"point addition\\\" equations from Hankerson et al. Can\\n      // skip the \\\"point doubling\\\" equations because p1 == p2 is cryptographically\\n      // impossible, and required not to be the case in _linearCombination.\\n\\n      // Add extra \\\"projective coordinate\\\" to the two points\\n      (uint256 z1, uint256 z2) = (1, 1);\\n\\n      // (lx, lz) = (qy-py)/(qx-px), i.e., gradient of secant line.\\n      // Cannot wrap since px and py are in [0, FIELD_SIZE-1]\\n      uint256 lx = addmod(qy, FIELD_SIZE - py, FIELD_SIZE);\\n      uint256 lz = addmod(qx, FIELD_SIZE - px, FIELD_SIZE);\\n\\n      uint256 dx; // Accumulates denominator from sx calculation\\n      // sx=((qy-py)/(qx-px))^2-px-qx\\n      (sx, dx) = _projectiveMul(lx, lz, lx, lz); // ((qy-py)/(qx-px))^2\\n      (sx, dx) = _projectiveSub(sx, dx, px, z1); // ((qy-py)/(qx-px))^2-px\\n      (sx, dx) = _projectiveSub(sx, dx, qx, z2); // ((qy-py)/(qx-px))^2-px-qx\\n\\n      uint256 dy; // Accumulates denominator from sy calculation\\n      // sy=((qy-py)/(qx-px))(px-sx)-py\\n      (sy, dy) = _projectiveSub(px, z1, sx, dx); // px-sx\\n      (sy, dy) = _projectiveMul(sy, dy, lx, lz); // ((qy-py)/(qx-px))(px-sx)\\n      (sy, dy) = _projectiveSub(sy, dy, py, z1); // ((qy-py)/(qx-px))(px-sx)-py\\n\\n      if (dx != dy) {\\n        // Cross-multiply to put everything over a common denominator\\n        sx = mulmod(sx, dy, FIELD_SIZE);\\n        sy = mulmod(sy, dx, FIELD_SIZE);\\n        sz = mulmod(dx, dy, FIELD_SIZE);\\n      } else {\\n        // Already over a common denominator, use that for z ordinate\\n        sz = dx;\\n      }\\n    }\\n    return (sx, sy, sz);\\n  }\\n\\n  // p1+p2, as affine points on secp256k1.\\n  //\\n  // invZ must be the inverse of the z returned by _projectiveECAdd(p1, p2).\\n  // It is computed off-chain to save gas.\\n  //\\n  // p1 and p2 must be distinct, because _projectiveECAdd doesn't handle\\n  // point doubling.\\n  function _affineECAdd(\\n    uint256[2] memory p1,\\n    uint256[2] memory p2,\\n    uint256 invZ\\n  ) internal pure returns (uint256[2] memory) {\\n    uint256 x;\\n    uint256 y;\\n    uint256 z;\\n    (x, y, z) = _projectiveECAdd(p1[0], p1[1], p2[0], p2[1]);\\n    // solhint-disable-next-line custom-errors\\n    require(mulmod(z, invZ, FIELD_SIZE) == 1, \\\"invZ must be inverse of z\\\");\\n    // Clear the z ordinate of the projective representation by dividing through\\n    // by it, to obtain the affine representation\\n    return [mulmod(x, invZ, FIELD_SIZE), mulmod(y, invZ, FIELD_SIZE)];\\n  }\\n\\n  // True iff address(c*p+s*g) == lcWitness, where g is generator. (With\\n  // cryptographically high probability.)\\n  function _verifyLinearCombinationWithGenerator(\\n    uint256 c,\\n    uint256[2] memory p,\\n    uint256 s,\\n    address lcWitness\\n  ) internal pure returns (bool) {\\n    // Rule out ecrecover failure modes which return address 0.\\n    unchecked {\\n      // solhint-disable-next-line custom-errors\\n      require(lcWitness != address(0), \\\"bad witness\\\");\\n      uint8 v = (p[1] % 2 == 0) ? 27 : 28; // parity of y-ordinate of p\\n      // Note this cannot wrap (X - Y % X), but we use unchecked to save\\n      // gas.\\n      bytes32 pseudoHash = bytes32(GROUP_ORDER - mulmod(p[0], s, GROUP_ORDER)); // -s*p[0]\\n      bytes32 pseudoSignature = bytes32(mulmod(c, p[0], GROUP_ORDER)); // c*p[0]\\n      // https://ethresear.ch/t/you-can-kinda-abuse-ecrecover-to-do-ecmul-in-secp256k1-today/2384/9\\n      // The point corresponding to the address returned by\\n      // ecrecover(-s*p[0],v,p[0],c*p[0]) is\\n      // (p[0]\\u207b\\u00b9 mod GROUP_ORDER)*(c*p[0]-(-s)*p[0]*g)=c*p+s*g.\\n      // See https://crypto.stackexchange.com/a/18106\\n      // https://bitcoin.stackexchange.com/questions/38351/ecdsa-v-r-s-what-is-v\\n      address computed = ecrecover(pseudoHash, v, bytes32(p[0]), pseudoSignature);\\n      return computed == lcWitness;\\n    }\\n  }\\n\\n  // c*p1 + s*p2. Requires cp1Witness=c*p1 and sp2Witness=s*p2. Also\\n  // requires cp1Witness != sp2Witness (which is fine for this application,\\n  // since it is cryptographically impossible for them to be equal. In the\\n  // (cryptographically impossible) case that a prover accidentally derives\\n  // a proof with equal c*p1 and s*p2, they should retry with a different\\n  // proof nonce.) Assumes that all points are on secp256k1\\n  // (which is checked in _verifyVRFProof below.)\\n  function _linearCombination(\\n    uint256 c,\\n    uint256[2] memory p1,\\n    uint256[2] memory cp1Witness,\\n    uint256 s,\\n    uint256[2] memory p2,\\n    uint256[2] memory sp2Witness,\\n    uint256 zInv\\n  ) internal pure returns (uint256[2] memory) {\\n    unchecked {\\n      // Note we are relying on the wrap around here\\n      // solhint-disable-next-line custom-errors\\n      require((cp1Witness[0] % FIELD_SIZE) != (sp2Witness[0] % FIELD_SIZE), \\\"points in sum must be distinct\\\");\\n      // solhint-disable-next-line custom-errors\\n      require(_ecmulVerify(p1, c, cp1Witness), \\\"First mul check failed\\\");\\n      // solhint-disable-next-line custom-errors\\n      require(_ecmulVerify(p2, s, sp2Witness), \\\"Second mul check failed\\\");\\n      return _affineECAdd(cp1Witness, sp2Witness, zInv);\\n    }\\n  }\\n\\n  // Domain-separation tag for the hash taken in _scalarFromCurvePoints.\\n  // Corresponds to scalarFromCurveHashPrefix in vrf.go\\n  uint256 internal constant SCALAR_FROM_CURVE_POINTS_HASH_PREFIX = 2;\\n\\n  // Pseudo-random number from inputs. Matches vrf.go/_scalarFromCurvePoints, and\\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.3\\n  // The draft calls (in step 7, via the definition of string_to_int, in\\n  // https://datatracker.ietf.org/doc/html/rfc8017#section-4.2 ) for taking the\\n  // first hash without checking that it corresponds to a number less than the\\n  // group order, which will lead to a slight bias in the sample.\\n  //\\n  // TODO(alx): We could save a bit of gas by following the standard here and\\n  // using the compressed representation of the points, if we collated the y\\n  // parities into a single bytes32.\\n  // https://www.pivotaltracker.com/story/show/171120588\\n  function _scalarFromCurvePoints(\\n    uint256[2] memory hash,\\n    uint256[2] memory pk,\\n    uint256[2] memory gamma,\\n    address uWitness,\\n    uint256[2] memory v\\n  ) internal pure returns (uint256 s) {\\n    return uint256(keccak256(abi.encodePacked(SCALAR_FROM_CURVE_POINTS_HASH_PREFIX, hash, pk, gamma, v, uWitness)));\\n  }\\n\\n  // True if (gamma, c, s) is a correctly constructed randomness proof from pk\\n  // and seed. zInv must be the inverse of the third ordinate from\\n  // _projectiveECAdd applied to cGammaWitness and sHashWitness. Corresponds to\\n  // section 5.3 of the IETF draft.\\n  //\\n  // TODO(alx): Since I'm only using pk in the ecrecover call, I could only pass\\n  // the x ordinate, and the parity of the y ordinate in the top bit of uWitness\\n  // (which I could make a uint256 without using any extra space.) Would save\\n  // about 2000 gas. https://www.pivotaltracker.com/story/show/170828567\\n  function _verifyVRFProof(\\n    uint256[2] memory pk,\\n    uint256[2] memory gamma,\\n    uint256 c,\\n    uint256 s,\\n    uint256 seed,\\n    address uWitness,\\n    uint256[2] memory cGammaWitness,\\n    uint256[2] memory sHashWitness,\\n    uint256 zInv\\n  ) internal view {\\n    unchecked {\\n      // solhint-disable-next-line custom-errors\\n      require(_isOnCurve(pk), \\\"public key is not on curve\\\");\\n      // solhint-disable-next-line custom-errors\\n      require(_isOnCurve(gamma), \\\"gamma is not on curve\\\");\\n      // solhint-disable-next-line custom-errors\\n      require(_isOnCurve(cGammaWitness), \\\"cGammaWitness is not on curve\\\");\\n      // solhint-disable-next-line custom-errors\\n      require(_isOnCurve(sHashWitness), \\\"sHashWitness is not on curve\\\");\\n      // Step 5. of IETF draft section 5.3 (pk corresponds to 5.3's Y, and here\\n      // we use the address of u instead of u itself. Also, here we add the\\n      // terms instead of taking the difference, and in the proof construction in\\n      // vrf.GenerateProof, we correspondingly take the difference instead of\\n      // taking the sum as they do in step 7 of section 5.1.)\\n      // solhint-disable-next-line custom-errors\\n      require(_verifyLinearCombinationWithGenerator(c, pk, s, uWitness), \\\"addr(c*pk+s*g)!=_uWitness\\\");\\n      // Step 4. of IETF draft section 5.3 (pk corresponds to Y, seed to alpha_string)\\n      uint256[2] memory hash = _hashToCurve(pk, seed);\\n      // Step 6. of IETF draft section 5.3, but see note for step 5 about +/- terms\\n      uint256[2] memory v = _linearCombination(c, gamma, cGammaWitness, s, hash, sHashWitness, zInv);\\n      // Steps 7. and 8. of IETF draft section 5.3\\n      uint256 derivedC = _scalarFromCurvePoints(hash, pk, gamma, uWitness, v);\\n      // solhint-disable-next-line custom-errors\\n      require(c == derivedC, \\\"invalid proof\\\");\\n    }\\n  }\\n\\n  // Domain-separation tag for the hash used as the final VRF output.\\n  // Corresponds to vrfRandomOutputHashPrefix in vrf.go\\n  uint256 internal constant VRF_RANDOM_OUTPUT_HASH_PREFIX = 3;\\n\\n  struct Proof {\\n    uint256[2] pk;\\n    uint256[2] gamma;\\n    uint256 c;\\n    uint256 s;\\n    uint256 seed;\\n    address uWitness;\\n    uint256[2] cGammaWitness;\\n    uint256[2] sHashWitness;\\n    uint256 zInv;\\n  }\\n\\n  /* ***************************************************************************\\n     * @notice Returns proof's output, if proof is valid. Otherwise reverts\\n\\n     * @param proof vrf proof components\\n     * @param seed  seed used to generate the vrf output\\n     *\\n     * Throws if proof is invalid, otherwise:\\n     * @return output i.e., the random output implied by the proof\\n     * ***************************************************************************\\n     */\\n  function _randomValueFromVRFProof(Proof memory proof, uint256 seed) internal view returns (uint256 output) {\\n    _verifyVRFProof(\\n      proof.pk,\\n      proof.gamma,\\n      proof.c,\\n      proof.s,\\n      seed,\\n      proof.uWitness,\\n      proof.cGammaWitness,\\n      proof.sHashWitness,\\n      proof.zInv\\n    );\\n    output = uint256(keccak256(abi.encode(VRF_RANDOM_OUTPUT_HASH_PREFIX, proof.gamma)));\\n    return output;\\n  }\\n}\\n\",\"keccak256\":\"0xef481c806ec0cfbe6498690789590887df3324f8c62f26d1022b9ad74193ee7e\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  // solhint-disable-next-line chainlink-solidity/prefix-immutable-variables-with-i\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x5a502a5ce16796565815b295bb2d18a0d26d6f23621f733918c971047c6091d7\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport {LinkTokenInterface} from \\\"../shared/interfaces/LinkTokenInterface.sol\\\";\\nimport {BlockhashStoreInterface} from \\\"./interfaces/BlockhashStoreInterface.sol\\\";\\nimport {AggregatorV3Interface} from \\\"../shared/interfaces/AggregatorV3Interface.sol\\\";\\nimport {VRFCoordinatorV2Interface} from \\\"./interfaces/VRFCoordinatorV2Interface.sol\\\";\\nimport {TypeAndVersionInterface} from \\\"../interfaces/TypeAndVersionInterface.sol\\\";\\nimport {IERC677Receiver} from \\\"../shared/interfaces/IERC677Receiver.sol\\\";\\nimport {VRF} from \\\"./VRF.sol\\\";\\nimport {ConfirmedOwner} from \\\"../shared/access/ConfirmedOwner.sol\\\";\\nimport {VRFConsumerBaseV2} from \\\"./VRFConsumerBaseV2.sol\\\";\\nimport {ChainSpecificUtil} from \\\"../ChainSpecificUtil.sol\\\";\\n\\ncontract VRFCoordinatorV2 is VRF, ConfirmedOwner, TypeAndVersionInterface, VRFCoordinatorV2Interface, IERC677Receiver {\\n  // solhint-disable-next-line chainlink-solidity/prefix-immutable-variables-with-i\\n  LinkTokenInterface public immutable LINK;\\n  // solhint-disable-next-line chainlink-solidity/prefix-immutable-variables-with-i\\n  AggregatorV3Interface public immutable LINK_ETH_FEED;\\n  // solhint-disable-next-line chainlink-solidity/prefix-immutable-variables-with-i\\n  BlockhashStoreInterface public immutable BLOCKHASH_STORE;\\n\\n  // We need to maintain a list of consuming addresses.\\n  // This bound ensures we are able to loop over them as needed.\\n  // Should a user require more consumers, they can use multiple subscriptions.\\n  uint16 public constant MAX_CONSUMERS = 100;\\n  error TooManyConsumers();\\n  error InsufficientBalance();\\n  error InvalidConsumer(uint64 subId, address consumer);\\n  error InvalidSubscription();\\n  error OnlyCallableFromLink();\\n  error InvalidCalldata();\\n  error MustBeSubOwner(address owner);\\n  error PendingRequestExists();\\n  error MustBeRequestedOwner(address proposedOwner);\\n  error BalanceInvariantViolated(uint256 internalBalance, uint256 externalBalance); // Should never happen\\n  event FundsRecovered(address to, uint256 amount);\\n  // We use the subscription struct (1 word)\\n  // at fulfillment time.\\n  struct Subscription {\\n    // There are only 1e9*1e18 = 1e27 juels in existence, so the balance can fit in uint96 (2^96 ~ 7e28)\\n    uint96 balance; // Common link balance used for all consumer requests.\\n    uint64 reqCount; // For fee tiers\\n  }\\n  // We use the config for the mgmt APIs\\n  struct SubscriptionConfig {\\n    address owner; // Owner can fund/withdraw/cancel the sub.\\n    address requestedOwner; // For safely transferring sub ownership.\\n    // Maintains the list of keys in s_consumers.\\n    // We do this for 2 reasons:\\n    // 1. To be able to clean up all keys from s_consumers when canceling a subscription.\\n    // 2. To be able to return the list of all consumers in getSubscription.\\n    // Note that we need the s_consumers map to be able to directly check if a\\n    // consumer is valid without reading all the consumers from storage.\\n    address[] consumers;\\n  }\\n  // Note a nonce of 0 indicates an the consumer is not assigned to that subscription.\\n  mapping(address => mapping(uint64 => uint64)) /* consumer */ /* subId */ /* nonce */ private s_consumers;\\n  mapping(uint64 => SubscriptionConfig) /* subId */ /* subscriptionConfig */ private s_subscriptionConfigs;\\n  mapping(uint64 => Subscription) /* subId */ /* subscription */ private s_subscriptions;\\n  // We make the sub count public so that its possible to\\n  // get all the current subscriptions via getSubscription.\\n  uint64 private s_currentSubId;\\n  // s_totalBalance tracks the total link sent to/from\\n  // this contract through onTokenTransfer, cancelSubscription and oracleWithdraw.\\n  // A discrepancy with this contract's link balance indicates someone\\n  // sent tokens using transfer and so we may need to use recoverFunds.\\n  uint96 private s_totalBalance;\\n  event SubscriptionCreated(uint64 indexed subId, address owner);\\n  event SubscriptionFunded(uint64 indexed subId, uint256 oldBalance, uint256 newBalance);\\n  event SubscriptionConsumerAdded(uint64 indexed subId, address consumer);\\n  event SubscriptionConsumerRemoved(uint64 indexed subId, address consumer);\\n  event SubscriptionCanceled(uint64 indexed subId, address to, uint256 amount);\\n  event SubscriptionOwnerTransferRequested(uint64 indexed subId, address from, address to);\\n  event SubscriptionOwnerTransferred(uint64 indexed subId, address from, address to);\\n\\n  // Set this maximum to 200 to give us a 56 block window to fulfill\\n  // the request before requiring the block hash feeder.\\n  uint16 public constant MAX_REQUEST_CONFIRMATIONS = 200;\\n  uint32 public constant MAX_NUM_WORDS = 500;\\n  // 5k is plenty for an EXTCODESIZE call (2600) + warm CALL (100)\\n  // and some arithmetic operations.\\n  uint256 private constant GAS_FOR_CALL_EXACT_CHECK = 5_000;\\n  error InvalidRequestConfirmations(uint16 have, uint16 min, uint16 max);\\n  error GasLimitTooBig(uint32 have, uint32 want);\\n  error NumWordsTooBig(uint32 have, uint32 want);\\n  error ProvingKeyAlreadyRegistered(bytes32 keyHash);\\n  error NoSuchProvingKey(bytes32 keyHash);\\n  error InvalidLinkWeiPrice(int256 linkWei);\\n  error InsufficientGasForConsumer(uint256 have, uint256 want);\\n  error NoCorrespondingRequest();\\n  error IncorrectCommitment();\\n  error BlockhashNotInStore(uint256 blockNum);\\n  error PaymentTooLarge();\\n  error Reentrant();\\n  struct RequestCommitment {\\n    uint64 blockNum;\\n    uint64 subId;\\n    uint32 callbackGasLimit;\\n    uint32 numWords;\\n    address sender;\\n  }\\n  mapping(bytes32 => address) /* keyHash */ /* oracle */ private s_provingKeys;\\n  bytes32[] private s_provingKeyHashes;\\n  mapping(address => uint96) /* oracle */ /* LINK balance */ private s_withdrawableTokens;\\n  mapping(uint256 => bytes32) /* requestID */ /* commitment */ private s_requestCommitments;\\n  event ProvingKeyRegistered(bytes32 keyHash, address indexed oracle);\\n  event ProvingKeyDeregistered(bytes32 keyHash, address indexed oracle);\\n  event RandomWordsRequested(\\n    bytes32 indexed keyHash,\\n    uint256 requestId,\\n    uint256 preSeed,\\n    uint64 indexed subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords,\\n    address indexed sender\\n  );\\n  event RandomWordsFulfilled(uint256 indexed requestId, uint256 outputSeed, uint96 payment, bool success);\\n\\n  struct Config {\\n    uint16 minimumRequestConfirmations;\\n    uint32 maxGasLimit;\\n    // Reentrancy protection.\\n    bool reentrancyLock;\\n    // stalenessSeconds is how long before we consider the feed price to be stale\\n    // and fallback to fallbackWeiPerUnitLink.\\n    uint32 stalenessSeconds;\\n    // Gas to cover oracle payment after we calculate the payment.\\n    // We make it configurable in case those operations are repriced.\\n    uint32 gasAfterPaymentCalculation;\\n  }\\n  int256 private s_fallbackWeiPerUnitLink;\\n  Config private s_config;\\n  FeeConfig private s_feeConfig;\\n  struct FeeConfig {\\n    // Flat fee charged per fulfillment in millionths of link\\n    // So fee range is [0, 2^32/10^6].\\n    uint32 fulfillmentFlatFeeLinkPPMTier1;\\n    uint32 fulfillmentFlatFeeLinkPPMTier2;\\n    uint32 fulfillmentFlatFeeLinkPPMTier3;\\n    uint32 fulfillmentFlatFeeLinkPPMTier4;\\n    uint32 fulfillmentFlatFeeLinkPPMTier5;\\n    uint24 reqsForTier2;\\n    uint24 reqsForTier3;\\n    uint24 reqsForTier4;\\n    uint24 reqsForTier5;\\n  }\\n  event ConfigSet(\\n    uint16 minimumRequestConfirmations,\\n    uint32 maxGasLimit,\\n    uint32 stalenessSeconds,\\n    uint32 gasAfterPaymentCalculation,\\n    int256 fallbackWeiPerUnitLink,\\n    FeeConfig feeConfig\\n  );\\n\\n  constructor(address link, address blockhashStore, address linkEthFeed) ConfirmedOwner(msg.sender) {\\n    LINK = LinkTokenInterface(link);\\n    LINK_ETH_FEED = AggregatorV3Interface(linkEthFeed);\\n    BLOCKHASH_STORE = BlockhashStoreInterface(blockhashStore);\\n  }\\n\\n  /**\\n   * @notice Registers a proving key to an oracle.\\n   * @param oracle address of the oracle\\n   * @param publicProvingKey key that oracle can use to submit vrf fulfillments\\n   */\\n  function registerProvingKey(address oracle, uint256[2] calldata publicProvingKey) external onlyOwner {\\n    bytes32 kh = hashOfKey(publicProvingKey);\\n    if (s_provingKeys[kh] != address(0)) {\\n      revert ProvingKeyAlreadyRegistered(kh);\\n    }\\n    s_provingKeys[kh] = oracle;\\n    s_provingKeyHashes.push(kh);\\n    emit ProvingKeyRegistered(kh, oracle);\\n  }\\n\\n  /**\\n   * @notice Deregisters a proving key to an oracle.\\n   * @param publicProvingKey key that oracle can use to submit vrf fulfillments\\n   */\\n  function deregisterProvingKey(uint256[2] calldata publicProvingKey) external onlyOwner {\\n    bytes32 kh = hashOfKey(publicProvingKey);\\n    address oracle = s_provingKeys[kh];\\n    if (oracle == address(0)) {\\n      revert NoSuchProvingKey(kh);\\n    }\\n    delete s_provingKeys[kh];\\n    for (uint256 i = 0; i < s_provingKeyHashes.length; i++) {\\n      if (s_provingKeyHashes[i] == kh) {\\n        bytes32 last = s_provingKeyHashes[s_provingKeyHashes.length - 1];\\n        // Copy last element and overwrite kh to be deleted with it\\n        s_provingKeyHashes[i] = last;\\n        s_provingKeyHashes.pop();\\n      }\\n    }\\n    emit ProvingKeyDeregistered(kh, oracle);\\n  }\\n\\n  /**\\n   * @notice Returns the proving key hash key associated with this public key\\n   * @param publicKey the key to return the hash of\\n   */\\n  function hashOfKey(uint256[2] memory publicKey) public pure returns (bytes32) {\\n    return keccak256(abi.encode(publicKey));\\n  }\\n\\n  /**\\n   * @notice Sets the configuration of the vrfv2 coordinator\\n   * @param minimumRequestConfirmations global min for request confirmations\\n   * @param maxGasLimit global max for request gas limit\\n   * @param stalenessSeconds if the eth/link feed is more stale then this, use the fallback price\\n   * @param gasAfterPaymentCalculation gas used in doing accounting after completing the gas measurement\\n   * @param fallbackWeiPerUnitLink fallback eth/link price in the case of a stale feed\\n   * @param feeConfig fee tier configuration\\n   */\\n  function setConfig(\\n    uint16 minimumRequestConfirmations,\\n    uint32 maxGasLimit,\\n    uint32 stalenessSeconds,\\n    uint32 gasAfterPaymentCalculation,\\n    int256 fallbackWeiPerUnitLink,\\n    FeeConfig memory feeConfig\\n  ) external onlyOwner {\\n    if (minimumRequestConfirmations > MAX_REQUEST_CONFIRMATIONS) {\\n      revert InvalidRequestConfirmations(\\n        minimumRequestConfirmations,\\n        minimumRequestConfirmations,\\n        MAX_REQUEST_CONFIRMATIONS\\n      );\\n    }\\n    if (fallbackWeiPerUnitLink <= 0) {\\n      revert InvalidLinkWeiPrice(fallbackWeiPerUnitLink);\\n    }\\n    s_config = Config({\\n      minimumRequestConfirmations: minimumRequestConfirmations,\\n      maxGasLimit: maxGasLimit,\\n      stalenessSeconds: stalenessSeconds,\\n      gasAfterPaymentCalculation: gasAfterPaymentCalculation,\\n      reentrancyLock: false\\n    });\\n    s_feeConfig = feeConfig;\\n    s_fallbackWeiPerUnitLink = fallbackWeiPerUnitLink;\\n    emit ConfigSet(\\n      minimumRequestConfirmations,\\n      maxGasLimit,\\n      stalenessSeconds,\\n      gasAfterPaymentCalculation,\\n      fallbackWeiPerUnitLink,\\n      s_feeConfig\\n    );\\n  }\\n\\n  function getConfig()\\n    external\\n    view\\n    returns (\\n      uint16 minimumRequestConfirmations,\\n      uint32 maxGasLimit,\\n      uint32 stalenessSeconds,\\n      uint32 gasAfterPaymentCalculation\\n    )\\n  {\\n    return (\\n      s_config.minimumRequestConfirmations,\\n      s_config.maxGasLimit,\\n      s_config.stalenessSeconds,\\n      s_config.gasAfterPaymentCalculation\\n    );\\n  }\\n\\n  function getFeeConfig()\\n    external\\n    view\\n    returns (\\n      uint32 fulfillmentFlatFeeLinkPPMTier1,\\n      uint32 fulfillmentFlatFeeLinkPPMTier2,\\n      uint32 fulfillmentFlatFeeLinkPPMTier3,\\n      uint32 fulfillmentFlatFeeLinkPPMTier4,\\n      uint32 fulfillmentFlatFeeLinkPPMTier5,\\n      uint24 reqsForTier2,\\n      uint24 reqsForTier3,\\n      uint24 reqsForTier4,\\n      uint24 reqsForTier5\\n    )\\n  {\\n    return (\\n      s_feeConfig.fulfillmentFlatFeeLinkPPMTier1,\\n      s_feeConfig.fulfillmentFlatFeeLinkPPMTier2,\\n      s_feeConfig.fulfillmentFlatFeeLinkPPMTier3,\\n      s_feeConfig.fulfillmentFlatFeeLinkPPMTier4,\\n      s_feeConfig.fulfillmentFlatFeeLinkPPMTier5,\\n      s_feeConfig.reqsForTier2,\\n      s_feeConfig.reqsForTier3,\\n      s_feeConfig.reqsForTier4,\\n      s_feeConfig.reqsForTier5\\n    );\\n  }\\n\\n  function getTotalBalance() external view returns (uint256) {\\n    return s_totalBalance;\\n  }\\n\\n  function getFallbackWeiPerUnitLink() external view returns (int256) {\\n    return s_fallbackWeiPerUnitLink;\\n  }\\n\\n  /**\\n   * @notice Owner cancel subscription, sends remaining link directly to the subscription owner.\\n   * @param subId subscription id\\n   * @dev notably can be called even if there are pending requests, outstanding ones may fail onchain\\n   */\\n  function ownerCancelSubscription(uint64 subId) external onlyOwner {\\n    if (s_subscriptionConfigs[subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    _cancelSubscriptionHelper(subId, s_subscriptionConfigs[subId].owner);\\n  }\\n\\n  /**\\n   * @notice Recover link sent with transfer instead of transferAndCall.\\n   * @param to address to send link to\\n   */\\n  function recoverFunds(address to) external onlyOwner {\\n    uint256 externalBalance = LINK.balanceOf(address(this));\\n    uint256 internalBalance = uint256(s_totalBalance);\\n    if (internalBalance > externalBalance) {\\n      revert BalanceInvariantViolated(internalBalance, externalBalance);\\n    }\\n    if (internalBalance < externalBalance) {\\n      uint256 amount = externalBalance - internalBalance;\\n      LINK.transfer(to, amount);\\n      emit FundsRecovered(to, amount);\\n    }\\n    // If the balances are equal, nothing to be done.\\n  }\\n\\n  /**\\n   * @inheritdoc VRFCoordinatorV2Interface\\n   */\\n  function getRequestConfig() external view override returns (uint16, uint32, bytes32[] memory) {\\n    return (s_config.minimumRequestConfirmations, s_config.maxGasLimit, s_provingKeyHashes);\\n  }\\n\\n  /**\\n   * @inheritdoc VRFCoordinatorV2Interface\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 requestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external override nonReentrant returns (uint256) {\\n    // Input validation using the subscription storage.\\n    if (s_subscriptionConfigs[subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    // Its important to ensure that the consumer is in fact who they say they\\n    // are, otherwise they could use someone else's subscription balance.\\n    // A nonce of 0 indicates consumer is not allocated to the sub.\\n    uint64 currentNonce = s_consumers[msg.sender][subId];\\n    if (currentNonce == 0) {\\n      revert InvalidConsumer(subId, msg.sender);\\n    }\\n    // Input validation using the config storage word.\\n    if (\\n      requestConfirmations < s_config.minimumRequestConfirmations || requestConfirmations > MAX_REQUEST_CONFIRMATIONS\\n    ) {\\n      revert InvalidRequestConfirmations(\\n        requestConfirmations,\\n        s_config.minimumRequestConfirmations,\\n        MAX_REQUEST_CONFIRMATIONS\\n      );\\n    }\\n    // No lower bound on the requested gas limit. A user could request 0\\n    // and they would simply be billed for the proof verification and wouldn't be\\n    // able to do anything with the random value.\\n    if (callbackGasLimit > s_config.maxGasLimit) {\\n      revert GasLimitTooBig(callbackGasLimit, s_config.maxGasLimit);\\n    }\\n    if (numWords > MAX_NUM_WORDS) {\\n      revert NumWordsTooBig(numWords, MAX_NUM_WORDS);\\n    }\\n    // Note we do not check whether the keyHash is valid to save gas.\\n    // The consequence for users is that they can send requests\\n    // for invalid keyHashes which will simply not be fulfilled.\\n    uint64 nonce = currentNonce + 1;\\n    (uint256 requestId, uint256 preSeed) = _computeRequestId(keyHash, msg.sender, subId, nonce);\\n\\n    s_requestCommitments[requestId] = keccak256(\\n      abi.encode(requestId, ChainSpecificUtil._getBlockNumber(), subId, callbackGasLimit, numWords, msg.sender)\\n    );\\n    emit RandomWordsRequested(\\n      keyHash,\\n      requestId,\\n      preSeed,\\n      subId,\\n      requestConfirmations,\\n      callbackGasLimit,\\n      numWords,\\n      msg.sender\\n    );\\n    s_consumers[msg.sender][subId] = nonce;\\n\\n    return requestId;\\n  }\\n\\n  /**\\n   * @notice Get request commitment\\n   * @param requestId id of request\\n   * @dev used to determine if a request is fulfilled or not\\n   */\\n  function getCommitment(uint256 requestId) external view returns (bytes32) {\\n    return s_requestCommitments[requestId];\\n  }\\n\\n  function _computeRequestId(\\n    bytes32 keyHash,\\n    address sender,\\n    uint64 subId,\\n    uint64 nonce\\n  ) private pure returns (uint256, uint256) {\\n    uint256 preSeed = uint256(keccak256(abi.encode(keyHash, sender, subId, nonce)));\\n    return (uint256(keccak256(abi.encode(keyHash, preSeed))), preSeed);\\n  }\\n\\n  /**\\n   * @dev calls target address with exactly gasAmount gas and data as calldata\\n   * or reverts if at least gasAmount gas is not available.\\n   */\\n  function _callWithExactGas(uint256 gasAmount, address target, bytes memory data) private returns (bool success) {\\n    assembly {\\n      let g := gas()\\n      // Compute g -= GAS_FOR_CALL_EXACT_CHECK and check for underflow\\n      // The gas actually passed to the callee is min(gasAmount, 63//64*gas available).\\n      // We want to ensure that we revert if gasAmount >  63//64*gas available\\n      // as we do not want to provide them with less, however that check itself costs\\n      // gas.  GAS_FOR_CALL_EXACT_CHECK ensures we have at least enough gas to be able\\n      // to revert if gasAmount >  63//64*gas available.\\n      if lt(g, GAS_FOR_CALL_EXACT_CHECK) {\\n        revert(0, 0)\\n      }\\n      g := sub(g, GAS_FOR_CALL_EXACT_CHECK)\\n      // if g - g//64 <= gasAmount, revert\\n      // (we subtract g//64 because of EIP-150)\\n      if iszero(gt(sub(g, div(g, 64)), gasAmount)) {\\n        revert(0, 0)\\n      }\\n      // solidity calls check that a contract actually exists at the destination, so we do the same\\n      if iszero(extcodesize(target)) {\\n        revert(0, 0)\\n      }\\n      // call and return whether we succeeded. ignore return data\\n      // call(gas,addr,value,argsOffset,argsLength,retOffset,retLength)\\n      success := call(gasAmount, target, 0, add(data, 0x20), mload(data), 0, 0)\\n    }\\n    return success;\\n  }\\n\\n  function _getRandomnessFromProof(\\n    Proof memory proof,\\n    RequestCommitment memory rc\\n  ) private view returns (bytes32 keyHash, uint256 requestId, uint256 randomness) {\\n    keyHash = hashOfKey(proof.pk);\\n    // Only registered proving keys are permitted.\\n    address oracle = s_provingKeys[keyHash];\\n    if (oracle == address(0)) {\\n      revert NoSuchProvingKey(keyHash);\\n    }\\n    requestId = uint256(keccak256(abi.encode(keyHash, proof.seed)));\\n    bytes32 commitment = s_requestCommitments[requestId];\\n    if (commitment == 0) {\\n      revert NoCorrespondingRequest();\\n    }\\n    if (\\n      commitment != keccak256(abi.encode(requestId, rc.blockNum, rc.subId, rc.callbackGasLimit, rc.numWords, rc.sender))\\n    ) {\\n      revert IncorrectCommitment();\\n    }\\n\\n    bytes32 blockHash = ChainSpecificUtil._getBlockhash(rc.blockNum);\\n    if (blockHash == bytes32(0)) {\\n      blockHash = BLOCKHASH_STORE.getBlockhash(rc.blockNum);\\n      if (blockHash == bytes32(0)) {\\n        revert BlockhashNotInStore(rc.blockNum);\\n      }\\n    }\\n\\n    // The seed actually used by the VRF machinery, mixing in the blockhash\\n    uint256 actualSeed = uint256(keccak256(abi.encodePacked(proof.seed, blockHash)));\\n    randomness = VRF._randomValueFromVRFProof(proof, actualSeed); // Reverts on failure\\n    return (keyHash, requestId, randomness);\\n  }\\n\\n  /*\\n   * @notice Compute fee based on the request count\\n   * @param reqCount number of requests\\n   * @return feePPM fee in LINK PPM\\n   */\\n  function getFeeTier(uint64 reqCount) public view returns (uint32) {\\n    FeeConfig memory fc = s_feeConfig;\\n    if (0 <= reqCount && reqCount <= fc.reqsForTier2) {\\n      return fc.fulfillmentFlatFeeLinkPPMTier1;\\n    }\\n    if (fc.reqsForTier2 < reqCount && reqCount <= fc.reqsForTier3) {\\n      return fc.fulfillmentFlatFeeLinkPPMTier2;\\n    }\\n    if (fc.reqsForTier3 < reqCount && reqCount <= fc.reqsForTier4) {\\n      return fc.fulfillmentFlatFeeLinkPPMTier3;\\n    }\\n    if (fc.reqsForTier4 < reqCount && reqCount <= fc.reqsForTier5) {\\n      return fc.fulfillmentFlatFeeLinkPPMTier4;\\n    }\\n    return fc.fulfillmentFlatFeeLinkPPMTier5;\\n  }\\n\\n  /*\\n   * @notice Fulfill a randomness request\\n   * @param proof contains the proof and randomness\\n   * @param rc request commitment pre-image, committed to at request time\\n   * @return payment amount billed to the subscription\\n   * @dev simulated offchain to determine if sufficient balance is present to fulfill the request\\n   */\\n  function fulfillRandomWords(Proof memory proof, RequestCommitment memory rc) external nonReentrant returns (uint96) {\\n    uint256 startGas = gasleft();\\n    (bytes32 keyHash, uint256 requestId, uint256 randomness) = _getRandomnessFromProof(proof, rc);\\n\\n    uint256[] memory randomWords = new uint256[](rc.numWords);\\n    for (uint256 i = 0; i < rc.numWords; i++) {\\n      randomWords[i] = uint256(keccak256(abi.encode(randomness, i)));\\n    }\\n\\n    delete s_requestCommitments[requestId];\\n    VRFConsumerBaseV2 v;\\n    bytes memory resp = abi.encodeWithSelector(v.rawFulfillRandomWords.selector, requestId, randomWords);\\n    // Call with explicitly the amount of callback gas requested\\n    // Important to not let them exhaust the gas budget and avoid oracle payment.\\n    // Do not allow any non-view/non-pure coordinator functions to be called\\n    // during the consumers callback code via reentrancyLock.\\n    // Note that _callWithExactGas will revert if we do not have sufficient gas\\n    // to give the callee their requested amount.\\n    s_config.reentrancyLock = true;\\n    bool success = _callWithExactGas(rc.callbackGasLimit, rc.sender, resp);\\n    s_config.reentrancyLock = false;\\n\\n    // Increment the req count for fee tier selection.\\n    uint64 reqCount = s_subscriptions[rc.subId].reqCount;\\n    s_subscriptions[rc.subId].reqCount += 1;\\n\\n    // We want to charge users exactly for how much gas they use in their callback.\\n    // The gasAfterPaymentCalculation is meant to cover these additional operations where we\\n    // decrement the subscription balance and increment the oracles withdrawable balance.\\n    // We also add the flat link fee to the payment amount.\\n    // Its specified in millionths of link, if s_config.fulfillmentFlatFeeLinkPPM = 1\\n    // 1 link / 1e6 = 1e18 juels / 1e6 = 1e12 juels.\\n    uint96 payment = _calculatePaymentAmount(\\n      startGas,\\n      s_config.gasAfterPaymentCalculation,\\n      getFeeTier(reqCount),\\n      tx.gasprice\\n    );\\n    if (s_subscriptions[rc.subId].balance < payment) {\\n      revert InsufficientBalance();\\n    }\\n    s_subscriptions[rc.subId].balance -= payment;\\n    s_withdrawableTokens[s_provingKeys[keyHash]] += payment;\\n    // Include payment in the event for tracking costs.\\n    emit RandomWordsFulfilled(requestId, randomness, payment, success);\\n    return payment;\\n  }\\n\\n  // Get the amount of gas used for fulfillment\\n  function _calculatePaymentAmount(\\n    uint256 startGas,\\n    uint256 gasAfterPaymentCalculation,\\n    uint32 fulfillmentFlatFeeLinkPPM,\\n    uint256 weiPerUnitGas\\n  ) internal view returns (uint96) {\\n    int256 weiPerUnitLink;\\n    weiPerUnitLink = _getFeedData();\\n    if (weiPerUnitLink <= 0) {\\n      revert InvalidLinkWeiPrice(weiPerUnitLink);\\n    }\\n    // Will return non-zero on chains that have this enabled\\n    uint256 l1CostWei = ChainSpecificUtil._getCurrentTxL1GasFees(msg.data);\\n    // (1e18 juels/link) ((wei/gas * gas) + l1wei) / (wei/link) = juels\\n    uint256 paymentNoFee = (1e18 * (weiPerUnitGas * (gasAfterPaymentCalculation + startGas - gasleft()) + l1CostWei)) /\\n      uint256(weiPerUnitLink);\\n    uint256 fee = 1e12 * uint256(fulfillmentFlatFeeLinkPPM);\\n    if (paymentNoFee > (1e27 - fee)) {\\n      revert PaymentTooLarge(); // Payment + fee cannot be more than all of the link in existence.\\n    }\\n    return uint96(paymentNoFee + fee);\\n  }\\n\\n  function _getFeedData() private view returns (int256) {\\n    uint32 stalenessSeconds = s_config.stalenessSeconds;\\n    bool staleFallback = stalenessSeconds > 0;\\n    uint256 timestamp;\\n    int256 weiPerUnitLink;\\n    (, weiPerUnitLink, , timestamp, ) = LINK_ETH_FEED.latestRoundData();\\n    // solhint-disable-next-line not-rely-on-time\\n    if (staleFallback && stalenessSeconds < block.timestamp - timestamp) {\\n      weiPerUnitLink = s_fallbackWeiPerUnitLink;\\n    }\\n    return weiPerUnitLink;\\n  }\\n\\n  /*\\n   * @notice Oracle withdraw LINK earned through fulfilling requests\\n   * @param recipient where to send the funds\\n   * @param amount amount to withdraw\\n   */\\n  function oracleWithdraw(address recipient, uint96 amount) external nonReentrant {\\n    if (s_withdrawableTokens[msg.sender] < amount) {\\n      revert InsufficientBalance();\\n    }\\n    s_withdrawableTokens[msg.sender] -= amount;\\n    s_totalBalance -= amount;\\n    if (!LINK.transfer(recipient, amount)) {\\n      revert InsufficientBalance();\\n    }\\n  }\\n\\n  function onTokenTransfer(address /* sender */, uint256 amount, bytes calldata data) external override nonReentrant {\\n    if (msg.sender != address(LINK)) {\\n      revert OnlyCallableFromLink();\\n    }\\n    if (data.length != 32) {\\n      revert InvalidCalldata();\\n    }\\n    uint64 subId = abi.decode(data, (uint64));\\n    if (s_subscriptionConfigs[subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    // We do not check that the msg.sender is the subscription owner,\\n    // anyone can fund a subscription.\\n    uint256 oldBalance = s_subscriptions[subId].balance;\\n    s_subscriptions[subId].balance += uint96(amount);\\n    s_totalBalance += uint96(amount);\\n    emit SubscriptionFunded(subId, oldBalance, oldBalance + amount);\\n  }\\n\\n  function getCurrentSubId() external view returns (uint64) {\\n    return s_currentSubId;\\n  }\\n\\n  /**\\n   * @inheritdoc VRFCoordinatorV2Interface\\n   */\\n  function getSubscription(\\n    uint64 subId\\n  ) external view override returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers) {\\n    if (s_subscriptionConfigs[subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    return (\\n      s_subscriptions[subId].balance,\\n      s_subscriptions[subId].reqCount,\\n      s_subscriptionConfigs[subId].owner,\\n      s_subscriptionConfigs[subId].consumers\\n    );\\n  }\\n\\n  /**\\n   * @inheritdoc VRFCoordinatorV2Interface\\n   */\\n  function createSubscription() external override nonReentrant returns (uint64) {\\n    s_currentSubId++;\\n    uint64 currentSubId = s_currentSubId;\\n    address[] memory consumers = new address[](0);\\n    s_subscriptions[currentSubId] = Subscription({balance: 0, reqCount: 0});\\n    s_subscriptionConfigs[currentSubId] = SubscriptionConfig({\\n      owner: msg.sender,\\n      requestedOwner: address(0),\\n      consumers: consumers\\n    });\\n\\n    emit SubscriptionCreated(currentSubId, msg.sender);\\n    return currentSubId;\\n  }\\n\\n  /**\\n   * @inheritdoc VRFCoordinatorV2Interface\\n   */\\n  function requestSubscriptionOwnerTransfer(\\n    uint64 subId,\\n    address newOwner\\n  ) external override onlySubOwner(subId) nonReentrant {\\n    // Proposing to address(0) would never be claimable so don't need to check.\\n    if (s_subscriptionConfigs[subId].requestedOwner != newOwner) {\\n      s_subscriptionConfigs[subId].requestedOwner = newOwner;\\n      emit SubscriptionOwnerTransferRequested(subId, msg.sender, newOwner);\\n    }\\n  }\\n\\n  /**\\n   * @inheritdoc VRFCoordinatorV2Interface\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external override nonReentrant {\\n    if (s_subscriptionConfigs[subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    if (s_subscriptionConfigs[subId].requestedOwner != msg.sender) {\\n      revert MustBeRequestedOwner(s_subscriptionConfigs[subId].requestedOwner);\\n    }\\n    address oldOwner = s_subscriptionConfigs[subId].owner;\\n    s_subscriptionConfigs[subId].owner = msg.sender;\\n    s_subscriptionConfigs[subId].requestedOwner = address(0);\\n    emit SubscriptionOwnerTransferred(subId, oldOwner, msg.sender);\\n  }\\n\\n  /**\\n   * @inheritdoc VRFCoordinatorV2Interface\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external override onlySubOwner(subId) nonReentrant {\\n    if (pendingRequestExists(subId)) {\\n      revert PendingRequestExists();\\n    }\\n    if (s_consumers[consumer][subId] == 0) {\\n      revert InvalidConsumer(subId, consumer);\\n    }\\n    // Note bounded by MAX_CONSUMERS\\n    address[] memory consumers = s_subscriptionConfigs[subId].consumers;\\n    uint256 lastConsumerIndex = consumers.length - 1;\\n    for (uint256 i = 0; i < consumers.length; i++) {\\n      if (consumers[i] == consumer) {\\n        address last = consumers[lastConsumerIndex];\\n        // Storage write to preserve last element\\n        s_subscriptionConfigs[subId].consumers[i] = last;\\n        // Storage remove last element\\n        s_subscriptionConfigs[subId].consumers.pop();\\n        break;\\n      }\\n    }\\n    delete s_consumers[consumer][subId];\\n    emit SubscriptionConsumerRemoved(subId, consumer);\\n  }\\n\\n  /**\\n   * @inheritdoc VRFCoordinatorV2Interface\\n   */\\n  function addConsumer(uint64 subId, address consumer) external override onlySubOwner(subId) nonReentrant {\\n    // Already maxed, cannot add any more consumers.\\n    if (s_subscriptionConfigs[subId].consumers.length == MAX_CONSUMERS) {\\n      revert TooManyConsumers();\\n    }\\n    if (s_consumers[consumer][subId] != 0) {\\n      // Idempotence - do nothing if already added.\\n      // Ensures uniqueness in s_subscriptions[subId].consumers.\\n      return;\\n    }\\n    // Initialize the nonce to 1, indicating the consumer is allocated.\\n    s_consumers[consumer][subId] = 1;\\n    s_subscriptionConfigs[subId].consumers.push(consumer);\\n\\n    emit SubscriptionConsumerAdded(subId, consumer);\\n  }\\n\\n  /**\\n   * @inheritdoc VRFCoordinatorV2Interface\\n   */\\n  function cancelSubscription(uint64 subId, address to) external override onlySubOwner(subId) nonReentrant {\\n    if (pendingRequestExists(subId)) {\\n      revert PendingRequestExists();\\n    }\\n    _cancelSubscriptionHelper(subId, to);\\n  }\\n\\n  function _cancelSubscriptionHelper(uint64 subId, address to) private nonReentrant {\\n    SubscriptionConfig memory subConfig = s_subscriptionConfigs[subId];\\n    Subscription memory sub = s_subscriptions[subId];\\n    uint96 balance = sub.balance;\\n    // Note bounded by MAX_CONSUMERS;\\n    // If no consumers, does nothing.\\n    for (uint256 i = 0; i < subConfig.consumers.length; i++) {\\n      delete s_consumers[subConfig.consumers[i]][subId];\\n    }\\n    delete s_subscriptionConfigs[subId];\\n    delete s_subscriptions[subId];\\n    s_totalBalance -= balance;\\n    if (!LINK.transfer(to, uint256(balance))) {\\n      revert InsufficientBalance();\\n    }\\n    emit SubscriptionCanceled(subId, to, balance);\\n  }\\n\\n  /**\\n   * @inheritdoc VRFCoordinatorV2Interface\\n   * @dev Looping is bounded to MAX_CONSUMERS*(number of keyhashes).\\n   * @dev Used to disable subscription canceling while outstanding request are present.\\n   */\\n  function pendingRequestExists(uint64 subId) public view override returns (bool) {\\n    SubscriptionConfig memory subConfig = s_subscriptionConfigs[subId];\\n    for (uint256 i = 0; i < subConfig.consumers.length; i++) {\\n      for (uint256 j = 0; j < s_provingKeyHashes.length; j++) {\\n        (uint256 reqId, ) = _computeRequestId(\\n          s_provingKeyHashes[j],\\n          subConfig.consumers[i],\\n          subId,\\n          s_consumers[subConfig.consumers[i]][subId]\\n        );\\n        if (s_requestCommitments[reqId] != 0) {\\n          return true;\\n        }\\n      }\\n    }\\n    return false;\\n  }\\n\\n  modifier onlySubOwner(uint64 subId) {\\n    address owner = s_subscriptionConfigs[subId].owner;\\n    if (owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    if (msg.sender != owner) {\\n      revert MustBeSubOwner(owner);\\n    }\\n    _;\\n  }\\n\\n  modifier nonReentrant() {\\n    if (s_config.reentrancyLock) {\\n      revert Reentrant();\\n    }\\n    _;\\n  }\\n\\n  /**\\n   * @notice The type and version of this contract\\n   * @return Type and version string\\n   */\\n  function typeAndVersion() external pure virtual override returns (string memory) {\\n    return \\\"VRFCoordinatorV2 1.0.0\\\";\\n  }\\n}\\n\",\"keccak256\":\"0x717e3c362b4ec5f7fd951ebca93bdadc4200415e46411f19f2b7d6e4857156fe\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/interfaces/BlockhashStoreInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface BlockhashStoreInterface {\\n  function getBlockhash(uint256 number) external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x0d39e3be84000b35faa198e8c4fcc1cfd65a876275c776f45b4e0d48c852b4cc\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint64 subId\\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa9f8b7e09811f4ac9f421116b5d6bcf50b5748025c0cb012aaf5ff7c39a6b46a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Raffle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol\\\";\\n\\nerror Raffle__NotEnoughETHEntered();\\nerror Raffle__TransferFailed();\\n\\ncontract Raffle is VRFConsumerBaseV2 {\\n    /* State Variables */\\n    uint256 private immutable i_entranceFee;\\n    address payable[] private s_players;\\n    VRFCoordinatorV2Interface private immutable i_VRFCoordinator;\\n    bytes32 private immutable i_gasLane;\\n    uint64 private immutable i_subscriptionId;\\n    uint32 private immutable i_callBackGasLimit;\\n    uint16 private constant REQUEST_CONFIRMATIONS = 3;\\n    uint32 private constant NUM_WORDS = 1;\\n\\n    /* Lottery Variables */\\n    address private s_recentWinner;\\n\\n    /* Events */\\n    event RaffleEntered(address indexed player);\\n    event RequestedRaffleWinner(uint256 indexed requestId);\\n    event WinnerPicked(address indexed winner);\\n\\n    constructor(\\n        address VRFCoordinatorV2,\\n        uint256 entranceFee,\\n        bytes32 gasLane,\\n        uint64 subscriptionId,\\n        uint32 callbackGasLimit\\n    ) VRFConsumerBaseV2(VRFCoordinatorV2) {\\n        i_entranceFee = entranceFee;\\n        i_VRFCoordinator = VRFCoordinatorV2Interface(VRFCoordinatorV2);\\n        i_gasLane = gasLane;\\n        i_subscriptionId = subscriptionId;\\n        i_callBackGasLimit = callbackGasLimit;\\n    }\\n\\n    function enterRaffle() public payable {\\n        // we could do:\\n        // require(msg.value > i_entranceFee, \\\"Not enough ETH!\\\")\\n\\n        // but instead we'll do a custom error cause it's more gas efficient\\n\\n        if (msg.value < i_entranceFee) {\\n            revert Raffle__NotEnoughETHEntered();\\n        }\\n\\n        s_players.push(payable(msg.sender));\\n\\n        // Events\\n        emit RaffleEntered(msg.sender);\\n    }\\n\\n    function requestRandomWinner() external {\\n        uint256 requestId = i_VRFCoordinator.requestRandomWords(\\n            i_gasLane, // gasLane\\n            i_subscriptionId,\\n            REQUEST_CONFIRMATIONS,\\n            i_callBackGasLimit,\\n            NUM_WORDS\\n        );\\n        emit RequestedRaffleWinner(requestId);\\n    }\\n\\n    function fulfillRandomWords(\\n        uint256 /* requestId */,\\n        uint256[] memory randomWords\\n    ) internal override {\\n        uint256 indexOfWinner = randomWords[0] % s_players.length;\\n        address payable recentWinner = s_players[indexOfWinner];\\n        s_recentWinner = recentWinner;\\n        (bool success, ) = recentWinner.call{value: address(this).balance}(\\\"\\\");\\n        // require(success)\\n        if (!success) {\\n            revert Raffle__TransferFailed();\\n        }\\n        emit WinnerPicked(recentWinner);\\n    }\\n\\n    /* View / Pure Functions */\\n\\n    function getEntranceFee() public view returns (uint256) {\\n        return i_entranceFee;\\n    }\\n\\n    function getPlayer(uint256 index) public view returns (address) {\\n        return s_players[index];\\n    }\\n\\n    function getRecentWinner() public view returns (address) {\\n        return s_recentWinner;\\n    }\\n}\\n\",\"keccak256\":\"0x76570ce8b14211555f4111ddb10f45f05962a37c5bd917f30f7a0cf656b79044\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":5032,"contract":"contracts/Raffle.sol:Raffle","label":"s_players","offset":0,"slot":"0","type":"t_array(t_address_payable)dyn_storage"},{"astId":5049,"contract":"contracts/Raffle.sol:Raffle","label":"s_recentWinner","offset":0,"slot":"1","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_address_payable":{"encoding":"inplace","label":"address payable","numberOfBytes":"20"},"t_array(t_address_payable)dyn_storage":{"base":"t_address_payable","encoding":"dynamic_array","label":"address payable[]","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}